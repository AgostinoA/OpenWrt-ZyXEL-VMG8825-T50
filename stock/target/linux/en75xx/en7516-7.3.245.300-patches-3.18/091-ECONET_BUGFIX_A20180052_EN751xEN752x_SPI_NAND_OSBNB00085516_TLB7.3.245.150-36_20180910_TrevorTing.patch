Index: linux-3.18.21/drivers/mtd/chips/spi_nand_flash.c
===================================================================
--- linux-3.18.21.orig/drivers/mtd/chips/spi_nand_flash.c	2018-11-12 19:02:43.987080000 +0800
+++ linux-3.18.21/drivers/mtd/chips/spi_nand_flash.c	2018-11-12 19:10:55.079230029 +0800
@@ -191,6 +191,10 @@
 #define _SPI_NAND_MANUFACTURER_ID_XTX			0xA1
 #define _SPI_NAND_MANUFACTURER_ID_ATO			0x9B
 #define _SPI_NAND_MANUFACTURER_ID_FM			0xA1
+#define _SPI_NAND_MANUFACTURER_ID_FORESEE		0xCD
+#define _SPI_NAND_MANUFACTURER_ID_DS			0xE5
+#define _SPI_NAND_MANUFACTURER_ID_FISON			0x6B
+#define _SPI_NAND_MANUFACTURER_ID_TYM			0x19
 
 
 /* SPI NAND Device ID */
@@ -230,7 +234,16 @@
 #define _SPI_NAND_DEVICE_ID_ATO25D1GA		0x12
 #define _SPI_NAND_DEVICE_ID_FM25G01B		0xD1
 #define _SPI_NAND_DEVICE_ID_FM25G02B		0xD2
-
+#define _SPI_NAND_DEVICE_ID_FM25G02C		0x92
+#define _SPI_NAND_DEVICE_ID_FS35ND01GS1F1	0xB1 	
+#define _SPI_NAND_DEVICE_ID_DS35Q2GA		0x72
+#define _SPI_NAND_DEVICE_ID_DS35Q1GA		0x71
+#define _SPI_NAND_DEVICE_ID_CS11G0T0A0AA	0x00
+#define _SPI_NAND_DEVICE_ID_CS11G1T0A0AA	0x01
+#define _SPI_NAND_DEVICE_ID_CS11G0G0A0AA	0x10
+#define _SPI_NAND_DEVICE_ID_TYM25D2GA01		0x01
+#define _SPI_NAND_DEVICE_ID_TYM25D2GA02		0x02
+#define _SPI_NAND_DEVICE_ID_TYM25D1GA03		0x03
 
 
 
@@ -463,6 +476,12 @@
 	.oobfree = {{0,64}}
 };
 
+/* only use user meta data with ECC protected */
+struct spi_nand_flash_ooblayout ooblayout_fm_32 = {
+	.oobsize = 32, 
+	.oobfree = {{0,32}}
+};
+
 struct spi_nand_flash_ooblayout ooblayout_spi_controller_ecc_64 = {
 	.oobsize = 32, 
 	.oobfree = {{0,8}, {16,8}, {32,8}, {48,8}}
@@ -478,6 +497,25 @@
 	.oobfree = {{0,8}, {16,8}, {32,8}, {48,8}, {64,192}}
 };
 
+struct spi_nand_flash_ooblayout ooblayout_ds = {
+	.oobsize = 20, 
+	.oobfree = {{0,8}, {20,4}, {36,4}, {52,4}}
+};
+
+struct spi_nand_flash_ooblayout ooblayout_fison = {
+	.oobsize = 64, 
+	.oobfree = {{0,64}}
+};
+
+struct spi_nand_flash_ooblayout ooblayout_foresee = {
+	.oobsize = 64, 
+	.oobfree = {{0,64}}
+};
+
+struct spi_nand_flash_ooblayout ooblayout_tym = {
+	.oobsize = 12, 
+	.oobfree = {{0,3}, {16,3}, {32,3}, {48,3}}
+};
 
 /*****************************[ Notice]******************************/
 /* If new spi nand chip have page size more than 4KB,  or oob size more than 256 bytes,  than*/
@@ -993,6 +1031,157 @@
 		oob_free_layout :			&ooblayout_fm, 	
 		feature:					SPI_NAND_FLASH_FEATURE_NONE,
 	},
+
+	{
+		mfr_id: 					_SPI_NAND_MANUFACTURER_ID_FM,
+		dev_id: 					_SPI_NAND_DEVICE_ID_FM25G02C,
+		ptr_name:					"_SPI_NAND_DEVICE_ID_FM25G02C",
+		device_size:				_SPI_NAND_CHIP_SIZE_2GBIT,
+		page_size:					_SPI_NAND_PAGE_SIZE_2KBYTE,
+		oob_size:					_SPI_NAND_OOB_SIZE_64BYTE,
+		erase_size: 				_SPI_NAND_BLOCK_SIZE_128KBYTE,
+		dummy_mode: 				SPI_NAND_FLASH_READ_DUMMY_BYTE_APPEND,
+		read_mode:					SPI_NAND_FLASH_READ_SPEED_MODE_DUAL,
+		write_mode: 				SPI_NAND_FLASH_WRITE_SPEED_MODE_SINGLE,
+		oob_free_layout :			&ooblayout_fm_32,	
+		feature:					SPI_NAND_FLASH_FEATURE_NONE,
+	},
+
+	{
+		mfr_id: 					_SPI_NAND_MANUFACTURER_ID_FORESEE,
+		dev_id: 					_SPI_NAND_DEVICE_ID_FS35ND01GS1F1,
+		ptr_name:					"_SPI_NAND_DEVICE_ID_FS35ND01GS1F1",
+		device_size:				_SPI_NAND_CHIP_SIZE_1GBIT,
+		page_size:					_SPI_NAND_PAGE_SIZE_2KBYTE,
+		oob_size:					_SPI_NAND_OOB_SIZE_64BYTE,
+		erase_size: 				_SPI_NAND_BLOCK_SIZE_128KBYTE,
+		dummy_mode: 				SPI_NAND_FLASH_READ_DUMMY_BYTE_APPEND,
+		read_mode:					SPI_NAND_FLASH_READ_SPEED_MODE_DUAL,
+		write_mode: 				SPI_NAND_FLASH_WRITE_SPEED_MODE_SINGLE,
+		oob_free_layout :			&ooblayout_foresee, 	
+		feature:					SPI_NAND_FLASH_FEATURE_NONE,
+	},
+
+	{
+		mfr_id: 					_SPI_NAND_MANUFACTURER_ID_DS,
+		dev_id: 					_SPI_NAND_DEVICE_ID_DS35Q2GA,
+		ptr_name:					"_SPI_NAND_DEVICE_ID_DS35Q2GA",
+		device_size:				_SPI_NAND_CHIP_SIZE_2GBIT,
+		page_size:					_SPI_NAND_PAGE_SIZE_2KBYTE,
+		oob_size:					_SPI_NAND_OOB_SIZE_64BYTE,
+		erase_size: 				_SPI_NAND_BLOCK_SIZE_128KBYTE,
+		dummy_mode: 				SPI_NAND_FLASH_READ_DUMMY_BYTE_APPEND,
+		read_mode:					SPI_NAND_FLASH_READ_SPEED_MODE_DUAL,
+		write_mode: 				SPI_NAND_FLASH_WRITE_SPEED_MODE_SINGLE,
+		oob_free_layout :			&ooblayout_ds,	
+		feature:					SPI_NAND_FLASH_PLANE_SELECT_HAVE,
+	},
+
+	{
+		mfr_id: 					_SPI_NAND_MANUFACTURER_ID_DS,
+		dev_id: 					_SPI_NAND_DEVICE_ID_DS35Q1GA,
+		ptr_name:					"_SPI_NAND_DEVICE_ID_DS35Q1GA",
+		device_size:				_SPI_NAND_CHIP_SIZE_1GBIT,
+		page_size:					_SPI_NAND_PAGE_SIZE_2KBYTE,
+		oob_size:					_SPI_NAND_OOB_SIZE_64BYTE,
+		erase_size: 				_SPI_NAND_BLOCK_SIZE_128KBYTE,
+		dummy_mode: 				SPI_NAND_FLASH_READ_DUMMY_BYTE_APPEND,
+		read_mode:					SPI_NAND_FLASH_READ_SPEED_MODE_DUAL,
+		write_mode: 				SPI_NAND_FLASH_WRITE_SPEED_MODE_SINGLE,
+		oob_free_layout :			&ooblayout_ds,	
+		feature:					SPI_NAND_FLASH_FEATURE_NONE,
+	},
+	
+	{
+		mfr_id: 					_SPI_NAND_MANUFACTURER_ID_FISON,
+		dev_id: 					_SPI_NAND_DEVICE_ID_CS11G0T0A0AA,
+		ptr_name:					"_SPI_NAND_DEVICE_ID_CS11G0T0A0AA",
+		device_size:				_SPI_NAND_CHIP_SIZE_1GBIT,
+		page_size:					_SPI_NAND_PAGE_SIZE_2KBYTE,
+		oob_size:					_SPI_NAND_OOB_SIZE_64BYTE,
+		erase_size: 				_SPI_NAND_BLOCK_SIZE_128KBYTE,
+		dummy_mode: 				SPI_NAND_FLASH_READ_DUMMY_BYTE_APPEND,
+		read_mode:					SPI_NAND_FLASH_READ_SPEED_MODE_DUAL,
+		write_mode: 				SPI_NAND_FLASH_WRITE_SPEED_MODE_SINGLE,
+		oob_free_layout :			&ooblayout_fison,	
+		feature:					SPI_NAND_FLASH_FEATURE_NONE,
+	},
+	
+	{
+		mfr_id: 					_SPI_NAND_MANUFACTURER_ID_FISON,
+		dev_id: 					_SPI_NAND_DEVICE_ID_CS11G1T0A0AA,
+		ptr_name:					"_SPI_NAND_DEVICE_ID_CS11G1T0A0AA",
+		device_size:				_SPI_NAND_CHIP_SIZE_2GBIT,
+		page_size:					_SPI_NAND_PAGE_SIZE_2KBYTE,
+		oob_size:					_SPI_NAND_OOB_SIZE_64BYTE,
+		erase_size: 				_SPI_NAND_BLOCK_SIZE_128KBYTE,
+		dummy_mode: 				SPI_NAND_FLASH_READ_DUMMY_BYTE_APPEND,
+		read_mode:					SPI_NAND_FLASH_READ_SPEED_MODE_DUAL,
+		write_mode: 				SPI_NAND_FLASH_WRITE_SPEED_MODE_SINGLE,
+		oob_free_layout :			&ooblayout_fison,	
+		feature:					SPI_NAND_FLASH_FEATURE_NONE,
+	},
+	
+	{
+		mfr_id: 					_SPI_NAND_MANUFACTURER_ID_FISON,
+		dev_id: 					_SPI_NAND_DEVICE_ID_CS11G0G0A0AA,
+		ptr_name:					"_SPI_NAND_DEVICE_ID_CS11G0G0A0AA",
+		device_size:				_SPI_NAND_CHIP_SIZE_1GBIT,
+		page_size:					_SPI_NAND_PAGE_SIZE_2KBYTE,
+		oob_size:					_SPI_NAND_OOB_SIZE_64BYTE,
+		erase_size: 				_SPI_NAND_BLOCK_SIZE_128KBYTE,
+		dummy_mode: 				SPI_NAND_FLASH_READ_DUMMY_BYTE_APPEND,
+		read_mode:					SPI_NAND_FLASH_READ_SPEED_MODE_DUAL,
+		write_mode: 				SPI_NAND_FLASH_WRITE_SPEED_MODE_SINGLE,
+		oob_free_layout :			&ooblayout_fison,	
+		feature:					SPI_NAND_FLASH_FEATURE_NONE,
+	},
+
+	{
+		mfr_id: 					_SPI_NAND_MANUFACTURER_ID_TYM,
+		dev_id: 					_SPI_NAND_DEVICE_ID_TYM25D2GA01,
+		ptr_name:					"_SPI_NAND_DEVICE_ID_TYM25D2GA01",
+		device_size:				_SPI_NAND_CHIP_SIZE_2GBIT,
+		page_size:					_SPI_NAND_PAGE_SIZE_2KBYTE,
+		oob_size:					_SPI_NAND_OOB_SIZE_64BYTE,
+		erase_size: 				_SPI_NAND_BLOCK_SIZE_128KBYTE,
+		dummy_mode: 				SPI_NAND_FLASH_READ_DUMMY_BYTE_APPEND,
+		read_mode:					SPI_NAND_FLASH_READ_SPEED_MODE_DUAL,
+		write_mode: 				SPI_NAND_FLASH_WRITE_SPEED_MODE_SINGLE,
+		oob_free_layout :			&ooblayout_tym, 	
+		feature:					SPI_NAND_FLASH_FEATURE_NONE,
+	},
+
+	{
+		mfr_id: 					_SPI_NAND_MANUFACTURER_ID_TYM,
+		dev_id: 					_SPI_NAND_DEVICE_ID_TYM25D2GA02,
+		ptr_name:					"_SPI_NAND_DEVICE_ID_TYM25D2GA02",
+		device_size:				_SPI_NAND_CHIP_SIZE_2GBIT,
+		page_size:					_SPI_NAND_PAGE_SIZE_2KBYTE,
+		oob_size:					_SPI_NAND_OOB_SIZE_64BYTE,
+		erase_size: 				_SPI_NAND_BLOCK_SIZE_128KBYTE,
+		dummy_mode: 				SPI_NAND_FLASH_READ_DUMMY_BYTE_APPEND,
+		read_mode:					SPI_NAND_FLASH_READ_SPEED_MODE_DUAL,
+		write_mode: 				SPI_NAND_FLASH_WRITE_SPEED_MODE_SINGLE,
+		oob_free_layout :			&ooblayout_tym, 	
+		feature:					SPI_NAND_FLASH_FEATURE_NONE,
+	},
+
+	{
+		mfr_id: 					_SPI_NAND_MANUFACTURER_ID_TYM,
+		dev_id: 					_SPI_NAND_DEVICE_ID_TYM25D1GA03,
+		ptr_name:					"_SPI_NAND_DEVICE_ID_TYM25D1GA03",
+		device_size:				_SPI_NAND_CHIP_SIZE_1GBIT,
+		page_size:					_SPI_NAND_PAGE_SIZE_2KBYTE,
+		oob_size:					_SPI_NAND_OOB_SIZE_64BYTE,
+		erase_size: 				_SPI_NAND_BLOCK_SIZE_128KBYTE,
+		dummy_mode: 				SPI_NAND_FLASH_READ_DUMMY_BYTE_APPEND,
+		read_mode:					SPI_NAND_FLASH_READ_SPEED_MODE_DUAL,
+		write_mode: 				SPI_NAND_FLASH_WRITE_SPEED_MODE_SINGLE,
+		oob_free_layout :			&ooblayout_tym, 	
+		feature:					SPI_NAND_FLASH_FEATURE_NONE,
+	},
+
 };
 
 /* LOCAL SUBPROGRAM BODIES------------------------------------------------------------ */
@@ -2116,14 +2305,47 @@
 		}
 	}
 	else if(((ptr_dev_info_t->mfr_id == _SPI_NAND_MANUFACTURER_ID_FM) && (ptr_dev_info_t->dev_id == _SPI_NAND_DEVICE_ID_FM25G01B)) ||
-		((ptr_dev_info_t->mfr_id == _SPI_NAND_MANUFACTURER_ID_FM) && (ptr_dev_info_t->dev_id == _SPI_NAND_DEVICE_ID_FM25G02B)))
+		((ptr_dev_info_t->mfr_id == _SPI_NAND_MANUFACTURER_ID_FM) && (ptr_dev_info_t->dev_id == _SPI_NAND_DEVICE_ID_FM25G02B)) ||
+		((ptr_dev_info_t->mfr_id == _SPI_NAND_MANUFACTURER_ID_FM) && (ptr_dev_info_t->dev_id == _SPI_NAND_DEVICE_ID_FM25G02C)))
 	{
 		if(((status & 0x70) >> 4) == 0x7)
 		{
 			rtn_status = SPI_NAND_FLASH_RTN_DETECTED_BAD_BLOCK;
 		}
 	}
-
+	else if((ptr_dev_info_t->mfr_id == _SPI_NAND_MANUFACTURER_ID_FORESEE) && (ptr_dev_info_t->dev_id == _SPI_NAND_DEVICE_ID_FS35ND01GS1F1)) 
+	{
+		if(((status & 0x70) >> 4) == 0x7)
+		{
+			rtn_status = SPI_NAND_FLASH_RTN_DETECTED_BAD_BLOCK;
+		}
+	}
+	else if(((ptr_dev_info_t->mfr_id == _SPI_NAND_MANUFACTURER_ID_DS) && (ptr_dev_info_t->dev_id == _SPI_NAND_DEVICE_ID_DS35Q2GA)) || 
+		((ptr_dev_info_t->mfr_id == _SPI_NAND_MANUFACTURER_ID_DS) && (ptr_dev_info_t->dev_id == _SPI_NAND_DEVICE_ID_DS35Q1GA)))
+	{
+		if(((status & 0x30) >> 4) == 0x2)
+		{
+			rtn_status = SPI_NAND_FLASH_RTN_DETECTED_BAD_BLOCK;
+		}
+	}
+	else if(((ptr_dev_info_t->mfr_id == _SPI_NAND_MANUFACTURER_ID_FISON) && (ptr_dev_info_t->dev_id == _SPI_NAND_DEVICE_ID_CS11G0T0A0AA)) || 
+		((ptr_dev_info_t->mfr_id == _SPI_NAND_MANUFACTURER_ID_FISON) && (ptr_dev_info_t->dev_id == _SPI_NAND_DEVICE_ID_CS11G1T0A0AA)) ||
+		((ptr_dev_info_t->mfr_id == _SPI_NAND_MANUFACTURER_ID_FISON) && (ptr_dev_info_t->dev_id == _SPI_NAND_DEVICE_ID_CS11G0G0A0AA)))
+	{
+		if(((status & 0x70) >> 4) == 0x7)
+		{
+			rtn_status = SPI_NAND_FLASH_RTN_DETECTED_BAD_BLOCK;
+		}
+	}
+	else if(((ptr_dev_info_t->mfr_id == _SPI_NAND_MANUFACTURER_ID_TYM) && (ptr_dev_info_t->dev_id == _SPI_NAND_DEVICE_ID_TYM25D2GA01)) || 
+		((ptr_dev_info_t->mfr_id == _SPI_NAND_MANUFACTURER_ID_TYM) && (ptr_dev_info_t->dev_id == _SPI_NAND_DEVICE_ID_TYM25D2GA02)) ||
+		((ptr_dev_info_t->mfr_id == _SPI_NAND_MANUFACTURER_ID_TYM) && (ptr_dev_info_t->dev_id == _SPI_NAND_DEVICE_ID_TYM25D1GA03)))
+	{
+		if(((status & 0x30) >> 4) == 0x2)
+		{
+			rtn_status = SPI_NAND_FLASH_RTN_DETECTED_BAD_BLOCK;
+		}
+	}
 	else if(rtn_status == SPI_NAND_FLASH_RTN_DETECTED_BAD_BLOCK)
 	{
 		_SPI_NAND_PRINTF("[spinand_ecc_fail_check] : ECC cannot recover detected !, page=0x%x\n", page_number);
@@ -3083,8 +3305,13 @@
 
 		/* Different Manafacture have different prgoram flow and setting */
 		if( ((ptr_dev_info_t->mfr_id) == _SPI_NAND_MANUFACTURER_ID_GIGADEVICE) ||
-			((ptr_dev_info_t->mfr_id) == _SPI_NAND_MANUFACTURER_ID_XTX) ||
-			((ptr_dev_info_t->mfr_id) == _SPI_NAND_MANUFACTURER_ID_FM) )
+			((ptr_dev_info_t->mfr_id) == _SPI_NAND_MANUFACTURER_ID_PN) ||
+			((ptr_dev_info_t->mfr_id) == _SPI_NAND_MANUFACTURER_ID_FM) ||
+			((ptr_dev_info_t->mfr_id) == _SPI_NAND_MANUFACTURER_ID_FORESEE) ||
+			((ptr_dev_info_t->mfr_id) == _SPI_NAND_MANUFACTURER_ID_FISON) ||
+			((ptr_dev_info_t->mfr_id) == _SPI_NAND_MANUFACTURER_ID_TYM) ||
+			((ptr_dev_info_t->mfr_id) == _SPI_NAND_MANUFACTURER_ID_ATO_2) ||
+			(((ptr_dev_info_t->mfr_id) == _SPI_NAND_MANUFACTURER_ID_ATO) && ((ptr_dev_info_t->dev_id) == _SPI_NAND_DEVICE_ID_ATO25D2GA))) 
 		{			
 			if( _spi_dma_mode ==1  )
 			{	
@@ -3784,7 +4011,8 @@
 		spi_nand_protocol_set_status_reg_1(feature);
 	}
 	else if(((ptr_device_t->mfr_id == _SPI_NAND_MANUFACTURER_ID_FM) && (ptr_device_t->dev_id == _SPI_NAND_DEVICE_ID_FM25G01B)) ||
-			((ptr_device_t->mfr_id == _SPI_NAND_MANUFACTURER_ID_FM) && (ptr_device_t->dev_id == _SPI_NAND_DEVICE_ID_FM25G02B)))
+		((ptr_device_t->mfr_id == _SPI_NAND_MANUFACTURER_ID_FM) && (ptr_device_t->dev_id == _SPI_NAND_DEVICE_ID_FM25G02B)) ||
+		((ptr_device_t->mfr_id == _SPI_NAND_MANUFACTURER_ID_FM) && (ptr_device_t->dev_id == _SPI_NAND_DEVICE_ID_FM25G02C)))
 	{
 		/* 1. Unlock All block */
 		spi_nand_protocol_get_status_reg_1(&feature);
@@ -3796,6 +4024,52 @@
 		feature |= 0x1;
 		spi_nand_protocol_set_status_reg_2(feature);
 	}
+	else if((ptr_device_t->mfr_id == _SPI_NAND_MANUFACTURER_ID_FORESEE) && (ptr_device_t->dev_id == _SPI_NAND_DEVICE_ID_FS35ND01GS1F1))	{
+		/* 1. Unlock All block */
+		spi_nand_protocol_get_status_reg_1(&feature);
+		feature &= 0xC7;
+		spi_nand_protocol_set_status_reg_1(feature);
+
+		/* 2. Enable Qual mode */
+		spi_nand_protocol_get_status_reg_2(&feature);
+		feature |= 0x1;
+		spi_nand_protocol_set_status_reg_2(feature);
+	}
+	else if(((ptr_device_t->mfr_id == _SPI_NAND_MANUFACTURER_ID_DS) && (ptr_device_t->dev_id == _SPI_NAND_DEVICE_ID_DS35Q2GA)) ||
+		((ptr_device_t->mfr_id == _SPI_NAND_MANUFACTURER_ID_DS) && (ptr_device_t->dev_id == _SPI_NAND_DEVICE_ID_DS35Q1GA)))
+	{
+		/* 1. Unlock All block */
+		spi_nand_protocol_get_status_reg_1(&feature);
+		feature &= 0xC7;
+		spi_nand_protocol_set_status_reg_1(feature);
+
+		spi_nand_protocol_get_status_reg_1(&feature);
+		_SPI_NAND_DEBUG_PRINTF(SPI_NAND_FLASH_DEBUG_LEVEL_1, "After Unlock all block setup, the status register1 =0x%x\n", feature);		
+	}
+	else if(((ptr_device_t->mfr_id == _SPI_NAND_MANUFACTURER_ID_FISON) && (ptr_device_t->dev_id == _SPI_NAND_DEVICE_ID_CS11G0T0A0AA)) ||
+		((ptr_device_t->mfr_id == _SPI_NAND_MANUFACTURER_ID_FISON) && (ptr_device_t->dev_id == _SPI_NAND_DEVICE_ID_CS11G1T0A0AA)) ||
+		((ptr_device_t->mfr_id == _SPI_NAND_MANUFACTURER_ID_FISON) && (ptr_device_t->dev_id == _SPI_NAND_DEVICE_ID_CS11G0G0A0AA)))
+	{
+		/* 1. Unlock All block */
+		spi_nand_protocol_get_status_reg_1(&feature);
+		feature &= 0xC7;
+		spi_nand_protocol_set_status_reg_1(feature);
+
+		spi_nand_protocol_get_status_reg_1(&feature);
+		_SPI_NAND_DEBUG_PRINTF(SPI_NAND_FLASH_DEBUG_LEVEL_1, "After Unlock all block setup, the status register1 =0x%x\n", feature);		
+	}
+	else if(((ptr_device_t->mfr_id == _SPI_NAND_MANUFACTURER_ID_TYM) && (ptr_device_t->dev_id == _SPI_NAND_DEVICE_ID_TYM25D2GA01)) ||
+		((ptr_device_t->mfr_id == _SPI_NAND_MANUFACTURER_ID_TYM) && (ptr_device_t->dev_id == _SPI_NAND_DEVICE_ID_TYM25D2GA02)) ||
+		((ptr_device_t->mfr_id == _SPI_NAND_MANUFACTURER_ID_TYM) && (ptr_device_t->dev_id == _SPI_NAND_DEVICE_ID_TYM25D1GA03)))
+	{
+		/* 1. Unlock All block */
+		spi_nand_protocol_get_status_reg_1(&feature);
+		feature &= 0xC7;
+		spi_nand_protocol_set_status_reg_1(feature);
+
+		spi_nand_protocol_get_status_reg_1(&feature);
+		_SPI_NAND_DEBUG_PRINTF(SPI_NAND_FLASH_DEBUG_LEVEL_1, "After Unlock all block setup, the status register1 =0x%x\n", feature);		
+	}
 	else
 	{
 		/* 1. Unlock All block */
