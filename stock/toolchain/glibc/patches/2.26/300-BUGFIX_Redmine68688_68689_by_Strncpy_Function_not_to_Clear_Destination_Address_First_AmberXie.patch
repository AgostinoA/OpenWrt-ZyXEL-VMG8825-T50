Index: glibc-2.24/string/strncpy.c
===================================================================
--- glibc-2.24.orig/string/strncpy.c	2016-08-02 10:01:36.000000000 +0800
+++ glibc-2.24/string/strncpy.c	2018-11-08 16:30:42.767199482 +0800
@@ -26,9 +26,64 @@
 char *
 STRNCPY (char *s1, const char *s2, size_t n)
 {
-  size_t size = __strnlen (s2, n);
-  if (size != n)
-    memset (s1 + size, '\0', n - size);
-  return memcpy (s1, s2, size);
+#if 0 //original code for glibc from version 2.22 to 2.28
+  size_t size = __strnlen (s2, n);
+  if (size != n)
+    memset (s1 + size, '\0', n - size);
+  return memcpy (s1, s2, size);
+#else //modify code from glibc version 2.21
+  char c;
+  char *s = s1;
+
+  --s1;
+
+  if (n >= 4)
+    {
+      size_t n4 = n >> 2;
+
+      for (;;)
+	{
+	  c = *s2++;
+	  *++s1 = c;
+	  if (c == '\0')
+	    break;
+	  c = *s2++;
+	  *++s1 = c;
+	  if (c == '\0')
+	    break;
+	  c = *s2++;
+	  *++s1 = c;
+	  if (c == '\0')
+	    break;
+	  c = *s2++;
+	  *++s1 = c;
+	  if (c == '\0')
+	    break;
+	  if (--n4 == 0)
+	    goto last_chars;
+	}
+      s1++;
+      n = n - (s1 - s);
+      memset (s1, '\0', n);
+      return s;
+    }
+
+ last_chars:
+  n &= 3;
+  if (n == 0)
+    return s;
+
+  do
+    {
+      c = *s2++;
+      *++s1 = c;
+      if (--n == 0)
+	return s;
+    }
+  while (c != '\0');
+
+  memset (s1 + 1, '\0', n);
+  return s;
+#endif
 }
 libc_hidden_builtin_def (strncpy)
