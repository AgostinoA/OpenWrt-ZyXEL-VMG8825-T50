Index: libzcfg_fe_rdm_string-1.0/zcfg_fe_rdm_string.c
===================================================================
--- libzcfg_fe_rdm_string-1.0.orig/zcfg_fe_rdm_string.c	2017-07-18 14:49:41.177954435 +0800
+++ libzcfg_fe_rdm_string-1.0/zcfg_fe_rdm_string.c	2017-07-18 14:57:41.620658896 +0800
@@ -895,3 +895,88 @@
 #endif
 	return ret;
 }
+
+zcfgRet_t zcfgObjGetFromInputObj(zcfg_offset_t rdmObjId, objIndex_t* objIid, struct json_object **getObj, struct json_object *rdm)
+{
+	zcfgLog(ZCFG_LOG_DEBUG, "%s: Enter.\n", __FUNCTION__);
+	zcfgRet_t ret;
+	objInfo_t *objInfo = (objInfo_t *)(schemaShmAddr + rdmObjId);
+	char *objName = GET_OBJ_NAME(objInfo);
+
+	if((ret = zcfgObjGetByNameFromInputObj(objName, objIid, getObj, rdm)) != ZCFG_SUCCESS){
+		zcfgLog(ZCFG_LOG_DEBUG, "fail to get object by full path name\n");
+		*getObj = NULL;
+		return ret;
+	}
+
+	return ZCFG_SUCCESS;
+}
+
+zcfgRet_t zcfgObjGetByNameFromInputObj(char *rdmObjName, objIndex_t* objIid, struct json_object **getObj, struct json_object *rdm)
+{
+	zcfgLog(ZCFG_LOG_DEBUG, "%s: Enter.\n", __FUNCTION__);
+	char *node = NULL;
+	char objName[OBJ_NAME_BUFF_SIZE];
+	char *delim = ".";
+	uint8_t i = 0;
+	uint8_t notAnyMatch = 1;
+	int32_t entryNum;
+	enum json_type nodeType;
+	struct json_object *tmpObj = NULL;
+	struct json_object *currObj;
+	char *tmp = NULL;
+
+	strcpy(objName, rdmObjName);
+
+	/* the first will be InternetGatewayDevice */
+	node = strtok_r(objName, delim, &tmp);
+	currObj = rdm;
+
+	while((node = strtok_r(NULL, delim, &tmp)) != NULL){
+		if(strcmp(node, "i")){
+			notAnyMatch = 1;
+			json_object_object_foreach(currObj,key,val){
+				if(!strcmp(key, node)){
+					notAnyMatch = 0;
+					nodeType = json_object_get_type(val);
+					if(nodeType == json_type_array){
+						if(i > objIid->level-1){
+							zcfgLog(ZCFG_LOG_DEBUG, "get object fail !!\n");
+							*getObj = NULL;
+							return ZCFG_INTERNAL_ERROR;
+						}
+
+						entryNum = json_object_array_length(val);
+						/* No such instance */
+						if(objIid->idx[i] > entryNum){
+							zcfgLog(ZCFG_LOG_DEBUG, "get object fail, the specified entry is not existed!!\n");
+							currObj = NULL;
+							return ZCFG_NO_MORE_INSTANCE;
+						}
+
+						tmpObj = json_object_array_get_idx(val, objIid->idx[i] - 1);
+						i++;
+						if(tmpObj) /* get a specified indexed entry object */
+							currObj = tmpObj;
+						else   /* get a index node object */
+							currObj = val;
+					}
+					else{
+						currObj = val;
+					}
+					break;
+				}
+			}
+
+			if(notAnyMatch){
+				zcfgLog(ZCFG_LOG_DEBUG, "No such instances !!\n");
+				*getObj = NULL;
+				return ZCFG_NO_SUCH_OBJECT;
+			}
+		}
+	}
+
+	*getObj = currObj;
+
+	return ZCFG_SUCCESS;
+}
Index: libzcfg_fe_rdm_string-1.0/zcfg_fe_rdm_string.h
===================================================================
--- libzcfg_fe_rdm_string-1.0.orig/zcfg_fe_rdm_string.h	2017-07-18 14:49:41.177954435 +0800
+++ libzcfg_fe_rdm_string-1.0/zcfg_fe_rdm_string.h	2017-07-18 14:49:41.193954435 +0800
@@ -34,6 +34,8 @@
 
 zcfgRet_t zcfgFeWholeObjJsonGet(char *tr181path, struct json_object **);
 zcfgRet_t zcfgFeWholeObjJsonSet(char *tr181path, struct json_object *, char *);
+zcfgRet_t zcfgObjGetFromInputObj(zcfg_offset_t oid, objIndex_t* objIid, struct json_object **, struct json_object *jobj);
+zcfgRet_t zcfgObjGetByNameFromInputObj(char *rdmObjName, objIndex_t* objIid, struct json_object **, struct json_object *jobj);
 
 #define zcfgFeJsonObjNew() json_object_new_object()
 #define zcfgFeJsonObjFree(jobj) json_object_put(jobj); jobj = NULL
