Index: libzcfg_fe_rdm_string-1.0/zcfg_fe_rdm_string.c
===================================================================
--- libzcfg_fe_rdm_string-1.0.orig/zcfg_fe_rdm_string.c	2016-07-27 10:04:24.543522141 +0800
+++ libzcfg_fe_rdm_string-1.0/zcfg_fe_rdm_string.c	2016-07-27 10:03:03.077359700 +0800
@@ -475,6 +475,31 @@
 	}
 }
 
+zcfgRet_t zcfgFeJsonMultiObjAddParam(struct json_object *multiobj, zcfg_offset_t oid, objIndex_t *objIid, const char *parmName, struct json_object *paramObj)
+{
+	struct json_object *oldObj = NULL, *indexObj = NULL;
+	char identity[20] = {0};
+	char index[36] = {0};
+	char paramStr[200] = {0};
+
+	//if(multiobj oid objIid paramobj)
+
+	sprintf(identity, "%d", oid);
+	sprintf(index, "%hhu.%hhu.%hhu.%hhu.%hhu.%hhu.%hhu", objIid->level, objIid->idx[0], objIid->idx[1], objIid->idx[2],
+				objIid->idx[3], objIid->idx[4], objIid->idx[5]);
+
+	oldObj = json_object_object_get(multiobj, identity);
+	if(oldObj)
+		indexObj = json_object_object_get(oldObj, index);
+
+	if(indexObj && parmName && strlen(parmName)){
+		sprintf(paramStr, "%s_%s", index, parmName);
+		json_object_object_add(oldObj, paramStr, paramObj);
+	}
+
+	return ZCFG_SUCCESS;
+}
+
 zcfgRet_t zcfgFeObjJsonGetNext(zcfg_offset_t oid, objIndex_t *objIid, struct json_object **value)
 {
 	zcfgRet_t ret;
Index: libzcfg_fe_rdm_string-1.0/zcfg_fe_rdm_string.h
===================================================================
--- libzcfg_fe_rdm_string-1.0.orig/zcfg_fe_rdm_string.h	2016-07-27 10:04:24.543522141 +0800
+++ libzcfg_fe_rdm_string-1.0/zcfg_fe_rdm_string.h	2016-07-27 10:02:04.068459400 +0800
@@ -27,6 +27,7 @@
 zcfgRet_t zcfgFeObjJsonBlockedAdd(zcfg_offset_t oid, objIndex_t *objIid, char *feedbackMsg);
 zcfgRet_t zcfgFeMultiObjJsonBlockedSet(struct json_object *multiJobj, char *feedbackMsg);
 #endif
+zcfgRet_t zcfgFeJsonMultiObjAddParam(struct json_object *, zcfg_offset_t , objIndex_t *, const char *, struct json_object *);
 
 #define zcfgFeJsonObjNew() json_object_new_object()
 #define zcfgFeJsonObjFree(jobj) json_object_put(jobj); jobj = NULL
@@ -35,3 +36,5 @@
 #define zcfgNotifyListForEachObj(obj, key, paramList) char *key; char *paramList; \
 	for(struct lh_entry *entry = json_object_get_object(obj)->head; ({ if(entry) { key = (char*)entry->k; paramList = (char *)json_object_get_string((struct json_object*)entry->v); } ; entry; }); entry = entry->next )
 #define zcfgNotifyStrToJsonObj(listStr) json_tokener_parse(listStr)
+
+#define zcfgFeJsonMultiObjSetDelayApply(multiobj) { if(multiobj) json_object_object_add(multiobj, "delayapply", json_object_new_boolean(true)); }
\ No newline at end of file
