Index: libzcfg_fe_schema-1.0/zcfg_fe_schema.c
===================================================================
--- libzcfg_fe_schema-1.0.orig/zcfg_fe_schema.c	2019-09-23 17:10:40.068789254 +0800
+++ libzcfg_fe_schema-1.0/zcfg_fe_schema.c	2019-09-23 17:13:39.257555200 +0800
@@ -58,6 +58,23 @@
 
 	return objInfo->attr;
 }
+
+int zcfgFeObjQueryMaxInstance(zcfg_offset_t rdmObjId)
+{
+	objInfo_t *objInfo = NULL;
+	uint8_t maxInstance = 0;
+
+	if(schemaShmAddr == NULL)
+		zcfgFeSharedMemInit();
+
+	objInfo = GET_OBJ_INFO_BY_OID(rdmObjId);
+
+	if(objInfo->attr & ATTR_INDEXNODE && objInfo->idxLevel)
+		maxInstance = objInfo->maxEntry[objInfo->idxLevel-1];
+
+	return maxInstance;
+}
+
 /*
  *  Function Name: zcfgFeAllParamNameGet
  *  Description: Used to get all the name of parameters in the object.
Index: libzcfg_fe_schema-1.0/zcfg_fe_schema.h
===================================================================
--- libzcfg_fe_schema-1.0.orig/zcfg_fe_schema.h	2019-09-23 17:10:40.068789254 +0800
+++ libzcfg_fe_schema-1.0/zcfg_fe_schema.h	2019-09-23 17:13:47.601555200 +0800
@@ -8,6 +8,7 @@
 
 int zcfgFeObjIsSingle(zcfg_offset_t);
 int zcfgFeObjAttrGet(zcfg_offset_t);
+int zcfgFeObjQueryMaxInstance(zcfg_offset_t rdmObjId);
 int zcfgFeParamAttrGetByName(zcfg_offset_t, char *);
 int zcfgFeParamTypeGetByName(zcfg_offset_t, char *);
 zcfgRet_t zcfgFeGetSchemaParameterByOid(uint32_t oid, struct json_object* defaultJobj);
