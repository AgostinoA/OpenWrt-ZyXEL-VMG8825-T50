Index: libzcfg_msg-1.0/zcfg_msg.c
===================================================================
--- libzcfg_msg-1.0.orig/zcfg_msg.c	2017-10-24 19:54:53.935013220 +0800
+++ libzcfg_msg-1.0/zcfg_msg.c	2017-10-24 19:55:56.289687996 +0800
@@ -31,6 +31,7 @@
 #define _MAX_THREADS            3
 
 #define _DEBUG_MSG              0
+
 #define _MSG_TYPE(_t_)          (_t_ & (~ZCFG_NO_WAIT_REPLY))
 #define _MSG_REPLY(_t_)         (!(_t_ & ZCFG_NO_WAIT_REPLY))
 
@@ -275,6 +276,9 @@
     if (b_server)
     {
     	sscanf(clientaddr.sun_path, "%*[^-]-%u", &clientPid);
+#if _DEBUG_MSG
+        zcfg_msg_dbg_printf("DEBUG : recv from client PID = %u\n", clientPid);
+#endif
     }
 
     /* malloc recv buf size according to length field in msg header */
@@ -370,6 +374,10 @@
     }
 	addr_len = sizeof(client_addr);
 
+#if _DEBUG_MSG
+    zcfg_msg_dbg_printf("DEBUG : client_addr.sun_path = %s\n", client_addr.sun_path);
+#endif
+
     ptr       = (char *)sendMsg;
     total_len = sizeof(zcfgMsg_t) + sendMsg->length;
 
@@ -389,7 +397,7 @@
             }
 
             zcfg_msg_dbg_printf("ERROR : errno = %d, %s\n", errno, strerror(errno));
-            zcfg_msg_dbg_printf("ERROR : fail to sendto(%s)\n", client_addr.sun_path);
+            zcfg_msg_dbg_printf("ERROR : fail to sendto %s\n", client_addr.sun_path);
             zcfg_msg_dbg_printf("ERROR : srcEid = %d, dstEid = %d, type = %d, %s reply\n",
                 sendMsg->srcEid, sendMsg->dstEid, _MSG_TYPE(sendMsg->type), _MSG_REPLY(sendMsg->type) ? "with" : "without");
 
@@ -578,6 +586,8 @@
     	return ZCFG_INTERNAL_ERROR;
     }
 
+    zcfg_msg_dbg_printf("INFO : EID %u bind server on %s successfully\n", my_entry->eid, saun.sun_path);
+
     // allow access
 	chmod(saun.sun_path, 0777);
 
@@ -762,6 +772,11 @@
     	unlink(clientaddr.sun_path);
     	return ZCFG_INTERNAL_ERROR;
     }
+
+#if _DEBUG_MSG
+    zcfg_msg_dbg_printf("DEBUG : EID %u bind server on %s successfully\n", eid, clientaddr.sun_path);
+#endif
+
 	chmod(clientaddr.sun_path, 0777);
 
     /*
