Index: libzyutil-1.0/BROADCOM/libzyutil_brcm_wrapper.h
===================================================================
--- libzyutil-1.0.orig/BROADCOM/libzyutil_brcm_wrapper.h	2015-12-04 20:56:20.382547962 +0800
+++ libzyutil-1.0/BROADCOM/libzyutil_brcm_wrapper.h	2015-12-04 20:56:20.598547960 +0800
@@ -14,5 +14,6 @@
 int boardIoctl(int board_ioctl, BOARD_IOCTL_ACTION action, char *string, int strLen, int offset, char *buf);
 int nvramDataWrite(NVRAM_DATA *nvramData);
 int nvramDataGet(NVRAM_DATA *nvramData);
-
+int eraseRomdPartition(void);
+int eraseDataPartition(void);
 #endif
\ No newline at end of file
Index: libzyutil-1.0/BROADCOM/libzyutil_wrapper.c
===================================================================
--- libzyutil-1.0.orig/BROADCOM/libzyutil_wrapper.c	2015-12-04 20:56:20.526547960 +0800
+++ libzyutil-1.0/BROADCOM/libzyutil_wrapper.c	2015-12-04 20:56:55.290838076 +0800
@@ -131,6 +131,28 @@
 	return 0;
 }
 
+/*-------------------------------------------------
+ * eraseRomdPartition(),eraseDataPartition() :
+ * Here, the second parameter of boardIoctl()
+ *  we gave is defined in the type enumeration
+ *	BOARD_IOCTL_ACTION_ERASE_PARTITION.
+ *-------------------------------------------------*/
+int eraseRomdPartition(void)
+{
+	int ret = 0;
+	ret = boardIoctl(BOARD_IOCTL_ERASE_PARTITION, ERASE_PAR_ROMD, "", 0, 0, "");
+
+	return ret;
+}
+
+int eraseDataPartition(void)
+{
+	int ret = 0;
+	ret = boardIoctl(BOARD_IOCTL_ERASE_PARTITION, ERASE_PAR_DATA, "", 0, 0, "");
+
+	return ret;
+}
+
 zcfgRet_t zyUtilIGetBaseMAC(char *mac)
 {
 	NVRAM_DATA nvramData;
Index: libzyutil-1.0/ECONET/libzyutil_econet_wrapper.h
===================================================================
--- libzyutil-1.0.orig/ECONET/libzyutil_econet_wrapper.h	2015-12-04 20:56:20.466547961 +0800
+++ libzyutil-1.0/ECONET/libzyutil_econet_wrapper.h	2015-12-04 20:56:20.598547960 +0800
@@ -21,9 +21,13 @@
 #define BOOTIMG_HEADER_OFFSET         0x0
 #define BOOTIMG_HEADER_SIZE           sizeof(struct trx_header)
 #define BOOTIMG_HEADER_FILE           "/tmp/BootImg_info"
+#define ROMD_PARTITON_NAME				"rom-d"
+#define DATA_PARTITON_NAME				"data"
 #endif
 
 zcfgRet_t zyUtilGetMrdInfo(PMRD_DATA mrd);
 zcfgRet_t zyUtilSetMrdInfo(PMRD_DATA mrd);
+int eraseRomdPartition(void);
+int eraseDataPartition(void);
 
 #endif
Index: libzyutil-1.0/ECONET/libzyutil_wrapper.c
===================================================================
--- libzyutil-1.0.orig/ECONET/libzyutil_wrapper.c	2015-12-04 20:56:20.578547959 +0800
+++ libzyutil-1.0/ECONET/libzyutil_wrapper.c	2015-12-04 20:56:20.598547960 +0800
@@ -99,6 +99,37 @@
 #define dumpMRDinfo(x)
 #endif
 
+/*-------------------------------------------------
+ * eraseRomdPartition(),eraseDataPartition() :
+ *-------------------------------------------------*/
+int eraseRomdPartition(void)
+{
+	int ret = 0;
+	char mtddev[16];
+
+	if( zyUtilMtdDevGetByName(ROMD_PARTITON_NAME, mtddev) == ZCFG_SUCCESS){
+		if (zyUtilMtdErase(mtddev) != ZCFG_SUCCESS)
+			return ZCFG_INTERNAL_ERROR;
+	}
+	else
+		return ZCFG_INTERNAL_ERROR;
+	return ZCFG_SUCCESS;
+}
+
+int eraseDataPartition(void)
+{
+	int ret = 0;
+	char mtddev[16];
+
+	if( zyUtilMtdDevGetByName(DATA_PARTITON_NAME, mtddev) == ZCFG_SUCCESS){
+		if (zyUtilMtdErase(mtddev) != ZCFG_SUCCESS)
+			return ZCFG_INTERNAL_ERROR;
+	}
+	else
+		return ZCFG_INTERNAL_ERROR;
+	return ZCFG_SUCCESS;
+}
+
 zcfgRet_t zyUtilGetMrdInfo(PMRD_DATA mrd)
 {
 	char sysCmd[128] = {0};
