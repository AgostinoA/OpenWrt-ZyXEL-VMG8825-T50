Index: libzyutil-1.0/common.c
===================================================================
--- libzyutil-1.0.orig/common.c	2017-08-16 09:52:50.792489727 +0800
+++ libzyutil-1.0/common.c	2017-08-16 09:55:31.373808600 +0800
@@ -15,6 +15,10 @@
 #include "zcfg_debug.h"
 #include "zhttpd_oid.h"
 
+#include "zcfg_rdm_oid.h"
+#include "zcfg_msg.h"
+
+
 #define MID_SIZE_MAX  32
 
 #include "zyutil.h"
@@ -610,6 +614,80 @@
 #endif
 

+
+#ifdef ZCFG_LOG_USE_DEBUGCFG 
+int zyUtilQueryUtilityEid(const char *name)
+{
+	//(!name || !strlen(name))
+
+
+
+	if(!strcmp(name, "esmd")){
+
+		return ZCFG_EID_ESMD;
+	}
+	else if(!strcmp(name, "utility name")){
+
+
+	}
+
+
+
+
+
+	return 0;
+}
+
+// return: ZCFG_SUCCESS, it's debug config msg and processed
+zcfgRet_t zyUtilHandleRecvdMsgDebugCfg(const char *msg)
+{
+	zcfgMsg_t *recvdMsg = (zcfgMsg_t *)msg;
+	const char *recvdMsgData = NULL;
+	struct json_object *debugObj = NULL;
+
+	if(!recvdMsg)
+		return ZCFG_INTERNAL_ERROR;
+
+	if((recvdMsg->type != ZCFG_MSG_LOG_SETTING_CONFIG) || !recvdMsg->length)
+		return ZCFG_REQUEST_REJECT;
+
+	recvdMsgData = (const char *)(recvdMsg + 1);
+
+	if(!recvdMsgData || !(debugObj = json_tokener_parse(recvdMsgData)))
+		return ZCFG_INVALID_OBJECT;
+
+	//printf("%s: debugobj %s\n", __FUNCTION__, recvdMsgData);
+	struct json_object *levelObj = json_object_object_get(debugObj, "Level");
+	if(!levelObj){
+		json_object_put(debugObj);
+		return ZCFG_INTERNAL_ERROR;
+	}
+	bool enable = json_object_get_boolean(json_object_object_get(debugObj, "Enable"));
+	myDebugCfgObjLevel =  (enable == true) ? json_object_get_int(levelObj) : 0;
+	const char *utilityName = json_object_get_string(json_object_object_get(debugObj, "Name"));
+	if(utilityName && strlen(utilityName))
+		printf("%s: debugobj %s\n", __FUNCTION__, utilityName);
+
+	// it might require lock while utilizing myDebugCfgObj somewhere
+	json_object_put(myDebugCfgObj);
+	myDebugCfgObj = debugObj;
+
+	return ZCFG_SUCCESS;
+}
+#else
+int zyUtilQueryUtilityEid(const char *name)
+{
+
+	return 0;
+}
+
+zcfgRet_t zyUtilHandleRecvdMsgDebugCfg(const char *msg)
+{
+
+	return ZCFG_REQUEST_REJECT;
+}
+#endif
+
 /**
  * zyUtilMailSend function parse receive massage and send email
  *
Index: libzyutil-1.0/zyutil.h
===================================================================
--- libzyutil-1.0.orig/zyutil.h	2017-08-16 09:52:50.792489727 +0800
+++ libzyutil-1.0/zyutil.h	2017-08-16 09:54:42.707808600 +0800
@@ -42,6 +42,10 @@
 
 bool zyUtilFileExists(const char * filename);
 
+
+int zyUtilQueryUtilityEid(const char *name);
+zcfgRet_t zyUtilHandleRecvdMsgDebugCfg(const char *msg);
+
 /* skconn */
 #include <sys/un.h>
 #include <arpa/inet.h>
