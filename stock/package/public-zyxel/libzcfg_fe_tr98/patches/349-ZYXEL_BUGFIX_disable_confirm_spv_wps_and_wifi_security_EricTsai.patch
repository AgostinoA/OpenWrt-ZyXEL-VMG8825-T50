Index: libzcfg_fe_tr98-1.0/lanDev.c
===================================================================
--- libzcfg_fe_tr98-1.0.orig/lanDev.c	2016-08-04 11:46:58.452899072 +0800
+++ libzcfg_fe_tr98-1.0/lanDev.c	2016-08-04 11:44:37.042389100 +0800
@@ -4891,6 +4891,7 @@
 				if((ret = wifiSecuritySet(ssidIid.idx[0], apSecJobj, tr98Jobj, paramValue, wepKeyLength)) != ZCFG_SUCCESS) {
 					goto finish;
 				}
+#if 0
 				if(apWpsEnable && ((ssidIid.idx[0] == WIFI_24_PRIMARY_LINK) || (ssidIid.idx[0] == WIFI_5_PRIMARY_LINK))) {
 					const char *beaconType = json_object_get_string(paramValue);
 					const char *modeEnabled = json_object_get_string(json_object_object_get(apSecJobj, "ModeEnabled"));
@@ -4899,6 +4900,7 @@
 						goto finish;
 					}
 				}
+#endif
 			}
 			else if(!strcmp(paramList->name, "WEPKeyIndex")) {
 				bool autoWepKey = json_object_get_boolean(json_object_object_get(tr98Jobj, "X_ZYXEL_AutoGenWepKey"));
@@ -5298,7 +5300,8 @@
 	struct json_object *tr181ParamValue = NULL;
 	struct json_object *tmpObj = NULL;
 	tr98Parameter_t *paramList = NULL;	
-	bool tr98WpsEnable, tr181WpsEnable;
+	//bool tr98WpsEnable, tr181WpsEnable;
+	bool tr98WpsEnable;
 	//int tr98WpsMthSupport = 0;
 	const char *tr98WpsMthEnabledStr = NULL, *tr98WpsMthSupportStr = NULL;
 	//bool wpsConfigured = true, wpsOldConfigured = true;
@@ -5404,13 +5407,14 @@
 	tr98WpsMthSupportStr =	json_object_get_string(json_object_object_get(tr98Jobj, "ConfigMethodsSupported"));
 	tr98WpsMthEnabledStr =	json_object_get_string(json_object_object_get(tr98Jobj, "ConfigMethodsEnabled"));
 	
+#if 0
 	tr181WpsEnable = json_object_get_boolean(json_object_object_get(apWpsJobj, "Enable"));
 	if(!tr181WpsEnable && tr98WpsEnable && strstr(tr181ModeEnabled, "WEP")) {
 		printf("%s: Couldn't enable WPS while Wifi is WEP security\n", __FUNCTION__);
 		ret = ZCFG_INVALID_PARAM_VALUE;
 		goto write_parameters_complete;
 	}
-
+#endif
 #if 0 //don't allow ACS trigger WPS method
 	if(tr98WpsEnable == false) {
 		json_object_object_add(apWpsJobj, "Enable", json_object_new_boolean(tr98WpsEnable));
