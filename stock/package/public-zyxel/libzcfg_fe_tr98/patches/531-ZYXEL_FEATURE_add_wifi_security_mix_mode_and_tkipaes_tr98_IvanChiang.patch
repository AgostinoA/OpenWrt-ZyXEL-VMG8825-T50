Index: libzcfg_fe_tr98-1.0/lanDev.c
===================================================================
--- libzcfg_fe_tr98-1.0.orig/lanDev.c	2018-01-05 17:16:48.656390908 +0800
+++ libzcfg_fe_tr98-1.0/lanDev.c	2018-01-05 17:18:04.642443400 +0800
@@ -4623,6 +4623,57 @@
 		if(!strcmp(tr98ParmStr_1, "AESEncryption"))
 			json_object_object_add(apSecJobj, "X_ZYXEL_Encryption", json_object_new_string("aes"));
 	}
+	else if(!strcmp(type, "WPAand11i")) {
+		int apAuth = 0, apEncryp = 0;
+
+		tr98ParmStr_1 = json_object_get_string(json_object_object_get(tr98Jobj, "IEEE11iAuthenticationMode"));
+		tr98ParmStr_2 = json_object_get_string(json_object_object_get(tr98Jobj, "WPAAuthenticationMode"));
+
+		if(strstr(modeEnabled, "WPA2-Personal") || strstr(modeEnabled, "WPA-WPA2-Personal"))
+			apAuth = WPA2_PERSONAL;
+
+		if(apAuth == WPA2_PERSONAL) {
+			if(!strcmp(tr98ParmStr_1, "EAPAuthentication") || !strcmp(tr98ParmStr_2, "EAPAuthentication")) {
+				json_object_object_add(apSecJobj, "ModeEnabled", json_object_new_string("WPA-WPA2-Enterprise"));
+			}else json_object_object_add(apSecJobj, "ModeEnabled", json_object_new_string("WPA-WPA2-Personal"));
+		}
+		else {
+			if(!strcmp(tr98ParmStr_1, "EAPAuthentication") && !strcmp(tr98ParmStr_2, "PSKAuthentication"))
+				return ZCFG_INVALID_PARAM_VALUE;
+			if(!strcmp(tr98ParmStr_1, "PSKAuthentication") && !strcmp(tr98ParmStr_2, "EAPAuthentication"))
+				return ZCFG_INVALID_PARAM_VALUE;
+			if(!strcmp(tr98ParmStr_1, "PSKAuthentication") || !strcmp(tr98ParmStr_2, "PSKAuthentication")) {
+				json_object_object_add(apSecJobj, "ModeEnabled", json_object_new_string("WPA-WPA2-Personal"));
+			}
+			else {
+				return ZCFG_INVALID_PARAM_VALUE;
+			}
+		}
+
+
+		tr98ParmStr_1 = json_object_get_string(json_object_object_get(tr98Jobj, "IEEE11iEncryptionModes"));
+		tr98ParmStr_2 = json_object_get_string(json_object_object_get(tr98Jobj, "WPAEncryptionModes"));
+
+		if(!strcmp(json_object_get_string(json_object_object_get(apSecJobj, "X_ZYXEL_Encryption")), "aes")){
+			apEncryp = AES;
+		}
+		else if(!strcmp(json_object_get_string(json_object_object_get(apSecJobj, "X_ZYXEL_Encryption")), "tkipaes")){
+			apEncryp = TKIPAES;
+		}
+		if(apEncryp == AES) {
+			if(!strcmp(tr98ParmStr_1, "TKIPandAESEncryption") || !strcmp(tr98ParmStr_2, "TKIPandAESEncryption")){
+				json_object_object_add(apSecJobj, "X_ZYXEL_Encryption", json_object_new_string("tkipaes"));
+			}
+		}else if(apEncryp == TKIPAES) {
+			if(!strcmp(tr98ParmStr_1, "AESEncryption") || !strcmp(tr98ParmStr_2, "AESEncryption"))
+				json_object_object_add(apSecJobj, "X_ZYXEL_Encryption", json_object_new_string("aes"));
+		}else {
+			if(!strcmp(tr98ParmStr_1, "AESEncryption")) 
+				json_object_object_add(apSecJobj, "X_ZYXEL_Encryption", json_object_new_string("aes"));
+			else if(!strcmp(tr98ParmStr_1, "TKIPandAESEncryption"))
+				json_object_object_add(apSecJobj, "X_ZYXEL_Encryption", json_object_new_string("tkipaes"));
+		}
+	}
 	else {
 		ret = ZCFG_INVALID_PARAM_VALUE;
 	}
