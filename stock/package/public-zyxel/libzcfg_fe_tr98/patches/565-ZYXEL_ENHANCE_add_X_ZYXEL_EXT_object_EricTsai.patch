Index: libzcfg_fe_tr98-1.0/zcfg_fe_tr98_handle.h
===================================================================
--- libzcfg_fe_tr98-1.0.orig/zcfg_fe_tr98_handle.h	2018-04-30 13:40:25.072418420 +0800
+++ libzcfg_fe_tr98-1.0/zcfg_fe_tr98_handle.h	2018-04-30 13:40:25.084418420 +0800
@@ -602,7 +602,7 @@
 {TR98_IPV6_DHCPV6_SERVER_OPT,	ATTR_INDEX_CREA,para_Ipv6Dhcpv6SrvOpt, 		zyIpv6Dhcpv6SrvOptObjGet,	zyIpv6Dhcpv6SrvOptObjSet, zyIpv6Dhcpv6SrvOptObjAdd, zyIpv6Dhcpv6SrvOptObjDel,	NULL,	NULL,	NULL},
 #endif
 #if ZYXEL_EXT
-{TR98_ZYXEL_EXT,             	0,				NULL,        			NULL,        			 NULL,       			 NULL, 				NULL,			NULL},
+{TR98_ZYXEL_EXT,                0,              para_extend,            zyExtObjGet,             zyExtObjSet, NULL, NULL, NULL, NULL, NULL},
 #ifdef ZYXEL_LANDING_PAGE_FEATURE
 {TR98_LANDING_PAGE, 			0,				para_Landing_Page,		zyExtLandingPageObjGet,	 zyExtLandingPageObjSet,	NULL,	NULL,	NULL,	NULL,	NULL},
 #endif
Index: libzcfg_fe_tr98-1.0/zyExt.c
===================================================================
--- libzcfg_fe_tr98-1.0.orig/zyExt.c	2018-04-30 13:40:24.996418420 +0800
+++ libzcfg_fe_tr98-1.0/zyExt.c	2018-04-30 13:40:25.084418420 +0800
@@ -15,6 +15,91 @@
 
 extern tr98Object_t tr98Obj[];
 
+//InternetGatewayDevice.X_ZYXEL_EXT.
+zcfgRet_t zyExtObjGet(char *tr98FullPathName, int handler, struct json_object **tr98Jobj, bool updateFlag)
+{
+#if 0
+	char mappingPathName[128] = {0};
+
+	if(zcfgFe98To181MappingNameGet(tr98FullPathName, mappingPathName) != ZCFG_SUCCESS){
+		return ZCFG_NO_SUCH_OBJECT;
+	}
+
+	printf("%s: %s\n", __FUNCTION__, mappingPathName);
+#endif
+
+	struct json_object *extObj = NULL, *paramObj;
+	objIndex_t objIid;
+	IID_INIT(objIid);
+	zcfgRet_t rst = ZCFG_NO_SUCH_OBJECT;
+
+	if((rst = zcfgFeObjJsonGet(RDM_OID_ZY_EXT, &objIid, &extObj)) != ZCFG_SUCCESS){
+		printf("%s: retrieve X_ZYXEL_EXT object fail\n", __FUNCTION__);
+
+		return rst;
+	}
+
+	struct tr98Parameter_s *parmList = tr98Obj[handler].parameter;
+	if(!parmList){
+		return ZCFG_NO_SUCH_OBJECT;
+	}
+
+	*tr98Jobj = json_object_new_object();
+	while(parmList->name){
+		paramObj = json_object_object_get(extObj, parmList->name);
+		if(paramObj){
+			json_object_object_add(*tr98Jobj, parmList->name, JSON_OBJ_COPY(paramObj));
+		}
+		parmList++;
+	}
+
+	json_object_put(extObj);
+
+	return ZCFG_SUCCESS;
+}
+
+
+//InternetGatewayDevice.X_ZYXEL_EXT.
+zcfgRet_t zyExtObjSet(char *tr98FullPathName, int handler, struct json_object *tr98Jobj, struct json_object *multiJobj )
+{
+	struct json_object *extObj = NULL, *paramObj;
+	objIndex_t objIid;
+	IID_INIT(objIid);
+
+	printf("%s\n", __FUNCTION__);
+
+	struct tr98Parameter_s *parmList = tr98Obj[handler].parameter;
+	if(!parmList){
+		return ZCFG_NO_SUCH_OBJECT;
+	}
+
+	tr98Jobj = zcfgFeRetrieveSpv(tr98FullPathName);
+
+	extObj = json_object_new_object();
+
+	while(parmList->name){
+		paramObj = json_object_object_get(tr98Jobj, parmList->name);
+		if(paramObj){
+			json_object_object_add(extObj, parmList->name, JSON_OBJ_COPY(paramObj));
+		}
+		parmList++;
+	}
+
+	if(multiJobj){
+		zcfgFeJsonMultiObjAppend(RDM_OID_ZY_EXT, &objIid, multiJobj, extObj);
+		zcfgFeJsonMultiObjAddParam(multiJobj, RDM_OID_ZY_EXT, &objIid, "partialset", json_object_new_boolean(true));
+	}else{
+		zcfgRet_t rst = zcfgFeObjJsonSet(RDM_OID_ZY_EXT, &objIid, extObj, NULL);
+		json_object_put(extObj);
+
+		return rst;
+	}
+	json_object_put(extObj);
+
+	return ZCFG_SUCCESS;
+
+}
+
 /*
  *   TR98 Object Name : InternetGatewayDevice.X_ZYXEL_EXT.DNSRouteEntry.i
  *
Index: libzcfg_fe_tr98-1.0/zyExt_parameter.h
===================================================================
--- libzcfg_fe_tr98-1.0.orig/zyExt_parameter.h	2018-04-30 13:40:25.000418420 +0800
+++ libzcfg_fe_tr98-1.0/zyExt_parameter.h	2018-04-30 13:40:25.084418420 +0800
@@ -1,3 +1,13 @@
+
+tr98Parameter_t para_extend[] = {
+#ifdef ZYXEL_ACS_WPS_ACTIVATION
+	{ "WPSRunning", PARAMETER_ATTR_WRITE, 0, json_type_boolean},
+	{ "WPSApIndex", PARAMETER_ATTR_WRITE, 0, json_type_uint32},
+	{ "WPSRunningStatus", PARAMETER_ATTR_READONLY, 257, json_type_string},
+#endif
+	{ NULL, 0, 0}
+};
+
 tr98Parameter_t para_DnsRtEntry[] = {
 	{ "Enable", PARAMETER_ATTR_WRITE, 0, json_type_boolean},
 	{ "DomainName", PARAMETER_ATTR_WRITE, 257, json_type_string},
Index: libzcfg_fe_tr98-1.0/zyExt.h
===================================================================
--- libzcfg_fe_tr98-1.0.orig/zyExt.h	2018-04-30 13:40:24.996418420 +0800
+++ libzcfg_fe_tr98-1.0/zyExt.h	2018-04-30 13:40:25.084418420 +0800
@@ -1,4 +1,5 @@
 /*Parameter*/
+extern tr98Parameter_t para_extend[];
 extern tr98Parameter_t para_DnsRtEntry[];
 extern tr98Parameter_t para_DnsEntry[];
 extern tr98Parameter_t para_DDns[];
@@ -72,6 +73,10 @@
 
 /*Handler Function*/
 
+//InternetGatewayDevice.X_ZYXEL_EXT.
+zcfgRet_t zyExtObjGet(char *, int , struct json_object **, bool );
+zcfgRet_t zyExtObjSet(char *, int , struct json_object *, struct json_object * );
+
 /*InternetGatewayDevice.X_ZYXEL_EXT.DNSRouteEntry.i*/
 extern zcfgRet_t zyExtDnsRtObjGet(char *, int, struct json_object **, bool);
 extern zcfgRet_t zyExtDnsRtObjSet(char *, int , struct json_object *, struct json_object *);
Index: libzcfg_fe_tr98-1.0/Makefile
===================================================================
--- libzcfg_fe_tr98-1.0.orig/Makefile	2018-04-30 13:40:24.992418420 +0800
+++ libzcfg_fe_tr98-1.0/Makefile	2018-04-30 13:52:46.760422005 +0800
@@ -235,6 +235,16 @@
 CFLAGS += -DZCFG_RPC_REQUEST_ADDITIONS
 endif
 
+ifeq ($(CONFIG_ZYXEL_ACS_WPS_ACTIVATION),y)
+CFLAGS += -DZYXEL_ACS_WPS_ACTIVATION
+endif
+
+ifeq ($(CONFIG_ALTIBOX_CUSTOMIZATION),y)
+ifneq ($(CONFIG_ZYXEL_ACS_WPS_ACTIVATION),y)
+CFLAGS += -DZYXEL_ACS_WPS_ACTIVATION
+endif
+endif
+
 .PHONY : libzcfg_fe_tr98
 
 all: clean libzcfg_fe_tr98
