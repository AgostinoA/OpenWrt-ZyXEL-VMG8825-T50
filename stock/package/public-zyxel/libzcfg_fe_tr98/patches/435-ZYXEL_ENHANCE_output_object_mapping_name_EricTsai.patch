Index: libzcfg_fe_tr98-1.0/zcfg_fe_tr98.h
===================================================================
--- libzcfg_fe_tr98-1.0.orig/zcfg_fe_tr98.h	2017-03-16 16:16:15.549342036 +0800
+++ libzcfg_fe_tr98-1.0/zcfg_fe_tr98.h	2017-03-16 16:16:15.661342037 +0800
@@ -192,6 +192,8 @@
 zcfgRet_t zcfgFe98NameToSeqnum(const char *tr98PathName, zcfg_name_t *seqnum, objIndex_t *tr98ObjIid);
 zcfgRet_t zcfgFe98SeqnumToName(zcfg_name_t seqnum, objIndex_t *objIid, char *tr98PathName);
 zcfgRet_t zcfgFe98ParmMappingToName(const char *notifyName, char *tr98NotifyName);
+zcfgRet_t zcfgTr98MapAddObjName();
+zcfgRet_t zcfgTr181MapAddObjName();
 char *csvStringStripTerm(const char *csv, const char *term);
 zcfgRet_t zcfgFeTr98ObjNameGet(char *, struct  json_object** );
 zcfgRet_t zcfgFeTr98ObjNameObjGet(char *, struct json_object **);
Index: libzcfg_fe_tr98-1.0/zcfg_fe_tr98.c
===================================================================
--- libzcfg_fe_tr98-1.0.orig/zcfg_fe_tr98.c	2017-03-16 16:13:51.481223300 +0800
+++ libzcfg_fe_tr98-1.0/zcfg_fe_tr98.c	2017-03-16 16:14:14.933223300 +0800
@@ -1611,6 +1611,80 @@
 	return ZCFG_SUCCESS;
 }
 
+zcfgRet_t zcfgTr98MapAddObjName()
+{
+	struct json_object *zcfgTr98MapTable = NULL;
+	uint32_t seqnum, arrayIdx;
+	char *tr98PathName = NULL;
+	struct json_object *jObj;
+
+	if(!(zcfgTr98MapTable = json_object_from_file(ZCFG_TR98_MAP_PATH))) {
+		ztrdbg(ZTR_SDL_DEBUG, "%s: retrieve tr98 mapping data fail\n", __FUNCTION__);
+		return ZCFG_INTERNAL_ERROR;
+	}
+
+	seqnum = e_TR98_START;
+	while(seqnum != e_TR98_LAST){
+		arrayIdx = ARRAY_SEQNUM(seqnum);
+		jObj = json_object_array_get_idx(zcfgTr98MapTable, arrayIdx);
+		if(!jObj){
+			seqnum++;
+			continue;
+		}
+
+		tr98PathName = (tr98NameObjList[arrayIdx].tr98Obj)->name;
+		if(!tr98PathName || strlen(tr98PathName) == 0){
+			zcfgLog(ZCFG_LOG_INFO, "%s: %u SeqnumToName fail\n", __FUNCTION__, seqnum);
+			seqnum++;
+			continue;
+		}
+
+		json_object_object_add(jObj, "name", json_object_new_string(tr98PathName));
+
+		seqnum++;
+	}
+
+	if(json_object_to_file(ZCFG_TR98_MAP_ADDOBJNAME, zcfgTr98MapTable) < 0) {
+		ztrdbg(ZTR_SDL_DEBUG, "%s: save tr98 mapping obj num/name fail\n", __FUNCTION__);
+		json_object_put(zcfgTr98MapTable);
+		return ZCFG_INTERNAL_ERROR;
+	}
+	json_object_put(zcfgTr98MapTable);
+
+	return ZCFG_SUCCESS;
+}
+
+zcfgRet_t zcfgTr181MapAddObjName()
+{
+	struct json_object *zcfgTr181MapTable = NULL;
+
+	if(!(zcfgTr181MapTable = json_object_from_file(ZCFG_TR181_MAP_PATH))) {
+		ztrdbg(ZTR_SDL_DEBUG, "%s: retrieve tr181 mapping data fail\n", __FUNCTION__);
+		return ZCFG_INTERNAL_ERROR;
+	}
+
+	json_object_object_foreach(zcfgTr181MapTable, objnumStr, objnumJobj) {
+		if(!objnumJobj)
+			continue;
+
+		int objnum = atoi(objnumStr);
+		const char *name = zcfgFeTr181OidToName(objnum);
+		if(!name){
+			continue;
+		}
+		json_object_object_add(objnumJobj, "name", json_object_new_string(name));
+	}
+	if(json_object_to_file(ZCFG_TR181_MAP_ADDOBJNAME, zcfgTr181MapTable) < 0) {
+		ztrdbg(ZTR_SDL_DEBUG, "%s: save tr181 mapping data fail\n", __FUNCTION__);
+		json_object_put(zcfgTr181MapTable);
+		return ZCFG_INTERNAL_ERROR;
+	}
+
+	json_object_put(zcfgTr181MapTable);
+
+	return ZCFG_SUCCESS;
+}
+
 #ifdef ZCFG_PARM_NAMEMAPPING
 zcfgRet_t zcfgFe98ParmMappingToName(const char *notifyName, char *tr98NotifyName)
 {
