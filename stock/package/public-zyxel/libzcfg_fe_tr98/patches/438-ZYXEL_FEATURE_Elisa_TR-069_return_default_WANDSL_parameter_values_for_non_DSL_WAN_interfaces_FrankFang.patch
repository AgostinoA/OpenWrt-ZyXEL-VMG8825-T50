Index: libzcfg_fe_tr98-1.0/wanDev.c
===================================================================
--- libzcfg_fe_tr98-1.0.orig/wanDev.c	2017-03-23 10:28:28.340510151 +0800
+++ libzcfg_fe_tr98-1.0/wanDev.c	2017-03-23 11:32:31.793922899 +0800
@@ -750,6 +750,18 @@
 	if((ret = zcfgFe98To181MappingNameGet(tr98TmpName, dslChannelObj)) == ZCFG_SUCCESS) {
 		if(strstr(dslChannelObj, "DSL") == NULL) {
 			zcfgLog(ZCFG_LOG_WARNING, "%s : Not a DSL Interface\n", __FUNCTION__);
+#ifdef ELISA_TR69_WANDSL_CUSTOMIZATION
+			/*Not a DSL interface, all parameters set to 0 or empty*/
+			*tr98Jobj = json_object_new_object();
+			paramList = tr98Obj[handler].parameter;
+			while(paramList->name != NULL) {
+				if(!strstr(paramList->name, "DataPath") && !strstr(paramList->name, "InterleaveDepth")){
+					zcfgFeTr98DefaultValueSet(*tr98Jobj, paramList->name, paramList->type);
+				}
+				paramList++;
+			}
+			return ZCFG_SUCCESS;
+#endif //ELISA_TR69_WANDSL_CUSTOMIZATION
 			return ZCFG_NO_SUCH_OBJECT;
 		}
 
@@ -1028,6 +1040,16 @@
 		
 	if(strstr(tr181ObjName, "DSL") == NULL) {
 		zcfgLog(ZCFG_LOG_WARNING, "%s : Not a DSL Interface\n", __FUNCTION__);
+#ifdef ELISA_TR69_WANDSL_CUSTOMIZATION
+		/*Not a DSL interface, all parameters set to 0 or empty*/
+		*tr98Jobj = json_object_new_object();
+		paramList = tr98Obj[handler].parameter;
+		while(paramList->name != NULL) {
+			zcfgFeTr98DefaultValueSet(*tr98Jobj, paramList->name, paramList->type);
+			paramList++;
+		}
+		return ZCFG_SUCCESS;
+#endif //ELISA_TR69_WANDSL_CUSTOMIZATION
 		return ZCFG_NO_SUCH_OBJECT;
 	}
 
@@ -1095,6 +1117,16 @@
 	/* tr98TmpName will be InternetGatewayDevice.WANDevice.i */
 	if((ret = zcfgFe98To181MappingNameGet(tr98FullPathName, tr181PathName)) != ZCFG_SUCCESS) {
 		zcfgLog(ZCFG_LOG_INFO, "%s : Get TR181 mapping name fail.\n", __FUNCTION__);
+#ifdef ELISA_TR69_WANDSL_CUSTOMIZATION
+		/*Not a DSL interface, all parameters set to 0 or empty*/
+		*tr98Jobj = json_object_new_object();
+		paramList = tr98Obj[handler].parameter;
+		while(paramList->name != NULL) {
+			zcfgFeTr98DefaultValueSet(*tr98Jobj, paramList->name, paramList->type);
+			paramList++;
+		}
+		return ZCFG_SUCCESS;
+#endif //ELISA_TR69_WANDSL_CUSTOMIZATION
 		return ret;
 	}
 
@@ -1156,6 +1188,16 @@
 	/* tr98TmpName will be InternetGatewayDevice.WANDevice.i */
 	if((ret = zcfgFe98To181MappingNameGet(tr98FullPathName, tr181PathName)) != ZCFG_SUCCESS) {
 		zcfgLog(ZCFG_LOG_INFO, "%s : Get TR181 mapping name fail.\n", __FUNCTION__);
+#ifdef ELISA_TR69_WANDSL_CUSTOMIZATION
+		/*Not a DSL interface, all parameters set to 0 or empty*/
+		*tr98Jobj = json_object_new_object();
+		paramList = tr98Obj[handler].parameter;
+		while(paramList->name != NULL) {
+			zcfgFeTr98DefaultValueSet(*tr98Jobj, paramList->name, paramList->type);
+			paramList++;
+		}
+		return ZCFG_SUCCESS;
+#endif //ELISA_TR69_WANDSL_CUSTOMIZATION
 		return ret;
 	}
 
@@ -1224,6 +1266,18 @@
 	/* tr98TmpName will be InternetGatewayDevice.WANDevice.i */
 	if((ret = zcfgFe98To181MappingNameGet(tr98FullPathName, tr181PathName)) != ZCFG_SUCCESS) {
 		zcfgLog(ZCFG_LOG_INFO, "%s : Get TR181 mapping name fail.\n", __FUNCTION__);
+#ifdef ELISA_TR69_WANDSL_CUSTOMIZATION
+		/*Not a DSL interface, all parameters set to 0 or empty*/
+		*tr98Jobj = json_object_new_object();
+		paramList = tr98Obj[handler].parameter;
+		while(paramList->name != NULL) {
+			if(!strstr(paramList->name, "ATUCFECErrors") && !strstr(paramList->name, "ATUCCRCErrors")){
+				zcfgFeTr98DefaultValueSet(*tr98Jobj, paramList->name, paramList->type);
+			}
+			paramList++;
+		}
+		return ZCFG_SUCCESS;
+#endif //ELISA_TR69_WANDSL_CUSTOMIZATION
 		return ret;
 	}
 	printf("%s: Tr181 mapping name: %s\n", __FUNCTION__, tr181PathName);
