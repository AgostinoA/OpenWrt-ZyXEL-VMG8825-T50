Index: libzcfg_fe_tr98-1.0/zcfg_fe_tr98.c
===================================================================
--- libzcfg_fe_tr98-1.0.orig/zcfg_fe_tr98.c	2015-09-04 20:36:13.749288376 +0800
+++ libzcfg_fe_tr98-1.0/zcfg_fe_tr98.c	2015-09-04 20:36:13.765288376 +0800
@@ -1846,9 +1846,9 @@
 	if(zcfgFe98NameToSeqnum((const char *)tr98ObjName, &seqnum, &tr98ObjIid) == ZCFG_SUCCESS) {
 		if((ret = zcfgFeParmAttrQry(seqnum, &tr98ObjIid, name, &oid, &objIid, queriedParmName, &attr)) != ZCFG_SUCCESS) {
 			zcfgLog(ZCFG_LOG_INFO, "%s: parm attr query fail, %u %s\n", __FUNCTION__, seqnum, name);
-			//return ret;
+			return ret;
 			//printf("%s: parm attr query fail, %u %s\n", __FUNCTION__, seqnum, name);
-			return 0;
+			//return 0;
 		}
 			//confirm data if required
 		if(attr & PARAMETER_ATTR_NOATTR) {
@@ -1877,9 +1877,37 @@
 	handler = zcfgFeTr98HandlerGet(tr98ClassName);
 	if(handler != -1) {
 		if(tr98Obj[handler].getAttr != NULL){
-			return tr98Obj[handler].getAttr(tr98ObjName, handler, name);
+			//return tr98Obj[handler].getAttr(tr98ObjName, handler, name);
+			ret = tr98Obj[handler].getAttr(tr98ObjName, handler, name);
+#ifdef ZCFG_ABANDON_NO_TR181_MAPPING_PARM
+			if(ret == 0)
+				return ZCFG_NO_SUCH_PARAMETER;
+			else
+				return ret;
+#else
+			if(ret == 0) {
+				paramList = tr98Obj[handler].parameter;
+				if(paramList == NULL)
+					return ZCFG_NO_SUCH_PARAMETER;
+
+				while(paramList->name!= NULL) {
+					if(strcmp(paramList->name, name) == 0){
+						return paramList->attr;
+					}
+					paramList++;
+				}
+			}
+			else
+				return ret;
+#endif
 		}
 		else {
+#ifdef ZCFG_ABANDON_NO_TR181_MAPPING_PARM
+			int attrVal = zcfgFeTr98ObjParamAttrGetByName((const char *)tr98ObjName, (const char *)name);
+			if(attrVal < 0) {
+				return attrVal;
+			}
+#endif
 			paramList = tr98Obj[handler].parameter;
 			if(paramList == NULL)
 			{
Index: libzcfg_fe_tr98-1.0/zcfg_fe_tr98.h
===================================================================
--- libzcfg_fe_tr98-1.0.orig/zcfg_fe_tr98.h	2015-09-04 20:36:13.673288374 +0800
+++ libzcfg_fe_tr98-1.0/zcfg_fe_tr98.h	2015-09-04 20:36:13.765288376 +0800
@@ -13,7 +13,9 @@
 #include "zcfg_tr98_common.h"
 #include "zcfg_fe_msg.h"
 
+#ifdef ZCFG_PARM_NAMEMAPPING
 #define TR98_MAPPING_DEBUG 0
+#endif
 
 #define TR98_GET_UPDATE 0
 #define TR98_GET_WITHOUT_UPDATE 1
Index: libzcfg_fe_tr98-1.0/Makefile
===================================================================
--- libzcfg_fe_tr98-1.0.orig/Makefile	2015-09-04 20:36:13.517288369 +0800
+++ libzcfg_fe_tr98-1.0/Makefile	2015-09-04 20:36:39.073039300 +0800
@@ -75,6 +75,10 @@
 	$(CC) $(CFLAGS) -c $< $(INC_PATH) $(LIB_PATH) $(LINK_LIB) -std=gnu99
 endif
 
+ifeq ($(CONFIG_ZCFG_ABANDON_NO_TR181_MAPPING_PARM),y)
+CFLAGS += -DZCFG_ABANDON_NO_TR181_MAPPING_PARM
+endif
+
 zcfg_fe_msg.o: zcfg_fe_msg.c
 	$(CC) $(CFLAGS) -c $< $(INC_PATH) $(LIB_PATH) $(LINK_LIB) -std=gnu99
 
