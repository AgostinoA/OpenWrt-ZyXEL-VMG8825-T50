Index: libzcfg_fe_dal-1.0/network/ethctl/zcfg_fe_dal_ethctl.c
===================================================================
--- libzcfg_fe_dal-1.0.orig/network/ethctl/zcfg_fe_dal_ethctl.c	2017-06-30 15:11:49.469043710 +0800
+++ libzcfg_fe_dal-1.0/network/ethctl/zcfg_fe_dal_ethctl.c	2017-06-30 15:13:45.955695300 +0800
@@ -27,18 +27,40 @@
 void zcfgFeDalShowEthCtl(struct json_object *Jarray){
 	int i, len = 0;
 	struct json_object *obj;
+	zcfgRet_t ret = ZCFG_SUCCESS;
+	struct json_object *ethObj = NULL;
+	struct json_object *paramJobj = NULL;
+	objIndex_t ethIid = {0};
+
 	if(json_object_get_type(Jarray) != json_type_array){
 		printf("wrong Jobj format!\n");
 		return;
 	}
+	printf("setting for eth ports\n");
 	printf("%-15s %-15s %-15s %-15s \n","Interface","Duplex","Speed","Enable");
 	len = json_object_array_length(Jarray);
 	for(i=0;i<len;i++){
 		obj = json_object_array_get_idx(Jarray, i);
 		printf("%-15s %-15s %-15s %-15d \n",
 			json_object_get_string(json_object_object_get(obj, "intf")),
-			json_object_get_string(json_object_object_get(obj, "duplex")),
-			json_object_get_string(json_object_object_get(obj, "speed")),
+			json_object_get_string(json_object_object_get(obj, "duplexSetting")),
+			json_object_get_string(json_object_object_get(obj, "speedSetting")),
+			json_object_get_boolean(json_object_object_get(obj, "enable")));
+	}
+	printf("status for eth ports\n");
+	printf("%-15s %-15s %-15s %-15s \n","Interface","Duplex","Speed","Enable");
+	len = json_object_array_length(Jarray);
+	for(i=0;i<len;i++){
+		obj = json_object_array_get_idx(Jarray, i);
+		if (strcmp(json_object_get_string(json_object_object_get(obj, "duplexStatus")), "Down") == 0||json_object_get_boolean(json_object_object_get(obj, "enable"))==0)
+			printf("%-15s %-15s\n",
+				json_object_get_string(json_object_object_get(obj, "intf")),
+				"Down");
+		else
+			printf("%-15s %-15s %-15s %-15d \n",
+				json_object_get_string(json_object_object_get(obj, "intf")),
+				json_object_get_string(json_object_object_get(obj, "duplexStatus")),
+				json_object_get_string(json_object_object_get(obj, "speedStatus")),
 			json_object_get_boolean(json_object_object_get(obj, "enable")));
 
 	}
@@ -53,8 +75,10 @@
 	while(zcfgFeObjJsonGetNext(RDM_OID_ETH_IFACE, &ethIid, &ethObj) == ZCFG_SUCCESS){
 		paramJobj = json_object_new_object();
 		json_object_object_add(paramJobj, "intf", JSON_OBJ_COPY(json_object_object_get(ethObj, "Name")));
-		json_object_object_add(paramJobj, "duplex", JSON_OBJ_COPY(json_object_object_get(ethObj, "DuplexMode")));
-		json_object_object_add(paramJobj, "speed", JSON_OBJ_COPY(json_object_object_get(ethObj, "MaxBitRate")));
+		json_object_object_add(paramJobj, "duplexSetting", JSON_OBJ_COPY(json_object_object_get(ethObj, "X_ZYXEL_DuplexMode")));
+		json_object_object_add(paramJobj, "speedSetting", JSON_OBJ_COPY(json_object_object_get(ethObj, "X_ZYXEL_MaxBitRate")));
+		json_object_object_add(paramJobj, "duplexStatus", JSON_OBJ_COPY(json_object_object_get(ethObj, "DuplexMode")));
+		json_object_object_add(paramJobj, "speedStatus", JSON_OBJ_COPY(json_object_object_get(ethObj, "MaxBitRate")));
 		json_object_object_add(paramJobj, "enable", JSON_OBJ_COPY(json_object_object_get(ethObj, "Enable")));
 		json_object_array_add(Jarray, paramJobj);
 		zcfgFeJsonObjFree(ethObj);
@@ -110,20 +134,20 @@
 				//media-type
 				media_type = json_object_get_string(json_object_object_get(Jobj, "media-type"));
 				 if(!strcmp(media_type,"Auto")){
-					json_object_object_add(ethObj, "DuplexMode", json_object_new_string(media_type));
-					json_object_object_add(ethObj, "MaxBitRate", json_object_new_int(-1));
+					json_object_object_add(ethObj, "X_ZYXEL_DuplexMode", json_object_new_string(media_type));
+					json_object_object_add(ethObj, "X_ZYXEL_MaxBitRate", json_object_new_int(-1));
 				}else if(!strcmp(media_type,"100FD")){
-					json_object_object_add(ethObj, "DuplexMode", json_object_new_string("Full"));
-					json_object_object_add(ethObj, "MaxBitRate", json_object_new_int(100));
+					json_object_object_add(ethObj, "X_ZYXEL_DuplexMode", json_object_new_string("Full"));
+					json_object_object_add(ethObj, "X_ZYXEL_MaxBitRate", json_object_new_int(100));
 				}else if(!strcmp(media_type,"100HD")){
-					json_object_object_add(ethObj, "DuplexMode", json_object_new_string("Half"));
-					json_object_object_add(ethObj, "MaxBitRate", json_object_new_int(100));
+					json_object_object_add(ethObj, "X_ZYXEL_DuplexMode", json_object_new_string("Half"));
+					json_object_object_add(ethObj, "X_ZYXEL_MaxBitRate", json_object_new_int(100));
 				}else if(!strcmp(media_type,"10FD")){
-					json_object_object_add(ethObj, "DuplexMode", json_object_new_string("Full"));
-					json_object_object_add(ethObj, "MaxBitRate", json_object_new_int(10));
+					json_object_object_add(ethObj, "X_ZYXEL_DuplexMode", json_object_new_string("Full"));
+					json_object_object_add(ethObj, "X_ZYXEL_MaxBitRate", json_object_new_int(10));
 				}else if(!strcmp(media_type,"10HD")){
-					json_object_object_add(ethObj, "DuplexMode", json_object_new_string("Half"));
-					json_object_object_add(ethObj, "MaxBitRate", json_object_new_int(10));
+					json_object_object_add(ethObj, "X_ZYXEL_DuplexMode", json_object_new_string("Half"));
+					json_object_object_add(ethObj, "X_ZYXEL_MaxBitRate", json_object_new_int(10));
 				}else{
 					strcpy(replyMsg, "Duplex should be Full, Half or Auto. Speed should be 10 or 100.");
 					return ZCFG_INVALID_PARAM_VALUE;
