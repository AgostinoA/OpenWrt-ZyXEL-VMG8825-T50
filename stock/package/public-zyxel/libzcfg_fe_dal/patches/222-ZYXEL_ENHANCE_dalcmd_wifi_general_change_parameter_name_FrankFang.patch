Index: libzcfg_fe_dal-1.0/network/wireless/zcfg_fe_dal_wifi_general.c
===================================================================
--- libzcfg_fe_dal-1.0.orig/network/wireless/zcfg_fe_dal_wifi_general.c	2017-06-19 11:21:15.562430660 +0800
+++ libzcfg_fe_dal-1.0/network/wireless/zcfg_fe_dal_wifi_general.c	2017-06-19 15:13:31.621735231 +0800
@@ -39,24 +39,33 @@
 	{"secMode",				dalType_int,		0,	0,	NULL,		"43|149|255",	dalcmd_Forbid},
 	{"wep",					dalType_string,		0,	0,	NULL,		"64bit|128bit",	0},
 	{"WEPKey",				dalType_string, 	0,	0,	NULL,		NULL,			0},
-	{"X_ZYXEL_AutoGenWepKey",dalType_boolean,	0,	0,	NULL,		NULL,			0},
-	{"X_ZYXEL_WEPKey2",		dalType_string, 	0,	0,	NULL,		NULL,			0},
-	{"X_ZYXEL_WEPKey3",		dalType_string, 	0,	0,	NULL,		NULL,			0},
-	{"X_ZYXEL_WEPKey4",		dalType_string, 	0,	0,	NULL,		NULL,			0},
-	{"X_ZYXEL_WEP64Key1",	dalType_string, 	0,	0,	NULL,		NULL,			0},
-	{"X_ZYXEL_WEP64Key2",	dalType_string, 	0,	0,	NULL,		NULL,			0},
-	{"X_ZYXEL_WEP64Key3",	dalType_string, 	0,	0,	NULL,		NULL,			0},
-	{"X_ZYXEL_WEP64Key4",	dalType_string, 	0,	0,	NULL,		NULL,			0},
+	// {"X_ZYXEL_AutoGenWepKey",dalType_boolean,	0,	0,	NULL,		NULL,			0},
+	// {"X_ZYXEL_WEPKey2",		dalType_string, 	0,	0,	NULL,		NULL,			0},
+	// {"X_ZYXEL_WEPKey3",		dalType_string, 	0,	0,	NULL,		NULL,			0},
+	// {"X_ZYXEL_WEPKey4",		dalType_string, 	0,	0,	NULL,		NULL,			0},
+	// {"X_ZYXEL_WEP64Key1",	dalType_string, 	0,	0,	NULL,		NULL,			0},
+	// {"X_ZYXEL_WEP64Key2",	dalType_string, 	0,	0,	NULL,		NULL,			0},
+	// {"X_ZYXEL_WEP64Key3",	dalType_string, 	0,	0,	NULL,		NULL,			0},
+	// {"X_ZYXEL_WEP64Key4",	dalType_string, 	0,	0,	NULL,		NULL,			0},
+	{"AutoGenWepKey",dalType_boolean,	0,	0,	NULL,		NULL,			0},
+	{"WEPKey2",		dalType_string, 	0,	0,	NULL,		NULL,			0},
+	{"WEPKey3",		dalType_string, 	0,	0,	NULL,		NULL,			0},
+	{"WEPKey4",		dalType_string, 	0,	0,	NULL,		NULL,			0},
+	{"WEP64Key1",	dalType_string, 	0,	0,	NULL,		NULL,			0},
+	{"WEP64Key2",	dalType_string, 	0,	0,	NULL,		NULL,			0},
+	{"WEP64Key3",	dalType_string, 	0,	0,	NULL,		NULL,			0},
+	{"WEP64Key4",	dalType_string, 	0,	0,	NULL,		NULL,			0},
 	{"wepid",				dalType_string,		0,	0,	NULL,		"key1|key2|key3|key4",			0},
 	{"wpaMode",				dalType_string,		0,	0,	NULL,		"wpapsk|wpa2psk|wpawpa2psk",			0},
-	{"X_ZYXEL_AutoGenPSK",	dalType_boolean,	0,	0,	NULL,		NULL,			0},
+	// {"X_ZYXEL_AutoGenPSK",	dalType_boolean,	0,	0,	NULL,		NULL,			0},
+	{"AutoGenPSK",	dalType_boolean,	0,	0,	NULL,		NULL,			0},
 	{"psk_value",			dalType_string, 	0,	0,	NULL,		NULL,			0},
 	{"RekeyingInterval",	dalType_int,		0,	0,	NULL,		NULL,			0},
 	{"RadiusServerIPAddr",	dalType_string, 	0,	0,	NULL,		NULL,			dalcmd_Forbid},
 	{"RadiusServerPort",	dalType_int,		0,	0,	NULL,		NULL,			dalcmd_Forbid},
 	{"RadiusSecret",		dalType_string, 	0,	0,	NULL,		NULL,			dalcmd_Forbid},
-	{"X_ZYXEL_Preauth",		dalType_boolean,	0,	0,	NULL,		NULL,			0},
-	{"X_ZYXEL_ReauthInterval",dalType_int,		0,	0,	NULL,		NULL,			0},
+	{"X_ZYXEL_Preauth",		dalType_boolean,	0,	0,	NULL,		NULL,			dalcmd_Forbid},
+	{"X_ZYXEL_ReauthInterval",dalType_int,		0,	0,	NULL,		NULL,			dalcmd_Forbid},
 	{"encryp",				dalType_string, 	0,	0,	NULL,		"tkip|aes|tkipaes",			0},
 	{"X_ZYXEL_PassphraseType",dalType_int,		0,	0,	NULL,		NULL,			dalcmd_Forbid},
 	//DHCPV4 SRV SUBNET
@@ -147,17 +156,17 @@
 int secMode;
 const char* wep;
 const char* WEPKey;
-bool X_ZYXEL_AutoGenWepKey;
-const char* X_ZYXEL_WEPKey2;
-const char* X_ZYXEL_WEPKey3;
-const char* X_ZYXEL_WEPKey4;
-const char* X_ZYXEL_WEP64Key1;
-const char* X_ZYXEL_WEP64Key2;
-const char* X_ZYXEL_WEP64Key3;
-const char* X_ZYXEL_WEP64Key4;
+bool AutoGenWepKey;
+const char* WEPKey2;
+const char* WEPKey3;
+const char* WEPKey4;
+const char* WEP64Key1;
+const char* WEP64Key2;
+const char* WEP64Key3;
+const char* WEP64Key4;
 const char* wepid;
 const char* wpaMode;
-bool X_ZYXEL_AutoGenPSK;
+bool AutoGenPSK;
 const char* psk_value;
 #ifdef CBT_CUSTOMIZATION
 const char* guestPskValue;
@@ -445,18 +454,18 @@
 	}
 	secMode = json_object_get_int(json_object_object_get(Jobj, "secMode"));
 	wep = json_object_get_string(json_object_object_get(Jobj, "wep"));
-	X_ZYXEL_AutoGenWepKey = json_object_get_boolean(json_object_object_get(Jobj, "X_ZYXEL_AutoGenWepKey"));
+	AutoGenWepKey = json_object_get_boolean(json_object_object_get(Jobj, "AutoGenWepKey"));
 	WEPKey = json_object_get_string(json_object_object_get(Jobj, "WEPKey"));
-	X_ZYXEL_WEPKey2 = json_object_get_string(json_object_object_get(Jobj, "X_ZYXEL_WEPKey2"));
-	X_ZYXEL_WEPKey3 = json_object_get_string(json_object_object_get(Jobj, "X_ZYXEL_WEPKey3"));
-	X_ZYXEL_WEPKey4 = json_object_get_string(json_object_object_get(Jobj, "X_ZYXEL_WEPKey4"));
-	X_ZYXEL_WEP64Key1 = json_object_get_string(json_object_object_get(Jobj, "X_ZYXEL_WEP64Key1"));
-	X_ZYXEL_WEP64Key2 = json_object_get_string(json_object_object_get(Jobj, "X_ZYXEL_WEP64Key2"));
-	X_ZYXEL_WEP64Key3 = json_object_get_string(json_object_object_get(Jobj, "X_ZYXEL_WEP64Key3"));
-	X_ZYXEL_WEP64Key4 = json_object_get_string(json_object_object_get(Jobj, "X_ZYXEL_WEP64Key4"));
+	WEPKey2 = json_object_get_string(json_object_object_get(Jobj, "WEPKey2"));
+	WEPKey3 = json_object_get_string(json_object_object_get(Jobj, "WEPKey3"));
+	WEPKey4 = json_object_get_string(json_object_object_get(Jobj, "WEPKey4"));
+	WEP64Key1 = json_object_get_string(json_object_object_get(Jobj, "WEP64Key1"));
+	WEP64Key2 = json_object_get_string(json_object_object_get(Jobj, "WEP64Key2"));
+	WEP64Key3 = json_object_get_string(json_object_object_get(Jobj, "WEP64Key3"));
+	WEP64Key4 = json_object_get_string(json_object_object_get(Jobj, "WEP64Key4"));
 	wepid = json_object_get_string(json_object_object_get(Jobj, "wepid"));
 	wpaMode = json_object_get_string(json_object_object_get(Jobj, "wpaMode"));
-	X_ZYXEL_AutoGenPSK = json_object_get_boolean(json_object_object_get(Jobj, "X_ZYXEL_AutoGenPSK"));
+	AutoGenPSK = json_object_get_boolean(json_object_object_get(Jobj, "AutoGenPSK"));
 	psk_value = json_object_get_string(json_object_object_get(Jobj, "psk_value"));
 	RekeyingInterval = json_object_get_int(json_object_object_get(Jobj, "RekeyingInterval"));
 	RadiusServerIPAddr = json_object_get_string(json_object_object_get(Jobj, "RadiusServerIPAddr"));
@@ -1278,10 +1287,9 @@
 		
 		json_object_object_add(wifiSecObj, "X_ZYXEL_WEPAuthentication", json_object_new_string("None"));
 		json_object_object_add(wifiSecObj, "X_ZYXEL_WEPEncryption", json_object_new_string("WEPEncryption"));
+		json_object_object_add(wifiSecObj, "X_ZYXEL_AutoGenWepKey", json_object_new_boolean(AutoGenWepKey));
 		
-		json_object_object_add(wifiSecObj, "X_ZYXEL_AutoGenWepKey", json_object_new_boolean(X_ZYXEL_AutoGenWepKey));
-		
-		if(X_ZYXEL_AutoGenWepKey)
+		if(AutoGenWepKey)
 		{
 			json_object_object_add(wifiSecObj, "X_ZYXEL_DefaultKeyID", json_object_new_int(1));
 			
@@ -1300,25 +1308,25 @@
 		{
 			if (!strcmp(wep,"128bit"))
 			{
-				if(WEPKey!=NULL)
+				if(json_object_object_get(Jobj, "WEPKey"))
 					json_object_object_add(wifiSecObj, "WEPKey", json_object_new_string(WEPKey));
-				if(X_ZYXEL_WEPKey2!=NULL)
-					json_object_object_add(wifiSecObj, "X_ZYXEL_WEPKey2", json_object_new_string(X_ZYXEL_WEPKey2));
-				if(X_ZYXEL_WEPKey3!=NULL)
-					json_object_object_add(wifiSecObj, "X_ZYXEL_WEPKey3", json_object_new_string(X_ZYXEL_WEPKey3));
-				if(X_ZYXEL_WEPKey4!=NULL)
-					json_object_object_add(wifiSecObj, "X_ZYXEL_WEPKey4", json_object_new_string(X_ZYXEL_WEPKey4));
+				if(json_object_object_get(Jobj, "WEPKey2"))
+					json_object_object_add(wifiSecObj, "X_ZYXEL_WEPKey2", json_object_new_string(WEPKey2));
+				if(json_object_object_get(Jobj, "WEPKey3"))
+					json_object_object_add(wifiSecObj, "X_ZYXEL_WEPKey3", json_object_new_string(WEPKey3));
+				if(json_object_object_get(Jobj, "WEPKey4"))
+					json_object_object_add(wifiSecObj, "X_ZYXEL_WEPKey4", json_object_new_string(WEPKey4));
 			}
 			else
 			{
-				if(X_ZYXEL_WEP64Key1!=NULL)
-					json_object_object_add(wifiSecObj, "X_ZYXEL_WEP64Key1", json_object_new_string(X_ZYXEL_WEP64Key1));
-				if(X_ZYXEL_WEP64Key2!=NULL)
-					json_object_object_add(wifiSecObj, "X_ZYXEL_WEP64Key2", json_object_new_string(X_ZYXEL_WEP64Key2));
-				if(X_ZYXEL_WEP64Key3!=NULL)
-					json_object_object_add(wifiSecObj, "X_ZYXEL_WEP64Key3", json_object_new_string(X_ZYXEL_WEP64Key3));
-				if(X_ZYXEL_WEP64Key4!=NULL)
-					json_object_object_add(wifiSecObj, "X_ZYXEL_WEP64Key4", json_object_new_string(X_ZYXEL_WEP64Key4));
+				if(json_object_object_get(Jobj, "WEP64Key1"))
+					json_object_object_add(wifiSecObj, "X_ZYXEL_WEP64Key1", json_object_new_string(WEP64Key1));
+				if(json_object_object_get(Jobj, "WEP64Key2"))
+					json_object_object_add(wifiSecObj, "X_ZYXEL_WEP64Key2", json_object_new_string(WEP64Key2));
+				if(json_object_object_get(Jobj, "WEP64Key3"))
+					json_object_object_add(wifiSecObj, "X_ZYXEL_WEP64Key3", json_object_new_string(WEP64Key3));
+				if(json_object_object_get(Jobj, "WEP64Key4"))
+					json_object_object_add(wifiSecObj, "X_ZYXEL_WEP64Key4", json_object_new_string(WEP64Key4));
 			}
 			
 			json_object_object_add(wifiSecObj, "wepid", json_object_new_string(wepid));
@@ -1345,9 +1353,9 @@
 			else
 				json_object_object_add(wifiSecObj, "ModeEnabled", json_object_new_string("WPA-WPA2-Personal"));
 		
-			json_object_object_add(wifiSecObj, "X_ZYXEL_AutoGenPSK", json_object_new_boolean(X_ZYXEL_AutoGenPSK));
+			json_object_object_add(wifiSecObj, "X_ZYXEL_AutoGenPSK", json_object_new_boolean(AutoGenPSK));
 		
-			if(X_ZYXEL_AutoGenPSK)
+			if(AutoGenPSK)
 			{
 				X_ZYXEL_Auto_PSK = json_object_get_string(json_object_object_get(wifiSecObj, "X_ZYXEL_Auto_PSK"));
 				json_object_object_add(wifiSecObj, "KeyPassphrase", json_object_new_string(X_ZYXEL_Auto_PSK));
@@ -1387,16 +1395,19 @@
 			json_object_object_add(wifiSecObj, "RadiusServerPort", json_object_new_int(RadiusServerPort));
 			json_object_object_add(wifiSecObj, "RadiusSecret", json_object_new_string(RadiusSecret));
 		}
-		
-		if(!strcmp(encryp, "tkip"))
-			json_object_object_add(wifiSecObj, "X_ZYXEL_Encryption", json_object_new_string("tkip"));
-		else if(!strcmp(encryp, "aes"))
-			json_object_object_add(wifiSecObj, "X_ZYXEL_Encryption", json_object_new_string("aes"));
-		else
-			json_object_object_add(wifiSecObj, "X_ZYXEL_Encryption", json_object_new_string("tkipaes"));
-		
-		json_object_object_add(wifiSecObj, "RekeyingInterval", json_object_new_int(RekeyingInterval));
-				
+
+		if(json_object_object_get(Jobj, "encryp")){
+			if(!strcmp(encryp, "tkip"))
+				json_object_object_add(wifiSecObj, "X_ZYXEL_Encryption", json_object_new_string("tkip"));
+			else if(!strcmp(encryp, "aes"))
+				json_object_object_add(wifiSecObj, "X_ZYXEL_Encryption", json_object_new_string("aes"));
+			else
+				json_object_object_add(wifiSecObj, "X_ZYXEL_Encryption", json_object_new_string("tkipaes"));
+		}
+
+		if(json_object_object_get(Jobj, "RekeyingInterval")){
+			json_object_object_add(wifiSecObj, "RekeyingInterval", json_object_new_int(RekeyingInterval));
+		}			
 	}	
 #endif
 	return ret;
@@ -1584,68 +1595,89 @@
 			return ZCFG_NO_SUCH_OBJECT;
 		}
 
-		// wep, X_ZYXEL_AutoGenWepKey, wepid must be set to proper values
-		if(!json_object_object_get(Jobj, "wep") || !json_object_object_get(Jobj, "X_ZYXEL_AutoGenWepKey") || !json_object_object_get(Jobj, "wepid")){
+		// wep must be set to proper value
+		if(!json_object_object_get(Jobj, "wep")){
+			printf("wep must be set.\n");
 			return ZCFG_INVALID_PARAM_VALUE;
 		}
-		if(strcmp(wep,"128bit") && strcmp(wep,"64bit")){
+		else if(strcmp(wep,"128bit") && strcmp(wep,"64bit")){
+			printf("wep must be set to \"64bit\" or \"128bit\".\n");
 			return ZCFG_INVALID_PARAM_VALUE;
 		}
-		if(strcmp(wepid,"key1") && strcmp(wepid,"key2") && strcmp(wepid,"key3") && strcmp(wepid,"key4")){
+
+		// AutoGenWepKey must be set
+		if(!json_object_object_get(Jobj, "AutoGenWepKey")){
+			printf("AutoGenWepKey must be set.\n");
 			return ZCFG_INVALID_PARAM_VALUE;
 		}
 
 		// if user-defined passwd be set, wepid must match key's order
-		if(X_ZYXEL_AutoGenWepKey == false){
+		if(AutoGenWepKey == false){
+
+			// wepid must be set to proper value
+			if(strcmp(wepid,"key1") && strcmp(wepid,"key2") && strcmp(wepid,"key3") && strcmp(wepid,"key4")){
+				printf("wepid must be set to \"key1\", \"key2\", \"key3\", or \"key4\".\n");
+				return ZCFG_INVALID_PARAM_VALUE;
+			}
+
 			if(!strcmp(wep,"128bit") && !strcmp(wepid,"key1") && !json_object_object_get(Jobj, "WEPKey")){
+				printf("\"key1\" and \"WEPKey\" should be set together.\n");
 				return ZCFG_INVALID_PARAM_VALUE;
 			}
-			else if(!strcmp(wep,"128bit") && !strcmp(wepid,"key2") && !json_object_object_get(Jobj, "X_ZYXEL_WEPKey2")){
+			else if(!strcmp(wep,"128bit") && !strcmp(wepid,"key2") && !json_object_object_get(Jobj, "WEPKey2")){
+				printf("\"key2\" and \"WEPKey2\" should be set together.\n");
 				return ZCFG_INVALID_PARAM_VALUE;
-				}
-			else if(!strcmp(wep,"128bit") && !strcmp(wepid,"key3") && !json_object_object_get(Jobj, "X_ZYXEL_WEPKey3")){
+			}
+			else if(!strcmp(wep,"128bit") && !strcmp(wepid,"key3") && !json_object_object_get(Jobj, "WEPKey3")){
+				printf("\"key3\" and \"WEPKey3\" should be set together.\n");
 				return ZCFG_INVALID_PARAM_VALUE;
 			}
-			else if(!strcmp(wep,"128bit") && !strcmp(wepid,"key4") && !json_object_object_get(Jobj, "X_ZYXEL_WEPKey4")){
+			else if(!strcmp(wep,"128bit") && !strcmp(wepid,"key4") && !json_object_object_get(Jobj, "WEPKey4")){
+				printf("\"key4\" and \"WEPKey4\" should be set together.\n");
 				return ZCFG_INVALID_PARAM_VALUE;
 			}
-			else if(!strcmp(wep,"64bit") && !strcmp(wepid,"key1") && !json_object_object_get(Jobj, "X_ZYXEL_WEP64Key1")){
+			else if(!strcmp(wep,"64bit") && !strcmp(wepid,"key1") && !json_object_object_get(Jobj, "WEP64Key1")){
+				printf("\"key1\" and \"WEP64Key1\" should be set together.\n");
 				return ZCFG_INVALID_PARAM_VALUE;
 			}
-			else if(!strcmp(wep,"64bit") && !strcmp(wepid,"key2") && !json_object_object_get(Jobj, "X_ZYXEL_WEP64Key2")){
+			else if(!strcmp(wep,"64bit") && !strcmp(wepid,"key2") && !json_object_object_get(Jobj, "WEP64Key2")){
+				printf("\"key2\" and \"WEP64Key2\" should be set together.\n");
 				return ZCFG_INVALID_PARAM_VALUE;
 			}
-			else if(!strcmp(wep,"64bit") && !strcmp(wepid,"key3") && !json_object_object_get(Jobj, "X_ZYXEL_WEP64Key3")){
+			else if(!strcmp(wep,"64bit") && !strcmp(wepid,"key3") && !json_object_object_get(Jobj, "WEP64Key3")){
+				printf("\"key3\" and \"WEP64Key3\" should be set together.\n");
 				return ZCFG_INVALID_PARAM_VALUE;
 			}
-			else if(!strcmp(wep,"64bit") && !strcmp(wepid,"key4") && !json_object_object_get(Jobj, "X_ZYXEL_WEP64Key4")){
+			else if(!strcmp(wep,"64bit") && !strcmp(wepid,"key4") && !json_object_object_get(Jobj, "WEP64Key4")){
+				printf("\"key4\" and \"WEP64Key4\" should be set together.\n");
 				return ZCFG_INVALID_PARAM_VALUE;
 			}
 			else{
+				dbg_printf("%s : wep=%s wepid=%s ..\n",__FUNCTION__,wep,wepid);
 				return ZCFG_SUCCESS;
 			}
-			
 		}
-		
 	}
 	else if(secMode == SLIDER_POS_MORESECURE){
 
 		// wpaMode must be set
 		if(!json_object_object_get(Jobj, "wpaMode")){
+			printf("wpaMode must be set in \"MoreSecure\" mode.\n");
 			return ZCFG_INVALID_PARAM_VALUE;
 		}
 	
 		// wpaMode must be set to a proper value
 		if(strcmp(wpaMode,"wpa2psk") && strcmp(wpaMode,"wpapsk") && strcmp(wpaMode,"wpawpa2psk")){
+			printf("wpaMode must be set to \"wpapsk\" or \"wpa2psk\" or \"wpawpa2psk\".\n");
 			return ZCFG_INVALID_PARAM_VALUE;
 		}
-		// X_ZYXEL_AutoGenPSK must be set
-		if(!json_object_object_get(Jobj, "X_ZYXEL_AutoGenPSK")){
-			printf("X_ZYXEL_AutoGenPSK must be set in \"MoreSecure\" mode.\n");
+		// AutoGenPSK must be set
+		if(!json_object_object_get(Jobj, "AutoGenPSK")){
+			printf("AutoGenPSK must be set in \"MoreSecure\" mode.\n");
 			return ZCFG_INVALID_PARAM_VALUE;
 		}
-		// psk_value must be set according to X_ZYXEL_AutoGenPSK's value
-		autoGenMoreSecurePasswd = json_object_get_boolean(json_object_object_get(Jobj, "X_ZYXEL_AutoGenPSK"));
+		// psk_value must be set according to AutoGenPSK's value
+		autoGenMoreSecurePasswd = json_object_get_boolean(json_object_object_get(Jobj, "AutoGenPSK"));
 		if(autoGenMoreSecurePasswd && json_object_object_get(Jobj, "psk_value")){
 			printf("\"psk_value\" should not be set when auto-generated password is enabled.\n");
 			return ZCFG_INVALID_PARAM_VALUE;
@@ -1655,6 +1687,13 @@
 			return ZCFG_INVALID_PARAM_VALUE;
 		}
 
+		// encryp must be set
+		if(json_object_object_get(Jobj, "encryp")){
+			if(strcmp(encryp, "tkip") && strcmp(encryp, "aes") && strcmp(encryp, "tkipaes")){
+				printf("encryp must be set to \"tkip\" or \"aes\" or \"tkipaes\".\n");
+				return ZCFG_INVALID_PARAM_VALUE;
+			}
+		}
 
 		return ZCFG_SUCCESS;
 	}
