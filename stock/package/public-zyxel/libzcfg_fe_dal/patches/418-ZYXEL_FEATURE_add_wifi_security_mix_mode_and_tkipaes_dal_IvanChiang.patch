Index: libzcfg_fe_dal-1.0/Makefile
===================================================================
--- libzcfg_fe_dal-1.0.orig/Makefile	2018-01-05 16:50:05.648383160 +0800
+++ libzcfg_fe_dal-1.0/Makefile	2018-01-05 16:52:53.761299300 +0800
@@ -200,6 +200,11 @@
 CFLAGS += -DCONFIG_PPTP_SUPPORT
 endif
 
+#Support WiFi Security Mode WPA/WPA2-PSK
+ifeq ($(CONFIG_ZYXEL_WIFI_SUPPORT_WPA_MIX_MODE),y)
+CFLAGS += -DZYXEL_WIFI_SUPPORT_WPA_MIX_MODE
+endif
+
 LDFLAGS += $(LIB_PATH) $(LINK_LIB)
 CFLAGS += $(INC_PATH) -std=gnu99
 
Index: libzcfg_fe_dal-1.0/network/wireless/zcfg_fe_dal_wifi_general.c
===================================================================
--- libzcfg_fe_dal-1.0.orig/network/wireless/zcfg_fe_dal_wifi_general.c	2018-01-05 16:50:05.556383160 +0800
+++ libzcfg_fe_dal-1.0/network/wireless/zcfg_fe_dal_wifi_general.c	2018-01-05 16:55:42.623158300 +0800
@@ -59,7 +59,11 @@
 	{"WEP64Key3",	dalType_string, 	0,	0,	NULL,		NULL,			0},
 	{"WEP64Key4",	dalType_string, 	0,	0,	NULL,		NULL,			0},
 	{"wepid",				dalType_string,		0,	0,	NULL,		"key1|key2|key3|key4",			0},
+#ifdef ZYXEL_WIFI_SUPPORT_WPA_MIX_MODE
+	{"wpaMode",				dalType_string,		0,	0,	NULL,		"wpawpa2psk|wpa2psk",	0},
+#else
 	{"wpaMode",				dalType_string,		0,	0,	NULL,		"wpa2psk",			0},
+#endif
 	// {"X_ZYXEL_AutoGenPSK",	dalType_boolean,	0,	0,	NULL,		NULL,			0},
 	{"AutoGenPSK",	dalType_boolean,	0,	0,	NULL,		NULL,			0},
 	{"psk_value",			dalType_string, 	0,	0,	NULL,		NULL,			0},
@@ -69,7 +73,11 @@
 	{"RadiusSecret",		dalType_string, 	0,	0,	NULL,		NULL,			dalcmd_Forbid},
 	{"X_ZYXEL_Preauth",		dalType_boolean,	0,	0,	NULL,		NULL,			dalcmd_Forbid},
 	{"X_ZYXEL_ReauthInterval",dalType_int,		0,	0,	NULL,		NULL,			0},
+#ifdef ZYXEL_WIFI_SUPPORT_WPA_MIX_MODE
+	{"encryp",				dalType_string, 	0,	0,	NULL,		"tkipaes|aes",		0},
+#else
 	{"encryp",				dalType_string, 	0,	0,	NULL,		"aes",			0},
+#endif
 	{"X_ZYXEL_PassphraseType",dalType_int,		0,	0,	NULL,		NULL,			dalcmd_Forbid},
 	//DHCPV4 SRV SUBNET
 	{"div_wifiSubnet",		dalType_boolean,	0,	0,	NULL,		NULL,			dalcmd_Forbid},
@@ -263,7 +271,7 @@
 				if(!strcmp("None",modeEn)){
 					json_object_object_add(pramJobj, "PskDisplay", json_object_new_string("None"));
 				}
-				else if(!strcmp("WPA2-Personal",modeEn)){
+				else if(!strcmp("WPA2-Personal",modeEn)|| !strcmp("WPA-WPA2-Personal",modeEn)){
 					if(json_object_get_boolean(json_object_object_get(obj2, "X_ZYXEL_AutoGenPSK"))){
 						json_object_object_add(pramJobj, "PskDisplay", JSON_OBJ_COPY(json_object_object_get(obj2, "X_ZYXEL_Auto_PSK")));
 					}
@@ -718,10 +726,14 @@
 	}
 	else if(secMode == SLIDER_POS_MORESECURE)
 	{
-		if(!strcmp(wpaMode,"wpa2psk"))
+		if(!strcmp(wpaMode,"wpa2psk") || !strcmp(wpaMode,"wpawpa2psk"))
 		{
-			json_object_object_add(wifiSecObj, "ModeEnabled", json_object_new_string("WPA2-Personal"));
-		
+			if(!strcmp(wpaMode,"wpa2psk")){
+				json_object_object_add(wifiSecObj, "ModeEnabled", json_object_new_string("WPA2-Personal"));
+			}
+			else{
+				json_object_object_add(wifiSecObj, "ModeEnabled", json_object_new_string("WPA-WPA2-Personal"));
+			}
 			// AutoGenPSK be from user (Jobj) or default (wifiSecObj)
 			if(json_object_object_get(Jobj,"AutoGenPSK")){
 				json_object_object_add(wifiSecObj, "X_ZYXEL_AutoGenPSK", json_object_new_boolean(X_ZYXEL_AutoGenPSK));
@@ -763,8 +775,12 @@
 		}
 
 		if(json_object_object_get(Jobj, "encryp")){
-			if(!strcmp(encryp, "aes"))
+			if(!strcmp(encryp, "tkipaes")){
+				json_object_object_add(wifiSecObj, "X_ZYXEL_Encryption", json_object_new_string("tkipaes"));
+			}
+			if(!strcmp(encryp, "aes")){
 				json_object_object_add(wifiSecObj, "X_ZYXEL_Encryption", json_object_new_string("aes"));
+			}
 		}
 
 		// RekeyingInterval be from user (Jobj) or default
@@ -852,10 +868,14 @@
 		}
 		else if(secMode == SLIDER_POS_MORESECURE)
 		{
-			if(!strcmp(wpaMode,"wpa2psk"))
+			if(!strcmp(wpaMode,"wpa2psk")|| !strcmp(wpaMode,"wpawpa2psk"))
 			{
-				json_object_object_add(syncWifiSecObj, "ModeEnabled", json_object_new_string("WPA2-Personal"));
-			
+				if(!strcmp(wpaMode,"wpa2psk")){
+					json_object_object_add(syncWifiSecObj, "ModeEnabled", json_object_new_string("WPA2-Personal"));
+				}
+				else{
+					json_object_object_add(syncWifiSecObj, "ModeEnabled", json_object_new_string("WPA-WPA2-Personal"));
+				}
 				json_object_object_add(syncWifiSecObj, "X_ZYXEL_AutoGenPSK", json_object_new_boolean(X_ZYXEL_AutoGenPSK));
 			
 				if(X_ZYXEL_AutoGenPSK)
@@ -889,9 +909,12 @@
 				json_object_object_add(syncWifiSecObj, "RadiusSecret", json_object_new_string(RadiusSecret));
 			}
 			
-			if(!strcmp(encryp, "aes"))
+			if(!strcmp(encryp, "aes")){
 				json_object_object_add(syncWifiSecObj, "X_ZYXEL_Encryption", json_object_new_string("aes"));
-			
+			}
+			if(!strcmp(encryp, "tkipaes")){
+				json_object_object_add(syncWifiSecObj, "X_ZYXEL_Encryption", json_object_new_string("tkipaes"));
+			}
 			json_object_object_add(syncWifiSecObj, "RekeyingInterval", json_object_new_int(RekeyingInterval));
 					
 		}
@@ -1542,10 +1565,17 @@
 		}
 	
 		// wpaMode must be set to a proper value
+#ifdef ZYXEL_WIFI_SUPPORT_WPA_MIX_MODE
+		if(strcmp(wpaMode,"wpa2psk")&& strcmp(wpaMode,"wpawpa2psk") ){
+			printf("wpaMode must be set to \"wpa2psk\" or \"wpawpa2psk\".\n");
+			return ZCFG_INVALID_PARAM_VALUE;
+		}
+#else
 		if(strcmp(wpaMode,"wpa2psk")){
 			printf("wpaMode must be set to \"wpa2psk\".\n");
 			return ZCFG_INVALID_PARAM_VALUE;
 		}
+#endif
 
 		// AutoGenPSK is optional
 		if(!json_object_object_get(Jobj, "AutoGenPSK")){
@@ -1565,10 +1595,17 @@
 
 		// encryp must be set
 		if(json_object_object_get(Jobj, "encryp")){
+#ifdef ZYXEL_WIFI_SUPPORT_WPA_MIX_MODE
+			if(strcmp(encryp, "tkipaes") && strcmp(encryp, "aes")){
+				printf("encryp must be set to \"tkipaes\" or \"aes\".\n");
+				return ZCFG_INVALID_PARAM_VALUE;
+			}
+#else
 			if(strcmp(encryp, "aes")){
 				printf("encryp must be set to \"aes\".\n");
 				return ZCFG_INVALID_PARAM_VALUE;
 			}
+#endif
 		}
 
 		return ZCFG_SUCCESS;
