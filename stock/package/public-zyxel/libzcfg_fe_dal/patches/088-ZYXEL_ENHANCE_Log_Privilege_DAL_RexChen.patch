Index: libzcfg_fe_dal-1.0/js/zcfg_fe_dal_loginprivilege.c
===================================================================
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ libzcfg_fe_dal-1.0/js/zcfg_fe_dal_loginprivilege.c	2016-12-14 15:23:15.551734100 +0800
@@ -0,0 +1,94 @@
+#include <ctype.h>
+#include <json/json.h>
+//#include <json/json_object.h>
+#include <time.h>
+
+#include "zcfg_common.h"
+#include "zcfg_fe_rdm_string.h"
+#include "zcfg_fe_rdm_struct.h"
+#include "zcfg_rdm_oid.h"
+#include "zcfg_rdm_obj.h"
+#include "zcfg_debug.h"
+//#include "zcfg_eid.h"
+#include "zcfg_msg.h"
+#include "zcfg_fe_dal_common.h"
+
+dal_param_t LOGIN_PRIVILEGE_param[]={		
+	{"Enabled", 	 dalType_boolean,	0,	0,	NULL},
+	{"Username", 	 dalType_string,	0,	0,	NULL},
+	{"Password", 	 dalType_string,	0,	0,	NULL},
+	{"EnableQuickStart", 	 dalType_boolean,	0,	0,	NULL},
+	{"Page", 	 dalType_string,	0,	0,	NULL},
+	{NULL,					0,	0,	0,	NULL},
+
+};
+
+zcfgRet_t zcfgFeDal_LoginPrivilege_Edit(struct json_object *Jobj, char *replyMsg){
+	zcfgRet_t ret = ZCFG_SUCCESS;
+	struct json_object *loginPrivilegeObj = NULL;
+	struct json_object *reqObjectindex = NULL;
+	struct json_object *reqObject = NULL;
+	objIndex_t loginPrivilegeIid = {0};
+	bool enable = false;
+	const char *username = NULL;
+	const char *password = NULL;
+	bool enablequickstart = false;
+	const char *page = NULL;
+	int index0 = 0;
+	int index1 = 0;
+	
+	IID_INIT(loginPrivilegeIid);
+	reqObjectindex = json_object_array_get_idx(Jobj,0);
+	index0 = json_object_get_int(json_object_object_get(reqObjectindex, "Index0"));
+	index1 = json_object_get_int(json_object_object_get(reqObjectindex, "Index1"));
+	
+	if(index0 == 1 ){
+		loginPrivilegeIid.idx[0] = index0;
+		loginPrivilegeIid.idx[1] = index1;
+		loginPrivilegeIid.level = 2;
+		ret = zcfgFeObjJsonGet(RDM_OID_ZY_LOG_CFG_GP_ACCOUNT, &loginPrivilegeIid, &loginPrivilegeObj);
+		if(ret == ZCFG_SUCCESS){
+			reqObject = json_object_array_get_idx(Jobj,2);
+			enable = json_object_get_boolean(json_object_object_get(reqObject, "Enabled"));
+			username = json_object_get_string(json_object_object_get(reqObject, "Username"));
+			password = json_object_get_string(json_object_object_get(reqObject, "Password"));
+			enablequickstart = json_object_get_boolean(json_object_object_get(reqObject, "EnableQuickStart"));
+			
+			json_object_object_add(loginPrivilegeObj, "Enabled", json_object_new_boolean(enable));
+			json_object_object_add(loginPrivilegeObj, "Username", json_object_new_string(username));
+			json_object_object_add(loginPrivilegeObj, "Password", json_object_new_string(password));
+			json_object_object_add(loginPrivilegeObj, "EnableQuickStart", json_object_new_boolean(enablequickstart));
+			zcfgFeObjJsonSet(RDM_OID_ZY_LOG_CFG_GP_ACCOUNT, &loginPrivilegeIid, loginPrivilegeObj, NULL);
+		}
+	}
+	else if(index0 == 2 || index0 == 3){
+		loginPrivilegeIid.idx[0] = index0;
+		loginPrivilegeIid.level = 1;
+		ret = zcfgFeObjJsonGet(RDM_OID_ZY_LOG_CFG_GP, &loginPrivilegeIid, &loginPrivilegeObj);
+		if(ret == ZCFG_SUCCESS){
+			reqObject = json_object_array_get_idx(Jobj,1);
+			page = json_object_get_string(json_object_object_get(reqObject, "Page"));
+
+			json_object_object_add(loginPrivilegeObj, "Page", json_object_new_string(page));
+			zcfgFeObjJsonSet(RDM_OID_ZY_LOG_CFG_GP, &loginPrivilegeIid, loginPrivilegeObj, NULL);
+		}
+	}
+	
+	zcfgFeJsonObjFree(reqObjectindex);
+	zcfgFeJsonObjFree(reqObject);
+	zcfgFeJsonObjFree(loginPrivilegeObj);
+	return ret;
+
+}
+
+
+zcfgRet_t zcfgFeDalLoginPrivilege(const char *method, struct json_object *Jobj, char *replyMsg){
+	zcfgRet_t ret = ZCFG_SUCCESS;
+	if(!strcmp(method, "PUT"))
+		ret = zcfgFeDal_LoginPrivilege_Edit(Jobj, NULL);
+	else
+		printf("Unknown method:%s\n", method);
+
+	return ret;
+}
+
