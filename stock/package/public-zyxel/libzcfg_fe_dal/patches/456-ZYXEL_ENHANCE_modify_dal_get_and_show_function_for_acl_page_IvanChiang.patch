Index: libzcfg_fe_dal-1.0/security/firewall/zcfg_fe_dal_firewall_acl.c
===================================================================
--- libzcfg_fe_dal-1.0.orig/security/firewall/zcfg_fe_dal_firewall_acl.c	2018-02-08 21:38:46.546579050 +0800
+++ libzcfg_fe_dal-1.0/security/firewall/zcfg_fe_dal_firewall_acl.c	2018-02-08 21:28:56.411416500 +0800
@@ -56,11 +56,58 @@
 	{"ICMPTypeCode",		dalType_int, 	-1, 	4, 		NULL,	NULL, 							dalcmd_Forbid},//for GUI only
 	{NULL, 					0, 				 0, 	0, 		NULL,	NULL, 							0}
 };
+char* ICMPv6_type( int icmptype, int icmptypecode){
+	char *v6type = "";
+	if(icmptype == 1 && icmptypecode == 0)
+		v6type = "1/No-Rute";
+	else if(icmptype == 1 && icmptypecode == 1)
+		v6type = "1/Communication-Prohibited";
+	else if(icmptype == 1 && icmptypecode == 3)
+		v6type = "1/Address-Unreachable";
+	else if(icmptype == 1 && icmptypecode == 4)
+		v6type = "1/Port-Unreachable";
+	else if(icmptype == 2 && icmptypecode == 0)
+		v6type = "2/Packet too Big";
+	else if(icmptype == 3 && icmptypecode == 0)
+		v6type = "3/Time Exceeded (ttl-zero-during-transit)";
+	else if(icmptype == 3 && icmptypecode == 1)
+		v6type = "3/Time Exceeded (ttl-zero-during-reassembly)";
+	else if(icmptype == 4 && icmptypecode == 0)
+		v6type = "4/Parameter Problem (bad-header)";
+	else if(icmptype == 4 && icmptypecode == 1)
+		v6type = "4/Parameter Problem (unknown-header-type)";
+	else if(icmptype == 4 && icmptypecode == 2)
+		v6type = "4/Parameter Problem (unknown-option)";
+	else if(icmptype == 128)
+		v6type = "128/Echo Request";
+	else if(icmptype == 129)
+		v6type = "129/Echo Response";
+	else if(icmptype == 130)
+		v6type = "130/Listener Query";
+	else if(icmptype == 131)
+		v6type = "131/Listener Report";
+	else if(icmptype == 132)
+		v6type = "132/Listener Done";
+	else if(icmptype == 143)
+		v6type = "143/Listener Report v2";
+	else if(icmptype == 133)
+		v6type = "133/Router Solicitation";
+	else if(icmptype == 134)
+		v6type = "134/Router Advertisement";
+	else if(icmptype == 135)
+		v6type = "135/Neighbor Solicitation";
+	else if(icmptype == 136)
+		v6type = "136/Neighbor Advertisement";
+	else if(icmptype == 137)
+		v6type = "137/Redirect";
+	return v6type;
+}
 
 void zcfgFeDalShowFirewallACL(struct json_object *Jarray){
-	int i, len = 0, index = 0, SourcePort = 0, SourcePortRange = 0, DestPort = 0, DestPortRange = 0;
+	int i, len = 0, SourcePort = 0, SourcePortRange = 0, DestPort = 0, DestPortRange = 0, icmptype = 0, icmptypecode = 0;
 	int ServiceIndex = 0;
 	const char *protocol = NULL;
+	const char *icmpv6 = NULL;
 	char tmp[64] = {0}, srcport[32] = {0}, dstport[32] = {0};
 	
 	//int j = 1;
@@ -90,7 +137,6 @@
 		}
 		else{
 			if(!strcmp(protocol,"TCP/UDP") ||!strcmp(protocol,"TCP") ||!strcmp(protocol,"UDP")){
-				index = json_object_get_int(json_object_object_get(obj, "Index"));
 				SourcePort = json_object_get_int(json_object_object_get(obj, "SourcePort"));
 				SourcePortRange = json_object_get_int(json_object_object_get(obj, "SourcePortRangeMax"));
 				DestPort = json_object_get_int(json_object_object_get(obj, "DestPort"));
@@ -111,11 +157,18 @@
 				sprintf(tmp, "%s:%s-->%s",protocol,srcport,dstport);	
 				printf("%-40s ",tmp);
 			}
+			else if(!strcmp(protocol,"ICMPv6")){
+				icmptype = json_object_get_int(json_object_object_get(obj,"ICMPType"));
+				icmptypecode = json_object_get_int(json_object_object_get(obj,"ICMPTypeCode"));
+				icmpv6 = ICMPv6_type(icmptype,icmptypecode);
+				sprintf(tmp, "ICMPv6:%s", icmpv6);
+				printf("%-40s ",tmp);
+			}
 			else{
 				printf("%-40s ",json_object_get_string(json_object_object_get(obj, "Protocol")));
 			}
 		}
-		printf("%-12s\n",json_object_get_string(json_object_object_get(obj, "Action")));
+		printf("%-12s\n",json_object_get_string(json_object_object_get(obj, "Target")));
 	}
 }
 
@@ -142,54 +195,6 @@
 	}
 	return false;
 }
-
-char* ICMPv6_type( int icmptype, int icmptypecode){
-	char *v6type = "";
-	if(icmptype == 1 && icmptypecode == 0)
-		v6type = "1/No-Rute";
-	else if(icmptype == 1 && icmptypecode == 1)
-		v6type = "1/Communication-Prohibited";
-	else if(icmptype == 1 && icmptypecode == 3)
-		v6type = "1/Address-Unreachable";
-	else if(icmptype == 1 && icmptypecode == 4)
-		v6type = "1/Port-Unreachable";
-	else if(icmptype == 2 && icmptypecode == 0)
-		v6type = "2/Packet too Big";
-	else if(icmptype == 3 && icmptypecode == 0)
-		v6type = "3/Time Exceeded (ttl-zero-during-transit)";
-	else if(icmptype == 3 && icmptypecode == 1)
-		v6type = "3/Time Exceeded (ttl-zero-during-reassembly)";
-	else if(icmptype == 4 && icmptypecode == 0)
-		v6type = "4/Parameter Problem (bad-header)";
-	else if(icmptype == 4 && icmptypecode == 1)
-		v6type = "4/Parameter Problem (unknown-header-type)";
-	else if(icmptype == 4 && icmptypecode == 2)
-		v6type = "4/Parameter Problem (unknown-option)";
-	else if(icmptype == 128)
-		v6type = "128/Echo Request";
-	else if(icmptype == 129)
-		v6type = "129/Echo Response";
-	else if(icmptype == 130)
-		v6type = "130/Listener Query";
-	else if(icmptype == 131)
-		v6type = "131/Listener Report";
-	else if(icmptype == 132)
-		v6type = "132/Listener Done";
-	else if(icmptype == 143)
-		v6type = "143/Listener Report v2";
-	else if(icmptype == 133)
-		v6type = "133/Router Solicitation";
-	else if(icmptype == 134)
-		v6type = "134/Router Advertisement";
-	else if(icmptype == 135)
-		v6type = "135/Neighbor Solicitation";
-	else if(icmptype == 136)
-		v6type = "136/Neighbor Advertisement";
-	else if(icmptype == 137)
-		v6type = "137/Redirect";
-	return v6type;
-}
-
 zcfgRet_t zcfgFeDal_Firewall_ACL_Add(struct json_object *Jobj, char *replyMsg){
 	zcfgRet_t ret = ZCFG_SUCCESS;
 	struct json_object *aclObj = NULL;
@@ -594,12 +599,8 @@
 	char buf[64] = {0};
 	const char *SourceMask = 0;
 	const char *DestMask = 0;
-	int icmptype = 0;
-	int icmptypecode = 0;
 	int ServiceIndex = 0;
-	int index = 0;
-	const char *tmp = NULL;
-	const char *Name = NULL;
+	int index = 0, count = 1, len = 0;
 	objIndex_t FiremallACLIid = {0};
 	objIndex_t protocolIid = {0};
 	IID_INIT(FiremallACLIid);
@@ -614,6 +615,9 @@
 			paramJobj = json_object_new_object();
 			json_object_object_add(paramJobj, "Index", json_object_new_int(FiremallACLIid.idx[1]));
 		
+			len = json_object_array_length(FiremallACLJobj);
+			json_object_object_add(paramJobj, "Length", json_object_new_int(len));
+		
 			Protocol = json_object_get_int(json_object_object_get(FiremallACLJobj, "Protocol"));
 			switch(Protocol){
 				case -2: //TCPUDP
@@ -632,12 +636,7 @@
 					json_object_object_add(paramJobj, "Protocol", json_object_new_string("ICMP"));
 					break;
 				case 58: //ICMPv6
-					json_object_object_add(paramJobj, "Protocol", json_object_new_string("ICMPV6"));
-					icmptype = json_object_get_int(json_object_object_get(FiremallACLJobj,"X_ZYXEL_ICMPType"));
-					icmptypecode = json_object_get_int(json_object_object_get(FiremallACLJobj,"X_ZYXEL_ICMPTypeCode"));
-					tmp = ICMPv6_type(icmptype,icmptypecode);
-					sprintf(buf, "ICMPv6:%s", tmp);
-					json_object_object_add(paramJobj, "Protocol", json_object_new_string(buf));
+					json_object_object_add(paramJobj, "Protocol", json_object_new_string("ICMPv6"));
 					break;
 				default:
 					json_object_object_add(paramJobj, "Protocol", json_object_new_string(""));
@@ -654,27 +653,15 @@
 			json_object_object_add(paramJobj, "IPVersion", JSON_OBJ_COPY(json_object_object_get(FiremallACLJobj, "IPVersion")));
 			json_object_object_add(paramJobj, "X_ZYXEL_ScheduleRule", JSON_OBJ_COPY(json_object_object_get(FiremallACLJobj, "X_ZYXEL_ScheduleRule")));
 			json_object_object_add(paramJobj, "LimitRate", JSON_OBJ_COPY(json_object_object_get(FiremallACLJobj, "X_ZYXEL_LimitRate")));
+			json_object_object_add(paramJobj, "LimitRateUnit", JSON_OBJ_COPY(json_object_object_get(FiremallACLJobj, "X_ZYXEL_LimitRateUnit")));
 			json_object_object_add(paramJobj, "X_ZYXEL_TCPFlagMask", JSON_OBJ_COPY(json_object_object_get(FiremallACLJobj, "X_ZYXEL_TCPFlagMask")));
-
-			SourceIP = json_object_get_string(json_object_object_get(FiremallACLJobj, "SourceIP"));
-			DestIP = json_object_get_string(json_object_object_get(FiremallACLJobj, "DestIP"));
-			if(!strcmp(SourceIP,"")){
-				json_object_object_add(paramJobj, "SourceIP", json_object_new_string("Any"));
-			}
-			else{
-				SourceMask = json_object_get_string(json_object_object_get(FiremallACLJobj, "SourceMask"));
-				sprintf(buf, "%s/%s", SourceIP, SourceMask);
-				json_object_object_add(paramJobj, "SourceIP", json_object_new_string(buf));
-			}
-			if(!strcmp(DestIP,"")){
-				json_object_object_add(paramJobj, "DestIP", json_object_new_string("Any"));
-			}
-			else{
-				DestMask = json_object_get_string(json_object_object_get(FiremallACLJobj, "DestMask"));
-				sprintf(buf, "%s/%s", DestIP, DestMask);
-				json_object_object_add(paramJobj, "DestIP", json_object_new_string(buf));
-			}
-			json_object_object_add(paramJobj, "Action", JSON_OBJ_COPY(json_object_object_get(FiremallACLJobj, "Target")));
+			json_object_object_add(paramJobj, "ICMPType", JSON_OBJ_COPY(json_object_object_get(FiremallACLJobj, "X_ZYXEL_ICMPType")));
+			json_object_object_add(paramJobj, "ICMPTypeCode", JSON_OBJ_COPY(json_object_object_get(FiremallACLJobj, "X_ZYXEL_ICMPTypeCode")));
+			json_object_object_add(paramJobj, "SourceIP", JSON_OBJ_COPY(json_object_object_get(FiremallACLJobj, "SourceIP")));
+			json_object_object_add(paramJobj, "SourceMask", JSON_OBJ_COPY(json_object_object_get(FiremallACLJobj, "SourceMask")));
+			json_object_object_add(paramJobj, "DestIP", JSON_OBJ_COPY(json_object_object_get(FiremallACLJobj, "DestIP")));
+			json_object_object_add(paramJobj, "DestMask", JSON_OBJ_COPY(json_object_object_get(FiremallACLJobj, "DestMask")));
+			json_object_object_add(paramJobj, "Target", JSON_OBJ_COPY(json_object_object_get(FiremallACLJobj, "Target")));
 
 			ServiceIndex = json_object_get_int(json_object_object_get(FiremallACLJobj, "X_ZYXEL_ServiceIndex"));
 			json_object_object_add(paramJobj, "X_ZYXEL_ServiceIndex", json_object_new_int(ServiceIndex));
@@ -694,8 +681,10 @@
 	}
 	while(zcfgFeObjJsonGetNextWithoutUpdate(RDM_OID_FIREWALL_CHAIN_RULE, &FiremallACLIid, &FiremallACLJobj) == ZCFG_SUCCESS){
 		paramJobj = json_object_new_object();
-		json_object_object_add(paramJobj, "Index", json_object_new_int(FiremallACLIid.idx[1]));
+		json_object_object_add(paramJobj, "Index", json_object_new_int(count));
 		
+		len = json_object_array_length(FiremallACLJobj);
+		json_object_object_add(paramJobj, "Length", json_object_new_int(len));
 		Protocol = json_object_get_int(json_object_object_get(FiremallACLJobj, "Protocol"));
 		switch(Protocol){
 			case -2: //TCPUDP
@@ -714,12 +703,7 @@
 				json_object_object_add(paramJobj, "Protocol", json_object_new_string("ICMP"));
 				break;
 			case 58: //ICMPv6
-				json_object_object_add(paramJobj, "Protocol", json_object_new_string("ICMPV6"));
-				icmptype = json_object_get_int(json_object_object_get(FiremallACLJobj,"X_ZYXEL_ICMPType"));
-				icmptypecode = json_object_get_int(json_object_object_get(FiremallACLJobj,"X_ZYXEL_ICMPTypeCode"));
-				tmp = ICMPv6_type(icmptype,icmptypecode);
-				sprintf(buf, "ICMPv6:%s", tmp);
-				json_object_object_add(paramJobj, "Protocol", json_object_new_string(buf));
+				json_object_object_add(paramJobj, "Protocol", json_object_new_string("ICMPv6"));
 				break;
 			default:
 				json_object_object_add(paramJobj, "Protocol", json_object_new_string(""));
@@ -753,7 +737,9 @@
 			json_object_object_add(paramJobj, "DestIP", json_object_new_string(buf));
 		}
 
-		json_object_object_add(paramJobj, "Action", JSON_OBJ_COPY(json_object_object_get(FiremallACLJobj, "Target")));
+		json_object_object_add(paramJobj, "ICMPType", JSON_OBJ_COPY(json_object_object_get(FiremallACLJobj, "X_ZYXEL_ICMPType")));
+		json_object_object_add(paramJobj, "ICMPTypeCode", JSON_OBJ_COPY(json_object_object_get(FiremallACLJobj, "X_ZYXEL_ICMPTypeCode")));
+		json_object_object_add(paramJobj, "Target", JSON_OBJ_COPY(json_object_object_get(FiremallACLJobj, "Target")));
 
 		ServiceIndex = json_object_get_int(json_object_object_get(FiremallACLJobj, "X_ZYXEL_ServiceIndex"));
 		json_object_object_add(paramJobj, "X_ZYXEL_ServiceIndex", json_object_new_int(ServiceIndex));
@@ -767,6 +753,7 @@
 		}
 		
 		json_object_array_add(Jarray, paramJobj);
+		count++;
 
 		zcfgFeJsonObjFree(FiremallACLJobj);
 		
