Index: libzcfg_fe_dal-1.0/maintenance/mgmt/zcfg_fe_dal_sp_trust_domain.c
===================================================================
--- libzcfg_fe_dal-1.0.orig/maintenance/mgmt/zcfg_fe_dal_sp_trust_domain.c	2017-07-10 16:47:29.142563257 +0800
+++ libzcfg_fe_dal-1.0/maintenance/mgmt/zcfg_fe_dal_sp_trust_domain.c	2017-07-10 16:47:29.354563256 +0800
@@ -12,32 +12,103 @@
 
 dal_param_t SP_TRUST_DOMAIN_param[] =
 {
-	{"Enable", 		dalType_boolean, 	0, 	0, 	NULL},
-	{"IPAddress", 	dalType_string, 	0, 	0, 	NULL},
-	{"SubnetMask", 	dalType_string, 	0, 	0, 	NULL},
-	{"WebDomainName", dalType_string, 	0, 	0, 	NULL},
-	{NULL, 			0, 					0, 	0, 	NULL}
+	{"Enable", 		dalType_boolean, 	0, 	0, 	NULL,	NULL,	dalcmd_Forbid},
+	{"IPAddress", 	dalType_string, 	0, 	0, 	NULL,	NULL,	dalcmd_Forbid},
+	{"SubnetMask", 	dalType_string, 	0, 	0, 	NULL,	NULL,	dalcmd_Forbid},
+	{"Index", 	 	dalType_int, 	    0, 	0, 	NULL,	NULL,	dal_Delete},
+	{"WebDomainName", 		dalType_string, 	0, 	0, 	NULL,	NULL,	dalcmd_Forbid},
+	{"IPAddressPrefix", 	dalType_IPPrefix,   0, 	0, 	NULL,	"DomainName|AnyIP", dal_Add},
+	{NULL, 					0, 				0, 	0, 	NULL}
 };
 
+void zcfgFeDalShowSpTrustDomain(struct json_object *Jarray){
+	int i, len = 0;
+	struct json_object *obj;
+	if(json_object_get_type(Jarray) != json_type_array){
+		printf("wrong Jobj format!\n");
+		return;
+	}
+
+	printf("%-10s %-45s \n",
+		     "Index", "IP Address");		
+	len = json_object_array_length(Jarray);
+	for(i=0;i<len;i++){
+		obj = json_object_array_get_idx(Jarray, i);
+		printf("%-10s %-45s \n",
+				json_object_get_string(json_object_object_get(obj, "Index")),
+				json_object_get_string(json_object_object_get(obj, "IPAddressPrefix")));
+	}
+}
+zcfgRet_t zcfgFeDal_SP_TrustDomain_Get(struct json_object *Jobj, struct json_object *Jarray, char *replyMsg){
+	zcfgRet_t ret = ZCFG_SUCCESS;
+	objIndex_t iid;
+	struct json_object *obj = NULL;
+	struct json_object *paramJobj = NULL;
+	int Index = 0;
+	const char *IPAddress = 0;
+	const char *SubnetMask = 0;
+	char buf[64] = {0};
+	
+	IID_INIT(iid);
+	while(zcfgFeObjJsonGetNextWithoutUpdate(RDM_OID_SP_TRUST_DOMAIN, &iid, &obj) == ZCFG_SUCCESS) {
+		Index++;
+		paramJobj = json_object_new_object();
+		json_object_object_add(paramJobj, "Index", json_object_new_int(Index));
+		IPAddress = json_object_get_string(json_object_object_get(obj, "IPAddress"));
+		SubnetMask = json_object_get_string(json_object_object_get(obj, "SubnetMask"));
+		if(!strcmp(json_object_get_string(json_object_object_get(obj, "IPAddress")), "AnyIP") 
+			|| !strcmp(json_object_get_string(json_object_object_get(obj, "IPAddress")), "DomainName")
+			|| (json_object_object_get(obj, "SubnetMask") == NULL) 
+			||  !strcmp(json_object_get_string(json_object_object_get(obj, "SubnetMask")), "") )
+			sprintf(buf, "%s", IPAddress);
+		else
+			sprintf(buf, "%s/%s", IPAddress, SubnetMask);
+		json_object_object_add(paramJobj, "IPAddressPrefix", json_object_new_string(buf));
+		json_object_array_add(Jarray, paramJobj);
+		zcfgFeJsonObjFree(obj);
+	}
+	
+	return ret;
+}
 zcfgRet_t zcfgFeDal_SP_TrustDomain_Add(struct json_object *Jobj, char *replyMsg){
 	zcfgRet_t ret = ZCFG_SUCCESS;
 	struct json_object *trustDomainObj = NULL;
 	objIndex_t trustDomainIid = {0};
-
+	struct json_object *paramObj = NULL;
+	const char *charVal = NULL;
+	char ip[64] = {0};
+	char mask[8] = {0};
+	bool enable = true;
+	const char *IPAddress = NULL;
+	const char *SubnetMask = NULL;
+	
 	IID_INIT(trustDomainIid);
 	ret = zcfgFeObjJsonAdd(RDM_OID_SP_TRUST_DOMAIN, &trustDomainIid, NULL);
 	if(ret == ZCFG_SUCCESS){
 		ret = zcfgFeObjJsonGet(RDM_OID_SP_TRUST_DOMAIN, &trustDomainIid, &trustDomainObj);
 	}
-
-	if(ret == ZCFG_SUCCESS){
-		json_object_object_foreach(Jobj, key, val){
-			json_object_object_add(trustDomainObj, key, val);
+	if(ret == ZCFG_SUCCESS){	
+		if((paramObj = json_object_object_get(Jobj, "IPAddressPrefix")) != NULL){
+			charVal = json_object_get_string(paramObj);
+			sscanf(charVal, "%[^/]/%s", ip, mask);
+			//printf("SourceIPPrefix ip=%s mask=%s\n", ip, mask);
+			json_object_object_add(trustDomainObj, "IPAddress", json_object_new_string(ip));
+			json_object_object_add(trustDomainObj, "SubnetMask", json_object_new_string(mask));
+			json_object_object_add(trustDomainObj, "Enable", json_object_new_boolean(enable));
+		}else
+		{
+			IPAddress = json_object_get_string(json_object_object_get(Jobj, "IPAddress"));
+			SubnetMask = json_object_get_string(json_object_object_get(Jobj, "SubnetMask"));
+			//printf("SourceIPPrefix ip=%s mask=%s\n", IPAddress, SubnetMask);
+			json_object_object_add(trustDomainObj, "IPAddress", json_object_new_string(IPAddress));
+			json_object_object_add(trustDomainObj, "SubnetMask", json_object_new_string(SubnetMask));
+			enable = json_object_get_boolean(json_object_object_get(Jobj, "Enable"));
+			json_object_object_add(trustDomainObj, "Enable", json_object_new_boolean(enable));
 		}
 		ret = zcfgFeObjJsonBlockedSet(RDM_OID_SP_TRUST_DOMAIN, &trustDomainIid, trustDomainObj, NULL);
+		zcfgFeJsonObjFree(trustDomainObj);
 	}
 
-	zcfgFeJsonObjFree(trustDomainObj);
 	return ret;
 }
 
@@ -45,13 +116,14 @@
 	zcfgRet_t ret = ZCFG_SUCCESS;
 	objIndex_t trustDomainIid = {0};
 	int index = 0;
+	zcfg_offset_t oid;
+	oid = RDM_OID_SP_TRUST_DOMAIN;
 
-	index = json_object_get_int(json_object_object_get(Jobj, "Index"));
+	index = json_object_get_int(json_object_object_get(Jobj, "Index"));	
+	ret = convertIndextoIid(index, &trustDomainIid, oid, NULL, NULL, replyMsg);
+	if(ret != ZCFG_SUCCESS)
+		return ret;
 
-	IID_INIT(trustDomainIid);
-	trustDomainIid.idx[0] = index;
-	trustDomainIid.level = 1;
-	
 	ret = zcfgFeObjJsonDel(RDM_OID_SP_TRUST_DOMAIN, &trustDomainIid, NULL);
 	return ret;
 }
@@ -66,7 +138,9 @@
 		ret = zcfgFeDal_SP_TrustDomain_Add(Jobj, NULL);
 	}else if(!strcmp(method, "DELETE")) {
 		ret = zcfgFeDal_SP_TrustDomain_Delete(Jobj, NULL);
-	}else
+	}else if(!strcmp(method, "GET"))
+		ret = zcfgFeDal_SP_TrustDomain_Get(Jobj, Jarray, NULL);
+	else
 		printf("Unknown method:%s\n", method);
 
 	return ret;
Index: libzcfg_fe_dal-1.0/zcfg_fe_dal.c
===================================================================
--- libzcfg_fe_dal-1.0.orig/zcfg_fe_dal.c	2017-07-10 16:47:29.330563256 +0800
+++ libzcfg_fe_dal-1.0/zcfg_fe_dal.c	2017-07-10 16:47:29.358563256 +0800
@@ -207,6 +207,7 @@
 extern void zcfgFeDalShowWifiWps(struct json_object *Jarray);
 extern void zcfgFeDalShowUserAccount(struct json_object *Jarray);
 extern void zcfgFeDalShowTrustDomain(struct json_object *Jarray);
+extern void zcfgFeDalShowSpTrustDomain(struct json_object *Jarray);
 
 dal_handler_t dalHandler[] = {
 {"wan",				WAN_param,			zcfgFeDalWan,			zcfgFeDalShowWan,			"get|add|edit|delete",	"Broadband"},
@@ -254,7 +255,7 @@
 {"snmp",			SNMP_param, 		zcfgFeDalSNMP,			zcfgFeDalShowSNMP,			"edit|get",				"SNMP"},
 {"TIME",			TIME_param, 		zcfgFeDalTime,			NULL,						"edit",				""},//Time
 {"trust_domain",	TRUST_DOMAIN_param, zcfgFeDalTrustDomain,	zcfgFeDalShowTrustDomain,	"get|add|delete",		"Remote_MGMT"},//Remote_MGMT
-{"SP_TRUST_DOMAIN",	SP_TRUST_DOMAIN_param, zcfgFeDalSpTrustDomain,NULL,						"add|delete",		""},//SP_Domain
+{"sp_trust_domain",	SP_TRUST_DOMAIN_param, zcfgFeDalSpTrustDomain, zcfgFeDalShowSpTrustDomain,	"get|add|delete",		"SP_Domain"},//SP_Domain
 #if BUILD_PACKAGE_ZyIMS
 {"sip_account",		VOIP_LINE_param,	zcfgFeDalVoipLine,		zcfgFeDalShowVoipLine,		"get|add|edit|delete", "SIP"},//SIP
 {"sip_sp",			VOIP_PROFILE_param,	zcfgFeDalVoipProfile,	zcfgFeDalShowVoipProfile,	"get|add|edit|delete", "SIP"},//SIP
