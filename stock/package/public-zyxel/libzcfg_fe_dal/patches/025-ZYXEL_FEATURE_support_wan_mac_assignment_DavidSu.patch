Index: libzcfg_fe_dal-1.0/Makefile
===================================================================
--- libzcfg_fe_dal-1.0.orig/Makefile
+++ libzcfg_fe_dal-1.0/Makefile
@@ -9,6 +9,10 @@ ifeq ($(strip $(SUPPORT_DSL_BONDING)),y)
 CFLAGS += -DSUPPORT_DSL_BONDING
 endif
 
+ifeq ($(CONFIG_ZYXEL_WAN_MAC),y)
+CFLAGS += -DZYXEL_WAN_MAC
+endif
+
 LDFLAGS += $(LIB_PATH) $(LINK_LIB)
 CFLAGS += $(INC_PATH) -std=gnu99
 
Index: libzcfg_fe_dal-1.0/zcfg_fe_dal_broadband.c
===================================================================
--- libzcfg_fe_dal-1.0.orig/zcfg_fe_dal_broadband.c
+++ libzcfg_fe_dal-1.0/zcfg_fe_dal_broadband.c
@@ -13,6 +13,7 @@
 //#include "zcfg_eid.h"
 #include "zcfg_msg.h"
 #include "zcfg_fe_dal_common.h"
+#include "zcfg_net.h"
 
 //#define JSON_OBJ_COPY(json_object) json_tokener_parse(json_object_to_json_string(json_object))
 
@@ -89,6 +90,11 @@ dal_param_t WAN_param[]={
 	{"option125Value",		dalType_string,	0,	0,	NULL},
 	//ConcurrentWan
 	{"ConcurrentWan",		dalType_int,	0,	0,	NULL},
+#ifdef ZYXEL_WAN_MAC
+	{"WanMacType",		    dalType_string,	0,	0,	NULL},
+	{"WanMacIP",		    dalType_v4Addr,	0,	0,	NULL},
+	{"WanMacAddr",		    dalType_string,	0,	0,	NULL},
+#endif
 	{NULL,					0,	0,	0,	NULL},
 };
 
@@ -100,6 +106,9 @@ bool isAdd = false;
 bool isDelete = false;
 
 const char *Name, *Type, *Mode, *Encapsulation, *ipMode, *v6RD_Type, *deleteipIfacePath;
+#ifdef ZYXEL_WAN_MAC
+const char *WanMacType, *WanMacAddr, *WanMacIP;
+#endif
 bool ipStatic, ip6Static, Enable_6RD;
 
 char CurrType[16] = {0};
@@ -635,8 +644,21 @@ zcfgRet_t editEthLinkObject(struct json_
 
 	json_object_object_add(ethLinkObj, "Enable", json_object_new_boolean(true));
 	json_object_object_add(ethLinkObj, "LowerLayers", json_object_new_string(currLowerLayers));
-	if(Type && !strcmp(Type, "ETH"))
+	if(Type && !strcmp(Type, "ETH")) {
 		json_object_object_add(ethLinkObj, "X_ZYXEL_OrigEthWAN", json_object_new_boolean(true));
+#ifdef ZYXEL_WAN_MAC
+		json_object_object_add(ethLinkObj, "X_ZYXEL_WanMacType", json_object_new_string(WanMacType));
+		if (!strcmp(WanMacType, WAN_MAC_CLIENTIP)) {
+			printf("%s, set WanMacIP\n", __FUNCTION__);
+			if (WanMacIP != NULL)
+				json_object_object_add(ethLinkObj, "X_ZYXEL_WanMacClientIP", json_object_new_string(WanMacIP));
+		} else if (!strcmp(WanMacType, WAN_MAC_USER)) {
+			printf("%s, set WanMacAddr\n", __FUNCTION__);
+			if (WanMacAddr != NULL)
+				json_object_object_add(ethLinkObj, "X_ZYXEL_WanMacAddr", json_object_new_string(WanMacAddr));
+		}
+#endif
+	}
 	
 	sprintf(currLowerLayers, "Ethernet.Link.%u", ethLinkIid.idx[0]);
 	
@@ -2143,6 +2165,11 @@ void getBasicInfo(struct json_object *Jo
 	ip6Static = json_object_get_boolean(json_object_object_get(Jobj, "ip6Static"));
 	Enable_6RD = json_object_get_boolean(json_object_object_get(Jobj, "Enable_6RD"));
 	v6RD_Type = json_object_get_string(json_object_object_get(Jobj, "v6RD_Type"));
+#ifdef ZYXEL_WAN_MAC
+	WanMacType = json_object_get_string(json_object_object_get(Jobj, "WanMacType"));
+	WanMacAddr = json_object_get_string(json_object_object_get(Jobj, "WanMacAddr"));
+	WanMacIP = json_object_get_string(json_object_object_get(Jobj, "WanMacIP"));
+#endif
 
 	if(isDelete)
 	{	deleteipIfacePath = json_object_get_string(json_object_object_get(Jobj, "Del_ipIfacePath"));	}
