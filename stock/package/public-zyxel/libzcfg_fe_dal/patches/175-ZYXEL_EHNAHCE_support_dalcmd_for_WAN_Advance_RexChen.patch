Index: libzcfg_fe_dal-1.0/Makefile
===================================================================
--- libzcfg_fe_dal-1.0.orig/Makefile	2017-05-10 19:30:26.192711528 +0800
+++ libzcfg_fe_dal-1.0/Makefile	2017-05-10 19:31:37.684869700 +0800
@@ -121,6 +121,14 @@
 CFLAGS += -DHAWAIIAN_TELCOM
 endif
 
+ifeq ($(CONFIG_ZYXEL_DSL_SUPPORT_ANNEX_B),y)	
+CFLAGS += -DCONFIG_ZYXEL_DSL_SUPPORT_ANNEX_B
+endif 
+
+ifeq ($(CONFIG_TARGET_en75xx),y)	
+CFLAGS += -DCONFIG_TARGET_en75xx
+endif 
+
 LDFLAGS += $(LIB_PATH) $(LINK_LIB)
 CFLAGS += $(INC_PATH) -std=gnu99
 
Index: libzcfg_fe_dal-1.0/network/broadband/zcfg_fe_dal_advance.c
===================================================================
--- libzcfg_fe_dal-1.0.orig/network/broadband/zcfg_fe_dal_advance.c	2017-05-10 19:30:25.972711527 +0800
+++ libzcfg_fe_dal-1.0/network/broadband/zcfg_fe_dal_advance.c	2017-05-10 19:32:33.152869700 +0800
@@ -14,46 +14,148 @@
 #include "zcfg_fe_dal_common.h"
 
 dal_param_t ADVANCE_param[]={
-	{"X_ZYXEL_EnableADSLPtm", dalType_boolean,	0,	0,	NULL},
-	{"X_ZYXEL_DslPhyCfg2Mask", dalType_int,	0,	0,	NULL},
-	{"X_ZYXEL_DslPhyCfg2Value", dalType_int,	0,	0,	NULL},
-	{"X_ZYXEL_Bitswap", 	 dalType_string,	0,	0,	NULL},
-	{"X_ZYXEL_SRA", 		 dalType_string,	0,	0,	NULL},
+#ifdef CONFIG_TARGET_en75xx
+	{"PhyRUSDS",		dalType_boolean,	0,	0,	NULL},
+#else if
+	{"PhyRUS",			dalType_boolean,	0,	0,	NULL},
+	{"PhyRDS", 			dalType_boolean,	0,	0,	NULL},
+#endif
+	{"Bitswap", 		dalType_boolean,	0,	0,	NULL},
+	{"SRA", 			dalType_boolean,	0,	0,	NULL},
 #ifdef  SUPPORT_DSL_BONDING
-	{"X_ZYXEL_DSLType", 		 dalType_string,	0,	0,	NULL},
+	{"DSLType", dalType_string,		0,	0,	NULL,	"auto|single|bondings",		NULL},
+#endif
+	{"EnableADSLPtm", 	dalType_boolean,	0,	0,	NULL},
+	{"Gdmt", 	 		dalType_boolean,	0,	0,	NULL},
+	{"Glite", 	 		dalType_boolean,	0,	0,	NULL},
+	{"T1413", 	 		dalType_boolean,	0,	0,	NULL},
+	{"ADSL2", 	 		dalType_boolean,	0,	0,	NULL},
+	{"AnnexL", 	 		dalType_boolean,	0,	0,	NULL},
+	{"ADSL2plus", 	 	dalType_boolean,	0,	0,	NULL},
+	{"AnnexM", 	 		dalType_boolean,	0,	0,	NULL},
+	{"VDSL2", 	 		dalType_boolean,	0,	0,	NULL},
+	{"VDSL_8a", 	 	dalType_boolean,	0,	0,	NULL},
+	{"VDSL_8b", 	 	dalType_boolean,	0,	0,	NULL},
+	{"VDSL_8c", 	 	dalType_boolean,	0,	0,	NULL},
+	{"VDSL_8d", 	 	dalType_boolean,	0,	0,	NULL},
+	{"VDSL_12a", 	 	dalType_boolean,	0,	0,	NULL},
+	{"VDSL_12b", 	 	dalType_boolean,	0,	0,	NULL},
+	{"VDSL_17a", 	 	dalType_boolean,	0,	0,	NULL},
+#ifdef ZYXEL_VDSL_Support_30A
+	{"VDSL_30a", 	 	dalType_boolean,	0,	0,	NULL},
 #endif
-	{"X_ZYXEL_AdslModulationCfg", 	 dalType_string,	0,	0,	NULL},
-	{"X_ZYXEL_ADSL2_AnnexM", dalType_boolean,	0,	0,	NULL},
-	{"X_ZYXEL_VDSL_8a", 	 dalType_boolean,	0,	0,	NULL},
-	{"X_ZYXEL_VDSL_8b", 	 dalType_boolean,	0,	0,	NULL},
-	{"X_ZYXEL_VDSL_8c", 	 dalType_boolean,	0,	0,	NULL},
-	{"X_ZYXEL_VDSL_8d", 	 dalType_boolean,	0,	0,	NULL},
-	{"X_ZYXEL_VDSL_12a", 	 dalType_boolean,	0,	0,	NULL},
-	{"X_ZYXEL_VDSL_12b", 	 dalType_boolean,	0,	0,	NULL},
-	{"X_ZYXEL_VDSL_17a", 	 dalType_boolean,	0,	0,	NULL},
-	{"X_ZYXEL_VDSL_30a", 	 dalType_boolean,	0,	0,	NULL},//ifdef supportVDSL_30a
-	{"X_ZYXEL_VDSL_35b", 	 dalType_boolean,	0,	0,	NULL},//ifdef supportVDSL_35b
-	{"X_ZYXEL_VDSL_US0_8a", 	 dalType_boolean,	0,	0,	NULL},
+#ifdef ZYXEL_VDSL_Support_35B
+	{"VDSL_35b", 	 	dalType_boolean,	0,	0,	NULL},
+#endif
+	{"VDSL_US0", 	 	dalType_boolean,	0,	0,	NULL},
 	{NULL,					0,	0,	0,	NULL},
-
 };
 
+int kXdslFireDsSupported = 4194304; 			//10000000000000000000000
+int kXdslFireUsSupported = 8388608; 			//100000000000000000000000
+int kXdsl24kbyteInterleavingEnabled = 1048576;	//100000000000000000000
+
+zcfgRet_t praseAdslModulationCfg(char *key1, char *key2, char *key3, struct json_object *JsonCfg){
+	if(strstr(key1, key3) != NULL)
+		json_object_object_add(JsonCfg, key2, json_object_new_boolean(true));
+	else
+		json_object_object_add(JsonCfg, key2, json_object_new_boolean(false));
+}
+
+zcfgRet_t dalcmdpraseAdslModCfg(char *key1, char *key2, char *key3, struct json_object *Jobj, struct json_object *JsonCfg){
+	bool tmp = false;
+	if(json_object_object_get(Jobj, key1))
+		tmp = json_object_get_boolean(json_object_object_get(Jobj, key1));
+	else
+		tmp = json_object_get_boolean(json_object_object_get(JsonCfg, key1));
+	if(tmp)
+			strcat(key3, key2);
+}		
+
+void zcfgFeDalShowWanAdvance(struct json_object *Jarray){
+	struct json_object *obj = NULL;
+	if(json_object_get_type(Jarray) != json_type_array){
+		printf("wrong Jobj format!\n");
+		return;
+	}
+	printf("Jarray = %s \n",json_object_to_json_string(Jarray));
+	obj = json_object_array_get_idx(Jarray, 0);
+	printf("DSL Capacities: \n");
+#ifdef CONFIG_TARGET_en75xx
+	printf("%-20s %s \n","PhyR US/DS :", json_object_get_string(json_object_object_get(obj, "PhyrUSDS")));
+#else if
+	printf("%-20s %s \n","PhyR US :", json_object_get_string(json_object_object_get(obj, "PhyrUS")));
+	printf("%-20s %s \n","PhyR DS :", json_object_get_string(json_object_object_get(obj, "PhyrDS")));
+#endif
+	printf("%-20s %s \n","Bitswap :", json_object_get_string(json_object_object_get(obj, "Bitswap")));
+	printf("%-20s %s \n","SRA :", json_object_get_string(json_object_object_get(obj, "SRA")));
+#ifdef  SUPPORT_DSL_BONDING
+	printf("DSL Line Mode: \n");
+	printf("\nState (System will reboot once the config is changed!):	%s\n",json_object_get_string(json_object_object_get(obj, "DSLType")));
+#endif
+	printf("\nDSL Modulation:\n");
+	printf("%-20s %s \n","PTM over ADSL :", json_object_get_string(json_object_object_get(obj, "X_ZYXEL_EnableADSLPtm")));
+	printf("%-20s %s \n","G.dmt :", json_object_get_string(json_object_object_get(obj, "Gdmt")));
+	printf("%-20s %s \n","G.lite :", json_object_get_string(json_object_object_get(obj, "Glite")));
+	printf("%-20s %s \n","T1.413 :", json_object_get_string(json_object_object_get(obj, "T1413")));
+	printf("%-20s %s \n","ADSL2 :", json_object_get_string(json_object_object_get(obj, "ADSL2")));
+#ifdef CONFIG_ZYXEL_DSL_SUPPORT_ANNEX_B
+	printf("%-20s %s \n","AnnexB :", json_object_get_string(json_object_object_get(obj, "AnnexB")));	//EN75XX_DSL_AnnexB
+#endif
+	printf("%-20s %s \n","Annex L :", json_object_get_string(json_object_object_get(obj, "AnnexL")));
+	printf("%-20s %s \n","ADSL2+ :", json_object_get_string(json_object_object_get(obj, "ADSL2plus")));
+	printf("%-20s %s \n","Annex M :", json_object_get_string(json_object_object_get(obj, "AnnexM")));
+	printf("%-20s %s \n","VDSL2 :", json_object_get_string(json_object_object_get(obj, "VDSL2")));
+	printf("\nVDSL Profile:\n");
+	printf("%-20s %s \n","8a Enable :", json_object_get_string(json_object_object_get(obj, "X_ZYXEL_VDSL_8a")));
+	printf("%-20s %s \n","8b Enable :", json_object_get_string(json_object_object_get(obj, "X_ZYXEL_VDSL_8b")));
+	printf("%-20s %s \n","8c Enable :", json_object_get_string(json_object_object_get(obj, "X_ZYXEL_VDSL_8c")));
+	printf("%-20s %s \n","8d Enable :", json_object_get_string(json_object_object_get(obj, "X_ZYXEL_VDSL_8d")));
+	printf("%-20s %s \n","12a Enable :", json_object_get_string(json_object_object_get(obj, "X_ZYXEL_VDSL_12a")));
+	printf("%-20s %s \n","12b Enable :", json_object_get_string(json_object_object_get(obj, "X_ZYXEL_VDSL_12b")));
+	printf("%-20s %s \n","17a Enable :", json_object_get_string(json_object_object_get(obj, "X_ZYXEL_VDSL_17a")));
+#ifdef ZYXEL_VDSL_Support_30A
+	printf("%-20s %s \n","30a Enable :", json_object_get_string(json_object_object_get(obj, "X_ZYXEL_VDSL_30a")));
+#endif
+#ifdef ZYXEL_VDSL_Support_35B
+	printf("%-20s %s \n","35b Enable :", json_object_get_string(json_object_object_get(obj, "X_ZYXEL_VDSL_35b")));
+#endif
+	printf("%-20s %s \n","US0 :", json_object_get_string(json_object_object_get(obj, "X_ZYXEL_VDSL_US0_8a")));
+	
+}
+
+
 zcfgRet_t zcfgFeDal_Advance_Edit(struct json_object *Jobj, char *replyMsg){
 	zcfgRet_t ret = ZCFG_SUCCESS;
 	struct json_object *advPtmLinkObj = NULL;
 	struct json_object *advDSLLineObj = NULL;
+	struct json_object *jsonadslmodcfg = NULL;
 	objIndex_t advPtmLinkIid = {0};
 	objIndex_t advDSLLineIid = {0};
 	bool enableADSLPtm = false;
 	int dslPhyCfg2Mask = 0;
 	int dslPhyCfg2Value = 0;
-	const char *bitswap = NULL;
-	const char *SRA = NULL;
+	char *adslmdocfg = NULL;
+	bool phyrUS = false;
+	bool phyrDS = false;
+	bool phyrUSDS = false;
+	bool enblPhyrUS = false;
+	bool enblPhyrDS = false;
+	bool bitswap = false;
+	bool SRA = false;
 #ifdef  SUPPORT_DSL_BONDING
 	const char *DSLType = NULL;
 #endif
-	const char *adslModulationCfg = NULL;
-	bool ADSL2_AnnexM = false;
+	char adslModulationCfg[512] = {0};
+	bool Gdmt = false;
+	bool Glite = false;
+	bool T1413 = false;
+	bool AnnexL = false;
+	bool ADSL2 = false;
+	bool AnnexB = false;
+	bool ADSL2plus = false;
+	bool AnnexM = false;
+	bool VDSL2 = false;
 	bool VDSL_8a = false;
 	bool VDSL_8b = false;
 	bool VDSL_8c = false;
@@ -64,15 +166,16 @@
 	bool VDSL_30a = false;
 	bool VDSL_35b = false;
 	bool VDSL_US0_8a = false;
+	int len = 0;
 
 	IID_INIT(advPtmLinkIid);
 	IID_INIT(advDSLLineIid);
 
 
 	//PTM Link
-	enableADSLPtm = json_object_get_boolean(json_object_object_get(Jobj, "X_ZYXEL_EnableADSLPtm"));
-
 	while(zcfgFeObjJsonGetNext(RDM_OID_PTM_LINK, &advPtmLinkIid, &advPtmLinkObj)== ZCFG_SUCCESS){
+		enableADSLPtm = json_object_get_boolean(json_object_object_get(Jobj, "EnableADSLPtm"));
+		if(json_object_new_boolean(enableADSLPtm))
 		json_object_object_add(advPtmLinkObj, "X_ZYXEL_EnableADSLPtm", json_object_new_boolean(enableADSLPtm));
 		zcfgFeObjJsonBlockedSet(RDM_OID_PTM_LINK, &advPtmLinkIid, advPtmLinkObj, NULL);
 		zcfgFeJsonObjFree(advPtmLinkObj);
@@ -83,56 +186,128 @@
 	//DSL Line
 	while(zcfgFeObjJsonGetNext(RDM_OID_DSL_LINE, &advDSLLineIid, &advDSLLineObj) == ZCFG_SUCCESS){
 		if(advDSLLineObj){
-			dslPhyCfg2Mask = json_object_get_int(json_object_object_get(Jobj, "X_ZYXEL_DslPhyCfg2Mask"));
+#ifdef CONFIG_TARGET_en75xx
+			phyrUSDS = json_object_get_int(json_object_object_get(Jobj, "PhyRUSDS"));
+			json_object_object_add(advDSLLineObj, "X_ZYXEL_DslPhyCfg2Value", json_object_new_int(phyrUSDS));
+#else if
+			dslPhyCfg2Mask = json_object_get_int(json_object_object_get(advDSLLineObj, "X_ZYXEL_DslPhyCfg2Mask"));
+			dslPhyCfg2Value = json_object_get_int(json_object_object_get(advDSLLineObj, "X_ZYXEL_DslPhyCfg2Value"));
+			phyrUS = json_object_get_boolean(json_object_object_get(Jobj, "PhyRUS"));
+			phyrDS = json_object_get_boolean(json_object_object_get(Jobj, "PhyRDS"));
+			if((dslPhyCfg2Mask & kXdslFireUsSupported) && (dslPhyCfg2Value & kXdslFireUsSupported))
+				enblPhyrUS = true;
+			if((dslPhyCfg2Mask & kXdslFireDsSupported) && (dslPhyCfg2Value & kXdslFireDsSupported))
+				enblPhyrDS = true;
+			if(enblPhyrUS != phyrUS){
+				dslPhyCfg2Mask |= kXdslFireUsSupported;
+				if(phyrUS)
+					dslPhyCfg2Value |= kXdslFireUsSupported;
+				else
+					dslPhyCfg2Value &= ~kXdslFireUsSupported;
+			}
+			if(enblPhyrDS != phyrDS){
+				dslPhyCfg2Mask |= kXdslFireDsSupported;
+				if(phyrDS)
+					dslPhyCfg2Value |= kXdslFireDsSupported;
+				else
+					dslPhyCfg2Value &= ~kXdslFireDsSupported;
+			}
 			json_object_object_add(advDSLLineObj, "X_ZYXEL_DslPhyCfg2Mask", json_object_new_int(dslPhyCfg2Mask));
-			
-			dslPhyCfg2Value = json_object_get_int(json_object_object_get(Jobj, "X_ZYXEL_DslPhyCfg2Value"));
 			json_object_object_add(advDSLLineObj, "X_ZYXEL_DslPhyCfg2Value", json_object_new_int(dslPhyCfg2Value));
-
-			bitswap = json_object_get_string(json_object_object_get(Jobj, "X_ZYXEL_Bitswap"));
-			json_object_object_add(advDSLLineObj, "X_ZYXEL_Bitswap", json_object_new_string(bitswap));
-
-			SRA = json_object_get_string(json_object_object_get(Jobj, "X_ZYXEL_SRA"));
-			json_object_object_add(advDSLLineObj, "X_ZYXEL_SRA", json_object_new_string(SRA));
+#endif
+			bitswap = json_object_get_boolean(json_object_object_get(Jobj, "Bitswap"));
+			if(bitswap && json_object_object_get(Jobj, "Bitswap"))
+				json_object_object_add(advDSLLineObj, "X_ZYXEL_Bitswap", json_object_new_string("On"));
+			else if(!bitswap && json_object_object_get(Jobj, "Bitswap"))
+				json_object_object_add(advDSLLineObj, "X_ZYXEL_Bitswap", json_object_new_string("Off"));
+			SRA = json_object_get_boolean(json_object_object_get(Jobj, "SRA"));
+			if(SRA && json_object_object_get(Jobj, "SRA"))
+				json_object_object_add(advDSLLineObj, "X_ZYXEL_SRA", json_object_new_string("On"));
+			else if(!SRA && json_object_object_get(Jobj, "SRA"))
+				json_object_object_add(advDSLLineObj, "X_ZYXEL_SRA", json_object_new_string("Off"));
 #ifdef  SUPPORT_DSL_BONDING
-			DSLType = json_object_get_string(json_object_object_get(Jobj, "X_ZYXEL_DSLType"));
+			DSLType = json_object_get_string(json_object_object_get(Jobj, "DSLType"));
 			json_object_object_add(advDSLLineObj, "X_ZYXEL_DSLType", json_object_new_string(DSLType));
 #endif
-			adslModulationCfg = json_object_get_string(json_object_object_get(Jobj, "X_ZYXEL_AdslModulationCfg"));
+			jsonadslmodcfg = json_object_new_object();
+			adslmdocfg = json_object_get_string(json_object_object_get(advDSLLineObj, "X_ZYXEL_AdslModulationCfg"));
+			len = strlen(adslmdocfg);
+			if(adslmdocfg[len] != ',')
+				adslmdocfg[len] = ',';
+			praseAdslModulationCfg(adslmdocfg, "Gdmt", "ADSL_G.dmt,", jsonadslmodcfg);
+			praseAdslModulationCfg(adslmdocfg, "Glite", "ADSL_G.lite,", jsonadslmodcfg);
+			praseAdslModulationCfg(adslmdocfg, "T1413", "ADSL_ANSI_T1.413,", jsonadslmodcfg);
+			praseAdslModulationCfg(adslmdocfg, "AnnexL", "ADSL_re-adsl,", jsonadslmodcfg);
+			praseAdslModulationCfg(adslmdocfg, "ADSL2", "ADSL_G.dmt.bis,", jsonadslmodcfg);
+#ifdef CONFIG_ZYXEL_DSL_SUPPORT_ANNEX_B
+			praseAdslModulationCfg(adslmdocfg, "AnnexB", "ADSL_over_ISDN,", jsonadslmodcfg);	//EN75XX_DSL_AnnexB
+#endif
+			praseAdslModulationCfg(adslmdocfg, "ADSL2plus", "ADSL_2plus,", jsonadslmodcfg);
+			praseAdslModulationCfg(adslmdocfg, "AnnexM", "AnnexM,", jsonadslmodcfg);
+			praseAdslModulationCfg(adslmdocfg, "VDSL2", "VDSL2,", jsonadslmodcfg);
+			dalcmdpraseAdslModCfg("Gdmt", "ADSL_G.dmt,", adslModulationCfg, Jobj, jsonadslmodcfg);
+			dalcmdpraseAdslModCfg("Glite", "ADSL_G.lite,", adslModulationCfg, Jobj, jsonadslmodcfg);
+			dalcmdpraseAdslModCfg("T1413", "ADSL_ANSI_T1.413,", adslModulationCfg, Jobj, jsonadslmodcfg);
+			dalcmdpraseAdslModCfg("AnnexL", "ADSL_re-adsl,", adslModulationCfg, Jobj, jsonadslmodcfg);
+			dalcmdpraseAdslModCfg("ADSL2", "ADSL_G.dmt.bis,", adslModulationCfg, Jobj, jsonadslmodcfg);
+#ifdef CONFIG_ZYXEL_DSL_SUPPORT_ANNEX_B
+			dalcmdpraseAdslModCfg("AnnexB", "ADSL_over_ISDN,", adslModulationCfg, Jobj, jsonadslmodcfg);	//EN75XX_DSL_AnnexB
+#endif
+			dalcmdpraseAdslModCfg("ADSL2plus", "ADSL_2plus,", adslModulationCfg, Jobj, jsonadslmodcfg);
+			dalcmdpraseAdslModCfg("AnnexM", "AnnexM,", adslModulationCfg, Jobj, jsonadslmodcfg);
+			dalcmdpraseAdslModCfg("VDSL2", "VDSL2,", adslModulationCfg, Jobj, jsonadslmodcfg);
+			if(adslModulationCfg != NULL){
+				len = strlen(adslModulationCfg);
+				if(adslModulationCfg[len-1] == ',')
+					adslModulationCfg[len-1] = '\0';
+			}
+			else{
+				strcpy(replyMsg, "At least set one ADSL modulation.");
+				return ZCFG_INVALID_PARAM_VALUE;
+			}
 			json_object_object_add(advDSLLineObj, "X_ZYXEL_AdslModulationCfg", json_object_new_string(adslModulationCfg));
+			if(json_object_object_get(Jobj, "AnnexM"))
+				json_object_object_add(advDSLLineObj, "X_ZYXEL_ADSL2_AnnexM", json_object_new_boolean(AnnexM));
 
-			ADSL2_AnnexM = json_object_get_boolean(json_object_object_get(Jobj, "X_ZYXEL_ADSL2_AnnexM"));
-			json_object_object_add(advDSLLineObj, "X_ZYXEL_ADSL2_AnnexM", json_object_new_boolean(ADSL2_AnnexM));
-
-			VDSL_8a = json_object_get_boolean(json_object_object_get(Jobj, "X_ZYXEL_VDSL_8a"));
+			VDSL_8a = json_object_get_boolean(json_object_object_get(Jobj, "VDSL_8a"));
+			if(json_object_object_get(Jobj, "VDSL_8a"))
 			json_object_object_add(advDSLLineObj, "X_ZYXEL_VDSL_8a", json_object_new_boolean(VDSL_8a));
 
-			VDSL_8b = json_object_get_boolean(json_object_object_get(Jobj, "X_ZYXEL_VDSL_8b"));
+			VDSL_8b = json_object_get_boolean(json_object_object_get(Jobj, "VDSL_8b"));
+			if(json_object_object_get(Jobj, "VDSL_8b"))
 			json_object_object_add(advDSLLineObj, "X_ZYXEL_VDSL_8b", json_object_new_boolean(VDSL_8b));
 
-			VDSL_8c = json_object_get_boolean(json_object_object_get(Jobj, "X_ZYXEL_VDSL_8c"));
+			VDSL_8c = json_object_get_boolean(json_object_object_get(Jobj, "VDSL_8c"));
+			if(json_object_object_get(Jobj, "VDSL_8c"))
 			json_object_object_add(advDSLLineObj, "X_ZYXEL_VDSL_8c", json_object_new_boolean(VDSL_8c));
 
-			VDSL_8d = json_object_get_boolean(json_object_object_get(Jobj, "X_ZYXEL_VDSL_8d"));
+			VDSL_8d = json_object_get_boolean(json_object_object_get(Jobj, "VDSL_8d"));
+			if(json_object_object_get(Jobj, "VDSL_8d"))
 			json_object_object_add(advDSLLineObj, "X_ZYXEL_VDSL_8d", json_object_new_boolean(VDSL_8d));
 
-			VDSL_12a = json_object_get_boolean(json_object_object_get(Jobj, "X_ZYXEL_VDSL_12a"));
+			VDSL_12a = json_object_get_boolean(json_object_object_get(Jobj, "VDSL_12a"));
+			if(json_object_object_get(Jobj, "VDSL_12a"))
 			json_object_object_add(advDSLLineObj, "X_ZYXEL_VDSL_12a", json_object_new_boolean(VDSL_12a));
 
-			VDSL_12b = json_object_get_boolean(json_object_object_get(Jobj, "X_ZYXEL_VDSL_12b"));
+			VDSL_12b = json_object_get_boolean(json_object_object_get(Jobj, "VDSL_12b"));
+			if(json_object_object_get(Jobj, "VDSL_12b"))
 			json_object_object_add(advDSLLineObj, "X_ZYXEL_VDSL_12b", json_object_new_boolean(VDSL_12b));
 
-			VDSL_17a = json_object_get_boolean(json_object_object_get(Jobj, "X_ZYXEL_VDSL_17a"));
+			VDSL_17a = json_object_get_boolean(json_object_object_get(Jobj, "VDSL_17a"));
+			if(json_object_object_get(Jobj, "VDSL_17a"))
 			json_object_object_add(advDSLLineObj, "X_ZYXEL_VDSL_17a", json_object_new_boolean(VDSL_17a));
 #ifdef ZYXEL_VDSL_Support_30A
-			VDSL_30a = json_object_get_boolean(json_object_object_get(Jobj, "X_ZYXEL_VDSL_30a"));
+			VDSL_30a = json_object_get_boolean(json_object_object_get(Jobj, "VDSL_30a"));
+			if(json_object_object_get(Jobj, "VDSL_30a"))
 			json_object_object_add(advDSLLineObj, "X_ZYXEL_VDSL_30a", json_object_new_boolean(VDSL_30a));
 #endif
 #ifdef ZYXEL_VDSL_Support_35B
-			VDSL_35b = json_object_get_boolean(json_object_object_get(Jobj, "X_ZYXEL_VDSL_35b"));
+			VDSL_35b = json_object_get_boolean(json_object_object_get(Jobj, "VDSL_35b"));
+			if(json_object_object_get(Jobj, "VDSL_35b"))
 			json_object_object_add(advDSLLineObj, "X_ZYXEL_VDSL_35b", json_object_new_boolean(VDSL_35b));
 #endif
-			VDSL_US0_8a = json_object_get_boolean(json_object_object_get(Jobj, "X_ZYXEL_VDSL_US0_8a"));
+			VDSL_US0_8a = json_object_get_boolean(json_object_object_get(Jobj, "VDSL_US0"));
+			if(json_object_object_get(Jobj, "VDSL_US0"))
 			json_object_object_add(advDSLLineObj, "X_ZYXEL_VDSL_US0_8a", json_object_new_boolean(VDSL_US0_8a));
 
 			zcfgFeObjJsonSet(RDM_OID_DSL_LINE, &advDSLLineIid, advDSLLineObj, NULL);
@@ -143,12 +318,102 @@
 	return ret;
 }
 
+zcfgRet_t zcfgFeDal_Advance_Get(struct json_object *Jarray, char *replyMsg){
+	zcfgRet_t ret = ZCFG_SUCCESS;
+	struct json_object *advPtmLinkObj = NULL;
+	struct json_object *advDSLLineObj = NULL;
+	struct json_object *paramJobj = NULL;
+	objIndex_t advPtmLinkIid = {0};
+	objIndex_t advDSLLineIid = {0};
+	char *AdslModCfg = NULL;
+	int DslPhyCfgMask = 0;
+	int DslPhyCfgValue = 0;
+	const char *Bitswap = NULL;
+	const char *SRA = NULL;
+	const char *dslType = NULL;
+	int len = 0;
+	paramJobj = json_object_new_object();
+	advPtmLinkIid.level = 1;
+	advPtmLinkIid.idx[0] = 1;
+	if(zcfgFeObjJsonGetWithoutUpdate(RDM_OID_PTM_LINK, &advPtmLinkIid, &advPtmLinkObj) == ZCFG_SUCCESS){
+		json_object_object_add(paramJobj, "X_ZYXEL_EnableADSLPtm", JSON_OBJ_COPY(json_object_object_get(advPtmLinkObj, "X_ZYXEL_EnableADSLPtm")));
+		zcfgFeJsonObjFree(advPtmLinkObj);
+	}
+	advDSLLineIid.level = 1;
+	advDSLLineIid.idx[0] = 1;
+	if(zcfgFeObjJsonGetWithoutUpdate(RDM_OID_DSL_LINE, &advDSLLineIid, &advDSLLineObj) == ZCFG_SUCCESS){
+#ifdef CONFIG_TARGET_en75xx
+		DslPhyCfgValue = json_object_get_int(json_object_object_get(advDSLLineObj, "X_ZYXEL_DslPhyCfg2Value"));
+		if(DslPhyCfgValue)
+			json_object_object_add(paramJobj, "PhyrUS", json_object_new_boolean(true));
+		else
+			json_object_object_add(paramJobj, "PhyrUS", json_object_new_boolean(false));
+
+#else if
+		DslPhyCfgMask = json_object_get_int(json_object_object_get(advDSLLineObj, "X_ZYXEL_DslPhyCfg2Mask"));
+		DslPhyCfgValue = json_object_get_int(json_object_object_get(advDSLLineObj, "X_ZYXEL_DslPhyCfg2Value"));
+		if((DslPhyCfgMask & kXdslFireUsSupported) && (DslPhyCfgValue & kXdslFireUsSupported))
+			json_object_object_add(paramJobj, "PhyrUS", json_object_new_boolean(true));
+		else
+			json_object_object_add(paramJobj, "PhyrUS", json_object_new_boolean(false));
+		if((DslPhyCfgMask & kXdslFireDsSupported) && (DslPhyCfgValue & kXdslFireDsSupported))
+			json_object_object_add(paramJobj, "PhyrDS", json_object_new_boolean(true));
+		else
+			json_object_object_add(paramJobj, "PhyrDS", json_object_new_boolean(false));
+#endif
+		Bitswap = json_object_get_string(json_object_object_get(advDSLLineObj, "X_ZYXEL_Bitswap"));
+		SRA = json_object_get_string(json_object_object_get(advDSLLineObj, "X_ZYXEL_SRA"));
+		if(!strcmp(Bitswap,"On"))
+			json_object_object_add(paramJobj, "Bitswap", json_object_new_boolean(true));
+		else if(!strcmp(Bitswap,"Off"))
+			json_object_object_add(paramJobj, "Bitswap", json_object_new_boolean(false));
+		if(!strcmp(SRA,"On"))
+			json_object_object_add(paramJobj, "SRA", json_object_new_boolean(true));
+		else if(!strcmp(SRA,"Off"))
+			json_object_object_add(paramJobj, "SRA", json_object_new_boolean(false));
+#ifdef  SUPPORT_DSL_BONDING
+		json_object_object_add(paramJobj, "DSLType", JSON_OBJ_COPY(json_object_object_get(advDSLLineObj, "X_ZYXEL_DSLType")));
+#endif
+		AdslModCfg = json_object_get_string(json_object_object_get(advDSLLineObj, "X_ZYXEL_AdslModulationCfg"));
+		len = strlen(AdslModCfg);
+		if(AdslModCfg[len] != ',')
+			AdslModCfg[len] = ',';
+		praseAdslModulationCfg(AdslModCfg, "Gdmt", "ADSL_G.dmt,", paramJobj);
+		praseAdslModulationCfg(AdslModCfg, "Glite", "ADSL_G.lite,", paramJobj);
+		praseAdslModulationCfg(AdslModCfg, "T1413", "ADSL_ANSI_T1.413,", paramJobj);
+		praseAdslModulationCfg(AdslModCfg, "AnnexL", "ADSL_re-adsl,", paramJobj);
+		praseAdslModulationCfg(AdslModCfg, "ADSL2", "ADSL_G.dmt.bis,", paramJobj);
+#ifdef CONFIG_ZYXEL_DSL_SUPPORT_ANNEX_B
+		praseAdslModulationCfg(AdslModCfg, "AnnexB", "ADSL_over_ISDN,", paramJobj);	//EN75XX_DSL_AnnexB
+#endif
+		praseAdslModulationCfg(AdslModCfg, "ADSL2plus", "ADSL_2plus,", paramJobj);
+		praseAdslModulationCfg(AdslModCfg, "AnnexM", "AnnexM,", paramJobj);
+		praseAdslModulationCfg(AdslModCfg, "VDSL2", "VDSL2,", paramJobj);
+		json_object_object_add(paramJobj, "X_ZYXEL_VDSL_8a", JSON_OBJ_COPY(json_object_object_get(advDSLLineObj, "X_ZYXEL_VDSL_8a")));
+		json_object_object_add(paramJobj, "X_ZYXEL_VDSL_8b", JSON_OBJ_COPY(json_object_object_get(advDSLLineObj, "X_ZYXEL_VDSL_8b")));
+		json_object_object_add(paramJobj, "X_ZYXEL_VDSL_8c", JSON_OBJ_COPY(json_object_object_get(advDSLLineObj, "X_ZYXEL_VDSL_8c")));
+		json_object_object_add(paramJobj, "X_ZYXEL_VDSL_8d", JSON_OBJ_COPY(json_object_object_get(advDSLLineObj, "X_ZYXEL_VDSL_8d")));
+		json_object_object_add(paramJobj, "X_ZYXEL_VDSL_12a", JSON_OBJ_COPY(json_object_object_get(advDSLLineObj, "X_ZYXEL_VDSL_12a")));
+		json_object_object_add(paramJobj, "X_ZYXEL_VDSL_12b", JSON_OBJ_COPY(json_object_object_get(advDSLLineObj, "X_ZYXEL_VDSL_12b")));
+		json_object_object_add(paramJobj, "X_ZYXEL_VDSL_17a", JSON_OBJ_COPY(json_object_object_get(advDSLLineObj, "X_ZYXEL_VDSL_17a")));
+		json_object_object_add(paramJobj, "X_ZYXEL_VDSL_30a", JSON_OBJ_COPY(json_object_object_get(advDSLLineObj, "X_ZYXEL_VDSL_30a")));
+		json_object_object_add(paramJobj, "X_ZYXEL_VDSL_35b", JSON_OBJ_COPY(json_object_object_get(advDSLLineObj, "X_ZYXEL_VDSL_35b")));
+		json_object_object_add(paramJobj, "X_ZYXEL_VDSL_US0_8a", JSON_OBJ_COPY(json_object_object_get(advDSLLineObj, "X_ZYXEL_VDSL_US0_8a")));
+		json_object_array_add(Jarray, paramJobj);
+		zcfgFeJsonObjFree(advDSLLineObj);
+	}
+
+	return ret;
+}
+
 
 zcfgRet_t zcfgFeDalWanAdvance(const char *method, struct json_object *Jobj, char *replyMsg){
 	zcfgRet_t ret = ZCFG_SUCCESS;
 
 	if(!strcmp(method, "PUT"))
-		ret = zcfgFeDal_Advance_Edit(Jobj, NULL);
+		ret = zcfgFeDal_Advance_Edit(Jobj, replyMsg);
+	else if(!strcmp(method, "GET"))
+		ret = zcfgFeDal_Advance_Get(Jobj, NULL);
 	else
 		printf("Unknown method:%s\n", method);
 
Index: libzcfg_fe_dal-1.0/zcfg_fe_dal.c
===================================================================
--- libzcfg_fe_dal-1.0.orig/zcfg_fe_dal.c	2017-05-10 19:30:26.208711528 +0800
+++ libzcfg_fe_dal-1.0/zcfg_fe_dal.c	2017-05-10 19:32:05.720869700 +0800
@@ -176,6 +176,7 @@
 extern void zcfgFeDalShowMACFilter(struct json_object *Jarray);
 extern void zcfgFeDalShowFirewall(struct json_object *Jarray);
 extern void zcfgFeDalShowHomeConnect(struct json_object *Jarray);
+extern void zcfgFeDalShowWanAdvance(struct json_object *Jarray);
 
 dal_handler_t dalHandler[] = {
 {"WAN",				WAN_param,			zcfgFeDalWan,			zcfgFeDalShowWan,			"get",				"Broadband"},
@@ -183,7 +184,7 @@
 {"ETHWANLAN", 		ETHWANLAN_param, 	zcfgFeDalEthWanLan,		NULL,						"edit",				""}, //Broadband
 {"DNS_ENTRY",		DNS_ENTRY_param,	zcfgFeDalDnsEntry,		zcfgFeDalShowDnsEntry,		"get|add|edit|delete",	"DNS"}, //DNS
 {"D_DNS",			D_DNS_param,		zcfgFeDalDDns,			zcfgFeDalShowDDns,			"get|edit",			"DNS"},
-{"ADVANCE",			ADVANCE_param,		zcfgFeDalWanAdvance,	NULL,						"edit",				""}, //Broadband
+{"ADVANCE",			ADVANCE_param,		zcfgFeDalWanAdvance,	zcfgFeDalShowWanAdvance,	"get|edit",				"Broadband"}, //Broadband
 {"WWANBACKUP", 		WWANBACKUP_param,	zcfgFeDalWwanBackup,	NULL,						"edit",				""}, //Broadband
 {"STATICROUTE", 	STATICROUTE_param,	zcfgFeDalStaticRoute,	zcfgFeDalShowStaticRoute,	"get|add|edit|delete",	"Routing"},
 {"DNSROUTE", 		DNSROUTE_param,		zcfgFeDalDnsRoute,		NULL,						"add|edit|delete",	""}, //Routing
