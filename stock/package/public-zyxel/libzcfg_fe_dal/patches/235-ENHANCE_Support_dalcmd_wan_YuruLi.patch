Index: libzcfg_fe_dal-1.0/network/broadband/zcfg_fe_dal_broadband.c
===================================================================
--- libzcfg_fe_dal-1.0.orig/network/broadband/zcfg_fe_dal_broadband.c	2017-06-29 10:34:43.872243557 +0800
+++ libzcfg_fe_dal-1.0/network/broadband/zcfg_fe_dal_broadband.c	2017-06-29 11:08:40.620485327 +0800
@@ -18,28 +18,28 @@
 //#define JSON_OBJ_COPY(json_object) json_tokener_parse(json_object_to_json_string(json_object))
 
 dal_param_t WAN_param[]={
-	{"Name",				dalType_string,	1,	32,	NULL},
-	{"Enable",				json_type_boolean,	0,	0,	NULL},
-	{"Type",				dalType_string,	3,	4,	NULL, "ATM|PTM|ETH|GPON"},
-	{"Mode",				dalType_string,	9,	10,	NULL, "IP_Routed|IP_Bridged"},
+	{"Name",				dalType_string,	1,	32,	NULL, NULL, dal_Add|dal_Edit|dal_Delete|dal_Get},
+	{"Enable",				dalType_boolean,	0,	0,	NULL},
+	{"Type",				dalType_string,	3,	4,	NULL, "ATM|PTM|ETH|GPON", dal_Add | dal_Edit_ignore},
+	{"Mode",				dalType_string,	9,	10,	NULL, "IP_Routed|IP_Bridged", dal_Add},
 	{"Encapsulation",		dalType_string,	4,	5,	NULL, "IPoE|IPoA|PPPoE|PPPoA"},
 	{"ipMode",				dalType_string,	4,	9,	NULL, "IPv4|DualStack|IPv6"},
 	//atmLink
-	{"vpivci",				dalType_string,	1,	256,	NULL},
+	{"vpivci",				dalType_vpivci,	1,	256,	NULL}, // VPI/VCI
 	{"AtmEncapsulation",	dalType_string,	1,	6,	NULL},
 	{"QoSClass",			dalType_string,	3,	8,	NULL, "UBR|CBR|VBR-nrt|VBR-rt"},
-	{"atmPeakCellRate",		dalType_int,	0,	0,	NULL},
-	{"atmSustainedCellRate",dalType_int,	0,	0,	NULL},
-	{"atmMaxBurstSize",		dalType_int,	0,	0,	NULL},
+	{"atmPeakCellRate",		dalType_int,	0,	255000,	NULL},
+	{"atmSustainedCellRate",dalType_int,	0,	255000,	NULL},
+	{"atmMaxBurstSize",		dalType_int,	0,	1000000,	NULL},
 	//GPON
-	{"slidValue",			dalType_int,	0,	0,	NULL},
+	//{"slidValue",			dalType_int,	0,	0,	NULL},
 	//VLAN term
 	{"VLANEnable",			dalType_boolean,	0,	0,	NULL},
 	{"VLANID",				dalType_int,		-1,	4094,	NULL},
 	{"VLANPriority",		dalType_int,		-1,	7,	NULL},
 	//ppp Iface
-	{"pppUsername",			dalType_string,	0,	0,	NULL},
-	{"pppPassword",			dalType_string,	0,	0,	NULL},
+	{"pppUsername",			dalType_string,	1,	64,	NULL},
+	{"pppPassword",			dalType_string,	1,	64,	NULL},
 	{"ConnectionTrigger",	dalType_string,	0,	0,	NULL, "AlwaysOn|OnDemand"},
 	{"IdleDisconnectTime",	dalType_int,	0,	0,	NULL},
 	{"pppoePassThrough",	dalType_boolean,	0,	0,	NULL},
@@ -65,8 +65,8 @@
 	{"BorderRelayIPv4Addresses",dalType_v4Addr,	0,	0,	NULL},
 	//DSLite
 	{"DSLiteEnable",		dalType_boolean,	0,	0,	NULL},
-	{"DSLiteType",			dalType_string,	0,	0,	NULL},
-	{"DSLiteRelayIPv6Addresses",	dalType_string,	0,	0,	NULL},
+	{"DSLiteType",			dalType_string,	0,	0,	NULL, "static"},
+	{"DSLiteRelayIPv6Addresses",	dalType_v6Addr,	0,	0,	NULL},
 	//ipIface or pppIface
 	{"MaxMTUSize",			dalType_int,	0,	0,	NULL},
 	//Address, gateway, DHCP
@@ -83,18 +83,18 @@
 	{"option120Enable",		dalType_boolean,	0,	0,	NULL},
 	{"option121Enable",		dalType_boolean,	0,	0,	NULL},
 	{"option60Enable",		dalType_boolean,	0,	0,	NULL},
-	{"option60Value",		dalType_string,	0,	0,	NULL},
+	{"option60Value",		dalType_string,	0,	255,	NULL},
 	{"option61Enable",		dalType_boolean,	0,	0,	NULL},
-	{"option61Value",		dalType_string,	0,	0,	NULL},
+	{"option61Value",		dalType_string,	0,	255,	NULL},
 	{"option125Enable",		dalType_boolean,	0,	0,	NULL},
-	{"option125Value",		dalType_string,	0,	0,	NULL},
+	{"option125Value",		dalType_string,	0,	255,	NULL},
 	//ConcurrentWan
-	{"ConcurrentWan",		dalType_int,	0,	0,	NULL},
-	{"ManufacturerOUI",     dalType_string,	0,	0,	NULL},
-	{"SerialNumber",		dalType_string,	0,	0,	NULL},
-	{"ProductClass",		dalType_string,	0,	0,	NULL},
+	{"ConcurrentWan",		dalType_int,	0,	15,	NULL},
+	{"ManufacturerOUI",     dalType_string,	0,	0,	NULL, NULL, dalcmd_Forbid},
+	{"SerialNumber",		dalType_string,	0,	0,	NULL, NULL, dalcmd_Forbid},
+	{"ProductClass",		dalType_string,	0,	0,	NULL, NULL, dalcmd_Forbid},
 #ifdef ZYXEL_WAN_MAC
-	{"WanMacType",		    dalType_string,	0,	0,	NULL},
+	{"WanMacType",		    dalType_string,	0,	0,	NULL, "Default|ClientIP|UserDefine"},
 	{"WanMacIP",		    dalType_v4Addr,	0,	0,	NULL},
 	{"WanMacAddr",		    dalType_string,	0,	0,	NULL},
 #endif
@@ -119,7 +119,7 @@
 char CurrEncapsulation[16] = {0};
 char CurrIpMode[16] = {0};
 char CurrV6RD_Type[16] = {0};
-bool CurrIpStatic = false, CurrIp6Static = false, CurrPppStatic = false, CurrEnable_6RD = false;
+bool CurrEnable = false, CurrIpStatic = false, CurrIp6Static = false, CurrPppStatic = false, CurrEnable_6RD = false;
 
 
 struct json_object *atmLinkObj = NULL;
@@ -348,10 +348,10 @@
 	return 0;
 }
 
-static zcfgRet_t AddandCheckDefaultParam(struct json_object *Jobj){
+static zcfgRet_t addDefaultParam(struct json_object *Jobj, char *replyMsg){
 
 	if(Type == NULL){
-		json_object_object_add(Jobj, "Type", json_object_new_string("ATM"));
+		json_object_object_add(Jobj, "Type", json_object_new_string("PTM"));
 		Type = json_object_get_string(json_object_object_get(Jobj, "Type"));
 	}
 	else if(strcmp(Type, "ATM") && 
@@ -361,7 +361,13 @@
 		return ZCFG_INVALID_PARAM_VALUE;
 	}
 
-	if(strcmp(Type, "ATM")){
+	if(!strcmp(Type, "ATM")){
+		if(json_object_object_get(Jobj, "vpivci") == NULL){
+			if(replyMsg)
+				strcpy(replyMsg, "vpivci is Mandatory for ATM WAN");
+			return ZCFG_INVALID_ARGUMENTS;
+		}
+		
 		if(json_object_object_get(Jobj, "QoSClass") == NULL)
 			json_object_object_add(Jobj, "QoSClass", json_object_new_string("UBR"));
 	}
@@ -398,11 +404,11 @@
 		if(json_object_object_get(Jobj, "ConnectionTrigger") == NULL)
 			json_object_object_add(Jobj, "ConnectionTrigger", json_object_new_string("AlwaysOn"));
 		if(json_object_object_get(Jobj, "MaxMTUSize") == NULL)
-			json_object_object_add(ipIfaceObj, "MaxMTUSize", json_object_new_int(1492));
+			json_object_object_add(Jobj, "MaxMTUSize", json_object_new_int(1492));
 	}
 	else{ //IPoE/IPoA
 		if(json_object_object_get(Jobj, "MaxMTUSize") == NULL)
-			json_object_object_add(ipIfaceObj, "MaxMTUSize", json_object_new_int(1500));
+			json_object_object_add(Jobj, "MaxMTUSize", json_object_new_int(1500));
 	}
 
 	if(ipMode == NULL){//IPv4/DualStack/IPv6
@@ -414,7 +420,6 @@
 			strcmp(ipMode, "DualStack")){
 		return ZCFG_INVALID_PARAM_VALUE;
 	}
-	
 	if(json_object_object_get(Jobj, "NatEnable") == NULL)
 		json_object_object_add(Jobj, "NatEnable", json_object_new_boolean(true));
 	
@@ -432,11 +437,15 @@
 				json_object_object_add(Jobj, "option212Enable", json_object_new_boolean(true));
 		}
 	}
+	
 	if(!strcmp(ipMode, "IPv6")){//dslite
+		if(json_object_object_get(Jobj, "DSLiteType") == NULL)
+			json_object_object_add(Jobj, "DSLiteType", json_object_new_string("static"));
+			
+		if(json_object_object_get(Jobj, "DSLiteRelayIPv6Addresses") == NULL)
+			json_object_object_add(Jobj, "DSLiteRelayIPv6Addresses", json_object_new_string(""));
 	}
 
-	
-
 	return ZCFG_SUCCESS;
 }
 
@@ -2123,7 +2132,9 @@
 	sprintf(currLowerLayers, "IP.Interface.%u", ipIfaceIid->idx[0]);
 	
 	//set ppp parameter
-	replaceParam(pppIfaceObj, "Enable", Jobj, "Enable");
+	if(!replaceParam(pppIfaceObj, "Enable", Jobj, "Enable"))
+		json_object_object_add(ipIfaceObj, "Enable", json_object_new_boolean(CurrEnable));
+		
 	replaceParam(pppIfaceObj, "Username", Jobj, "pppUsername");
 	replaceParam(pppIfaceObj, "Password", Jobj, "pppPassword");
 	replaceParam(pppIfaceObj, "MaxMRUSize", Jobj, "MaxMTUSize");
@@ -2279,7 +2290,9 @@
 	//printf("%s(%d)  mark value %d\n",__FUNCTION__, __LINE__, mark);
 #endif
 	//json_object_object_add(ipIfaceObj, "Enable", json_object_new_boolean(true));
-	replaceParam(ipIfaceObj, "Enable", Jobj, "Enable");
+	if(!replaceParam(ipIfaceObj, "Enable", Jobj, "Enable"))
+		json_object_object_add(ipIfaceObj, "Enable", json_object_new_boolean(CurrEnable));
+		
 	json_object_object_add(ipIfaceObj, "X_ZYXEL_ConnectionId", json_object_new_int(ipIfaceIid.idx[0] - 1));
 #ifdef ISKON_CUSTOMIZATION //Adam
 	json_object_object_add(ipIfaceObj, "X_ZYXEL_IPR2_MARKING", json_object_new_int(mark));
@@ -2742,6 +2755,8 @@
 
 	if(Type == NULL)
 		Type = CurrType;
+	if(Mode == NULL)
+		Mode = CurrMode;
 
 	//dont allow to change Type
 	if(strcmp(CurrType, Type))
@@ -3040,8 +3055,8 @@
 	//check if duplicate Name exist
 	if(getSpecificObj(RDM_OID_IP_IFACE, "X_ZYXEL_SrvName", json_type_string, Name, NULL, NULL))
 		return ZCFG_REQUEST_REJECT;
-	
-	if((ret = AddandCheckDefaultParam(Jobj)) != ZCFG_SUCCESS)//for CLI
+
+	if((ret = addDefaultParam(Jobj, replyMsg)) != ZCFG_SUCCESS)//for CLI
 		return ret;
 
 	if((ret = editPhyLayerObjects(Jobj)) != ZCFG_SUCCESS)
@@ -3058,7 +3073,6 @@
 
 	t2 = time(NULL);
     dbg_printf("before set, time=%d seconds\n", (int) difftime(t2, t1));
-	
 	setAllObjects(Jobj);
 
 	t2 = time(NULL);
@@ -3207,6 +3221,7 @@
     dbg_printf("line=%d, time=%d\n", __LINE__, (int) difftime(t2, t1));
 
 	//disable ipIface pppIface first
+	CurrEnable = json_object_get_boolean(json_object_object_get(ipIfaceObj, "Enable"));
 	json_object_object_add(ipIfaceObj, "Enable", json_object_new_boolean(false));
 	zcfgFeObjJsonBlockedSet(RDM_OID_IP_IFACE, &ipIfaceIid, ipIfaceObj, NULL);
 
@@ -3815,6 +3830,8 @@
 
 zcfgRet_t zcfgFeDalWanGet(struct json_object *Jobj, char *replyMsg){
 	zcfgRet_t ret = ZCFG_SUCCESS;
+	int index = 1;
+	
 	struct json_object *pramJobj = NULL;
 	struct json_object *ipIfObj = NULL;
 	initGlobalObjects();
Index: libzcfg_fe_dal-1.0/zcfg_fe_dal.c
===================================================================
--- libzcfg_fe_dal-1.0.orig/zcfg_fe_dal.c	2017-06-29 10:34:44.616243563 +0800
+++ libzcfg_fe_dal-1.0/zcfg_fe_dal.c	2017-06-29 11:08:37.967648275 +0800
@@ -206,7 +206,7 @@
 extern void zcfgFeDalShowUserAccount(struct json_object *Jarray);
 
 dal_handler_t dalHandler[] = {
-{"wan",				WAN_param,			zcfgFeDalWan,			zcfgFeDalShowWan,			"get",				"Broadband"},
+{"wan",				WAN_param,			zcfgFeDalWan,			zcfgFeDalShowWan,			"get|add|edit|delete",	"Broadband"},
 {"tr69",			MGMT_param,			zcfgFeDalMgmt,			zcfgFeDalShowMgmt,			"get|edit",			"TR-069_Client"},
 {"ETHWANLAN", 		ETHWANLAN_param, 	zcfgFeDalEthWanLan,		NULL,						"edit",				""}, //Broadband
 {"dns",				DNS_ENTRY_param,	zcfgFeDalDnsEntry,		zcfgFeDalShowDnsEntry,		"get|add|edit|delete",	"DNS"}, //DNS
Index: libzcfg_fe_dal-1.0/zcfg_fe_dal_common.h
===================================================================
--- libzcfg_fe_dal-1.0.orig/zcfg_fe_dal_common.h	2017-06-29 10:34:44.472243562 +0800
+++ libzcfg_fe_dal-1.0/zcfg_fe_dal_common.h	2017-06-29 10:34:44.632243563 +0800
@@ -6,7 +6,10 @@
 #define dal_Edit	1 << 1
 #define dal_Delete	1 << 2
 #define dal_Get		1 << 3
-#define dalcmd_Forbid  1 << 4
+#define dal_Add_ignore 	1 << 4
+#define dal_Edit_ignore	1 << 5
+#define dal_ReadOnly	1 << 6
+#define dalcmd_Forbid  1 << 7
 
 /*X_ZYXEL_Schedule Days*/
 #define DAY_SUN (0x1 << 0)
@@ -59,6 +62,7 @@
 	dalType_boolean = 0,
 	dalType_int,
 	dalType_string,
+	dalType_vpivci,
 	dalType_v4Addr,
 	dalType_v4AddrList,
 	dalType_v4Mask,
