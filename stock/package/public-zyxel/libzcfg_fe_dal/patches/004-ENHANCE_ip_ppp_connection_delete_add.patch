Index: libzcfg_fe_dal-1.0/zcfg_fe_dal_broadband.c
===================================================================
--- libzcfg_fe_dal-1.0.orig/zcfg_fe_dal_broadband.c	2016-01-11 20:11:58.158027471 +0800
+++ libzcfg_fe_dal-1.0/zcfg_fe_dal_broadband.c	2016-01-11 20:14:16.082117400 +0800
@@ -1754,6 +1754,10 @@
 
 	// need to set ipIface object first
 	sprintf(currLowerLayers, "PPP.Interface.%u", pppIfaceIid.idx[0]);
+	const char *lowerLayers = json_object_get_string(json_object_object_get(ipIfaceObj, "LowerLayers"));
+	if(lowerLayers && strcmp(lowerLayers, currLowerLayers))
+		json_object_object_add(ipIfaceObj, "X_ZYXEL_AccessDescription", json_object_new_string("SetIpIfaceStackModified"));
+
 	json_object_object_add(ipIfaceObj, "LowerLayers", json_object_new_string(currLowerLayers));
 	
 	sprintf(currLowerLayers, "IP.Interface.%u", ipIfaceIid->idx[0]);
@@ -1852,6 +1856,8 @@
 		json_object_object_add(ipIfaceObj, "IPv6Enable", json_object_new_boolean(true));
 	}
 
+	json_object_object_add(ipIfaceObj, "X_ZYXEL_AccessDescription", json_object_new_string("AddSetIpIface"));
+
 	if(!strcmp(Encapsulation, "PPPoE") || !strcmp(Encapsulation, "PPPoA")){
 		ret = editPppIfaceObject(Jobj, ipIfaceObj, &ipIfaceIid);
 	}
@@ -1948,6 +1954,10 @@
 	else{
 		json_object_object_add(ipIfaceObj, "MaxMTUSize", json_object_new_int(1500));
 		replaceParam(ipIfaceObj, "MaxMTUSize", Jobj, "MaxMTUSize");
+		const char *lowerLayers = json_object_get_string(json_object_object_get(ipIfaceObj, "LowerLayers"));
+		if(lowerLayers && strcmp(lowerLayers, currLowerLayers))
+			json_object_object_add(ipIfaceObj, "X_ZYXEL_AccessDescription", json_object_new_string("SetIpIfaceStackModified"));
+
 		json_object_object_add(ipIfaceObj, "LowerLayers", json_object_new_string(currLowerLayers));
 		sprintf(currLowerLayers, "IP.Interface.%u", ipIfaceIid.idx[0]);
 	}
@@ -1991,6 +2001,8 @@
 	if(ripObj)zcfgFeObjJsonSetWithoutApply(RDM_OID_ROUTING_RIP_INTF_SET, &ripIid, ripObj, NULL);
 	if(dnsClientSrv4Obj)zcfgFeObjJsonSetWithoutApply(RDM_OID_DNS_CLIENT_SRV, &dnsClientSrv4Iid, dnsClientSrv4Obj, NULL);
 	if(dnsClientSrv6Obj)zcfgFeObjJsonSetWithoutApply(RDM_OID_DNS_CLIENT_SRV, &dnsClientSrv6Iid, dnsClientSrv6Obj, NULL);
+	//if(pppIfaceObj)zcfgFeObjJsonBlockedSet(RDM_OID_PPP_IFACE, &pppIfaceIid, pppIfaceObj, NULL);
+	if(pppIfaceObj)zcfgFeObjJsonSetWithoutApply(RDM_OID_PPP_IFACE, &pppIfaceIid, pppIfaceObj, NULL);
 	if(ipIfaceObj)zcfgFeObjJsonSet(RDM_OID_IP_IFACE, &ipIfaceIid, ipIfaceObj, NULL);
 	if(pppIfaceObj)zcfgFeObjJsonSet(RDM_OID_PPP_IFACE, &pppIfaceIid, pppIfaceObj, NULL);
 	if(v4FwdObj)zcfgFeObjJsonSetWithoutApply(RDM_OID_ROUTING_ROUTER_V4_FWD, &v4FwdIid, v4FwdObj, NULL);
