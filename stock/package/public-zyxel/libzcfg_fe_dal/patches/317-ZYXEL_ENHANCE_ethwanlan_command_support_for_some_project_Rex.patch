Index: libzcfg_fe_dal-1.0/network/broadband/zcfg_fe_dal_ethwanlan.c
===================================================================
--- libzcfg_fe_dal-1.0.orig/network/broadband/zcfg_fe_dal_ethwanlan.c	2017-08-28 10:49:39.799524621 +0800
+++ libzcfg_fe_dal-1.0/network/broadband/zcfg_fe_dal_ethwanlan.c	2017-08-28 10:52:45.035760600 +0800
@@ -13,6 +13,8 @@
 //#include "zcfg_eid.h"
 #include "zcfg_msg.h"
 #include "zcfg_fe_dal_common.h"
+#include "zcfg_webgui_flag.h"
+
 
 dal_param_t ETHWANLAN_param[]={
 	{"Enable", 					dalType_boolean,	0,	0,	NULL,		NULL,			dal_Edit},
@@ -236,16 +238,39 @@
 	return ret;
 }
 
+/*
+ * This function is support for CLI to distinguish this modle has WAN port or not.
+ * e.g. VMG1312 VMG5313 do not have WAN port for Eth, thus ethwanlan need to change Lan4 port to Wan port
+ */
+
+bool DeviceIntfNumofEntry(){
+	struct json_object *obj = NULL;
+	objIndex_t Iid = {0};
+	int flag1 = 0;
+	
+	if(zcfgFeObjJsonGetWithoutUpdate(RDM_OID_GUI_CUSTOMIZATION, &Iid, &obj) == ZCFG_SUCCESS){
+		flag1 = json_object_get_int(json_object_object_get(obj, "Flag1"));
+		zcfgFeJsonObjFree(obj);
+		if(flag1 & HIDE_ETH_WAN_TAB)
+			return false;
+		else
+			return true;
+	}
+}
 
 zcfgRet_t zcfgFeDalEthWanLan(const char *method, struct json_object *Jobj, struct json_object *Jarray, char *replyMsg){
 	zcfgRet_t ret = ZCFG_SUCCESS;
 	
-	if(!strcmp(method, "PUT"))
-		ret = zcfgFeDal_ETHWanLAN_Edit(Jobj, NULL);
-	else if(!strcmp(method, "GET"))
-		ret = zcfgFeDal_ETHWanLAN_Get(Jobj, Jarray, NULL);
+	if(DeviceIntfNumofEntry()){
+		if(!strcmp(method, "PUT"))
+			ret = zcfgFeDal_ETHWanLAN_Edit(Jobj, NULL);
+		else if(!strcmp(method, "GET"))
+			ret = zcfgFeDal_ETHWanLAN_Get(Jobj, Jarray, NULL);
+		else
+			printf("Unknown method:%s\n", method);
+	}
 	else
-		printf("Unknown method:%s\n", method);
+		printf("This device do not support Ethernet LAN4 port change to WAN port.");
 
 	return ret;
 }
