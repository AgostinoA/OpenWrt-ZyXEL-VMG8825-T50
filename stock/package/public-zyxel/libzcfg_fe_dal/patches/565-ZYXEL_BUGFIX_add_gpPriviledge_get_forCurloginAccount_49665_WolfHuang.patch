Index: libzcfg_fe_dal-1.0/maintenance/useraccount/zcfg_fe_dal_user_account.c
===================================================================
--- libzcfg_fe_dal-1.0.orig/maintenance/useraccount/zcfg_fe_dal_user_account.c	2018-05-29 21:12:37.623054548 +0800
+++ libzcfg_fe_dal-1.0/maintenance/useraccount/zcfg_fe_dal_user_account.c	2018-05-29 21:14:02.229437902 +0800
@@ -123,60 +123,74 @@
 		dbg_printf("getLoginUserInfo Fail");
 		return ZCFG_INTERNAL_ERROR;
 	}
-
-	IID_INIT(iid);
-	while(zcfgFeObjJsonGetNextWithoutUpdate(RDM_OID_ZY_LOG_CFG_GP_ACCOUNT, &iid, &obj) == ZCFG_SUCCESS) {
-		if(!strcmp(loginLevel, "high") || !strcmp(loginLevel, "medium")){
-			if( highGpIdx == iid.idx[0]){
-				zcfgFeJsonObjFree(obj);
-				index++;
-				continue;
-			}
-		}else{
-			if( (highGpIdx == iid.idx[0]) || (mediumGpIdx == iid.idx[0])){
-				zcfgFeJsonObjFree(obj);
-				index++;
-				continue;
-			}
-		}
-		
-		pramJobj = json_object_new_object();
-		json_object_object_add(pramJobj, "Index", json_object_new_int(index));
-		replaceParam(pramJobj, "Enabled", obj, "Enabled");
-		replaceParam(pramJobj, "Username", obj, "Username");
-		replaceParam(pramJobj, "AccountRetryTime", obj, "AccountRetryTime");
-		replaceParam(pramJobj, "AccountIdleTime", obj, "AccountIdleTime");
-		replaceParam(pramJobj, "AccountLockTime", obj, "AccountLockTime");
-#ifdef ZYXEL_REMOTE_ACCESS_PRIVILEGE
-		replaceParam(pramJobj, "RemoteAccessPrivilege", obj, "RemoteAccessPrivilege");
-#endif
-		if(iid.idx[0]==highGpIdx){//should not happen for current design
-			json_object_object_add(pramJobj, "group",json_object_new_string("Root"));
-		}
-		else if(iid.idx[0]==mediumGpIdx){
-			json_object_object_add(pramJobj, "group",json_object_new_string("Administrator"));
-		}
-		else if(iid.idx[0]==lowGpIdx){
-			json_object_object_add(pramJobj, "group",json_object_new_string("User"));
-		}
-		else{
-			dbg_printf("%s : Error\n",__FUNCTION__);
-		}
-		
-		if(json_object_object_get(Jobj, "Index") != NULL) {
-			if(index == json_object_get_int(json_object_object_get(Jobj, "Index"))) {
+	
+	if (json_object_object_get(Jobj, "loginLevel") != NULL){
+		IID_INIT(iid);
+		while(zcfgFeObjJsonGetNextWithoutUpdate(RDM_OID_ZY_LOG_CFG_GP, &iid, &obj) == ZCFG_SUCCESS) {
+			if(!strcmp( json_object_get_string(json_object_object_get(obj, "Level")),loginLevel) ){
+				pramJobj = json_object_new_object();
+				replaceParam(pramJobj, "GP_Privilege", obj, "GP_Privilege");
 				json_object_array_add(Jarray, pramJobj);
 				zcfgFeJsonObjFree(obj);
 				break;
 			}
+			zcfgFeJsonObjFree(obj);
 		}
-		else {
-			json_object_array_add(Jarray, JSON_OBJ_COPY(pramJobj));
+		
+	}else{
+
+		IID_INIT(iid);
+		while(zcfgFeObjJsonGetNextWithoutUpdate(RDM_OID_ZY_LOG_CFG_GP_ACCOUNT, &iid, &obj) == ZCFG_SUCCESS) {
+			if(!strcmp(loginLevel, "high") || !strcmp(loginLevel, "medium")){
+				if( highGpIdx == iid.idx[0]){
+					zcfgFeJsonObjFree(obj);
+					index++;
+					continue;
+				}
+			}else{
+				if( (highGpIdx == iid.idx[0]) || (mediumGpIdx == iid.idx[0])){
+					zcfgFeJsonObjFree(obj);
+					index++;
+					continue;
+				}
+			}
+			
+			pramJobj = json_object_new_object();
+			json_object_object_add(pramJobj, "Index", json_object_new_int(index));
+			replaceParam(pramJobj, "Enabled", obj, "Enabled");
+			replaceParam(pramJobj, "Username", obj, "Username");
+			replaceParam(pramJobj, "AccountRetryTime", obj, "AccountRetryTime");
+			replaceParam(pramJobj, "AccountIdleTime", obj, "AccountIdleTime");
+			replaceParam(pramJobj, "AccountLockTime", obj, "AccountLockTime");
+	#ifdef ZYXEL_REMOTE_ACCESS_PRIVILEGE
+			replaceParam(pramJobj, "RemoteAccessPrivilege", obj, "RemoteAccessPrivilege");
+	#endif
+			if(iid.idx[0]==highGpIdx){//should not happen for current design
+				json_object_object_add(pramJobj, "group",json_object_new_string("Root"));
+			}
+			else if(iid.idx[0]==mediumGpIdx){
+				json_object_object_add(pramJobj, "group",json_object_new_string("Administrator"));
+			}
+			else if(iid.idx[0]==lowGpIdx){
+				json_object_object_add(pramJobj, "group",json_object_new_string("User"));
+			}
+			else{
+				dbg_printf("%s : Error\n",__FUNCTION__);
+			}
+			
+			if(json_object_object_get(Jobj, "Index") != NULL) {
+				if(index == json_object_get_int(json_object_object_get(Jobj, "Index"))) {
+					json_object_array_add(Jarray, pramJobj);
+					zcfgFeJsonObjFree(obj);
+					break;
+				}
+			}else {
+				json_object_array_add(Jarray, JSON_OBJ_COPY(pramJobj));
+			}
+			zcfgFeJsonObjFree(obj);
+			index++;
 		}
-		zcfgFeJsonObjFree(obj);
-		index++;
 	}
-
 	return ret;
 }
 
