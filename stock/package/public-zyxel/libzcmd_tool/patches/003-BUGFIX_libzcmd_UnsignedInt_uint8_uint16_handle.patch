Index: libzcmd_tool-1.0/zcmd_tool.c
===================================================================
--- libzcmd_tool-1.0.orig/zcmd_tool.c	2016-03-23 15:19:27.585448308 +0800
+++ libzcmd_tool-1.0/zcmd_tool.c	2016-03-23 15:24:09.278845141 +0800
@@ -12,6 +12,10 @@
 
 typedef union value_s {
 	bool bool_val;
+	int8_t int8_val;
+	int16_t int16_val;
+	int32_t int32_val;
+	int64_t int64_val;
 	uint8_t uint8_val;
 	uint16_t uint16_val;
 	uint32_t uint32_val;
@@ -66,8 +70,37 @@
 				setValue = json_object_new_boolean(v.bool_val);
 				json_object_object_add(jobj, paramName, setValue);
 				break;
-			case json_type_ulong:
+
 			case json_type_int:
+				if( len > redundantSpace ) {
+					pos = pos + redundantSpace;
+					redundantSpace = BOUNDARY - len;
+				}
+				else {
+					redundantSpace = redundantSpace - len;
+				}
+
+				if(len == 8) {
+					memcpy(&v.int64_val, rqst_struct+pos, len);
+					setValue = json_object_new_int(v.int64_val);
+				}
+				else if(len == 4) {
+					memcpy(&v.int32_val, rqst_struct+pos, len);
+					setValue = json_object_new_int(v.int32_val);
+				}
+				else if(len == 2) {
+					memcpy(&v.int16_val, rqst_struct+pos, len);
+					setValue = json_object_new_int(v.int16_val);
+				}
+				else {
+					memcpy(&v.int8_val, rqst_struct+pos, len);
+					setValue = json_object_new_int((int)v.int8_val);
+				}
+
+				pos = pos + len;
+				json_object_object_add(jobj, paramName, setValue);
+				break;
+			case json_type_ulong:
 			case json_type_uint32:
 			case json_type_uint16:
 			case json_type_uint8:
