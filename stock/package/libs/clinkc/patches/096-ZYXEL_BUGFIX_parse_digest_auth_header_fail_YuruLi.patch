Index: clinkc/src/cybergarage/http/chttp_authentication.c
===================================================================
--- clinkc.orig/src/cybergarage/http/chttp_authentication.c	2017-09-05 11:00:55.693715295 +0800
+++ clinkc/src/cybergarage/http/chttp_authentication.c	2017-09-05 11:01:12.465493645 +0800
@@ -509,15 +509,13 @@
 {
 	char headerArray[512]={0};
 	char nonce[512]={0};
-	char *headerPtr = NULL, *headerLine = NULL, *passphrase = NULL, *tmpBuf = NULL;
+	char *headerPtr = NULL, *headerLine = NULL, *passphrase = NULL;
 	int statusCode = 0;
-	char *p[32], *q[32];
-	char *delim1=", ";
-	char *delim2="=\" ";
+	char *p[32], *q[32], *ptr, *tmp;
 	CgHttpHeader *subheader;
 	char *name, *value, *authMethod;
-	int i = 0, j = 0, k =0, l = 0, num = 0, tmpNum = 0;
-	BOOL isReq = FALSE, isNonce = FALSE;
+	int i = 0;
+	BOOL isReq = FALSE;
 
 	/*ckeck whether the input is http request or response*/
 	if(cg_http_request_isgetrequest((CgHttpRequest *)httpPkt) || cg_http_request_ispostrequest((CgHttpRequest *)httpPkt))
@@ -548,13 +546,13 @@
 	*it is noteworthy that "Basic" auth request header format is different below:
 	*	Authorization: Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ (encode response string)
 	*/
-	authMethod = strtok(headerPtr, " ");
+	authMethod = strtok_r(headerPtr, " ", &tmp);
 	if(authMethod != NULL){
 		if(!isReq)
 			cg_http_packet_setheadervalue(httpPkt, CG_HTTP_WWW_AUTHENTICATION,  authMethod);
 		else if(!strcmp(authMethod, "Basic")){
 			cg_http_packet_setheadervalue(httpPkt, CG_HTTP_AUTHENTICATION,  authMethod);
-			passphrase = strtok(NULL, " ");
+			passphrase = strtok_r(NULL, " ", &tmp);
 			cg_http_packet_setheadervalue(httpPkt, CG_HTTP_RESPONSE,  passphrase);
 			return;
 		}
@@ -564,67 +562,32 @@
 
 	/*detach the authentication header to extract subheaders*/
 	/*prepare header pair to array p[]*/
-	while((p[i]= strtok(NULL, delim1))!=NULL)
+	memset(p,NULL,sizeof(p));
+	while((p[i]= strtok_r(NULL, ",", &tmp))!=NULL)
 		i++;
 
-	for(k=0; k<i; k++){
-		tmpBuf = p[k];
-		if(strstr(p[k], "nonce")){
-			isNonce = TRUE;
-			while(tmpBuf != NULL){
-				num++;
-				tmpBuf++;
-				tmpBuf = strstr(tmpBuf, "=");
-			}
-			num = num - 2;
-			tmpNum = num;
-		}
-		q[j] = strtok(p[k],delim2);
-		j++;
-		while((q[j]=strtok(NULL,delim2))){
-			if(isNonce){
-				sprintf(nonce, "%s%s", nonce,q[j]);
-				if(tmpNum-- > 0)
-					strcat(nonce, "=");
-			}
-			j++;
-		}
-		isNonce = FALSE;
+	for(i=0; p[i]!=NULL; i++){
+		ptr = strchr(p[i], '=');
+		if(ptr == NULL){
+			continue;
+		}
+		*ptr = '\0';
+		name = p[i];
+		while(*name == ' ')//skip space
+			name++;
+		value = ptr+1;
+		if(*value == '\"'){
+			value++;
+			ptr = strrchr(value, '\"');
+			if(ptr) *ptr = '\0';
+		}
+
+		subheader = cg_http_header_new();
+		cg_http_header_setname(subheader, name);
+		cg_http_header_setvalue(subheader, value);
+		cg_http_packet_addheader(httpPkt, subheader);
 	}
-	/*set header pair from retrieve p[]
-	for example, p[0]=name_#1 p[1]=value_#1, p[2]=name_#2 p[3]=value_#2 and so on */
-	while(l<j){
-		if ((name=q[l]) != NULL) {
-			if(!strcmp(name, "nonce")){/*to avoid key of nonce include "=", e.g: nonce="IKDcyqYTBQA=217ef1137ae17a7551ff68f2c2e68f201e0f663c"*/
-				if(num != 0){
-					value = nonce;
-				}
-				else if((value=q[l+1]) == NULL){
-					value = "";
-				}
-			}
-			else if((value=q[l+1]) == NULL){
-				value = "";
-			}
-
-			subheader = cg_http_header_new();
-			cg_http_header_setname(subheader, name);
-			cg_http_header_setvalue(subheader, value);
-			cg_http_packet_addheader(httpPkt, subheader);
-		}
 
-		if(!strcmp(name, "nonce")){
-			if(num != 0){
-				l = l + num + 2 ;
-			}
-			else{
-				l = l+2;
-			}
-		}
-		else{
-			l = l+2;
-		}
-	}
 }
 
 /****************************************************************************
