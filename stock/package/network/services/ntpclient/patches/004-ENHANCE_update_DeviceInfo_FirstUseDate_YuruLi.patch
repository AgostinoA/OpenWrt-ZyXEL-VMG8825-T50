Index: ntpclient-2007/extern.c
===================================================================
--- ntpclient-2007.orig/extern.c	2017-03-30 15:44:26.999335721 +0800
+++ ntpclient-2007/extern.c	2017-03-30 16:56:17.335371390 +0800
@@ -49,12 +49,12 @@
 	return ret;
 }
 
-void handle_ntpsync_success(void)
+void handle_ntpsync_success(char *dateTime)
 {
 	zcfgRet_t ret;
 
 	/* send ZCFG_MSG_MGABDEV_DETECT to ESMD for notification  */
-	ret = ntpclient_msg_send(ZCFG_MSG_NTP_SYNC_SUCCESS, 0, NULL);
+	ret = ntpclient_msg_send(ZCFG_MSG_NTP_SYNC_SUCCESS, strlen(dateTime)+1, dateTime);
 	if(ret != ZCFG_SUCCESS && ret != ZCFG_SUCCESS_AND_NO_REPLY)
 		printf( "%s ntpclient_msg_send fail,ret=%d", __func__, ret);
 
Index: ntpclient-2007/ntpclient.c
===================================================================
--- ntpclient-2007.orig/ntpclient.c	2017-03-30 15:44:26.987335721 +0800
+++ ntpclient-2007/ntpclient.c	2017-03-30 16:56:09.025833213 +0800
@@ -141,6 +141,7 @@
 	unsigned short isResolv;
 } NTP_SERVER;
 static int srv_stop = 0;
+char dateTime[32] = {0};
 #endif
 
 struct ntp_control {
@@ -233,6 +234,13 @@
 		printf("set time to %lu.%.6lu\n", tv_set.tv_sec, tv_set.tv_usec);
 	}
 #endif
+
+#ifdef ZyXEL_PATCH
+	struct tm *tm_ptr;
+	tm_ptr = localtime(&(tv_set.tv_sec));
+	strftime(dateTime, sizeof(dateTime), "%Y-%m-%dT%H:%M:%S", tm_ptr);
+#endif
+
 }
 
 static void ntpc_gettime(u32 *time_coarse, u32 *time_fine)
@@ -937,7 +945,7 @@
 			if(ntpc.set_clock){
 				system("date > "SNTP_RESULT_FILE);
 				/*notify the ntp sync success , by charisse*/
-				handle_ntpsync_success();
+				handle_ntpsync_success(dateTime);
 			}
 			/* best rollover option: specify -g, -s, and -l.
 			 * simpler rollover option: specify -s and -l, which
Index: ntpclient-2007/ntpclient.h
===================================================================
--- ntpclient-2007.orig/ntpclient.h	2017-03-30 15:44:26.959335721 +0800
+++ ntpclient-2007/ntpclient.h	2017-03-30 16:17:04.036934572 +0800
@@ -15,6 +15,6 @@
 
 #ifdef ZyXEL_PATCH
 void ntpclient_eid_register( void );
-void handle_ntpsync_success(void);
+void handle_ntpsync_success(char*);
 #endif
 #endif
\ No newline at end of file
