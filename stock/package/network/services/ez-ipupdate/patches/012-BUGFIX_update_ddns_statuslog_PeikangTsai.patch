Index: ez-ipupdate-3.0.11b8/ez-ipupdate.c
===================================================================
--- ez-ipupdate-3.0.11b8.orig/ez-ipupdate.c	2016-05-12 17:49:50.466098428 +0800
+++ ez-ipupdate-3.0.11b8/ez-ipupdate.c	2016-05-12 17:56:13.930105784 +0800
@@ -2540,8 +2540,7 @@
 	success[0]='1';
   }
   DDNS_StatusLog();
-
-  return(retval);
+    return(retval);
 }
 
 int PGPOW_check_info(void)
@@ -4311,6 +4310,7 @@
     if(!(options & OPT_QUIET))
     {
       show_message("error connecting to %s:%s\n", server, port);
+	  
     }
     return(UPDATERES_ERROR);
   }
@@ -4576,6 +4576,7 @@
       if(!(options & OPT_QUIET))
       {
         show_message("authentication failure\n");
+		DDNS_StatusLog();
       }
       return(UPDATERES_SHUTDOWN);
       break;
@@ -4589,9 +4590,11 @@
         show_message("unknown return code: %d\n", ret);
         fprintf(stderr, "server response: %s\n", auth);
       }
+	  DDNS_StatusLog();
       return(UPDATERES_ERROR);
       break;
   }
+  DDNS_StatusLog();
 
   return(UPDATERES_OK);
 }
@@ -4633,7 +4636,7 @@
   {
     if(!(options & OPT_QUIET))
     {
-      show_message("error connecting to %s:%s\n", server, port);
+      show_message("error connecting to %s:%s\n", server, port);  
     }
     return(UPDATERES_ERROR);
   }
@@ -4698,6 +4701,8 @@
         {
           printf("request successful\n");
         }
+		success[0] = '0';
+  		DDNS_StatusLog();
       }
       else
       {
@@ -4706,15 +4711,20 @@
         {
           fprintf(stderr, "server output: %s\n", buf);
         }
+		success[0] = '1';
+  		DDNS_StatusLog();
         return(UPDATERES_ERROR);
       }
+	  
       break;
 
     case 401:
       if(!(options & OPT_QUIET))
       {
         show_message("authentication failure\n");
+		success[0] = '1';
       }
+	  DDNS_StatusLog();
       return(UPDATERES_SHUTDOWN);
       break;
 
@@ -4730,7 +4740,7 @@
       return(UPDATERES_ERROR);
       break;
   }
-
+  DDNS_StatusLog();
   return(UPDATERES_OK);
 }
 
@@ -6281,6 +6291,7 @@
         else
         {
           show_message("could not resolve ip address for %s\n", interface);
+		  DDNS_StatusLog();
           exit(1);
         }
         close(sock);
