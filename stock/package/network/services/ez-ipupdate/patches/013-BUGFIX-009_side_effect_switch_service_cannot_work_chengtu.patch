Index: ez-ipupdate-3.0.11b8/ez-ipupdate.c
===================================================================
--- ez-ipupdate-3.0.11b8.orig/ez-ipupdate.c	2016-08-02 13:21:05.411058893 +0800
+++ ez-ipupdate-3.0.11b8/ez-ipupdate.c	2016-08-02 13:21:37.028363500 +0800
@@ -320,7 +320,7 @@
 char *notify_email = NULL;
 char *pid_file = NULL;
 char *partner = NULL;
-char *currentip = NULL;
+//char *currentip = NULL;
 
 static volatile int client_sockfd;
 static volatile int last_sig = 0;
@@ -1755,22 +1755,57 @@
  */
 int Check_Host_IP() {
   struct hostent *hp = gethostbyname(host);
+  FILE *fp = NULL;
+  char buf[128] = {0};
+  int ret = 0;
+
+  if(!access("/var/log/ddns_status.log", F_OK)) {
+    fp = fopen("/var/log/ddns_status.log", "r");
+    char c;
+    int i = 0;
+    while((c = fgetc(fp)) != EOF) {
+      if(c == '\n') continue;
+      buf[i++] = c;
+    }
+    printf("%s\n", buf);
+    if((strstr(buf, "dyndns") != NULL) &&
+      ((strstr(buf, "Not") == NULL) && (strstr(buf, "Accepted") != NULL))) {
+      // "dyndns" hard code only for dyndns service
+      printf("Service is DynDNS and update status is Accepted\n");
+      if(hp == NULL) {
+        printf("Get host IP failed!\n"); // no such domain name or connection fail
+        ret = UPDATERES_ERROR;
+        goto exit;
+      }
+      if(strstr(buf, host) == NULL) {
+        printf("Host name changed!\n");
+        ret = UPDATERES_OK;
+        goto exit;
+      }
+      if(strcmp(inet_ntoa(*(struct in_addr*)(hp->h_addr_list[0])), address) == 0) {
+        dprintf((stderr, "Updated IP: %s, current IP: %s\n", inet_ntoa(*(struct in_addr*)(hp->h_addr_list[0])), address));
+        printf("IP has not changed since the last update, stop update!\n");
+        ret = -2;
+        goto exit;
+      } else {
+        printf("IP changed!\n");
+        ret = UPDATERES_OK;
+        goto exit;
+      }
+    } else {
+      printf("Not DynDNS service or not accepted, do nothing and keep going.\n");
+      ret = UPDATERES_OK;
+      goto exit;
+    }
 
-  if(hp == NULL) {
-    printf("Get host IP failed\n"); // no such domain name or still not regist yet
-    //free(currentip);
-	return -1;
   } else {
-    if(strcmp(inet_ntoa(*(struct in_addr*)(hp->h_addr_list[0])), currentip) == 0) {
-      printf("Updated IP has not changed since the last update, stop update!\n");
-      dprintf((stderr, "Updated IP: %s, current IP: %s\n", inet_ntoa(*(struct in_addr*)(hp->h_addr_list[0])), currentip));
-      //free(currentip);
-      return -2;
-    }
-    printf("Updated IP: %s, current IP: %s\nGo on with DDNS update\n", inet_ntoa(*(struct in_addr*)(hp->h_addr_list[0])), currentip);
-    //free(currentip);
-    return 0;
+    printf("no file means after booting or first time enabled, do nothing and keep going\n");
+    return UPDATERES_OK;
   }
+
+exit:
+  fclose(fp);
+  return ret;
 }
 
 void DDNS_StatusLog(){
@@ -1786,8 +1821,9 @@
         printf("\nStart DDNS_StatusLog\n");
         fprintf(fp,"%s",address_log);/*updated address*/
         fprintf(fp,"/Accepted"); /*updated is success.*/
-		fprintf(fp,"/%s",host);
-		fprintf(fp,"/%s",asctime (timeinfo) );
+        fprintf(fp,"/%s",host);
+        fprintf(fp,"/%s",asctime (timeinfo) );
+        fprintf(fp, "/%s", service->title);
         if ((fplog = fopen("/var/log/ddns_status_time.log", "w+")) != NULL )
         {
             fprintf(fplog,"%s",asctime (timeinfo));
@@ -1799,8 +1835,9 @@
         fprintf(stderr, "Can not get IP Address in DDNS_StatusLog\n");
         fprintf(fp,"%s",address_log);
         fprintf(fp,"/Not Accepted"); /*updated is fail.*/
-		fprintf(fp,"/%s",host);
+        fprintf(fp,"/%s",host);
         fprintf(fp,"/%s",asctime (timeinfo) );
+        fprintf(fp, "/%s", service->title);
     }
   }
   else{
@@ -2006,7 +2043,7 @@
   {
     memcpy(sin, &(ifr.ifr_addr), sizeof(struct sockaddr_in));
     dprintf((stderr, "%s: %s\n", name, inet_ntoa(sin->sin_addr)));
-	currentip = strdup(inet_ntoa(sin->sin_addr));
+    //currentip = strdup(inet_ntoa(sin->sin_addr));
     return 0;
   }
   else
@@ -2283,7 +2320,8 @@
   int ddns = Check_Host_IP();
   if(ddns == -2) {
     printf("DynDNS stop update!\n");
-    return UPDATERES_ERROR;
+    DDNS_StatusLog();
+    return UPDATERES_SHUTDOWN;
   }
 
   if(do_connect((int*)&client_sockfd, server, port) != 0)
@@ -2534,7 +2572,7 @@
   if(retval == UPDATERES_OK)
   	break;
   }
-  free(currentip);
+  //free(currentip);
 #endif
   if(retval != UPDATERES_OK){
 	success[0]='1';
