Index: net-snmp-5.7.2/agent/mibgroup/ZYXEL-PRESTIGE-MIB/prestigeXDSL.c
===================================================================
--- net-snmp-5.7.2.orig/agent/mibgroup/ZYXEL-PRESTIGE-MIB/prestigeXDSL.c	2016-06-14 13:44:57.389599212 +0800
+++ net-snmp-5.7.2/agent/mibgroup/ZYXEL-PRESTIGE-MIB/prestigeXDSL.c	2016-06-14 13:46:34.822317966 +0800
@@ -19,7 +19,24 @@
     static oid DSLModemUptime_oid[] = { 1,3,6,1,4,1,890,1,2,1,6,3 };
     static oid DSLModemDowntime_oid[] = { 1,3,6,1,4,1,890,1,2,1,6,4 };
 #endif	
-	static oid DSLDiagnostic_oid[] = { 1,3,6,1,4,1,890,1,2,1,6,1 };
+	static oid DSLDiagnostic_Max_USRate_oid[] = { 1,3,6,1,4,1,890,1,2,1,6,1 };
+	static oid DSLDiagnostic_Max_DSRate_oid[] = { 1,3,6,1,4,1,890,1,2,1,6,2 };
+	static oid DSLDiagnostic_Bearer_oid[] = { 1,3,6,1,4,1,890,1,2,1,6,3 };
+	static oid DSLDiagnostic_Bearer_USRate_oid[] = { 1,3,6,1,4,1,890,1,2,1,6,4 };
+	static oid DSLDiagnostic_Bearer_DSRate_oid[] = { 1,3,6,1,4,1,890,1,2,1,6,5 };
+	static oid DSLDiagnostic_Mode_oid[] = { 1,3,6,1,4,1,890,1,2,1,6,6 };
+	static oid DSLDiagnostic_Prof_oid[] = { 1,3,6,1,4,1,890,1,2,1,6,7 };
+	static oid DSLDiagnostic_DS_SNR_oid[] = { 1,3,6,1,4,1,890,1,2,1,6,8 };
+	static oid DSLDiagnostic_US_SNR_oid[] = { 1,3,6,1,4,1,890,1,2,1,6,9 };
+	static oid DSLDiagnostic_DS_ES_oid[] = { 1,3,6,1,4,1,890,1,2,1,6,10 };
+	static oid DSLDiagnostic_US_ES_oid[] = { 1,3,6,1,4,1,890,1,2,1,6,11 };
+	static oid DSLDiagnostic_DS_SES_oid[] = { 1,3,6,1,4,1,890,1,2,1,6,12 };
+	static oid DSLDiagnostic_US_SES_oid[] = { 1,3,6,1,4,1,890,1,2,1,6,13 };
+	static oid DSLDiagnostic_DS_UAS_oid[] = { 1,3,6,1,4,1,890,1,2,1,6,14 };
+	static oid DSLDiagnostic_US_UAS_oid[] = { 1,3,6,1,4,1,890,1,2,1,6,15 };
+	static oid DSLDiagnostic_DS_Bitswap_oid[] = { 1,3,6,1,4,1,890,1,2,1,6,16 };
+	static oid DSLDiagnostic_US_Bitswap_oid[] = { 1,3,6,1,4,1,890,1,2,1,6,17 };
+
 
   DEBUGMSGTL(("prestigeXDSL", "Initializing\n"));
 
@@ -46,8 +63,88 @@
         ));
 #endif
     netsnmp_register_scalar(
-        netsnmp_create_handler_registration("DSLDiagnostic", handle_DSLDiagnostic,
-                               DSLDiagnostic_oid, OID_LENGTH(DSLDiagnostic_oid),
+        netsnmp_create_handler_registration("DSLDiagMaxUSRate", handle_DSLDiagnostic,
+                               DSLDiagnostic_Max_USRate_oid, OID_LENGTH(DSLDiagnostic_Max_USRate_oid),
+                               HANDLER_CAN_RONLY
+        ));		
+    netsnmp_register_scalar(
+        netsnmp_create_handler_registration("DSLDiagMaxDSRate", handle_DSLDiagnostic,
+                               DSLDiagnostic_Max_DSRate_oid, OID_LENGTH(DSLDiagnostic_Max_DSRate_oid),
+                               HANDLER_CAN_RONLY
+        ));		
+    netsnmp_register_scalar(
+        netsnmp_create_handler_registration("DSLDiagBearer", handle_DSLDiagnostic,
+                               DSLDiagnostic_Bearer_oid, OID_LENGTH(DSLDiagnostic_Bearer_oid),
+                               HANDLER_CAN_RONLY
+        ));		
+    netsnmp_register_scalar(
+        netsnmp_create_handler_registration("DSLDiagBearerUSRate", handle_DSLDiagnostic,
+                               DSLDiagnostic_Bearer_USRate_oid, OID_LENGTH(DSLDiagnostic_Bearer_USRate_oid),
+                               HANDLER_CAN_RONLY
+        ));		
+    netsnmp_register_scalar(
+        netsnmp_create_handler_registration("DSLDiagBearerDSRate", handle_DSLDiagnostic,
+                               DSLDiagnostic_Bearer_DSRate_oid, OID_LENGTH(DSLDiagnostic_Bearer_DSRate_oid),
+                               HANDLER_CAN_RONLY
+        ));		
+    netsnmp_register_scalar(
+        netsnmp_create_handler_registration("DSLDiagMode", handle_DSLDiagnostic,
+                               DSLDiagnostic_Mode_oid, OID_LENGTH(DSLDiagnostic_Mode_oid),
+                               HANDLER_CAN_RONLY
+        ));		
+    netsnmp_register_scalar(
+        netsnmp_create_handler_registration("DSLDiagProf", handle_DSLDiagnostic,
+                               DSLDiagnostic_Prof_oid, OID_LENGTH(DSLDiagnostic_Prof_oid),
+                               HANDLER_CAN_RONLY
+        ));		
+    netsnmp_register_scalar(
+        netsnmp_create_handler_registration("DSLDiagDS_SNR", handle_DSLDiagnostic,
+                               DSLDiagnostic_DS_SNR_oid, OID_LENGTH(DSLDiagnostic_DS_SNR_oid),
+                               HANDLER_CAN_RONLY
+        ));		
+    netsnmp_register_scalar(
+        netsnmp_create_handler_registration("DSLDiagUS_SNR", handle_DSLDiagnostic,
+                               DSLDiagnostic_US_SNR_oid, OID_LENGTH(DSLDiagnostic_US_SNR_oid),
+                               HANDLER_CAN_RONLY
+        ));		
+    netsnmp_register_scalar(
+        netsnmp_create_handler_registration("DSLDiagDS_ES", handle_DSLDiagnostic,
+                               DSLDiagnostic_DS_ES_oid, OID_LENGTH(DSLDiagnostic_DS_ES_oid),
+                               HANDLER_CAN_RONLY
+        ));		
+    netsnmp_register_scalar(
+        netsnmp_create_handler_registration("DSLDiagUS_ES", handle_DSLDiagnostic,
+                               DSLDiagnostic_US_ES_oid, OID_LENGTH(DSLDiagnostic_US_ES_oid),
+                               HANDLER_CAN_RONLY
+        ));		
+    netsnmp_register_scalar(
+        netsnmp_create_handler_registration("DSLDiagDS_SES", handle_DSLDiagnostic,
+                               DSLDiagnostic_DS_SES_oid, OID_LENGTH(DSLDiagnostic_DS_SES_oid),
+                               HANDLER_CAN_RONLY
+        ));		
+    netsnmp_register_scalar(
+        netsnmp_create_handler_registration("DSLDiagUS_SES", handle_DSLDiagnostic,
+                               DSLDiagnostic_US_SES_oid, OID_LENGTH(DSLDiagnostic_US_SES_oid),
+                               HANDLER_CAN_RONLY
+        ));		
+    netsnmp_register_scalar(
+        netsnmp_create_handler_registration("DSLDiagDS_UAS", handle_DSLDiagnostic,
+                               DSLDiagnostic_DS_UAS_oid, OID_LENGTH(DSLDiagnostic_DS_UAS_oid),
+                               HANDLER_CAN_RONLY
+        ));		
+    netsnmp_register_scalar(
+        netsnmp_create_handler_registration("DSLDiagUS_UAS", handle_DSLDiagnostic,
+                               DSLDiagnostic_US_UAS_oid, OID_LENGTH(DSLDiagnostic_US_UAS_oid),
+                               HANDLER_CAN_RONLY
+        ));		
+    netsnmp_register_scalar(
+        netsnmp_create_handler_registration("DSLDiagDS_Bitswap", handle_DSLDiagnostic,
+                               DSLDiagnostic_DS_Bitswap_oid, OID_LENGTH(DSLDiagnostic_DS_Bitswap_oid),
+                               HANDLER_CAN_RONLY
+        ));		
+    netsnmp_register_scalar(
+        netsnmp_create_handler_registration("DSLDiagUS_Bitswap", handle_DSLDiagnostic,
+                               DSLDiagnostic_US_Bitswap_oid, OID_LENGTH(DSLDiagnostic_US_Bitswap_oid),
                                HANDLER_CAN_RONLY
         ));		
 }
@@ -181,12 +278,180 @@
 	we don't need to loop over a list of requests; we'll only get one. */
 	FILE *pop = NULL;
 	char result[512] = {0}, lst[128] = {0};
-	pop = popen("xdslctl info --show | egrep \"((Max|Bearer|Mode|Profile|ES|SES|UAS|Bitswap):|SNR)\"", "r");
-	if(pop != NULL){
-		while((fgets(lst, 128, pop)) != NULL) {
-			strcat(result, lst);				
+	if(strcmp(reginfo->handlerName, "DSLDiagMaxUSRate") == 0)
+	{
+		pop = popen("xdslctl info --show | grep \"Max\" | awk \'{print $5 $6}\'", "r");
+		if(pop != NULL){
+			if((fgets(lst, 128, pop)) != NULL) {
+				strcat(result, lst);				
+			}
+			pclose(pop);
+		}
+	}
+	else if(strcmp(reginfo->handlerName, "DSLDiagMaxDSRate") == 0)
+	{
+		pop = popen("xdslctl info --show | grep \"Max\" | awk \'{print $10 $11}\'", "r");
+		if(pop != NULL){
+			if((fgets(lst, 128, pop)) != NULL) {
+				strcat(result, lst);				
+			}
+			pclose(pop);
+		}
+	}
+	else if(strcmp(reginfo->handlerName, "DSLDiagBearer") == 0)
+	{
+		pop = popen("xdslctl info --show | grep \"Bearer\" | awk \'{print $2}\'", "r");
+		if(pop != NULL){
+			if((fgets(lst, 128, pop)) != NULL) {
+				strcat(result, lst);				
+			}
+			pclose(pop);
+		}
+	}
+	else if(strcmp(reginfo->handlerName, "DSLDiagBearerUSRate") == 0)
+	{
+		pop = popen("xdslctl info --show | grep \"Bearer\" | awk \'{print $6 $7}\'", "r");
+		if(pop != NULL){
+			if((fgets(lst, 128, pop)) != NULL) {
+				strcat(result, lst);				
+			}
+			pclose(pop);
+		}
+	}
+	else if(strcmp(reginfo->handlerName, "DSLDiagBearerDSRate") == 0)
+	{
+		pop = popen("xdslctl info --show | grep \"Bearer\" | awk \'{print $11 $12}\'", "r");
+		if(pop != NULL){
+			if((fgets(lst, 128, pop)) != NULL) {
+				strcat(result, lst);				
+			}
+			pclose(pop);
+		}
+	}
+	else if(strcmp(reginfo->handlerName, "DSLDiagMode") == 0)
+	{
+		pop = popen("xdslctl info --show | grep \"Mode\" | awk \'{print $2 $3 $4}\'", "r");
+		if(pop != NULL){
+			if((fgets(lst, 128, pop)) != NULL) {
+				strcat(result, lst);				
+			}
+			pclose(pop);
+		}
+	}
+	else if(strcmp(reginfo->handlerName, "DSLDiagProf") == 0)
+	{
+		pop = popen("xdslctl info --show | grep \"Profile\" | awk \'{print $4}\'", "r");
+		if(pop != NULL){
+			if((fgets(lst, 128, pop)) != NULL) {
+				strcat(result, lst);				
+			}
+			pclose(pop);
+		}
+	}
+	else if(strcmp(reginfo->handlerName, "DSLDiagDS_SNR") == 0)
+	{
+		pop = popen("xdslctl info --show | grep \"SNR\" | awk \'{print $3}\'", "r");
+		if(pop != NULL){
+			if((fgets(lst, 128, pop)) != NULL) {
+				strcat(result, lst);				
+			}
+			pclose(pop);
 		}
-		pclose(pop);
+	}
+	else if(strcmp(reginfo->handlerName, "DSLDiagUS_SNR") == 0)
+	{
+		pop = popen("xdslctl info --show | grep \"SNR\" | awk \'{print $4}\'", "r");
+		if(pop != NULL){
+			if((fgets(lst, 128, pop)) != NULL) {
+				strcat(result, lst);				
+			}
+			pclose(pop);
+		}
+	}
+	else if(strcmp(reginfo->handlerName, "DSLDiagDS_ES") == 0)
+	{
+		pop = popen("xdslctl info --show | grep \"ES\" | awk \'{print $2}\'", "r");
+		if(pop != NULL){
+			if((fgets(lst, 128, pop)) != NULL) {
+				strcat(result, lst);				
+			}
+			pclose(pop);
+		}
+	}
+	else if(strcmp(reginfo->handlerName, "DSLDiagUS_ES") == 0)
+	{
+		pop = popen("xdslctl info --show | grep \"ES\" | awk \'{print $3}\'", "r");
+		if(pop != NULL){
+			if((fgets(lst, 128, pop)) != NULL) {
+				strcat(result, lst);				
+			}
+			pclose(pop);
+		}
+	}
+	else if(strcmp(reginfo->handlerName, "DSLDiagDS_SES") == 0)
+	{
+		pop = popen("xdslctl info --show | grep \"SES\" | awk \'{print $2}\'", "r");
+		if(pop != NULL){
+			if((fgets(lst, 128, pop)) != NULL) {
+				strcat(result, lst);				
+			}
+			pclose(pop);
+		}
+	}
+	else if(strcmp(reginfo->handlerName, "DSLDiagUS_SES") == 0)
+	{
+		pop = popen("xdslctl info --show | grep \"SES\" | awk \'{print $3}\'", "r");
+		if(pop != NULL){
+			if((fgets(lst, 128, pop)) != NULL) {
+				strcat(result, lst);				
+			}
+			pclose(pop);
+		}
+	}
+	else if(strcmp(reginfo->handlerName, "DSLDiagDS_UAS") == 0)
+	{
+		pop = popen("xdslctl info --show | grep \"UAS\" | awk \'{print $2}\'", "r");
+		if(pop != NULL){
+			if((fgets(lst, 128, pop)) != NULL) {
+				strcat(result, lst);				
+			}
+			pclose(pop);
+		}
+	}
+	else if(strcmp(reginfo->handlerName, "DSLDiagUS_UAS") == 0)
+	{
+		pop = popen("xdslctl info --show | grep \"UAS\" | awk \'{print $3}\'", "r");
+		if(pop != NULL){
+			if((fgets(lst, 128, pop)) != NULL) {
+				strcat(result, lst);				
+			}
+			pclose(pop);
+		}
+	}
+	else if(strcmp(reginfo->handlerName, "DSLDiagDS_Bitswap") == 0)
+	{
+		pop = popen("xdslctl info --show | grep \"Bitswap\" | awk \'{print $2}\'", "r");
+		if(pop != NULL){
+			if((fgets(lst, 128, pop)) != NULL) {
+				strcat(result, lst);				
+			}
+			pclose(pop);
+		}
+	}
+	else if(strcmp(reginfo->handlerName, "DSLDiagUS_Bitswap") == 0)
+	{
+		pop = popen("xdslctl info --show | grep \"Bitswap\" | awk \'{print $3}\'", "r");
+		if(pop != NULL){
+			if((fgets(lst, 128, pop)) != NULL) {
+				strcat(result, lst);				
+			}
+			pclose(pop);
+		}
+	}
+	else
+	{
+		snmp_log(LOG_ERR, "unknown name (%s) in %s\n", reginfo->handlerName,__FUNCTION__ );
+		return SNMP_ERR_GENERR;
 	}
 
 	switch(reqinfo->mode) {
@@ -203,4 +468,4 @@
 	}
 
 	return SNMP_ERR_NOERROR;
-}
\ No newline at end of file
+}
