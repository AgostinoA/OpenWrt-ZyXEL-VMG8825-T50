Index: libzcfg_fe_dal-1.0/network/usbService/zcfg_fe_dal_usb_samba.c
===================================================================
--- libzcfg_fe_dal-1.0.orig/network/usbService/zcfg_fe_dal_usb_samba.c	2018-02-12 19:10:38.047809976 +0800
+++ libzcfg_fe_dal-1.0/network/usbService/zcfg_fe_dal_usb_samba.c	2018-02-12 19:11:33.539811751 +0800
@@ -92,9 +92,8 @@
 	zcfgRet_t ret = ZCFG_SUCCESS, ret1 = ZCFG_SUCCESS;
 	struct json_object *sambadirObj = NULL;
 	objIndex_t sambadirIid = {0};
-
-	const char *HostName = NULL;
-	const char *FolderName = NULL;
+	const char *HostName = NULL, *curHostName = NULL;
+	const char *FolderName = NULL, *curFolderName = NULL;
 	const char *Description = NULL;
 	char ValidUser[128] = {0};
 	const char *Validuser_gui = NULL;
@@ -133,14 +132,20 @@
 			return ZCFG_INVALID_PARAM_VALUE;
 		}
 	}
-
-	if(json_object_object_get(Jobj, "HostName")){
-		ret = dalcmdParamCheck(NULL, RootPath, RDM_OID_ZY_SAMBA_DIR, "X_ZYXEL_RootPath", "RootPath", replyMsg);
-		ret1 = dalcmdParamCheck(NULL, HostName, RDM_OID_ZY_SAMBA_DIR, "X_ZYXEL_Hostname", "HostName", replyMsg);
-		if(ret != ZCFG_SUCCESS && ret1 != ZCFG_SUCCESS)
-			return ret;
-	}
 	
+	IID_INIT(sambadirIid);
+	while(zcfgFeObjJsonGetNextWithoutUpdate(RDM_OID_ZY_SAMBA_DIR, &sambadirIid, &sambadirObj) == ZCFG_SUCCESS) {
+		curHostName = json_object_get_string(json_object_object_get(sambadirObj, "X_ZYXEL_Hostname"));
+		curFolderName = json_object_get_string(json_object_object_get(sambadirObj, "X_ZYXEL_FolderName"));
+		if( !strcmp(curHostName, HostName) && !strcmp(curFolderName, FolderName)){
+			strcpy(replyMsg, "Folder is duplicate");
+			zcfgFeJsonObjFree(sambadirObj);
+			return ZCFG_INVALID_PARAM_VALUE;	
+		}
+			zcfgFeJsonObjFree(sambadirObj);
+	}
+
+	IID_INIT(sambadirIid);
  	if(zcfgFeObjJsonAdd(RDM_OID_ZY_SAMBA_DIR, &sambadirIid, NULL) == ZCFG_SUCCESS){
 		if(zcfgFeObjJsonGet(RDM_OID_ZY_SAMBA_DIR, &sambadirIid, &sambadirObj) == ZCFG_SUCCESS){
 			json_object_object_add(sambadirObj, "X_ZYXEL_RootPath", json_object_new_string(RootPath));
