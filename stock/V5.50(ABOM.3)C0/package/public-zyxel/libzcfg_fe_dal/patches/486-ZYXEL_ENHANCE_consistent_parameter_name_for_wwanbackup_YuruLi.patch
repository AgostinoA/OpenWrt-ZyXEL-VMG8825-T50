Index: libzcfg_fe_dal-1.0/network/broadband/zcfg_fe_dal_wwanbackup.c
===================================================================
--- libzcfg_fe_dal-1.0.orig/network/broadband/zcfg_fe_dal_wwanbackup.c	2018-02-27 15:33:30.125824561 +0800
+++ libzcfg_fe_dal-1.0/network/broadband/zcfg_fe_dal_wwanbackup.c	2018-02-27 15:33:31.649824573 +0800
@@ -16,6 +16,11 @@
 #define CWMP_SOAP_MSG_DEBUG (1 << 1)
 
 dal_param_t WWANBACKUP_param[]={
+/* set 3G object */
+{"Enable_3G", dalType_boolean, 0, 0, NULL},
+{"DialNumber", dalType_string, 0, 0, NULL},
+{"APN", dalType_string, 0, 0, NULL},
+{"PIN_Code", dalType_string, 0, 0, NULL},
 /* set IPV4 object */
 {"IPStatic", dalType_boolean,	0,	0,	NULL},
 {"IPAddress", dalType_v4Addr,	0,	0,	NULL},
@@ -59,11 +64,6 @@
 {"Bdg_LogEnable", dalType_boolean, 0, 0, NULL},
 {"Bdg_LogInterval", dalType_int, 0, 0, NULL},
 {"ResetNow", dalType_boolean, 0, 0, NULL},
-/* set 3G object */
-{"Enable_3G", dalType_boolean, 0, 0, NULL},
-{"DialNumber", dalType_string, 0, 0, NULL},
-{"APN", dalType_string, 0, 0, NULL},
-{"PIN_Code", dalType_string, 0, 0, NULL},
 /* set Email object */
 {"Email_Enable", dalType_boolean, 0, 0, NULL},
 {"Email_Subject", dalType_string, 0, 0, NULL},
@@ -703,10 +703,10 @@
 	int disconnectTime = 0;
 
 	if(zcfgFeObjJsonGetWithoutUpdate(RDM_OID_ZY_W_W_A_N_BACKUP, &wwanBackupIid, &wwanBackupObj) == ZCFG_SUCCESS){
-		json_object_object_add(paramJobj, "BackupEnable", JSON_OBJ_COPY(json_object_object_get(wwanBackupObj, "Enable")));
+		json_object_object_add(paramJobj, "Enable_3G", JSON_OBJ_COPY(json_object_object_get(wwanBackupObj, "Enable")));
 		json_object_object_add(paramJobj, "DialNumber", JSON_OBJ_COPY(json_object_object_get(wwanBackupObj, "DialNumber")));
 		json_object_object_add(paramJobj, "APN", JSON_OBJ_COPY(json_object_object_get(wwanBackupObj, "APN")));
-		json_object_object_add(paramJobj, "PIN", JSON_OBJ_COPY(json_object_object_get(wwanBackupObj, "PIN")));
+		json_object_object_add(paramJobj, "PIN_Code", JSON_OBJ_COPY(json_object_object_get(wwanBackupObj, "PIN")));
 		json_object_object_add(paramJobj, "Manufacturer", JSON_OBJ_COPY(json_object_object_get(wwanBackupObj, "Manufacturer")));
 		curIpIface = json_object_get_string(json_object_object_get(wwanBackupObj, "Interface"));
 		curPPPIface = json_object_get_string(json_object_object_get(wwanBackupObj, "PPPInterface"));
@@ -720,32 +720,39 @@
 	sscanf(ipIface, "IP.Interface.%hhu", &ipIfaceV4Iid.idx[0]);
 	ipIfaceV4Iid.idx[1] = 1;
 	if(zcfgFeObjJsonGetWithoutUpdate(RDM_OID_IP_IFACE_V4_ADDR, &ipIfaceV4Iid, &ipIfaceV4Obj) == ZCFG_SUCCESS){
-		json_object_object_add(paramJobj, "IPType", json_object_new_string("Static"));
-		json_object_object_add(paramJobj, "IPAddr", JSON_OBJ_COPY(json_object_object_get(ipIfaceV4Obj, "IPAddress")));
-		json_object_object_add(paramJobj, "SubMask", JSON_OBJ_COPY(json_object_object_get(ipIfaceV4Obj, "SubnetMask")));
+		Jaddb(paramJobj,"IPStatic",true);
+		Jadds(paramJobj, "IPAddress", Jgets(ipIfaceV4Obj, "IPAddress"));
+		Jadds(paramJobj, "SubnetMask", Jgets(ipIfaceV4Obj, "SubnetMask"));
 		zcfgFeJsonObjFree(ipIfaceV4Obj);
 	}
-	else
-		json_object_object_add(paramJobj, "IPType", json_object_new_string("Automatically"));
+	else{
+		Jaddb(paramJobj,"IPStatic",false);
+		Jadds(paramJobj, "IPAddress", "");
+		Jadds(paramJobj, "SubnetMask",  "");
+	}
 
 	while(zcfgFeObjJsonGetNextWithoutUpdate(RDM_OID_DNS_CLIENT_SRV, &dnsIid, &dnsObj) == ZCFG_SUCCESS){
 		if(!strcmp(ipIface,json_object_get_string(json_object_object_get(dnsObj, "Interface")))){
 			dnsServer = json_object_get_string(json_object_object_get(dnsObj, "DNSServer"));
 			primaryDns = strtok_r(dnsServer, ",", &secondaryDns);
 			json_object_object_add(paramJobj, "DNSType", json_object_new_string("Static DNS"));
-			json_object_object_add(paramJobj, "PrimaryDns", json_object_new_string(primaryDns));
+			Jaddb(paramJobj, "DNSStatic", true);
+			json_object_object_add(paramJobj, "PrimDNSServer", json_object_new_string(primaryDns));
 			if(secondaryDns)
-				json_object_object_add(paramJobj, "SecondaryDns", json_object_new_string(secondaryDns));
+				json_object_object_add(paramJobj, "SecDNSServer", json_object_new_string(secondaryDns));
 			else
-				json_object_object_add(paramJobj, "SecondaryDns", json_object_new_string(""));
+				json_object_object_add(paramJobj, "SecDNSServer", json_object_new_string(""));
 			staticDns = true;
 			zcfgFeJsonObjFree(dnsObj);
 			break;
 		}
 		zcfgFeJsonObjFree(dnsObj);
 	}
-	if(!staticDns)
-		json_object_object_add(paramJobj, "DNSType", json_object_new_string("Dynamically DNS"));
+	if(!staticDns){
+		Jaddb(paramJobj, "DNSStatic", false);
+		Jadds(paramJobj, "PrimDNSServer", "");
+		Jadds(paramJobj, "SecDNSServer", "");
+	}
 
 	pppIfaceIid.level = 1;
 	sscanf(pppIface, "PPP.Interface.%hhu", &pppIfaceIid.idx[0]);
@@ -753,66 +760,68 @@
 		json_object_object_add(paramJobj, "Username", JSON_OBJ_COPY(json_object_object_get(pppIfaceObj, "Username")));
 		json_object_object_add(paramJobj, "Password", JSON_OBJ_COPY(json_object_object_get(pppIfaceObj, "Password")));
 #ifdef CONFIG_ZYXEL_PPP_AUTH_MENU_CHAP_PAP_CTL
-		json_object_object_add(paramJobj, "authProtocol", JSON_OBJ_COPY(json_object_object_get(pppIfaceObj, "X_ZYXEL_AuthenticationProtocol")));
+		json_object_object_add(paramJobj, "AuthenticationProtocol", JSON_OBJ_COPY(json_object_object_get(pppIfaceObj, "X_ZYXEL_AuthenticationProtocol")));
 #endif
 		
 		ConnectionTrigger = json_object_get_string(json_object_object_get(pppIfaceObj, "ConnectionTrigger"));
+		Jadds(paramJobj, "ConnectionTrigger", ConnectionTrigger);
 		if(!strcmp(ConnectionTrigger, "OnDemand")){
-			json_object_object_add(paramJobj, "ConnectionTrigger", json_object_new_string("On Demand"));
 			disconnectTime = json_object_get_int(json_object_object_get(pppIfaceObj, "IdleDisconnectTime"));
 			if(disconnectTime != 0)
 				disconnectTime = disconnectTime/60;
-			json_object_object_add(paramJobj, "DisconnectionTime",json_object_new_int(disconnectTime));
+			Jaddi(paramJobj, "IdleDisconnectTime", disconnectTime);
 		}
-		else
-			json_object_object_add(paramJobj, "ConnectionTrigger", json_object_new_string("Nailed Up"));
+		else{
+			Jaddi(paramJobj, "IdleDisconnectTime", 0);
+		}
+			
 		zcfgFeJsonObjFree(pppIfaceObj);
 	}
 	if(zcfgFeObjJsonGetWithoutUpdate(RDM_OID_ZY_W_W_A_N_PING_CHECK, &pingIid, &pingObj) == ZCFG_SUCCESS){
-		json_object_object_add(paramJobj, "PingEnable", JSON_OBJ_COPY(json_object_object_get(pingObj, "Enable")));
-		json_object_object_add(paramJobj, "Interval", JSON_OBJ_COPY(json_object_object_get(pingObj, "Interval")));
-		json_object_object_add(paramJobj, "FailLimit", JSON_OBJ_COPY(json_object_object_get(pingObj, "FailLimit")));
-		json_object_object_add(paramJobj, "DefaultGateway", JSON_OBJ_COPY(json_object_object_get(pingObj, "DefaultGateway")));
-		json_object_object_add(paramJobj, "Destination", JSON_OBJ_COPY(json_object_object_get(pingObj, "Destination")));
+		json_object_object_add(paramJobj, "Ping_Enable", JSON_OBJ_COPY(json_object_object_get(pingObj, "Enable")));
+		json_object_object_add(paramJobj, "Ping_Interval", JSON_OBJ_COPY(json_object_object_get(pingObj, "Interval")));
+		json_object_object_add(paramJobj, "Ping_FailLimit", JSON_OBJ_COPY(json_object_object_get(pingObj, "FailLimit")));
+		json_object_object_add(paramJobj, "Ping_DefaultGateway", JSON_OBJ_COPY(json_object_object_get(pingObj, "DefaultGateway")));
+		json_object_object_add(paramJobj, "Ping_Destination", JSON_OBJ_COPY(json_object_object_get(pingObj, "Destination")));
 		zcfgFeJsonObjFree(pingObj);
 	}
 
 	while(zcfgFeObjJsonGetNextWithoutUpdate(RDM_OID_MAIL_EVENT_CFG, &emailIid, &emailObj) == ZCFG_SUCCESS){
 		if(!strcmp("MAILSEND_EVENT_3G_UP", json_object_get_string(json_object_object_get(emailObj, "Event")))){
-			json_object_object_add(paramJobj, "3GUP_Enable", JSON_OBJ_COPY(json_object_object_get(emailObj, "Enable")));
-			json_object_object_add(paramJobj, "3GUP_EmailTo", JSON_OBJ_COPY(json_object_object_get(emailObj, "EmailTo")));
-			json_object_object_add(paramJobj, "3GUP_EmailSubject", JSON_OBJ_COPY(json_object_object_get(emailObj, "EmailSubject")));
-			json_object_object_add(paramJobj, "3GUP_SericeRef", JSON_OBJ_COPY(json_object_object_get(emailObj, "SericeRef")));
+			json_object_object_add(paramJobj, "Email_Enable", JSON_OBJ_COPY(json_object_object_get(emailObj, "Enable")));
+			json_object_object_add(paramJobj, "Email_To", JSON_OBJ_COPY(json_object_object_get(emailObj, "EmailTo")));
+			json_object_object_add(paramJobj, "Email_Subject", JSON_OBJ_COPY(json_object_object_get(emailObj, "EmailSubject")));
+			json_object_object_add(paramJobj, "Email_SericeRef", JSON_OBJ_COPY(json_object_object_get(emailObj, "SericeRef")));
 		}
 		if(!strcmp("MAILSEND_EVENT_3G_BUDGET", json_object_get_string(json_object_object_get(emailObj, "Event")))){
-			json_object_object_add(paramJobj, "3GBUDGET_Enable", JSON_OBJ_COPY(json_object_object_get(emailObj, "Enable")));
-			json_object_object_add(paramJobj, "3GBUDGET_EmailTo", JSON_OBJ_COPY(json_object_object_get(emailObj, "EmailTo")));
-			json_object_object_add(paramJobj, "3GBUDGET_EmailSubject", JSON_OBJ_COPY(json_object_object_get(emailObj, "EmailSubject")));
-			json_object_object_add(paramJobj, "3GBUDGET_SericeRef", JSON_OBJ_COPY(json_object_object_get(emailObj, "SericeRef")));
+			json_object_object_add(paramJobj, "Email_BG_Enable", JSON_OBJ_COPY(json_object_object_get(emailObj, "Enable")));
+			json_object_object_add(paramJobj, "Email_BG_To", JSON_OBJ_COPY(json_object_object_get(emailObj, "EmailTo")));
+			json_object_object_add(paramJobj, "Email_BG_Subject", JSON_OBJ_COPY(json_object_object_get(emailObj, "EmailSubject")));
+			json_object_object_add(paramJobj, "Email_BG_SericeRef", JSON_OBJ_COPY(json_object_object_get(emailObj, "SericeRef")));
 		}
 		zcfgFeJsonObjFree(emailObj);
 	}
 
 	if(zcfgFeObjJsonGetWithoutUpdate(RDM_OID_ZY_W_W_A_N_BUDGET_CONTROL, &budgetIid, &budgetObj) == ZCFG_SUCCESS){
-		json_object_object_add(paramJobj, "BUDGET_Enable", JSON_OBJ_COPY(json_object_object_get(budgetObj, "Enable")));
-		json_object_object_add(paramJobj, "BUDGET_TimeEnable", JSON_OBJ_COPY(json_object_object_get(budgetObj, "TimeEnable")));
-		json_object_object_add(paramJobj, "BUDGET_TimeValue", JSON_OBJ_COPY(json_object_object_get(budgetObj, "TimeValue")));
-		json_object_object_add(paramJobj, "BUDGET_ByteEnable", JSON_OBJ_COPY(json_object_object_get(budgetObj, "ByteEnable")));
-		json_object_object_add(paramJobj, "BUDGET_ByteValue", JSON_OBJ_COPY(json_object_object_get(budgetObj, "ByteValue")));
-		json_object_object_add(paramJobj, "BUDGET_ByteMode", JSON_OBJ_COPY(json_object_object_get(budgetObj, "ByteMode")));
-		json_object_object_add(paramJobj, "BUDGET_PktEnable", JSON_OBJ_COPY(json_object_object_get(budgetObj, "PktEnable")));
-		json_object_object_add(paramJobj, "BUDGET_PktValue", JSON_OBJ_COPY(json_object_object_get(budgetObj, "PktValue")));
-		json_object_object_add(paramJobj, "BUDGET_PktMode", JSON_OBJ_COPY(json_object_object_get(budgetObj, "PktMode")));
-		json_object_object_add(paramJobj, "BUDGET_ResetDay", JSON_OBJ_COPY(json_object_object_get(budgetObj, "ResetDay")));
-		json_object_object_add(paramJobj, "BUDGET_TimeActionEnable", JSON_OBJ_COPY(json_object_object_get(budgetObj, "TimeActionEnable")));
-		json_object_object_add(paramJobj, "BUDGET_TimeActionValue", JSON_OBJ_COPY(json_object_object_get(budgetObj, "TimeActionValue")));
-		json_object_object_add(paramJobj, "BUDGET_ByteActionEnable", JSON_OBJ_COPY(json_object_object_get(budgetObj, "ByteActionEnable")));
-		json_object_object_add(paramJobj, "BUDGET_ByteActionValue", JSON_OBJ_COPY(json_object_object_get(budgetObj, "ByteActionValue")));
-		json_object_object_add(paramJobj, "BUDGET_PktActionEnable", JSON_OBJ_COPY(json_object_object_get(budgetObj, "PktActionEnable")));
-		json_object_object_add(paramJobj, "BUDGET_PktActionValue", JSON_OBJ_COPY(json_object_object_get(budgetObj, "PktActionValue")));
-		json_object_object_add(paramJobj, "BUDGET_DropWWAN", JSON_OBJ_COPY(json_object_object_get(budgetObj, "DropWWAN")));
-		json_object_object_add(paramJobj, "BUDGET_LogEnable", JSON_OBJ_COPY(json_object_object_get(budgetObj, "LogEnable")));
-		json_object_object_add(paramJobj, "BUDGET_LogInterval", JSON_OBJ_COPY(json_object_object_get(budgetObj, "LogInterval")));
+		json_object_object_add(paramJobj, "Bdg_Enable", JSON_OBJ_COPY(json_object_object_get(budgetObj, "Enable")));
+		json_object_object_add(paramJobj, "Bdg_TimeEnable", JSON_OBJ_COPY(json_object_object_get(budgetObj, "TimeEnable")));
+		json_object_object_add(paramJobj, "Bdg_TimeValue", JSON_OBJ_COPY(json_object_object_get(budgetObj, "TimeValue")));
+		json_object_object_add(paramJobj, "Bdg_ByteEnable", JSON_OBJ_COPY(json_object_object_get(budgetObj, "ByteEnable")));
+		json_object_object_add(paramJobj, "Bdg_ByteValue", JSON_OBJ_COPY(json_object_object_get(budgetObj, "ByteValue")));
+		json_object_object_add(paramJobj, "Bdg_ByteMode", JSON_OBJ_COPY(json_object_object_get(budgetObj, "ByteMode")));
+		json_object_object_add(paramJobj, "Bdg_PktEnable", JSON_OBJ_COPY(json_object_object_get(budgetObj, "PktEnable")));
+		json_object_object_add(paramJobj, "Bdg_PktValue", JSON_OBJ_COPY(json_object_object_get(budgetObj, "PktValue")));
+		json_object_object_add(paramJobj, "Bdg_PktMode", JSON_OBJ_COPY(json_object_object_get(budgetObj, "PktMode")));
+		json_object_object_add(paramJobj, "Bdg_ResetDay", JSON_OBJ_COPY(json_object_object_get(budgetObj, "ResetDay")));
+		json_object_object_add(paramJobj, "Bdg_TimeActionEnable", JSON_OBJ_COPY(json_object_object_get(budgetObj, "TimeActionEnable")));
+		json_object_object_add(paramJobj, "Bdg_TimeActionValue", JSON_OBJ_COPY(json_object_object_get(budgetObj, "TimeActionValue")));
+		json_object_object_add(paramJobj, "Bdg_ByteActionEnable", JSON_OBJ_COPY(json_object_object_get(budgetObj, "ByteActionEnable")));
+		json_object_object_add(paramJobj, "Bdg_ByteActionValue", JSON_OBJ_COPY(json_object_object_get(budgetObj, "ByteActionValue")));
+		json_object_object_add(paramJobj, "Bdg_PktActionEnable", JSON_OBJ_COPY(json_object_object_get(budgetObj, "PktActionEnable")));
+		json_object_object_add(paramJobj, "Bdg_PktActionValue", JSON_OBJ_COPY(json_object_object_get(budgetObj, "PktActionValue")));
+		json_object_object_add(paramJobj, "Bdg_DropWWAN", JSON_OBJ_COPY(json_object_object_get(budgetObj, "DropWWAN")));
+		json_object_object_add(paramJobj, "Bdg_LogEnable", JSON_OBJ_COPY(json_object_object_get(budgetObj, "LogEnable")));
+		json_object_object_add(paramJobj, "Bdg_LogInterval", JSON_OBJ_COPY(json_object_object_get(budgetObj, "LogInterval")));
 		zcfgFeJsonObjFree(budgetObj);
 	}
 	json_object_array_add(Jarray, paramJobj);
@@ -828,29 +837,29 @@
 	}
 	obj = json_object_array_get_idx(Jarray, 0);
 	password = json_object_get_string(json_object_object_get(obj, "Password"));
-	pin = json_object_get_string(json_object_object_get(obj, "PIN"));
-	if(!strcmp("DownUp", json_object_get_string(json_object_object_get(obj, "BUDGET_ByteMode"))))
+	pin = json_object_get_string(json_object_object_get(obj, "PIN_Code"));
+	if(!strcmp("DownUp", json_object_get_string(json_object_object_get(obj, "Bdg_ByteMode"))))
 		byteMode = "Download/Upload";
-	else if(!strcmp("Down", json_object_get_string(json_object_object_get(obj, "BUDGET_ByteMode"))))
+	else if(!strcmp("Down", json_object_get_string(json_object_object_get(obj, "Bdg_ByteMode"))))
 		byteMode = "Download";
-	else if(!strcmp("Up", json_object_get_string(json_object_object_get(obj, "BUDGET_ByteMode"))))
+	else if(!strcmp("Up", json_object_get_string(json_object_object_get(obj, "Bdg_ByteMode"))))
 		byteMode = "Upload";
-	if(!strcmp("DownUp", json_object_get_string(json_object_object_get(obj, "BUDGET_PktMode"))))
+	if(!strcmp("DownUp", json_object_get_string(json_object_object_get(obj, "Bdg_PktMode"))))
 		pktMode = "Download/Upload";
-	else if(!strcmp("Down", json_object_get_string(json_object_object_get(obj, "BUDGET_PktMode"))))
+	else if(!strcmp("Down", json_object_get_string(json_object_object_get(obj, "Bdg_PktMode"))))
 		pktMode = "Download";
-	else if(!strcmp("Up", json_object_get_string(json_object_object_get(obj, "BUDGET_PktMode"))))
+	else if(!strcmp("Up", json_object_get_string(json_object_object_get(obj, "Bdg_PktMode"))))
 		pktMode = "Upload";
 	printf("Cellular Backup General: \n");
-	printf("%-30s %-10s \n","Cellular Backup:", json_object_get_string(json_object_object_get(obj, "BackupEnable")));
+	printf("%-30s %-10s \n","Cellular Backup:", json_object_get_string(json_object_object_get(obj, "Enable_3G")));
 	printf("\nTrigger Cellular backup when physical link of primary WAN is down \n");
-	printf("%-30s %-10s \n","Ping Check:", json_object_get_string(json_object_object_get(obj, "PingEnable")));
-	printf("%-30s %-10s \n","Check Cycle:", json_object_get_string(json_object_object_get(obj, "Interval")));
-	printf("%-30s %-10s \n","Consecutive Fail:", json_object_get_string(json_object_object_get(obj, "FailLimit")));
-	if(json_object_get_boolean(json_object_object_get(obj, "DefaultGateway")))
+	printf("%-30s %-10s \n","Ping Check:", json_object_get_string(json_object_object_get(obj, "Ping_Enable")));
+	printf("%-30s %-10s \n","Check Cycle:", json_object_get_string(json_object_object_get(obj, "Ping_Interval")));
+	printf("%-30s %-10s \n","Consecutive Fail:", json_object_get_string(json_object_object_get(obj, "Ping_FailLimit")));
+	if(json_object_get_boolean(json_object_object_get(obj, "Ping_DefaultGateway")))
 		printf("Ping Default Gateway. \n");
 	else 
-		printf("%-30s %-10s \n","Ping Host:", json_object_get_string(json_object_object_get(obj, "Destination")));
+		printf("%-30s %-10s \n","Ping Host:", json_object_get_string(json_object_object_get(obj, "Ping_Destination")));
 	
 	printf("\nCellular Connection Settings: \n");
 	if(!strcmp("",json_object_get_string(json_object_object_get(obj, "Manufacturer"))))
@@ -863,7 +872,7 @@
 	else
 		printf("%-30s %-10s\n","Password :","********");
 #ifdef CONFIG_ZYXEL_PPP_AUTH_MENU_CHAP_PAP_CTL
-	printf("%-30s %-10s \n","Authentication:", json_object_get_string(json_object_object_get(obj, "authProtocol")));
+	printf("%-30s %-10s \n","Authentication:", json_object_get_string(json_object_object_get(obj, "AuthenticationProtocol")));
 #endif
 	if(!strcmp("",pin))
 		printf("%-30s \n","PIN:");
@@ -871,73 +880,74 @@
 		printf("%-30s %-10s\n","PIN :","********");
 	printf("%-30s %-10s \n","Dial String:", json_object_get_string(json_object_object_get(obj, "DialNumber")));
 	printf("%-30s %-10s \n","APN:", json_object_get_string(json_object_object_get(obj, "APN")));
-	if(!strcmp("Nailed Up",json_object_get_string(json_object_object_get(obj, "ConnectionTrigger"))))
-		printf("%-30s %-10s \n","Connection:", json_object_get_string(json_object_object_get(obj, "ConnectionTrigger")));
+
+	if(strcmp("OnDemand", Jgets(obj, "ConnectionTrigger")))
+		printf("%-30s %-10s \n","Connection:", "Nailed Up");
 	else{
-		printf("%-30s %-10s \n","Connection:", json_object_get_string(json_object_object_get(obj, "ConnectionTrigger")));
-		printf("%-3s %-20s %-6s \n","","Max Idle Timeout:",json_object_get_string(json_object_object_get(obj, "DisconnectionTime")));
+		printf("%-30s %-10s \n","Connection:", "On Demand");
+		printf("%-3s %-20s %-6s minutes\n","","Max Idle Timeout:",json_object_get_string(json_object_object_get(obj, "IdleDisconnectTime")));
 	}
-	if(!strcmp("Automatically",json_object_get_string(json_object_object_get(obj, "IPType"))))
+	if(!Jgetb(obj, "IPStatic"))
 		printf("Obtain an IP Address Automatically. \n");
 	else{ 
 		printf("Use the Following Static IP Address: \n");
-		printf("%-3s %-20s %-6s\n","","IP Address:",json_object_get_string(json_object_object_get(obj, "IPAddr")));
-		printf("%-3s %-20s %-6s\n","","Subnet Mask:",json_object_get_string(json_object_object_get(obj, "SubMask")));
+		printf("%-3s %-20s %-6s\n","","IP Address:",json_object_get_string(json_object_object_get(obj, "IPAddress")));
+		printf("%-3s %-20s %-6s\n","","Subnet Mask:",json_object_get_string(json_object_object_get(obj, "SubnetMask")));
 	}
-	if(!strcmp("Dynamically DNS",json_object_get_string(json_object_object_get(obj, "DNSType"))))
+	if(!Jgetb(obj,"DNSStatic"))
 		printf("Obtain DNS Info Dynamically. \n");
 	else{ 
 		printf("Use the Following Static DNS IP Address: \n");
-		printf("%-3s %-20s %-6s\n","","Primary DNS Server:",json_object_get_string(json_object_object_get(obj, "PrimaryDns")));
-		printf("%-3s %-20s %-6s\n","","Secondary DNS Server:",json_object_get_string(json_object_object_get(obj, "SecondaryDns")));
+		printf("%-3s %-20s %-6s\n","","Primary DNS Server:",json_object_get_string(json_object_object_get(obj, "PrimDNSServer")));
+		printf("%-3s %-20s %-6s\n","","Secondary DNS Server:",json_object_get_string(json_object_object_get(obj, "SecDNSServer")));
 	}
-	if(!json_object_get_boolean(json_object_object_get(obj, "3GUP_Enable")))
-		printf("%-30s %-10s \n","Enable E-mail Notification:", json_object_get_string(json_object_object_get(obj, "3GUP_Enable")));
+	if(!json_object_get_boolean(json_object_object_get(obj, "Email_Enable")))
+		printf("%-30s %-10s \n","Enable E-mail Notification:", json_object_get_string(json_object_object_get(obj, "Email_Enable")));
 	else{
-		printf("%-30s %-10s \n","Enable E-mail Notification:", json_object_get_string(json_object_object_get(obj, "3GUP_Enable")));
-		printf("%-30s %-10s \n","Mail Account:", json_object_get_string(json_object_object_get(obj, "3GUP_SericeRef")));
-		printf("%-30s %-10s \n","Cellular Backup E-mail Title:", json_object_get_string(json_object_object_get(obj, "3GUP_EmailSubject")));
-		printf("%-30s %-10s \n","Send Notification to E-mail:", json_object_get_string(json_object_object_get(obj, "3GUP_EmailTo")));
+		printf("%-30s %-10s \n","Enable E-mail Notification:", json_object_get_string(json_object_object_get(obj, "Email_Enable")));
+		printf("%-30s %-10s \n","Mail Account:", json_object_get_string(json_object_object_get(obj, "Email_SericeRef")));
+		printf("%-30s %-10s \n","Cellular Backup E-mail Title:", json_object_get_string(json_object_object_get(obj, "Email_Subject")));
+		printf("%-30s %-10s \n","Send Notification to E-mail:", json_object_get_string(json_object_object_get(obj, "Email_To")));
 	}
 	
 	printf("\nBudget Setup: \n");
-	printf("%-30s %-10s \n","Enable Budget Control:", json_object_get_string(json_object_object_get(obj, "BUDGET_Enable")));
-	printf("%-10s %-8s %s %s\n","Time Budget:",json_object_get_string(json_object_object_get(obj, "BUDGET_TimeEnable")),json_object_get_string(json_object_object_get(obj, "BUDGET_TimeValue")),"hours per month.");
-	printf("%-10s %-8s %s %s%s %s\n","Data Budget:",json_object_get_string(json_object_object_get(obj, "BUDGET_ByteEnable")),json_object_get_string(json_object_object_get(obj, "BUDGET_ByteValue")),"Mbytes ", byteMode,"per month.");
-	printf("%-10s %-8s %s %s%s %s\n","Data Budget:",json_object_get_string(json_object_object_get(obj, "BUDGET_PktEnable")),json_object_get_string(json_object_object_get(obj, "BUDGET_PktValue")),"kPackets ", pktMode,"per month.");
-	if(strcmp("0",json_object_get_string(json_object_object_get(obj, "BUDGET_ResetDay"))))
+	printf("%-30s %-10s \n","Enable Budget Control:", json_object_get_string(json_object_object_get(obj, "Bdg_Enable")));
+	printf("%-10s %-8s %s %s\n","Time Budget:",json_object_get_string(json_object_object_get(obj, "Bdg_TimeEnable")),json_object_get_string(json_object_object_get(obj, "Bdg_TimeValue")),"hours per month.");
+	printf("%-10s %-8s %s %s%s %s\n","Data Budget:",json_object_get_string(json_object_object_get(obj, "Bdg_ByteEnable")),json_object_get_string(json_object_object_get(obj, "Bdg_ByteValue")),"Mbytes ", byteMode,"per month.");
+	printf("%-10s %-8s %s %s%s %s\n","Data Budget:",json_object_get_string(json_object_object_get(obj, "Bdg_PktEnable")),json_object_get_string(json_object_object_get(obj, "Bdg_PktValue")),"kPackets ", pktMode,"per month.");
+	if(strcmp("0",json_object_get_string(json_object_object_get(obj, "Bdg_ResetDay"))))
 		printf("Reset all budget counters on last day of the month.\n");
 	else
-		printf("Reset all budget counters on %s day of the month.\n",json_object_get_string(json_object_object_get(obj, "BUDGET_ResetDay")));
+		printf("Reset all budget counters on %s day of the month.\n",json_object_get_string(json_object_object_get(obj, "Bdg_ResetDay")));
 	printf("\nActions before over budget:\n");	
-	if(json_object_get_boolean(json_object_object_get(obj, "BUDGET_TimeActionEnable")))
-		printf("Enable %s of time budget.\n",json_object_get_string(json_object_object_get(obj, "BUDGET_TimeActionValue")));
+	if(json_object_get_boolean(json_object_object_get(obj, "Bdg_TimeActionEnable")))
+		printf("Enable %s of time budget.\n",json_object_get_string(json_object_object_get(obj, "Bdg_TimeActionValue")));
 	else
-		printf("Disable %s of time budget.\n",json_object_get_string(json_object_object_get(obj, "BUDGET_TimeActionValue")));
-	if(json_object_get_boolean(json_object_object_get(obj, "BUDGET_ByteActionEnable")))
-		printf("Enable %s of data budget (Mbytes).\n",json_object_get_string(json_object_object_get(obj, "BUDGET_ByteActionValue")));
+		printf("Disable %s of time budget.\n",json_object_get_string(json_object_object_get(obj, "Bdg_TimeActionValue")));
+	if(json_object_get_boolean(json_object_object_get(obj, "Bdg_ByteActionEnable")))
+		printf("Enable %s of data budget (Mbytes).\n",json_object_get_string(json_object_object_get(obj, "Bdg_ByteActionValue")));
 	else
-		printf("Disable %s of data budget (Mbytes).\n",json_object_get_string(json_object_object_get(obj, "BUDGET_ByteActionValue")));
-	if(json_object_get_boolean(json_object_object_get(obj, "BUDGET_PktActionEnable")))
-		printf("Enable %s of data budget (Packets).\n",json_object_get_string(json_object_object_get(obj, "BUDGET_PktActionValue")));
+		printf("Disable %s of data budget (Mbytes).\n",json_object_get_string(json_object_object_get(obj, "Bdg_ByteActionValue")));
+	if(json_object_get_boolean(json_object_object_get(obj, "Bdg_PktActionEnable")))
+		printf("Enable %s of data budget (Packets).\n",json_object_get_string(json_object_object_get(obj, "Bdg_PktActionValue")));
 	else
-		printf("Disable %s of data budget (Packets).\n",json_object_get_string(json_object_object_get(obj, "BUDGET_PktActionValue")));
+		printf("Disable %s of data budget (Packets).\n",json_object_get_string(json_object_object_get(obj, "Bdg_PktActionValue")));
 	printf("\nActions when over budget:\n");
-	if(json_object_get_boolean(json_object_object_get(obj, "BUDGET_DropWWAN")))
+	if(json_object_get_boolean(json_object_object_get(obj, "Bdg_DropWWAN")))
 		printf("Current Cellular Connection Drop. \n");
 	else
 		printf("Current Cellular Connection Keep. \n");
-	if(json_object_get_boolean(json_object_object_get(obj, "BUDGET_LogEnable")))
-		printf("Enable Log: Interval %s minutes. \n",json_object_get_string(json_object_object_get(obj, "BUDGET_LogInterval")));
+	if(json_object_get_boolean(json_object_object_get(obj, "Bdg_LogEnable")))
+		printf("Enable Log: Interval %s minutes. \n",json_object_get_string(json_object_object_get(obj, "Bdg_LogInterval")));
 	else
 		printf("Disable Log. \n");
-	if(!json_object_get_boolean(json_object_object_get(obj, "3GBUDGET_Enable")))
-		printf("%-30s %-10s \n","Enable E-mail Notification:", json_object_get_string(json_object_object_get(obj, "3GBUDGET_Enable")));
+	if(!json_object_get_boolean(json_object_object_get(obj, "Email_BG_Enable")))
+		printf("%-30s %-10s \n","Enable E-mail Notification:", json_object_get_string(json_object_object_get(obj, "Email_BG_Enable")));
 	else{
-		printf("%-30s %-10s \n","Enable E-mail Notification:", json_object_get_string(json_object_object_get(obj, "3GBUDGET_Enable")));
-		printf("%-30s %-10s \n","Mail Account:", json_object_get_string(json_object_object_get(obj, "3GBUDGET_SericeRef")));
-		printf("%-30s %-10s \n","Cellular Backup E-mail Title:", json_object_get_string(json_object_object_get(obj, "3GBUDGET_EmailSubject")));
-		printf("%-30s %-10s \n","Send Notification to E-mail:", json_object_get_string(json_object_object_get(obj, "3GBUDGET_EmailTo")));
+		printf("%-30s %-10s \n","Enable E-mail Notification:", json_object_get_string(json_object_object_get(obj, "Email_BG_Enable")));
+		printf("%-30s %-10s \n","Mail Account:", json_object_get_string(json_object_object_get(obj, "Email_BG_SericeRef")));
+		printf("%-30s %-10s \n","Cellular Backup E-mail Title:", json_object_get_string(json_object_object_get(obj, "Email_BG_Subject")));
+		printf("%-30s %-10s \n","Send Notification to E-mail:", json_object_get_string(json_object_object_get(obj, "Email_BG_To")));
 	}
 	
 }
