Index: libzcfg_fe_dal-1.0/js/zcfg_fe_dal_networkmap.c
===================================================================
--- libzcfg_fe_dal-1.0.orig/js/zcfg_fe_dal_networkmap.c	2018-09-04 04:21:58.937714429 -0700
+++ libzcfg_fe_dal-1.0/js/zcfg_fe_dal_networkmap.c	2018-09-05 02:45:44.274909500 -0700
@@ -1221,7 +1221,7 @@
 			sprintf(X_ZYXEL_ConnectionType, "%s %s", Jgets(obj, "X_ZYXEL_ConnectionType"), SupportedFrequencyBands);
 			Jadds(obj, "X_ZYXEL_ConnectionType", X_ZYXEL_ConnectionType);
 #else
-			Jadds(obj, "X_ZYXEL_ConnectionType", "WiFi");
+			Jadds(obj, "X_ZYXEL_ConnectionType", "Wi-Fi");
 #endif
 		}
 #ifdef ELISA_NETWORKMAP_CUSTOMIZATION
Index: libzcfg_fe_dal-1.0/network/wireless/zcfg_fe_dal_wifi_adv_cbt.c
===================================================================
--- libzcfg_fe_dal-1.0.orig/network/wireless/zcfg_fe_dal_wifi_adv_cbt.c	2018-09-04 04:21:53.217714578 -0700
+++ libzcfg_fe_dal-1.0/network/wireless/zcfg_fe_dal_wifi_adv_cbt.c	2018-09-05 02:49:46.823161900 -0700
@@ -12,7 +12,7 @@
 #include "zcfg_fe_dal_common.h"
 
 //#ifdef CBT_CUSTOMIZATION
-#ifdef ZYXEL_WEB_WIRELESS_NEW_VERSION_ONE
+#if defined(CBT_CUSTOMIZATION) || defined(ZYXEL_WEB_WIRELESS_NEW_VERSION_ONE)
 
 struct json_object *cbtWifiRadioAdvObj = NULL;
 struct json_object *cbt5GWifiRadioAdvObj = NULL;
@@ -232,6 +232,12 @@
 	if(cbtWifiChannel == 0){
 		json_object_object_add(cbtWifiRadioAdvObj, "AutoChannelEnable", json_object_new_boolean(true));
 	}else{
+#ifdef ZYXEL_WEB_WIRELESS_NEW_VERSION_ONE
+		if(cbtWifiChannel > 7)
+			json_object_object_add(cbtWifiRadioAdvObj, "ExtensionChannel", json_object_new_string("BelowControlChannel"));
+		else
+			json_object_object_add(cbtWifiRadioAdvObj, "ExtensionChannel", json_object_new_string("AboveControlChannel"));
+#endif
 		json_object_object_add(cbtWifiRadioAdvObj, "AutoChannelEnable", json_object_new_boolean(false));
 		json_object_object_add(cbtWifiRadioAdvObj, "Channel", json_object_new_int(cbtWifiChannel));
 	}
Index: libzcfg_fe_dal-1.0/network/wireless/zcfg_fe_dal_wifi_cbt.c
===================================================================
--- libzcfg_fe_dal-1.0.orig/network/wireless/zcfg_fe_dal_wifi_cbt.c	2018-09-04 04:21:54.765714538 -0700
+++ libzcfg_fe_dal-1.0/network/wireless/zcfg_fe_dal_wifi_cbt.c	2018-09-05 02:51:38.676346100 -0700
@@ -12,7 +12,7 @@
 #include "zcfg_fe_dal_common.h"
 
 //#ifdef CBT_CUSTOMIZATION
-#ifdef ZYXEL_WEB_WIRELESS_NEW_VERSION_ONE
+#if defined(CBT_CUSTOMIZATION) || defined(ZYXEL_WEB_WIRELESS_NEW_VERSION_ONE)
 
 // RDM Json Object
 struct json_object *cbtSsidObj = NULL;
@@ -34,8 +34,11 @@
 
 //WiFi Access Point Sec
 const char* CBT_X_ZYXEL_Auto_PSK;
+const char* CBT_5G_X_ZYXEL_Auto_PSK;
 const char* cbtWpaMode;
+const char* cbt5GWpaMode;
 bool CBT_X_ZYXEL_AutoGenPSK;
+bool CBT_5G_X_ZYXEL_AutoGenPSK;
 
 // CBT parameter
 bool cbtSameSsid;
@@ -47,6 +50,7 @@
 unsigned int cbtGuestCountdownTime = 0;
 bool cbtSameSsidChange;
 const char* cbtWifiPskValue;
+const char* cbt5GWifiPskValue;
 bool isExtraWiFi = false;
 
 time_t t1, t2;
@@ -63,6 +67,12 @@
 	{"cbtWifi",		dalType_boolean,	0,	0,	NULL,		NULL,			0},
 	{"cbtGuestWifiTimes",		dalType_int,	0,	0,	NULL,		NULL,			0},
 	{"cbtGuestPskValue",		dalType_string,	0,	0,	NULL,		NULL,			0},
+#ifdef ZYXEL_WEB_WIRELESS_NEW_VERSION_ONE
+	// APSec
+	{"wpaMode_5G",		dalType_string,	0,	0,	NULL},
+	// CBT parameter
+	{"cbt5GPskValue",		dalType_string,	0,	0,	NULL,		NULL,			0},
+#endif
 	{NULL,		0,	0,	0,	NULL},
 };
 static int cbtNeedCopy(int main2gIndex, int main5gIndex, objIndex_t *iid)
@@ -102,7 +112,7 @@
         /* ssidObj */
         IID_INIT(ssidObjIid);
 //#ifdef CBT_CUSTOMIZATION
-#ifdef ZYXEL_WEB_WIRELESS_NEW_VERSION_ONE
+#if defined(CBT_CUSTOMIZATION) || defined(ZYXEL_WEB_WIRELESS_NEW_VERSION_ONE)
         zcfgDalGetIid(Jobj, "cbtGuestWifiIid", &ssidObjIid);
 #else
         zcfgDalGetIid(Jobj, "wlSsidIid", &ssidObjIid);
@@ -159,6 +169,10 @@
 	cbtGuestCountdownTime = json_object_get_int(json_object_object_get(Jobj, "cbtGuestWifiTimes")); // countdown Time
 	cbtWpaMode = json_object_get_string(json_object_object_get(Jobj, "wpaMode"));
 	isExtraWiFi = json_object_get_boolean(json_object_object_get(Jobj, "isExtraWiFiSetting"));
+#ifdef ZYXEL_WEB_WIRELESS_NEW_VERSION_ONE
+	cbt5GWpaMode = json_object_get_string(json_object_object_get(Jobj, "wpaMode_5G"));
+	cbt5GWifiPskValue = json_object_get_string(json_object_object_get(Jobj, "cbt5GPskValue"));
+#endif
 	
 #ifdef BUILD_SONIQ
 	if(cbtMeshCheckSsidNeedSync(Jobj) == true) {
@@ -193,7 +207,10 @@
 	char tempSerial[6] = {0};
 	char temp5GSsid[32] = {0};
 	char originalSsid[32] = {0};
-	
+#if defined (ZYXEL_WEB_WIRELESS_NEW_VERSION_ONE) && defined (ZYXEL_ONESSID)
+		objIndex_t oneSsidObjIid;
+		rdm_WifiOneSsid_t *oneSsidObj = NULL;
+#endif
 	if(cbtGuestWifiConfig == true){ // CBT WiFi or CBT Guest WiFi
 		
 		if(isExtraWiFi){
@@ -248,10 +265,25 @@
 			if(cbtSameSsid){ // 2.4G / 5G using the same SSID base on 2.4G SSID
 				json_object_object_add(cbtSsidObj, "SSID", json_object_new_string(cbtWifiSsid));
 				json_object_object_add(cbt5GSsidObj, "SSID", json_object_new_string(cbtWifiSsid));
+#if defined (ZYXEL_WEB_WIRELESS_NEW_VERSION_ONE) && defined (ZYXEL_ONESSID)
+				IID_INIT(oneSsidObjIid);
+        		if (zcfgFeObjJsonGetWithoutUpdate(RDM_OID_WIFI_ONE_SSID, &oneSsidObjIid, &oneSsidObj) == ZCFG_SUCCESS){
+        			json_object_object_add(oneSsidObj, "Enable", json_object_new_boolean(true));
+       			}
+       			if(oneSsidObj)
+       				zcfgFeObjJsonSetWithoutApply(RDM_OID_WIFI_ONE_SSID, &oneSsidObjIid, oneSsidObj, NULL);
+       			zcfgFeJsonObjFree(oneSsidObj);
+#endif
 			}else{ // 2.4G / 5G using different SSID
-
-				json_object_object_add(cbtSsidObj, "SSID", json_object_new_string(cbtWifiSsid));
-
+#if defined (ZYXEL_WEB_WIRELESS_NEW_VERSION_ONE) && defined (ZYXEL_ONESSID)
+				IID_INIT(oneSsidObjIid);
+        		if (zcfgFeObjJsonGetWithoutUpdate(RDM_OID_WIFI_ONE_SSID, &oneSsidObjIid, &oneSsidObj) == ZCFG_SUCCESS){
+        			json_object_object_add(oneSsidObj, "Enable", json_object_new_boolean(false));
+       			}
+       			if(oneSsidObj)
+       				zcfgFeObjJsonSetWithoutApply(RDM_OID_WIFI_ONE_SSID, &oneSsidObjIid, oneSsidObj, NULL);
+       			zcfgFeJsonObjFree(oneSsidObj);
+#endif
 				if((ret = zcfgFeObjJsonGetWithoutUpdate(RDM_OID_DEV_INFO, &cbtDevInfoIid, &cbtDevInfoObj)) != ZCFG_SUCCESS) {
 					return ret;
 				}
@@ -283,8 +315,27 @@
 						sprintf(temp5GSsid, "%s_5G", cbtWifiSsid);
 #endif
 				}
-
+#ifdef ZYXEL_WEB_WIRELESS_NEW_VERSION_ONE
+				const char* wifi_24g_ssid;
+				const char* wifi_5g_ssid;
+				wifi_24g_ssid = json_object_get_string(json_object_object_get(cbtSsidObj,"SSID"));
+				wifi_5g_ssid = json_object_get_string(json_object_object_get(cbt5GSsidObj,"SSID"));
+				if(json_object_get_boolean(json_object_object_get(cbtSsidObj, "X_ZYXEL_MasterMain"))){
+					// compare with last set 2.4G SSID
+					json_object_object_add(cbtSsidObj, "SSID", json_object_new_string(cbtWifiSsid));
+					if(!strcmp(wifi_5g_ssid, cbt5GWifiSsid)) // compare with last set 5G SSID
+						json_object_object_add(cbt5GSsidObj, "SSID", json_object_new_string(temp5GSsid));
+					else
+						json_object_object_add(cbt5GSsidObj, "SSID", json_object_new_string(cbt5GWifiSsid));
+				}
+				else{
+					json_object_object_add(cbtSsidObj, "SSID", json_object_new_string(cbtWifiSsid));
+					json_object_object_add(cbt5GSsidObj, "SSID", json_object_new_string(cbt5GWifiSsid));
+				}
+#else
+				json_object_object_add(cbtSsidObj, "SSID", json_object_new_string(cbtWifiSsid));
 				json_object_object_add(cbt5GSsidObj, "SSID", json_object_new_string(temp5GSsid));
+#endif
 			}
 
 			// TR-181 parameter
@@ -301,9 +352,18 @@
 				json_object_object_add(cbt5GSsidObj, "X_ZYXEL_MasterMain", json_object_new_boolean(cbtSameSsid));
 
 				// X_ZYXEL_MasterMainSSID, X_ZYXEL_MasterMainPassword
-			json_object_object_add(cbtSsidObj, "X_ZYXEL_MasterMainSSID", json_object_new_string(cbtWifiSsid));
-			json_object_object_add(cbtSsidObj, "X_ZYXEL_MasterMainPassword", json_object_new_string(cbtWifiPskValue));
-
+				json_object_object_add(cbtSsidObj, "X_ZYXEL_MasterMainSSID", json_object_new_string(cbtWifiSsid));
+				json_object_object_add(cbtSsidObj, "X_ZYXEL_MasterMainPassword", json_object_new_string(cbtWifiPskValue));
+#ifdef ZYXEL_WEB_WIRELESS_NEW_VERSION_ONE
+				//5G
+				json_object_object_add(cbt5GSsidObj, "X_ZYXEL_MasterMainPassword", json_object_new_string(cbt5GWifiPskValue));
+				if(cbtSameSsid)
+					json_object_object_add(cbt5GSsidObj, "X_ZYXEL_MasterMainSSID", json_object_new_string(cbtWifiSsid));
+				else
+					json_object_object_add(cbt5GSsidObj, "X_ZYXEL_MasterMainSSID", json_object_new_string(cbt5GWifiSsid));
+					
+				
+#endif
 			}else{ // Guest WiFi, X_ZYXEL_MasterGuest
 
 				cbtSameSsidChange = json_object_get_boolean(json_object_object_get(cbtSsidObj, "X_ZYXEL_MasterGuest"));
@@ -334,14 +394,11 @@
 	struct json_object *iidArray = NULL;
 	uint8_t iidIdx =0;
 	char *psk_lowercase = NULL;
-
-	char tmpPsk[128] = {0};
-	int cbtGuestWifiNumber = 0;
 	struct json_object *guiCustObj = NULL;
 	objIndex_t guiObjIid;
-	
-	if(cbtGuestWifiConfig == true){ // CBT guest Wi-Fi
+	int cbtGuestWifiNumber = 0;
 
+	if(cbtGuestWifiConfig == true){ // CBT Wi-Fi
 		if(isExtraWiFi){
 			iidArray = json_object_object_get(Jobj, "cbtGuestWifiIid"); // 2.4G Iid
 			
@@ -364,6 +421,7 @@
 					json_object_object_add(cbtSecObj, "ModeEnabled", json_object_new_string("WPA-WPA2-Personal"));
 				}
 				
+				json_object_object_add(cbtSecObj, "X_ZYXEL_WEPEncryption", json_object_new_string("WEPEncryption"));
 
 				CBT_X_ZYXEL_Auto_PSK = json_object_get_string(json_object_object_get(cbtSecObj, "X_ZYXEL_Auto_PSK"));
 				if(strcmp(CBT_X_ZYXEL_Auto_PSK, cbtWifiPskValue) == 0){ // The same string means using auto generate psk
@@ -383,6 +441,7 @@
 						cbtStrtolower(cbtWifiPskValue, psk_lowercase, strlen(cbtWifiPskValue));
 						json_object_object_add(cbtSecObj, "KeyPassphrase", json_object_new_string(""));
 						json_object_object_add(cbtSecObj, "PreSharedKey", json_object_new_string(psk_lowercase));
+						free(psk_lowercase);
 					}
 					else {
 						// 2.4G PSK
@@ -415,50 +474,173 @@
 			if((ret = zcfgFeObjJsonGetWithoutUpdate(RDM_OID_WIFI_ACCESS_POINT_SEC, &cbt5GSecIid, &cbt5GSecObj)) != ZCFG_SUCCESS) {
 				return ret;
 			}
-			
+			//2.4G 5G Guest Iid when apply by main page
+			if(cbtWifiConfig){
+				IID_INIT(guiObjIid);
+				if(zcfgFeObjJsonGetWithoutUpdate(RDM_OID_GUI_CUSTOMIZATION, &guiObjIid, &guiCustObj) == ZCFG_SUCCESS){
+					cbtGuestWifiNumber = json_object_get_int(json_object_object_get(guiCustObj, "CbtGuestWifi"));
+					free(guiCustObj);
+				}else{
+					zcfgLog(ZCFG_LOG_ERR, "%s: fail to get RDM_OID_GUI_CUSTOMIZATION\n", __FUNCTION__);
+					cbtGuestWifiNumber = 1; // set 1 when get fail
+				}
+
+				cbtSecTmpIid.idx[0] = cbtGuestWifiNumber + 1;
+				cbt5GSecTmpIid.idx[0] = cbtGuestWifiNumber + 5;
+
+				for(iidIdx = 1; iidIdx < 6; iidIdx++){
+					cbtSecTmpIid.idx[iidIdx] = cbtSecIid.idx[iidIdx];
+					cbt5GSecTmpIid.idx[iidIdx] = cbt5GSecIid.idx[iidIdx];
+				}
+				cbtSecTmpIid.level = cbtSecIid.level;
+				cbt5GSecTmpIid.level = cbt5GSecIid.level;
+				if((ret = zcfgFeObjJsonGetWithoutUpdate(RDM_OID_WIFI_ACCESS_POINT_SEC, &cbtSecTmpIid, &cbtSecTmpObj)) != ZCFG_SUCCESS)
+					return ret;
+
+				if((ret = zcfgFeObjJsonGetWithoutUpdate(RDM_OID_WIFI_ACCESS_POINT_SEC, &cbt5GSecTmpIid, &cbt5GSecTmpObj)) != ZCFG_SUCCESS)
+					return ret;
+			}
+
+#ifdef ZYXEL_WEB_WIRELESS_NEW_VERSION_ONE
+			//2.4G 
 			if(!strcmp(cbtWpaMode,"wpa2psk") || !strcmp(cbtWpaMode,"wpapsk") || !strcmp(cbtWpaMode,"wpawpa2psk")){
 				
 				if(!strcmp(cbtWpaMode,"wpa2psk")){
 					json_object_object_add(cbtSecObj, "ModeEnabled", json_object_new_string("WPA2-Personal"));
-					json_object_object_add(cbt5GSecObj, "ModeEnabled", json_object_new_string("WPA2-Personal"));
 				}
 				else if(!strcmp(cbtWpaMode,"wpapsk")){
 					json_object_object_add(cbtSecObj, "ModeEnabled", json_object_new_string("WPA-Personal"));
-					json_object_object_add(cbt5GSecObj, "ModeEnabled", json_object_new_string("WPA-Personal"));
 				}
 				else{
 					json_object_object_add(cbtSecObj, "ModeEnabled", json_object_new_string("WPA-WPA2-Personal"));
-					json_object_object_add(cbt5GSecObj, "ModeEnabled", json_object_new_string("WPA-WPA2-Personal"));
 				}
 
-				// CBT guest WiFi security mode is the same with WiFi security mode
+				// CBT guest WiFi security mode is the same with WiFi 2.4G security mode		
 				if(cbtWifiConfig){
+					if(!strcmp(cbtWpaMode,"wpa2psk")){
+						json_object_object_add(cbtSecTmpObj, "ModeEnabled", json_object_new_string("WPA2-Personal"));
+						json_object_object_add(cbt5GSecTmpObj, "ModeEnabled", json_object_new_string("WPA2-Personal"));
+					}
+					else if(!strcmp(cbtWpaMode,"wpapsk")){
+						json_object_object_add(cbtSecTmpObj, "ModeEnabled", json_object_new_string("WPA-Personal"));
+						json_object_object_add(cbt5GSecTmpObj, "ModeEnabled", json_object_new_string("WPA-Personal"));
+					}
+					else{
+						json_object_object_add(cbtSecTmpObj, "ModeEnabled", json_object_new_string("WPA-WPA2-Personal"));
+						json_object_object_add(cbt5GSecTmpObj, "ModeEnabled", json_object_new_string("WPA-WPA2-Personal"));
+					}
+					json_object_object_add(cbtSecTmpObj, "X_ZYXEL_WEPEncryption", json_object_new_string("WEPEncryption"));
+					json_object_object_add(cbt5GSecTmpObj, "X_ZYXEL_WEPEncryption", json_object_new_string("WEPEncryption"));
 
-					IID_INIT(guiObjIid);
-					if(zcfgFeObjJsonGetWithoutUpdate(RDM_OID_GUI_CUSTOMIZATION, &guiObjIid, &guiCustObj) == ZCFG_SUCCESS){
-						cbtGuestWifiNumber = json_object_get_int(json_object_object_get(guiCustObj, "CbtGuestWifi"));
-						free(guiCustObj);
+				}
+				//WiFi PSK 
+				CBT_X_ZYXEL_Auto_PSK = json_object_get_string(json_object_object_get(cbtSecObj, "X_ZYXEL_Auto_PSK"));
+				if(strcmp(CBT_X_ZYXEL_Auto_PSK, cbtWifiPskValue) == 0) // 2.4G : The same string means using auto generate psk
+				{
+					// X_ZYXEL_AutoGenPSK
+					CBT_X_ZYXEL_AutoGenPSK = true;
+					// 2.4G KeyPassphrase and PreSharedKey
+					json_object_object_add(cbtSecObj, "X_ZYXEL_AutoGenPSK", json_object_new_boolean(CBT_X_ZYXEL_AutoGenPSK));
+					json_object_object_add(cbtSecObj, "KeyPassphrase", json_object_new_string(CBT_X_ZYXEL_Auto_PSK));
+					json_object_object_add(cbtSecObj, "PreSharedKey", json_object_new_string(""));
+				}else {
+					// X_ZYXEL_AutoGenPSK
+					CBT_X_ZYXEL_AutoGenPSK = false;
+					json_object_object_add(cbtSecObj, "X_ZYXEL_AutoGenPSK", json_object_new_boolean(CBT_X_ZYXEL_AutoGenPSK));
+
+					if(strlen(cbtWifiPskValue) == 64) {
+						psk_lowercase = (char*)malloc(strlen(cbtWifiPskValue)+1);
+						memset(psk_lowercase, 0, strlen(cbtWifiPskValue)+1);
+						cbtStrtolower(cbtWifiPskValue, psk_lowercase, strlen(cbtWifiPskValue));
+						json_object_object_add(cbtSecObj, "KeyPassphrase", json_object_new_string(""));
+						json_object_object_add(cbtSecObj, "PreSharedKey", json_object_new_string(psk_lowercase));
+						json_object_object_add(cbtSecObj, "KeyPassphrase", json_object_new_string(cbtWifiPskValue));
+						free(psk_lowercase);
 					}else{
-						zcfgLog(ZCFG_LOG_ERR, "%s: fail to get RDM_OID_GUI_CUSTOMIZATION\n", __FUNCTION__);
-						printf("%s: fail to get RDM_OID_GUI_CUSTOMIZATION\n", __FUNCTION__);
-						cbtGuestWifiNumber = 1; // set 1 when get fail
+						json_object_object_add(cbtSecObj, "KeyPassphrase", json_object_new_string(cbtWifiPskValue));
 					}
+				}
+				json_object_object_add(cbtSecObj, "X_ZYXEL_WEPEncryption", json_object_new_string("WEPEncryption"));
+			}else{//None Secrity mode
+				json_object_object_add(cbtSecObj, "ModeEnabled", json_object_new_string("None"));
+				json_object_object_add(cbtSecObj, "X_ZYXEL_WEPEncryption", json_object_new_string("None"));
+				//Guest Security Type must follow 2.4G main Security type
+				if(cbtWifiConfig){
+					json_object_object_add(cbtSecTmpObj, "ModeEnabled", json_object_new_string("None"));
+					json_object_object_add(cbt5GSecTmpObj, "ModeEnabled", json_object_new_string("None"));
+					json_object_object_add(cbtSecTmpObj, "X_ZYXEL_WEPEncryption", json_object_new_string("None"));
+					json_object_object_add(cbt5GSecTmpObj, "X_ZYXEL_WEPEncryption", json_object_new_string("None"));
 
-					cbtSecTmpIid.idx[0] = cbtGuestWifiNumber + 1;
-					cbt5GSecTmpIid.idx[0] = cbtGuestWifiNumber + 5;
+				}
 
-					for(iidIdx = 1; iidIdx < 6; iidIdx++){
-						cbtSecTmpIid.idx[iidIdx] = cbtSecIid.idx[iidIdx];
-						cbt5GSecTmpIid.idx[iidIdx] = cbt5GSecIid.idx[iidIdx];
+			}
+			//5G security type
+			if(!strcmp(cbt5GWpaMode,"wpa2psk") || !strcmp(cbt5GWpaMode,"wpapsk") || !strcmp(cbt5GWpaMode,"wpawpa2psk")){
+				
+				if(!strcmp(cbt5GWpaMode,"wpa2psk")){
+					json_object_object_add(cbt5GSecObj, "ModeEnabled", json_object_new_string("WPA2-Personal"));
+				}
+				else if(!strcmp(cbt5GWpaMode,"wpapsk")){
+					json_object_object_add(cbt5GSecObj, "ModeEnabled", json_object_new_string("WPA-Personal"));
+				}
+				else{
+					json_object_object_add(cbt5GSecObj, "ModeEnabled", json_object_new_string("WPA-WPA2-Personal"));
+				}
+
+				//WiFi PSK 
+				CBT_5G_X_ZYXEL_Auto_PSK = json_object_get_string(json_object_object_get(cbt5GSecObj, "X_ZYXEL_Auto_PSK"));
+				if(strcmp(CBT_5G_X_ZYXEL_Auto_PSK, cbt5GWifiPskValue) == 0) // The same string means using auto generate psk
+				{
+					// X_ZYXEL_AutoGenPSK
+					CBT_5G_X_ZYXEL_AutoGenPSK = true;
+					// 5G KeyPassphrase and PreSharedKey
+					json_object_object_add(cbt5GSecObj, "X_ZYXEL_AutoGenPSK", json_object_new_boolean(CBT_5G_X_ZYXEL_AutoGenPSK));
+					json_object_object_add(cbt5GSecObj, "KeyPassphrase", json_object_new_string(CBT_5G_X_ZYXEL_Auto_PSK));
+					json_object_object_add(cbt5GSecObj, "PreSharedKey", json_object_new_string(""));
+				}else {
+					// X_ZYXEL_AutoGenPSK
+					CBT_5G_X_ZYXEL_AutoGenPSK = false;
+					json_object_object_add(cbt5GSecObj, "X_ZYXEL_AutoGenPSK", json_object_new_boolean(CBT_5G_X_ZYXEL_AutoGenPSK));
+
+					if(strlen(cbt5GWifiPskValue) == 64) {
+						psk_lowercase = (char*)malloc(strlen(cbt5GWifiPskValue)+1);
+						memset(psk_lowercase, 0, strlen(cbt5GWifiPskValue)+1);
+						cbtStrtolower(cbt5GWifiPskValue, psk_lowercase, strlen(cbt5GWifiPskValue));
+						json_object_object_add(cbt5GSecObj, "KeyPassphrase", json_object_new_string(""));
+						json_object_object_add(cbt5GSecObj, "PreSharedKey", json_object_new_string(psk_lowercase));
+						free(psk_lowercase);
+					}else {
+						// 5G PSK
+						json_object_object_add(cbt5GSecObj, "KeyPassphrase", json_object_new_string(cbt5GWifiPskValue));
 					}
-					cbtSecTmpIid.level = cbtSecIid.level;
-					cbt5GSecTmpIid.level = cbt5GSecIid.level;
+				}
+				json_object_object_add(cbt5GSecObj, "X_ZYXEL_WEPEncryption", json_object_new_string("WEPEncryption"));
+			}else{//None Secrity mode
+				json_object_object_add(cbt5GSecObj, "ModeEnabled", json_object_new_string("None"));
+				json_object_object_add(cbt5GSecObj, "X_ZYXEL_WEPEncryption", json_object_new_string("None"));
+			}
+			//When enable one SSID, use 2.4G password to instead 5G password
+			if(cbtSameSsid)
+				json_object_object_add(cbt5GSecObj, "KeyPassphrase", json_object_new_string(cbtWifiPskValue));
 
-					if((ret = zcfgFeObjJsonGetWithoutUpdate(RDM_OID_WIFI_ACCESS_POINT_SEC, &cbtSecTmpIid, &cbtSecTmpObj)) != ZCFG_SUCCESS)
-						return ret;
+#else
+			if(!strcmp(cbtWpaMode,"wpa2psk") || !strcmp(cbtWpaMode,"wpapsk") || !strcmp(cbtWpaMode,"wpawpa2psk")){
+				
+				if(!strcmp(cbtWpaMode,"wpa2psk")){
+					json_object_object_add(cbtSecObj, "ModeEnabled", json_object_new_string("WPA2-Personal"));
+					json_object_object_add(cbt5GSecObj, "ModeEnabled", json_object_new_string("WPA2-Personal"));
+				}
+				else if(!strcmp(cbtWpaMode,"wpapsk")){
+					json_object_object_add(cbtSecObj, "ModeEnabled", json_object_new_string("WPA-Personal"));
+					json_object_object_add(cbt5GSecObj, "ModeEnabled", json_object_new_string("WPA-Personal"));
+				}
+				else{
+					json_object_object_add(cbtSecObj, "ModeEnabled", json_object_new_string("WPA-WPA2-Personal"));
+					json_object_object_add(cbt5GSecObj, "ModeEnabled", json_object_new_string("WPA-WPA2-Personal"));
+				}
 
-					if((ret = zcfgFeObjJsonGetWithoutUpdate(RDM_OID_WIFI_ACCESS_POINT_SEC, &cbt5GSecTmpIid, &cbt5GSecTmpObj)) != ZCFG_SUCCESS)
-						return ret;
+				// CBT guest WiFi security mode is the same with WiFi security mode
+				if(cbtWifiConfig){ 
 
 					if(!strcmp(cbtWpaMode,"wpa2psk")){
 						json_object_object_add(cbtSecTmpObj, "ModeEnabled", json_object_new_string("WPA2-Personal"));
@@ -471,9 +653,11 @@
 					else{
 						json_object_object_add(cbtSecTmpObj, "ModeEnabled", json_object_new_string("WPA-WPA2-Personal"));
 						json_object_object_add(cbt5GSecTmpObj, "ModeEnabled", json_object_new_string("WPA-WPA2-Personal"));
+						zcfgLog(ZCFG_LOG_ERR, "%s: fail to set Guest WiFi Security type\n", __FUNCTION__);
 					}
+
 				}
-					
+				//WiFi PSK 
 				CBT_X_ZYXEL_Auto_PSK = json_object_get_string(json_object_object_get(cbtSecObj, "X_ZYXEL_Auto_PSK"));
 				if(strcmp(CBT_X_ZYXEL_Auto_PSK, cbtWifiPskValue) == 0) // The same string means using auto generate psk
 				{
@@ -511,27 +695,29 @@
 						json_object_object_add(cbtSecObj, "PreSharedKey", json_object_new_string(psk_lowercase));
 						json_object_object_add(cbt5GSecObj, "KeyPassphrase", json_object_new_string(""));
 						json_object_object_add(cbt5GSecObj, "PreSharedKey", json_object_new_string(psk_lowercase));
-					}
-					else {
+						free(psk_lowercase);
+					}else {
 						// 2.4G PSK
 						json_object_object_add(cbtSecObj, "KeyPassphrase", json_object_new_string(cbtWifiPskValue));
 							
 						// 5G PSK
 						//if(cbtSameSsid == true){
-							json_object_object_add(cbt5GSecObj, "KeyPassphrase", json_object_new_string(cbtWifiPskValue));
+						json_object_object_add(cbt5GSecObj, "KeyPassphrase", json_object_new_string(cbtWifiPskValue));
 						/*}else{ // 20170720 Max Noted: remove CBT 5G wifi password add "-5G" at the end of 2.4G password
 							sprintf(tmpPsk, "%s%s", cbtWifiPskValue, "-5G");
 							json_object_object_add(cbt5GSecObj, "KeyPassphrase", json_object_new_string(tmpPsk));
 						}*/
 					}
 				}
+				json_object_object_add(cbtSecObj, "X_ZYXEL_WEPEncryption", json_object_new_string("WEPEncryption"));
+				json_object_object_add(cbt5GSecObj, "X_ZYXEL_WEPEncryption", json_object_new_string("WEPEncryption"));
 			}else{//None Secrity mode
 				json_object_object_add(cbtSecObj, "ModeEnabled", json_object_new_string("None"));
 				json_object_object_add(cbt5GSecObj, "ModeEnabled", json_object_new_string("None"));
 				json_object_object_add(cbtSecObj, "X_ZYXEL_WEPEncryption", json_object_new_string("None"));
 				json_object_object_add(cbt5GSecObj, "X_ZYXEL_WEPEncryption", json_object_new_string("None"));
 			}
-		
+#endif
 		}
 	}
 	
Index: libzcfg_fe_dal-1.0/network/wireless/zcfg_fe_dal_wifi_mesh.c
===================================================================
--- libzcfg_fe_dal-1.0.orig/network/wireless/zcfg_fe_dal_wifi_mesh.c	2018-09-04 04:21:59.201714422 -0700
+++ libzcfg_fe_dal-1.0/network/wireless/zcfg_fe_dal_wifi_mesh.c	2018-09-05 02:52:14.719950100 -0700
@@ -86,7 +86,7 @@
 	}
 	zcfgFeJsonObjFree(SoniqObj);
 
-#ifdef CBT_CUSTOMIZATION//Update X_ZYXEL_MasterMain
+#if defined(CBT_CUSTOMIZATION) || defined (ZYXEL_WEB_WIRELESS_NEW_VERSION_ONE)//Update X_ZYXEL_MasterMain
 	if(SoniqEnable) {//Mesh button enable
 		bool isMainSSID = false;
 		struct json_object *cbtSsidObj = NULL;
