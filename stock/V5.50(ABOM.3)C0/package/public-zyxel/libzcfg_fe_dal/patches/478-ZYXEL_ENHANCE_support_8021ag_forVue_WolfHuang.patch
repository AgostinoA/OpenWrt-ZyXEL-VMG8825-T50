Index: libzcfg_fe_dal-1.0/maintenance/diagnostic/zcfg_fe_dal_8021ag.c
===================================================================
--- libzcfg_fe_dal-1.0.orig/maintenance/diagnostic/zcfg_fe_dal_8021ag.c	2018-02-27 00:45:24.969383624 +0800
+++ libzcfg_fe_dal-1.0/maintenance/diagnostic/zcfg_fe_dal_8021ag.c	2018-02-27 00:51:00.586928357 +0800
@@ -10,6 +10,7 @@
 #include "zcfg_msg.h"
 #include "zcfg_fe_dal_common.h"
 #include "zcfg_webgui_flag.h"
+#include "zlog_api.h"
 
 #define TYPE_IEEE8021AG 0
 #define TYPE_LOOPBACK 1
@@ -114,12 +115,12 @@
 
 zcfgRet_t zcfgFeDal8021agCfg(struct json_object *Jobj){
 	zcfgRet_t ret = ZCFG_SUCCESS;
-	printf("%s(): Enter..\n ",__FUNCTION__);
+	ZLOG_INFO(" Enter..\n ");
 	get8021agBasicInfo(Jobj);
 
 	IID_INIT(ieee8021agIid);
 	if((ret = zcfgFeObjJsonGet(RDM_OID_IEEE8021AG, &ieee8021agIid, &ieee8021agobj)) != ZCFG_SUCCESS) {
-		printf("%s():(ERROR) Get IEEE 802.1ag Obj fail\n", __FUNCTION__);
+		ZLOG_INFO("(ERROR) Get IEEE 802.1ag Obj fail\n");
 		return ZCFG_INTERNAL_ERROR;
 	}
 
@@ -146,7 +147,7 @@
 		}
 
 		if((ret = zcfgFeObjJsonSet(RDM_OID_IEEE8021AG, &ieee8021agIid, ieee8021agobj, NULL)) != ZCFG_SUCCESS){
-			printf("%s():(ERROR) Set IEEE 802.1ag fail\n", __FUNCTION__);
+			ZLOG_INFO("(ERROR) Set IEEE 802.1ag fail\n");
 			return ZCFG_INTERNAL_ERROR;
 		}
 	}
@@ -156,12 +157,12 @@
 
 zcfgRet_t zcfgFeDalLoopBack(struct json_object *Jobj){
 	zcfgRet_t ret = ZCFG_SUCCESS;
-	printf("%s(): Enter..\n ",__FUNCTION__);
+	ZLOG_INFO(" Enter..\n ");
 	getLoopBackBasicInfo(Jobj);
 
 	IID_INIT(ieee8021agIid);
 	if((ret = zcfgFeObjJsonGet(RDM_OID_IEEE8021AG, &ieee8021agIid, &ieee8021agobj)) != ZCFG_SUCCESS) {
-		printf("%s():(ERROR) Get IEEE 802.1ag Obj fail\n", __FUNCTION__);
+		ZLOG_INFO("(ERROR) Get IEEE 802.1ag Obj fail\n");
 		return ZCFG_INTERNAL_ERROR;
 	}
 
@@ -172,7 +173,7 @@
 		json_object_object_add(ieee8021agobj, "SendLoopBack", json_object_new_boolean(SendLoopBack));
 
 		if((ret = zcfgFeObjJsonBlockedSet(RDM_OID_IEEE8021AG, &ieee8021agIid, ieee8021agobj, NULL)) != ZCFG_SUCCESS){
-			printf("%s():(ERROR) Set IEEE 802.1ag fail\n", __FUNCTION__);
+			ZLOG_INFO("(ERROR) Set IEEE 802.1ag fail\n");
 			return ZCFG_INTERNAL_ERROR;
 		}
 	}
@@ -182,12 +183,12 @@
 
 zcfgRet_t zcfgFeDalLinktrace(struct json_object *Jobj){
 	zcfgRet_t ret = ZCFG_SUCCESS;
-	printf("%s(): Enter..\n ",__FUNCTION__);
+	ZLOG_INFO(" Enter..\n ");
 	getLinkTraceBasicInfo(Jobj);
 
 	IID_INIT(ieee8021agIid);
 	if((ret = zcfgFeObjJsonGet(RDM_OID_IEEE8021AG, &ieee8021agIid, &ieee8021agobj)) != ZCFG_SUCCESS) {
-		printf("%s():(ERROR) Get IEEE 802.1ag Obj fail\n", __FUNCTION__);
+		ZLOG_INFO("(ERROR) Get IEEE 802.1ag Obj fail\n");
 		return ZCFG_INTERNAL_ERROR;
 	}
 
@@ -198,7 +199,7 @@
 		json_object_object_add(ieee8021agobj, "SendLinkTrace", json_object_new_boolean(SendLinkTrace));
 
 		if((ret = zcfgFeObjJsonBlockedSet(RDM_OID_IEEE8021AG, &ieee8021agIid, ieee8021agobj, NULL)) != ZCFG_SUCCESS){
-			printf("%s():(ERROR) Set IEEE 802.1ag fail\n", __FUNCTION__);
+			ZLOG_INFO("(ERROR) Set IEEE 802.1ag fail\n");
 			return ZCFG_INTERNAL_ERROR;
 		}
 	}
@@ -208,23 +209,23 @@
 
 zcfgRet_t zcfgFeDal8021agEdit(struct json_object *Jobj, char *replyMsg){
 	zcfgRet_t ret = ZCFG_SUCCESS;
-	printf("%s(): input --- %s \n ",__FUNCTION__,json_object_to_json_string(Jobj));
+	ZLOG_INFO(" input --- %s \n ",json_object_to_json_string(Jobj));
 	init8021agGlobalObjects();
 	getCfgTypeInfo(Jobj);
 
 	if(type == TYPE_IEEE8021AG){
 		if((ret = zcfgFeDal8021agCfg(Jobj)) != ZCFG_SUCCESS){
-			printf("%s: config 8021ag fail\n", __FUNCTION__);
+			ZLOG_INFO(" config 8021ag fail\n");
 			goto exit;
 		}
 	}else if(type == TYPE_LOOPBACK){
 		if((ret = zcfgFeDalLoopBack(Jobj)) != ZCFG_SUCCESS){
-			printf("%s():(ERROR) config LoopBack fail\n", __FUNCTION__);
+			ZLOG_INFO("%(ERROR) config LoopBack fail\n");
 			goto exit;
 		}
 	}else if(type == TYPE_LINKTRACE){
 		if((ret = zcfgFeDalLinktrace(Jobj)) != ZCFG_SUCCESS){
-			printf("%s():(ERROR) config Linktrace fail\n", __FUNCTION__);
+			ZLOG_INFO("(ERROR) config Linktrace fail\n");
 			goto exit;
 		}
 	}
@@ -233,6 +234,50 @@
 	freeAll8021agObjects();
 	return ret;
 }
+zcfgRet_t zcfgFeDal8021agGet(struct json_object *Jobj, struct json_object *Jarray, char *replyMsg){
+	int maxLength = 30;
+	zcfgRet_t ret = ZCFG_SUCCESS;
+	struct json_object *obj, *interfaceList;
+	char pathString[30] = "";
+	objIndex_t objIid;
+	interfaceList = json_object_new_object();
+
+	IID_INIT(objIid);
+	while(ZCFG_SUCCESS == zcfgFeObjJsonGetNextWithoutUpdate(RDM_OID_ATM_LINK, &objIid, &obj)){
+		 sprintf(pathString, "ATM.Link.%d", objIid.idx[0]);
+		json_object_object_add(interfaceList, pathString, json_object_new_string(json_object_get_string(json_object_object_get(obj, "X_ZYXEL_IfName"))) );
+		json_object_put(obj);
+	}
+	IID_INIT(objIid);
+	while(ZCFG_SUCCESS == zcfgFeObjJsonGetNextWithoutUpdate(RDM_OID_PTM_LINK, &objIid, &obj)){
+		sprintf(pathString, "PTM.Link.%d",  objIid.idx[0]);
+		json_object_object_add(interfaceList, pathString, json_object_new_string(json_object_get_string(json_object_object_get(obj, "X_ZYXEL_IfName"))) );
+		json_object_put(obj);
+	}
+	IID_INIT(objIid);
+	while(ZCFG_SUCCESS == zcfgFeObjJsonGetNextWithoutUpdate(RDM_OID_ETH_IFACE, &objIid, &obj)){
+		if( true == json_object_get_boolean(json_object_object_get(obj, "X_ZYXEL_Upstream"))  ){
+			sprintf(pathString, "Ethernet.Interface.%d", objIid.idx[0]);
+			json_object_object_add(interfaceList, pathString, json_object_new_string(json_object_get_string(json_object_object_get(obj, "Name"))) );
+		}
+
+		json_object_put(obj);
+	}
+
+
+	IID_INIT(ieee8021agIid);
+	if((ret = zcfgFeObjJsonGet(RDM_OID_IEEE8021AG, &ieee8021agIid, &ieee8021agobj)) != ZCFG_SUCCESS) {
+		ZLOG_INFO("(ERROR) Get IEEE 802.1ag Obj fail\n");
+		return ZCFG_INTERNAL_ERROR;
+	}
+	json_object_object_add(ieee8021agobj, "interfaceList",JSON_OBJ_COPY(interfaceList));;
+	json_object_array_add(Jarray, JSON_OBJ_COPY(ieee8021agobj));
+
+	if(interfaceList) json_object_put(interfaceList);
+exit:
+	freeAll8021agObjects();
+	return ret;
+}
 
 zcfgRet_t zcfgFe8021ag(const char *method, struct json_object *Jobj, struct json_object *Jarray, char *replyMsg)
 {
@@ -244,6 +289,9 @@
 	if(!strcmp(method, "PUT")) {
 		ret = zcfgFeDal8021agEdit(Jobj, NULL);
 	}
+	if(!strcmp(method, "GET")) {
+		ret = zcfgFeDal8021agGet(Jobj, Jarray, NULL);;
+	}
 
 	return ret;
 }
