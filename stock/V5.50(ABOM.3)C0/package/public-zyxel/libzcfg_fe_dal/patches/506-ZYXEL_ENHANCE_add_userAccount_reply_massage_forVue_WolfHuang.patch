Index: libzcfg_fe_dal-1.0/maintenance/useraccount/zcfg_fe_dal_user_account.c
===================================================================
--- libzcfg_fe_dal-1.0.orig/maintenance/useraccount/zcfg_fe_dal_user_account.c	2018-03-15 22:21:11.965466387 +0800
+++ libzcfg_fe_dal-1.0/maintenance/useraccount/zcfg_fe_dal_user_account.c	2018-03-15 22:31:02.291275364 +0800
@@ -201,12 +201,14 @@
 
 	if(strcmp(Jgets(Jobj, "Password"), Jgets(Jobj, "verifyNewpassword"))){
 		if(replyMsg) strcpy(replyMsg, "Password and verifyNewpassword don't match");
+		json_object_object_add(Jobj, "__multi_lang_replyMsg", json_object_new_string("zylang.Common.notMatch"));
 		return ZCFG_REQUEST_REJECT;
 	}
 
 	username = Jgets(Jobj, "Username");
 	if(getSpecificObj(RDM_OID_ZY_LOG_CFG_GP_ACCOUNT, "Username", json_type_string, username, NULL, NULL)){
 		if(replyMsg) strcpy(replyMsg, "Username is duplicated");
+		json_object_object_add(Jobj, "__multi_lang_replyMsg", json_object_new_string("zylang.Common.account_repeat"));
 		return ZCFG_REQUEST_REJECT;
 	}
 
@@ -220,6 +222,7 @@
 	if(!strcmp("Administrator", Jgets(Jobj, "group"))){
 		if(!strcmp(loginLevel, "low")){
 			if(replyMsg) strcpy(replyMsg, "Request Deny, can't add Administrator level account");
+			json_object_object_add(Jobj, "__multi_lang_replyMsg", json_object_new_string("zylang.Common.addAdminErr"));
 			return ZCFG_REQUEST_REJECT;
 		}
 		FirstIndex = 2;
@@ -234,11 +237,11 @@
 	accountIid.idx[0] = FirstIndex;
 	ret = zcfgFeObjJsonAdd(RDM_OID_ZY_LOG_CFG_GP_ACCOUNT, &accountIid, NULL);
 	
-	if(ret == ZCFG_SUCCESS){
+	if( ZCFG_SUCCESS == ret ){
 		ret = zcfgFeObjJsonGet(RDM_OID_ZY_LOG_CFG_GP_ACCOUNT, &accountIid, &accountObj);
 	}
 
-	if(ret == ZCFG_SUCCESS){
+	if( ZCFG_SUCCESS == ret){
 		replaceParam(accountObj, "Enabled", Jobj, "Enabled");
 		replaceParam(accountObj, "EnableQuickStart", Jobj, "EnableQuickStart");
 		replaceParam(accountObj, "Username", Jobj, "Username");
@@ -254,6 +257,12 @@
 		
 		ret = zcfgFeObjJsonBlockedSet(RDM_OID_ZY_LOG_CFG_GP_ACCOUNT, &accountIid, accountObj, NULL);
 	}
+	
+	if( ZCFG_EXCEED_MAX_INS_NUM == ret){
+		if(replyMsg) strcpy(replyMsg, "Error: Each group can not exceed 4 user accounts!");
+		json_object_object_add(Jobj, "__multi_lang_replyMsg", json_object_new_string("zylang.Common.exceed_account_max_err"));
+	}
+	
 	zcfgFeJsonObjFree(accountObj);
 	return ret;
 }
@@ -300,6 +309,7 @@
 				curPassword = Jgets(accountObj, "Password");
 				if(strcmp(curPassword, Jgets(Jobj ,"oldPw"))!= 0){
 					if(replyMsg) strcpy(replyMsg, "Wrong --oldPw value");
+					json_object_object_add(Jobj, "__multi_lang_replyMsg", json_object_new_string("zylang.Common.oldpassword_err2"));
 						zcfgFeJsonObjFree(accountObj);
 					return ZCFG_NOT_FOUND; //GUI use ZCFG_NOT_FOUND to detect oldPw error.
 				}
@@ -314,6 +324,7 @@
 
 				if(strcmp(Jgets(Jobj, "Password"), Jgets(Jobj, "verifyNewpassword"))){
 					if(replyMsg) strcpy(replyMsg, "--Password and --verifyNewpassword don't match");
+					json_object_object_add(Jobj, "__multi_lang_replyMsg", json_object_new_string("zylang.Common.notMatch"));
 					zcfgFeJsonObjFree(accountObj);
 					return ZCFG_REQUEST_REJECT;
 				}
@@ -324,6 +335,7 @@
 					curPassword = Jgets(accountObj, "Password");
 					if(strcmp(curPassword, Jgets(Jobj ,"oldPw"))){
 						if(replyMsg) strcpy(replyMsg, "Wrong --oldPw value");
+						json_object_object_add(Jobj, "__multi_lang_replyMsg", json_object_new_string("zylang.Common.oldpassword_err2"));
 						zcfgFeJsonObjFree(accountObj);
 						return ZCFG_NOT_FOUND; //GUI use ZCFG_NOT_FOUND to detect oldPw error.
 					}
@@ -331,6 +343,7 @@
 				else if (authResult < 0)
 				{
 					if(replyMsg) strcpy(replyMsg, "Wrong --oldPw value");
+					json_object_object_add(Jobj, "__multi_lang_replyMsg", json_object_new_string("zylang.Common.oldpassword_err2"));
 					zcfgFeJsonObjFree(accountObj);
 					return ZCFG_NOT_FOUND; //GUI use ZCFG_NOT_FOUND to detect oldPw error.
 				}
