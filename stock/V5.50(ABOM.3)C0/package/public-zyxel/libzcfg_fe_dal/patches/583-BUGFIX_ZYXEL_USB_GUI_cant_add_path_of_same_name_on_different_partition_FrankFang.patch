Index: libzcfg_fe_dal-1.0/network/usbService/zcfg_fe_dal_usb_samba.c
===================================================================
--- libzcfg_fe_dal-1.0.orig/network/usbService/zcfg_fe_dal_usb_samba.c	2018-06-22 18:42:43.414415945 +0800
+++ libzcfg_fe_dal-1.0/network/usbService/zcfg_fe_dal_usb_samba.c	2018-06-26 16:26:36.954168296 +0800
@@ -104,7 +104,6 @@
 	char RootPath[64] = {0};
  	char buff[128] = {0};
 	char *tmp = NULL;
-	char msg[30]={0};
 	int directoryMaxLength = -1;
 	int len = 0;
 	
@@ -114,12 +113,16 @@
 	//Browseable = json_object_get_boolean(json_object_object_get(Jobj, "Browseable"));	 //not necessary parameter
 	Public = json_object_get_boolean(json_object_object_get(Jobj, "Public"));
 
-	ret = dalcmdParamCheck(NULL,FolderName, RDM_OID_ZY_SAMBA_DIR, "X_ZYXEL_FolderName", "X_ZYXEL_FolderName", msg);
-		if(ret != ZCFG_SUCCESS){
-			printf("msg: %s\n",msg);
-			json_object_object_add(Jobj, "__multi_lang_replyMsg", json_object_new_string("zylang.USB.Error.same_sharepath_err"));
-			return ret; 		
-		}
+	// validate parameter values
+	if( (json_object_object_get(Jobj, "HostName") == NULL) ||
+		(json_object_object_get(Jobj, "FolderName") == NULL) ||
+		(json_object_object_get(Jobj, "Description") == NULL) ||
+		(json_object_object_get(Jobj, "Public") == NULL) )
+	{
+		dbg_printf("%s():%d Empty parameter value(s)\n",__FUNCTION__,__LINE__);
+		// json_object_object_add(Jobj, "__multi_lang_replyMsg", json_object_new_string("choose your error msg"));
+		return ZCFG_INVALID_PARAM_VALUE;
+	}
 
 	directoryMaxLength = zcfgFeObjMaxLenGet(RDM_OID_ZY_SAMBA_DIR); 
 	len = zcfgFeArrayLengthGetByName("Device.X_ZYXEL_SAMBA.Directory.");
@@ -155,6 +158,7 @@
 		}
 	}
 	
+	// check if the (hostname,foldername) matches existing one
 	IID_INIT(sambadirIid);
 	while(zcfgFeObjJsonGetNextWithoutUpdate(RDM_OID_ZY_SAMBA_DIR, &sambadirIid, &sambadirObj) == ZCFG_SUCCESS) {
 		curHostName = json_object_get_string(json_object_object_get(sambadirObj, "X_ZYXEL_Hostname"));
@@ -162,6 +166,7 @@
 		if( !strcmp(curHostName, HostName) && !strcmp(curFolderName, FolderName)){
 			strcpy(replyMsg, "Folder is duplicate");
 			zcfgFeJsonObjFree(sambadirObj);
+			json_object_object_add(Jobj, "__multi_lang_replyMsg", json_object_new_string("zylang.USB.Error.same_sharepath_err"));
 			return ZCFG_INVALID_PARAM_VALUE;	
 		}
 			zcfgFeJsonObjFree(sambadirObj);
