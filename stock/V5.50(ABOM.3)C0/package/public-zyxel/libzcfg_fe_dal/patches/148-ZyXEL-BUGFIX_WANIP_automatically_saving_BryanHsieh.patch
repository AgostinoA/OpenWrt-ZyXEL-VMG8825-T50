Index: libzcfg_fe_dal-1.0/network/nat/zcfg_fe_dal_nat_port_mapping.c
===================================================================
--- libzcfg_fe_dal-1.0.orig/network/nat/zcfg_fe_dal_nat_port_mapping.c	2017-03-24 15:57:58.093876921 +0800
+++ libzcfg_fe_dal-1.0/network/nat/zcfg_fe_dal_nat_port_mapping.c	2017-03-24 16:00:07.006369500 +0800
@@ -24,6 +24,10 @@
 	//{"X_ZYXEL_SetOriginatingIP",	dalType_boolean, 	0, 0, 		NULL,	NULL,	0},
 	{"SetOriginatingIP",			dalType_boolean, 	0,	0, 		NULL,	NULL,				0},
 	{"OriginatingIpAddress",		dalType_v4Addr, 	0, 	0, 		NULL,	NULL,				0},
+#ifdef ELISA_NAT_PORTFORWARD_CUSTOMIZATIONN
+	{"X_ZYXEL_AutoDetectWanStatus",	dalType_boolean,	0,	0,		NULL,	NULL,				0},
+	{"X_ZYXEL_WANIP",				dalType_v4Addr,		0,	0,		NULL,	NULL,				0},
+#endif
 	{"Protocol",					dalType_string,		0,	0,		NULL,	"TCP|UDP|ALL",		0},
 	{"InternalClient",				dalType_v4Addr,		0,	256,	NULL,	NULL,				dal_Add},
 	{NULL,							0,					0,	0,		NULL,	NULL,				dal_Add}
@@ -83,7 +87,10 @@
 	const char *protocol = NULL;
 	const char *internalclient = NULL;
 	const char *description = NULL;
-
+#ifdef ELISA_NAT_PORTFORWARD_CUSTOMIZATIONN
+	bool autoDetectWanStatus = false;
+	const char *wanip = NULL;
+#endif
 	//Don' t allow Description prefix is "APP:", it is used for NAT applications rule.
 	if(json_object_object_get(Jobj, "Description") != NULL){
 		if(!strncmp(json_object_get_string(json_object_object_get(Jobj, "Description")), "APP:", 4)){
@@ -110,8 +117,12 @@
 		protocol = json_object_get_string(json_object_object_get(Jobj, "Protocol"));
 		internalclient = json_object_get_string(json_object_object_get(Jobj, "InternalClient"));
 		description = json_object_get_string(json_object_object_get(Jobj, "Description"));
+#ifdef ELISA_NAT_PORTFORWARD_CUSTOMIZATIONN
+		autoDetectWanStatus = json_object_get_boolean(json_object_object_get(Jobj, "X_ZYXEL_AutoDetectWanStatus"));
+		wanip = json_object_get_string(json_object_object_get(Jobj, "X_ZYXEL_WANIP"));
+#endif
 
-		//check prot range
+		//check port range
 		if(internalport > internalportendrange){
 			if(replyMsg != NULL)
 				strcpy(replyMsg, "Internal port range is invalid.");
@@ -152,6 +163,12 @@
 		if(json_object_object_get(Jobj, "Description") != NULL)
 			json_object_object_add(NatPortMappingJobj, "Description", json_object_new_string(description));
 
+#ifdef ELISA_NAT_PORTFORWARD_CUSTOMIZATIONN
+		if(json_object_object_get(Jobj, "X_ZYXEL_AutoDetectWanStatus") != NULL)
+			json_object_object_add(NatPortMappingJobj, "X_ZYXEL_AutoDetectWanStatus", json_object_new_boolean(autoDetectWanStatus));
+		if(json_object_object_get(Jobj, "X_ZYXEL_WANIP") != NULL)
+			json_object_object_add(NatPortMappingJobj, "X_ZYXEL_WANIP", json_object_new_string(wanip));
+#endif
 		ret = zcfgFeObjJsonSet(RDM_OID_NAT_PORT_MAPPING, &objIid, NatPortMappingJobj, NULL);
 
 		zcfgFeJsonObjFree(NatPortMappingJobj);
@@ -177,7 +194,10 @@
 	const char *description = NULL;
 	int index = 0;
 	bool found = false;
-
+#ifdef ELISA_NAT_PORTFORWARD_CUSTOMIZATIONN
+	bool autoDetectWanStatus = false;
+	const char *wanip = NULL;
+#endif
 	index = json_object_get_int(json_object_object_get(Jobj, "Index"));
 	IID_INIT(objIid);
 	objIid.level = 1;
@@ -219,7 +239,11 @@
 		protocol = json_object_get_string(json_object_object_get(Jobj, "Protocol"));
 		internalclient = json_object_get_string(json_object_object_get(Jobj, "InternalClient"));
 		description = json_object_get_string(json_object_object_get(Jobj, "Description"));
-		
+
+#ifdef ELISA_NAT_PORTFORWARD_CUSTOMIZATIONN
+		autoDetectWanStatus = json_object_get_boolean(json_object_object_get(Jobj, "X_ZYXEL_AutoDetectWanStatus"));
+		wanip = json_object_get_string(json_object_object_get(Jobj, "X_ZYXEL_WANIP"));
+#endif
 		if(json_object_object_get(Jobj, "Enable") != NULL)
 			json_object_object_add(NatPortMappingJobj, "Enable", json_object_new_boolean(enable));
 		if(json_object_object_get(Jobj, "Interface") != NULL)
@@ -319,6 +343,10 @@
 			json_object_object_add(paramJobj, "SetOriginatingIP", JSON_OBJ_COPY(json_object_object_get(PortFwdJobj, "X_ZYXEL_SetOriginatingIP")));
 			json_object_object_add(paramJobj, "OriginatingIpAddress", JSON_OBJ_COPY(json_object_object_get(PortFwdJobj, "OriginatingIpAddress")));
 			json_object_object_add(paramJobj, "Index", json_object_new_int(PortFwdIid.idx[0]));
+#ifdef ELISA_NAT_PORTFORWARD_CUSTOMIZATIONN
+			json_object_object_add(paramJobj, "X_ZYXEL_AutoDetectWanStatus", JSON_OBJ_COPY(json_object_object_get(PortFwdJobj, "X_ZYXEL_AutoDetectWanStatus")));
+			json_object_object_add(paramJobj, "X_ZYXEL_WANIP", JSON_OBJ_COPY(json_object_object_get(PortFwdJobj, "X_ZYXEL_WANIP")));
+#endif
 			json_object_array_add(Jarray, paramJobj);
 		}
 		zcfgFeJsonObjFree(PortFwdJobj);
Index: libzcfg_fe_dal-1.0/Makefile
===================================================================
--- libzcfg_fe_dal-1.0.orig/Makefile	2017-03-24 16:11:06.972444300 +0800
+++ libzcfg_fe_dal-1.0/Makefile	2017-03-24 16:11:37.937944300 +0800
@@ -112,6 +112,10 @@
 INC_PATH += -I$(VOIP_PATH)
 endif
 
+ifeq ($(CONFIG_ELISA_NAT_PORTFORWARD_CUSTOMIZATION),y)
+CFLAGS += -DELISA_NAT_PORTFORWARD_CUSTOMIZATIONN
+endif
+
 LDFLAGS += $(LIB_PATH) $(LINK_LIB)
 CFLAGS += $(INC_PATH) -std=gnu99
 
