Index: libzcfg_fe_dal-1.0/network/nat/zcfg_fe_dal_nat_addr_mapping.c
===================================================================
--- libzcfg_fe_dal-1.0.orig/network/nat/zcfg_fe_dal_nat_addr_mapping.c	2018-02-07 15:48:56.885598684 +0800
+++ libzcfg_fe_dal-1.0/network/nat/zcfg_fe_dal_nat_addr_mapping.c	2018-02-07 16:00:54.893545716 +0800
@@ -122,8 +122,12 @@
 			objIid.level = iidIdx+1;
 	}
 	} else if (iidArray = json_object_object_get(Jobj, "Index")) {
+		int indexGet = -1;
+
+		indexGet = json_object_get_int(iidArray);
+		IID_INIT(objIid);
 		objIid.level = 1;
-		objIid.idx[0] = json_object_get_int(iidArray);
+		objIid.idx[0] = indexGet;
 		json_object_object_del(Jobj, "Index");
 	}
 	else {
@@ -300,38 +304,18 @@
 	}
 	} else if (iidArray = json_object_object_get(Jobj, "Index")) {
 		int index = 0;
-		int count = 1;
-		bool found = false;
 	
 		index = json_object_get_int(iidArray);
 	
 		IID_INIT(objIid);
-		while(zcfgFeObjJsonGetNext(RDM_OID_NAT_ADDR_MAPPING, &objIid, &NatAddrMappingJobj) == ZCFG_SUCCESS) {
-			zcfgFeJsonObjFree(NatAddrMappingJobj);
-			if(count == index){
-				found = true;
-				break;
-			}
-			else
-				count++;
-		}
-		if(found){
-			ret = zcfgFeObjJsonDel(RDM_OID_NAT_ADDR_MAPPING, &objIid, NULL);
-			if (ret != ZCFG_SUCCESS)
-			{
-				if(replyMsg != NULL)
-					strcat(replyMsg, "internal error");
-				return ZCFG_INTERNAL_ERROR;
-			}
-		}
-		else
+		objIid.level = 1;
+		objIid.idx[0] = index;
+		ret = zcfgFeObjJsonDel(RDM_OID_NAT_ADDR_MAPPING, &objIid, NULL);
+		if (ret != ZCFG_SUCCESS)
 		{
-			if (ret != ZCFG_SUCCESS)
-			{
-				if(replyMsg != NULL)
-					strcat(replyMsg, "Can not find the rule");
-				return ZCFG_INTERNAL_ERROR;
-			}
+			if(replyMsg != NULL)
+				strcat(replyMsg, "internal error");
+			return ZCFG_INTERNAL_ERROR;
 		}
 		return ret;
 	}
@@ -377,32 +361,39 @@
 {
 	struct json_object *NatAddrMappingJobj = NULL;
 	struct json_object *paramJobj = NULL;
+	struct json_object *indexObj = NULL;
 	objIndex_t objIid = {0};
-	int index = 0;
-//	char *srvName;
+	int indexGet = -1;
+
+	if ((indexObj = json_object_object_get(Jobj, "Index")) != NULL)
+	{
+		indexGet = json_object_get_int(indexObj);
+	}
 
 	IID_INIT(objIid);
 	while(zcfgFeObjJsonGetNext(RDM_OID_NAT_ADDR_MAPPING, &objIid, &NatAddrMappingJobj) == ZCFG_SUCCESS) {
-		++index;
-		paramJobj = json_object_new_object();
-		json_object_object_add(paramJobj, "Enable", JSON_OBJ_COPY(json_object_object_get(NatAddrMappingJobj, "Enable")));
-		json_object_object_add(paramJobj, "Type", JSON_OBJ_COPY(json_object_object_get(NatAddrMappingJobj, "Type")));
-		json_object_object_add(paramJobj, "LocalStartIP", JSON_OBJ_COPY(json_object_object_get(NatAddrMappingJobj, "LocalStartIP")));
-		json_object_object_add(paramJobj, "LocalEndIP", JSON_OBJ_COPY(json_object_object_get(NatAddrMappingJobj, "LocalEndIP")));
-		json_object_object_add(paramJobj, "GlobalStartIP", JSON_OBJ_COPY(json_object_object_get(NatAddrMappingJobj, "GlobalStartIP")));
-		json_object_object_add(paramJobj, "GlobalEndIP", JSON_OBJ_COPY(json_object_object_get(NatAddrMappingJobj, "GlobalEndIP")));
-		json_object_object_add(paramJobj, "MappingSet", JSON_OBJ_COPY(json_object_object_get(NatAddrMappingJobj, "MappingSet")));
-		json_object_object_add(paramJobj, "MappingRuleName", JSON_OBJ_COPY(json_object_object_get(NatAddrMappingJobj, "MappingRuleName")));
-		json_object_object_add(paramJobj, "Description", JSON_OBJ_COPY(json_object_object_get(NatAddrMappingJobj, "Description")));
-		json_object_object_add(paramJobj, "WANIntfName", JSON_OBJ_COPY(json_object_object_get(NatAddrMappingJobj, "WANIntfName")));
-
-//		srvName = getIPInterfaceSrvName(json_object_get_string(json_object_object_get(NatAddrMappingJobj, "Interface")));
-//		if (srvName)
-//			json_object_object_add(paramJobj, "Interface", json_object_new_string(srvName));
-//		else
-			json_object_object_add(paramJobj, "Interface", JSON_OBJ_COPY(json_object_object_get(NatAddrMappingJobj, "Interface")));
-		json_object_object_add(paramJobj, "Index", json_object_new_int(index));
-		json_object_array_add(Jarray, paramJobj);
+		if (indexGet == -1 || objIid.idx[0] == indexGet)
+		{
+			paramJobj = json_object_new_object();
+			json_object_object_add(paramJobj, "Enable", JSON_OBJ_COPY(json_object_object_get(NatAddrMappingJobj, "Enable")));
+			json_object_object_add(paramJobj, "Type", JSON_OBJ_COPY(json_object_object_get(NatAddrMappingJobj, "Type")));
+			json_object_object_add(paramJobj, "LocalStartIP", JSON_OBJ_COPY(json_object_object_get(NatAddrMappingJobj, "LocalStartIP")));
+			json_object_object_add(paramJobj, "LocalEndIP", JSON_OBJ_COPY(json_object_object_get(NatAddrMappingJobj, "LocalEndIP")));
+			json_object_object_add(paramJobj, "GlobalStartIP", JSON_OBJ_COPY(json_object_object_get(NatAddrMappingJobj, "GlobalStartIP")));
+			json_object_object_add(paramJobj, "GlobalEndIP", JSON_OBJ_COPY(json_object_object_get(NatAddrMappingJobj, "GlobalEndIP")));
+			json_object_object_add(paramJobj, "MappingSet", JSON_OBJ_COPY(json_object_object_get(NatAddrMappingJobj, "MappingSet")));
+			json_object_object_add(paramJobj, "MappingRuleName", JSON_OBJ_COPY(json_object_object_get(NatAddrMappingJobj, "MappingRuleName")));
+			json_object_object_add(paramJobj, "Description", JSON_OBJ_COPY(json_object_object_get(NatAddrMappingJobj, "Description")));
+			json_object_object_add(paramJobj, "WANIntfName", JSON_OBJ_COPY(json_object_object_get(NatAddrMappingJobj, "WANIntfName")));
+
+//			srvName = getIPInterfaceSrvName(json_object_get_string(json_object_object_get(NatAddrMappingJobj, "Interface")));
+//			if (srvName)
+//				json_object_object_add(paramJobj, "Interface", json_object_new_string(srvName));
+//			else
+				json_object_object_add(paramJobj, "Interface", JSON_OBJ_COPY(json_object_object_get(NatAddrMappingJobj, "Interface")));
+			json_object_object_add(paramJobj, "Index", json_object_new_int(objIid.idx[0]));
+			json_object_array_add(Jarray, paramJobj);
+		}
 		zcfgFeJsonObjFree(NatAddrMappingJobj);
 	}
 	return ZCFG_SUCCESS;
Index: libzcfg_fe_dal-1.0/network/nat/zcfg_fe_dal_nat_port_mapping.c
===================================================================
--- libzcfg_fe_dal-1.0.orig/network/nat/zcfg_fe_dal_nat_port_mapping.c	2018-02-07 15:48:56.009598656 +0800
+++ libzcfg_fe_dal-1.0/network/nat/zcfg_fe_dal_nat_port_mapping.c	2018-02-07 16:02:15.761626647 +0800
@@ -358,27 +358,38 @@
 	zcfgRet_t ret = ZCFG_SUCCESS;
 	struct json_object *paramJobj = NULL;
 	struct json_object *PortFwdJobj = NULL;
+	struct json_object *indexObj = NULL;
 	objIndex_t PortFwdIid = {0};
+	int indexGet = -1;
+
+	if ((indexObj = json_object_object_get(Jobj, "Index")) != NULL)
+	{
+		indexGet = json_object_get_int(indexObj);
+	}
+
 	while(zcfgFeObjJsonGetNextWithoutUpdate(RDM_OID_NAT_PORT_MAPPING, &PortFwdIid, &PortFwdJobj) == ZCFG_SUCCESS){
 		if(strncmp(json_object_get_string(json_object_object_get(PortFwdJobj, "Description")),"APP:",4)){
-			paramJobj = json_object_new_object();
-			json_object_object_add(paramJobj, "Enable", JSON_OBJ_COPY(json_object_object_get(PortFwdJobj, "Enable")));
-			json_object_object_add(paramJobj, "Protocol", JSON_OBJ_COPY(json_object_object_get(PortFwdJobj, "Protocol")));
-			json_object_object_add(paramJobj, "Description", JSON_OBJ_COPY(json_object_object_get(PortFwdJobj, "Description")));
-			json_object_object_add(paramJobj, "Interface", JSON_OBJ_COPY(json_object_object_get(PortFwdJobj, "Interface")));
-			json_object_object_add(paramJobj, "ExternalPortStart", JSON_OBJ_COPY(json_object_object_get(PortFwdJobj, "ExternalPort")));
-			json_object_object_add(paramJobj, "ExternalPortEnd", JSON_OBJ_COPY(json_object_object_get(PortFwdJobj, "ExternalPortEndRange")));
-			json_object_object_add(paramJobj, "InternalPortStart", JSON_OBJ_COPY(json_object_object_get(PortFwdJobj, "InternalPort")));
-			json_object_object_add(paramJobj, "InternalPortEnd", JSON_OBJ_COPY(json_object_object_get(PortFwdJobj, "X_ZYXEL_InternalPortEndRange")));
-			json_object_object_add(paramJobj, "InternalClient", JSON_OBJ_COPY(json_object_object_get(PortFwdJobj, "InternalClient")));
-			json_object_object_add(paramJobj, "SetOriginatingIP", JSON_OBJ_COPY(json_object_object_get(PortFwdJobj, "X_ZYXEL_SetOriginatingIP")));
-			json_object_object_add(paramJobj, "OriginatingIpAddress", JSON_OBJ_COPY(json_object_object_get(PortFwdJobj, "OriginatingIpAddress")));
-			json_object_object_add(paramJobj, "Index", json_object_new_int(PortFwdIid.idx[0]));
-			json_object_object_add(paramJobj, "X_ZYXEL_AutoDetectWanStatus", JSON_OBJ_COPY(json_object_object_get(PortFwdJobj, "X_ZYXEL_AutoDetectWanStatus")));
+			if (indexGet == -1 || PortFwdIid.idx[0] == indexGet)
+			{
+				paramJobj = json_object_new_object();
+				json_object_object_add(paramJobj, "Enable", JSON_OBJ_COPY(json_object_object_get(PortFwdJobj, "Enable")));
+				json_object_object_add(paramJobj, "Protocol", JSON_OBJ_COPY(json_object_object_get(PortFwdJobj, "Protocol")));
+				json_object_object_add(paramJobj, "Description", JSON_OBJ_COPY(json_object_object_get(PortFwdJobj, "Description")));
+				json_object_object_add(paramJobj, "Interface", JSON_OBJ_COPY(json_object_object_get(PortFwdJobj, "Interface")));
+				json_object_object_add(paramJobj, "ExternalPortStart", JSON_OBJ_COPY(json_object_object_get(PortFwdJobj, "ExternalPort")));
+				json_object_object_add(paramJobj, "ExternalPortEnd", JSON_OBJ_COPY(json_object_object_get(PortFwdJobj, "ExternalPortEndRange")));
+				json_object_object_add(paramJobj, "InternalPortStart", JSON_OBJ_COPY(json_object_object_get(PortFwdJobj, "InternalPort")));
+				json_object_object_add(paramJobj, "InternalPortEnd", JSON_OBJ_COPY(json_object_object_get(PortFwdJobj, "X_ZYXEL_InternalPortEndRange")));
+				json_object_object_add(paramJobj, "InternalClient", JSON_OBJ_COPY(json_object_object_get(PortFwdJobj, "InternalClient")));
+				json_object_object_add(paramJobj, "SetOriginatingIP", JSON_OBJ_COPY(json_object_object_get(PortFwdJobj, "X_ZYXEL_SetOriginatingIP")));
+				json_object_object_add(paramJobj, "OriginatingIpAddress", JSON_OBJ_COPY(json_object_object_get(PortFwdJobj, "OriginatingIpAddress")));
+				json_object_object_add(paramJobj, "Index", json_object_new_int(PortFwdIid.idx[0]));
+				json_object_object_add(paramJobj, "X_ZYXEL_AutoDetectWanStatus", JSON_OBJ_COPY(json_object_object_get(PortFwdJobj, "X_ZYXEL_AutoDetectWanStatus")));
 #ifdef ELISA_NAT_PORTFORWARD_CUSTOMIZATIONN
-			json_object_object_add(paramJobj, "X_ZYXEL_WANIP", JSON_OBJ_COPY(json_object_object_get(PortFwdJobj, "X_ZYXEL_WANIP")));
+				json_object_object_add(paramJobj, "X_ZYXEL_WANIP", JSON_OBJ_COPY(json_object_object_get(PortFwdJobj, "X_ZYXEL_WANIP")));
 #endif
-			json_object_array_add(Jarray, paramJobj);
+				json_object_array_add(Jarray, paramJobj);
+			}
 		}
 		zcfgFeJsonObjFree(PortFwdJobj);
 	}	
Index: libzcfg_fe_dal-1.0/network/nat/zcfg_fe_dal_nat_port_triggering.c
===================================================================
--- libzcfg_fe_dal-1.0.orig/network/nat/zcfg_fe_dal_nat_port_triggering.c	2018-02-07 15:48:55.069598626 +0800
+++ libzcfg_fe_dal-1.0/network/nat/zcfg_fe_dal_nat_port_triggering.c	2018-02-07 16:03:15.640220723 +0800
@@ -220,24 +220,33 @@
 {
 	struct json_object *NatPortTriggeringJobj = NULL;
 	struct json_object *paramJobj = NULL;
+	struct json_object *indexObj = NULL;
 	objIndex_t objIid = {0};
-	int index = 0;
+	int index = 0, indexGet = -1;
+
+	if ((indexObj = json_object_object_get(Jobj, "Index")) != NULL)
+	{
+		indexGet = json_object_get_int(indexObj);
+	}
 
 	IID_INIT(objIid);
 	while(zcfgFeObjJsonGetNext(RDM_OID_NAT_PORT_TRIGGERING, &objIid, &NatPortTriggeringJobj) == ZCFG_SUCCESS) {
 		++index;
-		paramJobj = json_object_new_object();
-		json_object_object_add(paramJobj, "Enable", JSON_OBJ_COPY(json_object_object_get(NatPortTriggeringJobj, "Enable")));
-		json_object_object_add(paramJobj, "Interface", JSON_OBJ_COPY(json_object_object_get(NatPortTriggeringJobj, "Interface")));
-		json_object_object_add(paramJobj, "TriggerPort", JSON_OBJ_COPY(json_object_object_get(NatPortTriggeringJobj, "TriggerPort")));
-		json_object_object_add(paramJobj, "TriggerPortEndRange", JSON_OBJ_COPY(json_object_object_get(NatPortTriggeringJobj, "TriggerPortEndRange")));
-		json_object_object_add(paramJobj, "OpenPort", JSON_OBJ_COPY(json_object_object_get(NatPortTriggeringJobj, "OpenPort")));
-		json_object_object_add(paramJobj, "OpenPortEndRange", JSON_OBJ_COPY(json_object_object_get(NatPortTriggeringJobj, "OpenPortEndRange")));
-		json_object_object_add(paramJobj, "Protocol", JSON_OBJ_COPY(json_object_object_get(NatPortTriggeringJobj, "Protocol")));
-		json_object_object_add(paramJobj, "TriggerProtocol", JSON_OBJ_COPY(json_object_object_get(NatPortTriggeringJobj, "TriggerProtocol")));
-		json_object_object_add(paramJobj, "Description", JSON_OBJ_COPY(json_object_object_get(NatPortTriggeringJobj, "Description")));
-		json_object_object_add(paramJobj, "Index", json_object_new_int(index));
-		json_object_array_add(Jarray, paramJobj);
+		if (indexGet == -1 || index == indexGet)
+		{
+			paramJobj = json_object_new_object();
+			json_object_object_add(paramJobj, "Enable", JSON_OBJ_COPY(json_object_object_get(NatPortTriggeringJobj, "Enable")));
+			json_object_object_add(paramJobj, "Interface", JSON_OBJ_COPY(json_object_object_get(NatPortTriggeringJobj, "Interface")));
+			json_object_object_add(paramJobj, "TriggerPort", JSON_OBJ_COPY(json_object_object_get(NatPortTriggeringJobj, "TriggerPort")));
+			json_object_object_add(paramJobj, "TriggerPortEndRange", JSON_OBJ_COPY(json_object_object_get(NatPortTriggeringJobj, "TriggerPortEndRange")));
+			json_object_object_add(paramJobj, "OpenPort", JSON_OBJ_COPY(json_object_object_get(NatPortTriggeringJobj, "OpenPort")));
+			json_object_object_add(paramJobj, "OpenPortEndRange", JSON_OBJ_COPY(json_object_object_get(NatPortTriggeringJobj, "OpenPortEndRange")));
+			json_object_object_add(paramJobj, "Protocol", JSON_OBJ_COPY(json_object_object_get(NatPortTriggeringJobj, "Protocol")));
+			json_object_object_add(paramJobj, "TriggerProtocol", JSON_OBJ_COPY(json_object_object_get(NatPortTriggeringJobj, "TriggerProtocol")));
+			json_object_object_add(paramJobj, "Description", JSON_OBJ_COPY(json_object_object_get(NatPortTriggeringJobj, "Description")));
+			json_object_object_add(paramJobj, "Index", json_object_new_int(index));
+			json_object_array_add(Jarray, paramJobj);
+		}
 		zcfgFeJsonObjFree(NatPortTriggeringJobj);
 	}
 
