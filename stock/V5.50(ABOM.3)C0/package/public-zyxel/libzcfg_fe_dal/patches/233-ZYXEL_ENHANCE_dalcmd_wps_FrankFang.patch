Index: libzcfg_fe_dal-1.0/network/wireless/zcfg_fe_dal_wifi_wps.c
===================================================================
--- libzcfg_fe_dal-1.0.orig/network/wireless/zcfg_fe_dal_wifi_wps.c	2017-06-28 16:21:58.346827574 +0800
+++ libzcfg_fe_dal-1.0/network/wireless/zcfg_fe_dal_wifi_wps.c	2017-06-28 16:43:08.224021684 +0800
@@ -14,9 +14,10 @@
 {
 	//WiFi Access Point WPS
 	{"Enable",						dalType_boolean,	0,	0,	NULL,	NULL,	0},
-	{"X_ZYXEL_WPS_EnablePBC",		dalType_boolean,	0,	0,	NULL,	NULL,	dalcmd_Forbid},
-	{"X_ZYXEL_WPS_EnableStaPin",	dalType_boolean,	0,	0,	NULL,	NULL,	dalcmd_Forbid},
-	{"X_ZYXEL_WPS_EnableAPPin",		dalType_boolean,	0,	0,	NULL,	NULL,	dalcmd_Forbid},
+	{"EnablePBC",					dalType_boolean,	0,	0,	NULL,	NULL,	0},
+	{"EnableStaPin",				dalType_boolean,	0,	0,	NULL,	NULL,	0},
+	{"EnableAPPin", 				dalType_boolean,	0,	0,	NULL,	NULL,	0},
+	{"Band",						dalType_string,		0,	0,	NULL,	"2.4GHz|5GHz",	dal_Edit},
 	{"X_ZYXEL_WPS_GenDevicePin",	dalType_boolean,	0,	0,	NULL,	NULL,	dalcmd_Forbid},
 	{"X_ZYXEL_WPS_StationPin",		dalType_string,		0,	0,	NULL,	NULL,	dalcmd_Forbid},
 	{"X_ZYXEL_WPS_Configured",		dalType_boolean,	0,	0,	NULL,	NULL,	dalcmd_Forbid},
@@ -34,14 +35,42 @@
 		return;
 	}
 
+	printf("%-15s %-15s %-15s %-15s %-15s\n","Band","WPS Status","PBC Status","StaPin Status","APPin Status");
+	printf("--------------------------------------------------------------------------------\n");
+	
 	len = json_object_array_length(Jarray);
 	for(i=0;i<len;i++){
 		obj = json_object_array_get_idx(Jarray, i);
 		if(obj!=NULL){
-			if(json_object_get_boolean(json_object_object_get(obj, "Enable")))
-				printf("WPS Enable : true\n");
-			else
-				printf("WPS Enable : false\n");
+			
+
+			printf("%-15s ",json_object_get_string(json_object_object_get(obj, "Band")));
+			
+			if(json_object_get_boolean(json_object_object_get(obj, "Enable"))){
+				printf("%-15s ","Enabled");
+				if(json_object_get_boolean(json_object_object_get(obj, "X_ZYXEL_WPS_EnablePBC"))){
+					printf("%-15s ","Enabled");
+				}
+				else{
+					printf("%-15s ","Disabled");
+				}
+				if(json_object_get_boolean(json_object_object_get(obj, "X_ZYXEL_WPS_EnableStaPin"))){
+					printf("%-15s ","Enabled");
+				}
+				else{
+					printf("%-15s ","Disabled");
+				}
+				if(json_object_get_boolean(json_object_object_get(obj, "X_ZYXEL_WPS_EnableAPPin"))){
+					printf("%-15s ","Enabled");
+				}
+				else{
+					printf("%-15s ","Disabled");
+				}
+			}
+			else{
+				printf("%-15s %-15s %-15s %-15s","Disabled","N/A","N/A","N/A");
+			}
+			printf("\n");
 		}
 		else{
 			printf("ERROR!\n");
@@ -59,6 +88,7 @@
 	struct json_object *enableAPPin = NULL;
 	struct json_object *pramJobj = NULL;
 
+	// Band; 2.4GHz
 	IID_INIT(objIid);
 	objIid.level = 1;
 	objIid.idx[0] = 1;
@@ -66,61 +96,143 @@
 		printf("%s : Get object fail\n",__FUNCTION__);
 		return ret;
 	}
+	enable = json_object_object_get(WifiApWpsJobj, "Enable");
+	enablePBC = json_object_object_get(WifiApWpsJobj, "X_ZYXEL_WPS_EnablePBC");
+	enableStaPin = json_object_object_get(WifiApWpsJobj, "X_ZYXEL_WPS_EnableStaPin");
+	enableAPPin = json_object_object_get(WifiApWpsJobj, "X_ZYXEL_WPS_EnableAPPin");
+	pramJobj = json_object_new_object();
+	json_object_object_add(pramJobj, "Band", json_object_new_string("2.4GHz"));
+	json_object_object_add(pramJobj, "Enable", JSON_OBJ_COPY(enable));
+	json_object_object_add(pramJobj, "X_ZYXEL_WPS_EnablePBC", JSON_OBJ_COPY(enablePBC));
+	json_object_object_add(pramJobj, "X_ZYXEL_WPS_EnableStaPin", JSON_OBJ_COPY(enableStaPin));
+	json_object_object_add(pramJobj, "X_ZYXEL_WPS_EnableAPPin", JSON_OBJ_COPY(enableAPPin));
+	json_object_array_add(Jarray, pramJobj);
+	zcfgFeJsonObjFree(WifiApWpsJobj);
 
+	// Band: 5GHz
+	IID_INIT(objIid);
+	objIid.level = 1;
+	objIid.idx[0] = 5;
+	if((ret = zcfgFeObjJsonGet(RDM_OID_WIFI_ACCESS_POINT_WPS, &objIid, &WifiApWpsJobj)) != ZCFG_SUCCESS) {
+		printf("%s : Get object fail\n",__FUNCTION__);
+		return ret;
+	}
 	enable = json_object_object_get(WifiApWpsJobj, "Enable");
+	enablePBC = json_object_object_get(WifiApWpsJobj, "X_ZYXEL_WPS_EnablePBC");
+	enableStaPin = json_object_object_get(WifiApWpsJobj, "X_ZYXEL_WPS_EnableStaPin");
+	enableAPPin = json_object_object_get(WifiApWpsJobj, "X_ZYXEL_WPS_EnableAPPin");
 	pramJobj = json_object_new_object();
+	json_object_object_add(pramJobj, "Band", json_object_new_string("5GHz"));
 	json_object_object_add(pramJobj, "Enable", JSON_OBJ_COPY(enable));
+	json_object_object_add(pramJobj, "X_ZYXEL_WPS_EnablePBC", JSON_OBJ_COPY(enablePBC));
+	json_object_object_add(pramJobj, "X_ZYXEL_WPS_EnableStaPin", JSON_OBJ_COPY(enableStaPin));
+	json_object_object_add(pramJobj, "X_ZYXEL_WPS_EnableAPPin", JSON_OBJ_COPY(enableAPPin));
 	json_object_array_add(Jarray, pramJobj);
 	zcfgFeJsonObjFree(WifiApWpsJobj);
+
 	return ret;
 }
 
-zcfgRet_t zcfgFeDalWifiWpsEdit(struct json_object *Jobj, char *replyMsg)
-{
+zcfgRet_t zcfgFeDalWifiWpsEdit(struct json_object *Jobj, char *replyMsg){
 
 	zcfgRet_t ret = ZCFG_SUCCESS;
 	const char *paraName;
 	objIndex_t objIid;
 	struct json_object *WifiApWpsJobj = NULL;
-	int paramModified = 0, n = 0;
-	struct json_object *iidArray = NULL;
-	uint8_t iidIdx =0;
-	paraName = (const char *)WIFI_WPS_param[n++].paraName;
+	struct json_object *enable = NULL;
+	struct json_object *enablePBC = NULL;
+	struct json_object *enableStaPin = NULL;
+	struct json_object *enableAPPin = NULL;
+	struct json_object *genDevicePin = NULL;
+	struct json_object *stationPin = NULL;
+	struct json_object *configured = NULL;
+	struct json_object *method = NULL;
+	struct json_object *configMethodsEnabled = NULL;
+	char *wpsBand = NULL;
+	// for wps apply check
+	struct json_object *tmpObj = NULL;
+	char *secMode = NULL;
 	
-	if(json_object_object_get(Jobj, "iid")){
-		iidArray = json_object_object_get(Jobj, "iid");
-		for(iidIdx=0;iidIdx<6;iidIdx++){
-			objIid.idx[iidIdx] = json_object_get_int( json_object_array_get_idx(iidArray, iidIdx));
-			if(objIid.idx[iidIdx] != 0)
-				objIid.level = iidIdx+1;
-		}
+	wpsBand = json_object_get_string(json_object_object_get(Jobj, "Band"));
+	IID_INIT(objIid);
+	objIid.level = 1;
+	if(!strcmp(wpsBand,"2.4GHz"))
+		objIid.idx[0] = 1;	
+	else if(!strcmp(wpsBand,"5GHz"))
+		objIid.idx[0] = 5;
+	else{
+		printf("\"Band\" value should be \"2.4GHz\" or \"5GHz\".\n");
+		return ZCFG_INVALID_PARAM_VALUE;
 	}
-	else{ // for 2.4G band
-		IID_INIT(objIid);
-		objIid.level = 1;
-		objIid.idx[0] = 1;
+	
+	// wps apply check
+	if((ret = zcfgFeObjJsonGet(RDM_OID_WIFI_ACCESS_POINT_SEC, &objIid, &tmpObj)) != ZCFG_SUCCESS){
+		return ret;
 	}
-
+	secMode = json_object_get_string(json_object_object_get(tmpObj,"ModeEnabled"));
+	if(!strcmp(secMode,"WEP-64") || !strcmp(secMode,"WEP-128")){
+		printf("WPS does not support WEP mode, please change.\n");
+		zcfgFeJsonObjFree(tmpObj);
+		return ZCFG_INVALID_PARAM_VALUE;
+	}
+	else if(!strcmp(secMode,"WPA-Personal")){
+		printf("WPS does not support WPA-Personal mode, please change.\n");
+		zcfgFeJsonObjFree(tmpObj);
+		return ZCFG_INVALID_PARAM_VALUE;
+	}
+	else{
+		zcfgFeJsonObjFree(tmpObj);
+	}
+	
+	// wps apply check
+	if((ret = zcfgFeObjJsonGet(RDM_OID_WIFI_ACCESS_POINT, &objIid, &tmpObj)) != ZCFG_SUCCESS){
+		return ret;
+	}
+	if(!json_object_get_boolean(json_object_object_get(tmpObj,"SSIDAdvertisementEnabled"))){
+		printf("WPS 2.0 does not support Hide SSID. Please deselect \"Hide SSID\" in Wireless -> General page.\n");
+		zcfgFeJsonObjFree(tmpObj);
+		return ZCFG_INVALID_PARAM_VALUE;
+	}
+	else{
+		zcfgFeJsonObjFree(tmpObj);
+	}
+	
 	if((ret = zcfgFeObjJsonGet(RDM_OID_WIFI_ACCESS_POINT_WPS, &objIid, &WifiApWpsJobj)) != ZCFG_SUCCESS) {
 		return ret;
 	}
-	while(paraName){
-		struct json_object *paramValue = json_object_object_get(Jobj, paraName);
-		if(!paramValue) {
-			paraName = (const char *)WIFI_WPS_param[n++].paraName;
-			continue;
-		}
-		json_object_object_add(WifiApWpsJobj, paraName, JSON_OBJ_COPY(paramValue));
-		paramModified = 1;				
-		paraName = (const char *)WIFI_WPS_param[n++].paraName;
+	if(enable = json_object_object_get(Jobj,"Enable")){
+		json_object_object_add(WifiApWpsJobj,"Enable", JSON_OBJ_COPY(enable));
 	}
-
-	if(paramModified) {
-		if((ret = zcfgFeObjJsonBlockedSet(RDM_OID_WIFI_ACCESS_POINT_WPS, &objIid, WifiApWpsJobj, NULL)) != ZCFG_SUCCESS);
+	if(enablePBC = json_object_object_get(Jobj,"EnablePBC")){
+		json_object_object_add(WifiApWpsJobj,"X_ZYXEL_WPS_EnablePBC", JSON_OBJ_COPY(enablePBC));
+	}
+	if(enableStaPin = json_object_object_get(Jobj,"EnableStaPin")){
+		json_object_object_add(WifiApWpsJobj,"X_ZYXEL_WPS_EnableStaPin", JSON_OBJ_COPY(enableStaPin));
+	}
+	if(enableAPPin = json_object_object_get(Jobj,"EnableAPPin")){
+		json_object_object_add(WifiApWpsJobj,"X_ZYXEL_WPS_EnableAPPin", JSON_OBJ_COPY(enableAPPin));
+	}
+	if(genDevicePin = json_object_object_get(Jobj,"X_ZYXEL_WPS_GenDevicePin")){
+		json_object_object_add(WifiApWpsJobj,"X_ZYXEL_WPS_GenDevicePin", JSON_OBJ_COPY(genDevicePin));
+	}
+	if(stationPin = json_object_object_get(Jobj,"X_ZYXEL_WPS_StationPin")){
+		json_object_object_add(WifiApWpsJobj,"X_ZYXEL_WPS_StationPin", JSON_OBJ_COPY(stationPin));
 	}
+	if(configured = json_object_object_get(Jobj,"X_ZYXEL_WPS_Configured")){
+		json_object_object_add(WifiApWpsJobj,"X_ZYXEL_WPS_Configured", JSON_OBJ_COPY(configured));
+	}
+	if(method = json_object_object_get(Jobj,"X_ZYXEL_WPS_Method")){
+		json_object_object_add(WifiApWpsJobj,"X_ZYXEL_WPS_Method", JSON_OBJ_COPY(method));
+	}
+	if(configMethodsEnabled = json_object_object_get(Jobj,"ConfigMethodsEnabled")){
+		json_object_object_add(WifiApWpsJobj,"ConfigMethodsEnabled", JSON_OBJ_COPY(configMethodsEnabled));
+	}
+
+	if((ret = zcfgFeObjJsonBlockedSet(RDM_OID_WIFI_ACCESS_POINT_WPS, &objIid, WifiApWpsJobj, NULL)) != ZCFG_SUCCESS);
 	json_object_put(WifiApWpsJobj);
 	return ret;
 }
+
 zcfgRet_t zcfgFeDalWifiWps(const char *method, struct json_object *Jobj, char *replyMsg)
 {
 	zcfgRet_t ret = ZCFG_SUCCESS;
Index: libzcfg_fe_dal-1.0/zcfg_fe_dal.c
===================================================================
--- libzcfg_fe_dal-1.0.orig/zcfg_fe_dal.c	2017-06-28 16:21:58.582827570 +0800
+++ libzcfg_fe_dal-1.0/zcfg_fe_dal.c	2017-06-28 16:37:45.634004253 +0800
@@ -242,7 +242,7 @@
 {"QOS_SHAPER",		QosShaper_param,	zcfgFeDalQosShaper,		NULL,						"add|edit|delete",	""},//QoS
 {"QOS_POLICER",		QosPolicer_param,	zcfgFeDalQosPolicer,	NULL,						"add|edit|delete",	""},//QoS
 {"WIFI_MACFILTER",	WIFI_MACFILTER_param,	zcfgFeDalWifiMACFilter,NULL,					"edit",       		""},//Wireless
-{"WIFI_WPS",		WIFI_WPS_param,		zcfgFeDalWifiWps,		zcfgFeDalShowWifiWps,		"edit|get",			"Wireless"},
+{"wps",				WIFI_WPS_param,		zcfgFeDalWifiWps,		zcfgFeDalShowWifiWps,		"edit|get",			"Wireless"},
 {"WIFI_WMM",		WIFI_WMM_param,		zcfgFeDalWifiWmm,		NULL,						"edit",				""},//Wireless
 #ifdef BUILD_SONIQ
 {"WIFI_SONIQ",		WIFI_SONIQ_param, 	zcfgFeDalWifiSoniq,		NULL,						"edit", 			""},//Wireless
