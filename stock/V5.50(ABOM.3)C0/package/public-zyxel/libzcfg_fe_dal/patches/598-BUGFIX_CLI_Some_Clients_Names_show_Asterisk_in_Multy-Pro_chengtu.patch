Index: libzcfg_fe_dal-1.0/network/homeConnectivity/zcfg_fe_dal_oui.c
===================================================================
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ libzcfg_fe_dal-1.0/network/homeConnectivity/zcfg_fe_dal_oui.c	2018-07-10 11:40:44.888120000 +0800
@@ -0,0 +1,78 @@
+#include <ctype.h>
+#include <json/json.h>
+//#include <json/json_object.h>
+#include <time.h>
+
+#include "zcfg_common.h"
+#include "zcfg_fe_rdm_string.h"
+#include "zcfg_fe_rdm_struct.h"
+#include "zcfg_rdm_oid.h"
+#include "zcfg_rdm_obj.h"
+#include "zcfg_debug.h"
+//#include "zcfg_eid.h"
+#include "zcfg_msg.h"
+#include "zcfg_fe_dal_common.h"
+
+dal_param_t OUI_param[]={
+	{"Enable", 			dalType_boolean,	0,	0,	NULL,	NULL,	NULL},
+	{NULL,					0,	0,	0,	NULL},
+};
+
+void zcfgFeDalShowoui(struct json_object *Jarray){
+	struct json_object *obj;
+
+	if(json_object_get_type(Jarray) != json_type_array){
+		printf("wrong Jobj format!\n");
+		return;
+	}
+	obj = json_object_array_get_idx(Jarray, 0);
+	printf("OUI name replace enalbe state: ");
+	printf("%-10s \n", json_object_get_string(json_object_object_get(obj, "Enable")));
+}
+
+zcfgRet_t zcfgFeDal_oui_Edit(struct json_object *Jobj, char *replyMsg){
+	zcfgRet_t ret = ZCFG_SUCCESS;
+	struct json_object *ouiObj = NULL;
+	objIndex_t ouiIid = {0};
+	bool Enable = false;
+
+	IID_INIT(ouiIid);
+	Enable = json_object_get_boolean(json_object_object_get(Jobj, "Enable"));
+	if(zcfgFeObjJsonGet(RDM_OID_ZY_HOST_NAME_REPLACE, &ouiIid, &ouiObj) == ZCFG_SUCCESS){
+		if(json_object_object_get(Jobj, "Enable"))
+		json_object_object_add(ouiObj, "Enable", json_object_new_boolean(Enable));
+		zcfgFeObjJsonSet(RDM_OID_ZY_HOST_NAME_REPLACE, &ouiIid, ouiObj, NULL);
+		zcfgFeJsonObjFree(ouiObj);
+	}
+
+	return ret;
+}
+
+zcfgRet_t zcfgFeDal_oui_Get(struct json_object *Jobj, struct json_object *Jarray, char *replyMsg){
+	zcfgRet_t ret = ZCFG_SUCCESS;
+	struct json_object *paramJobj = NULL;
+	struct json_object *ouiObj = NULL;
+	objIndex_t ouiIid = {0};
+
+	if(zcfgFeObjJsonGetWithoutUpdate(RDM_OID_ZY_HOST_NAME_REPLACE, &ouiIid, &ouiObj) == ZCFG_SUCCESS){
+		paramJobj = json_object_new_object();
+		json_object_object_add(paramJobj, "Enable", JSON_OBJ_COPY(json_object_object_get(ouiObj, "Enable")));
+		json_object_array_add(Jarray, paramJobj);
+		zcfgFeJsonObjFree(ouiObj);
+	}
+	return ret;
+}
+
+zcfgRet_t zcfgFeDaloui(const char *method, struct json_object *Jobj, struct json_object *Jarray, char *replyMsg){
+	zcfgRet_t ret = ZCFG_SUCCESS;
+
+	if(!strcmp(method, "PUT")){
+		ret = zcfgFeDal_oui_Edit(Jobj, NULL);		
+	}
+	else if(!strcmp(method, "GET"))
+		ret = zcfgFeDal_oui_Get(Jobj, Jarray, NULL);	
+	else
+		printf("Unknown method:%s\n", method);
+
+	return ret;
+}
Index: libzcfg_fe_dal-1.0/zcfg_fe_dal.c
===================================================================
--- libzcfg_fe_dal-1.0.orig/zcfg_fe_dal.c	2018-07-10 14:45:49.748473501 +0800
+++ libzcfg_fe_dal-1.0/zcfg_fe_dal.c	2018-07-10 14:47:12.791654600 +0800
@@ -95,6 +95,7 @@
 extern dal_param_t SCHEDULE_param[];
 extern dal_param_t DEV_SEC_CERT_param[];
 extern dal_param_t HOME_CONNECTIVYITY_param[];
+extern dal_param_t OUI_param[];
 extern dal_param_t MGMT_SRV_param[];
 extern dal_param_t SP_MGMT_SRV_param[];
 extern dal_param_t LOGIN_PRIVILEGE_param[];
@@ -190,6 +191,7 @@
 extern zcfgRet_t zcfgFeDalSchedule(const char *method, struct json_object *Jobj, struct json_object *Jarray, char *replyMsg);
 extern zcfgRet_t zcfgFeDalDevSecCert(const char *method, struct json_object *Jobj, struct json_object *Jarray, char *replyMsg);
 extern zcfgRet_t zcfgFeDalHomeConnectivity(const char *method, struct json_object *Jobj, struct json_object *Jarray, char *replyMsg);
+extern zcfgRet_t zcfgFeDaloui(const char *method, struct json_object *Jobj, struct json_object *Jarray, char *replyMsg);
 extern zcfgRet_t zcfgFeDalMgmtSrv(const char *method, struct json_object *Jobj, struct json_object *Jarray, char *replyMsg);
 extern zcfgRet_t zcfgFeDalSPMgmtSrv(const char *method, struct json_object *Jobj, struct json_object *Jarray, char *replyMsg);
 extern zcfgRet_t zcfgFeDalLoginPrivilege(const char *method, struct json_object *Jobj, struct json_object *Jarray, char *replyMsg);
@@ -238,6 +240,7 @@
 extern void zcfgFeDalShowMACFilter(struct json_object *Jarray);
 extern void zcfgFeDalShowFirewall(struct json_object *Jarray);
 extern void zcfgFeDalShowHomeConnect(struct json_object *Jarray);
+extern void zcfgFeDalShowoui(struct json_object *Jarray);
 extern void zcfgFeDalShowWanAdvance(struct json_object *Jarray);
 extern void zcfgFeDalShowSNMP(struct json_object *Jarray);
 extern void zcfgFeDalShowPolicyRoute(struct json_object *Jarray);
@@ -357,6 +360,7 @@
 {"scheduler",		SCHEDULE_param, 	zcfgFeDalSchedule,		zcfgFeDalShowSchedule,		"get|add|edit|delete",	"Scheduler_Rule"},
 {"dev_sec_cert", 	DEV_SEC_CERT_param,	zcfgFeDalDevSecCert, 	NULL,						"get|add|edit|delete", 	""},//Certificates
 {"one_connect", 	HOME_CONNECTIVYITY_param, zcfgFeDalHomeConnectivity,zcfgFeDalShowHomeConnect, 	"get|edit", 		"Home_Connectivity"},//Home_Connectivity
+{"oui",				OUI_param,		zcfgFeDaloui,		zcfgFeDalShowoui,		"get|edit",		"Home_Connectivity"},//Set one connect oui enable/disable, not for GUI
 {"mgmt_srv", 		MGMT_SRV_param,	zcfgFeDalMgmtSrv,			zcfgFeDalShowMgmtSrv,		"edit|get",			"Remote_MGMT"},
 {"sp_mgmt_srv", 	SP_MGMT_SRV_param,	zcfgFeDalSPMgmtSrv,		zcfgFeDalShowSPMgmtSrv,		"edit|get",			"SP_Domain"},
 {"login_privilege", LOGIN_PRIVILEGE_param,	zcfgFeDalLoginPrivilege,NULL, 					"edit|get",				""},//root_only
