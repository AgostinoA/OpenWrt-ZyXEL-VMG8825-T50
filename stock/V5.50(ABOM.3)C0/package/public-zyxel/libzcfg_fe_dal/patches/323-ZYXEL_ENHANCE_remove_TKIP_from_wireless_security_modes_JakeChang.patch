Index: libzcfg_fe_dal-1.0/network/wireless/zcfg_fe_dal_wifi_general.c
===================================================================
--- libzcfg_fe_dal-1.0.orig/network/wireless/zcfg_fe_dal_wifi_general.c	2017-08-31 15:30:55.872549512 +0800
+++ libzcfg_fe_dal-1.0/network/wireless/zcfg_fe_dal_wifi_general.c	2017-08-31 15:30:55.892549512 +0800
@@ -59,7 +59,7 @@
 	{"WEP64Key3",	dalType_string, 	0,	0,	NULL,		NULL,			0},
 	{"WEP64Key4",	dalType_string, 	0,	0,	NULL,		NULL,			0},
 	{"wepid",				dalType_string,		0,	0,	NULL,		"key1|key2|key3|key4",			0},
-	{"wpaMode",				dalType_string,		0,	0,	NULL,		"wpapsk|wpa2psk|wpawpa2psk",			0},
+	{"wpaMode",				dalType_string,		0,	0,	NULL,		"wpa2psk",			0},
 	// {"X_ZYXEL_AutoGenPSK",	dalType_boolean,	0,	0,	NULL,		NULL,			0},
 	{"AutoGenPSK",	dalType_boolean,	0,	0,	NULL,		NULL,			0},
 	{"psk_value",			dalType_string, 	0,	0,	NULL,		NULL,			0},
@@ -69,7 +69,7 @@
 	{"RadiusSecret",		dalType_string, 	0,	0,	NULL,		NULL,			dalcmd_Forbid},
 	{"X_ZYXEL_Preauth",		dalType_boolean,	0,	0,	NULL,		NULL,			dalcmd_Forbid},
 	{"X_ZYXEL_ReauthInterval",dalType_int,		0,	0,	NULL,		NULL,			0},
-	{"encryp",				dalType_string, 	0,	0,	NULL,		"tkip|aes|tkipaes",			0},
+	{"encryp",				dalType_string, 	0,	0,	NULL,		"aes",			0},
 	{"X_ZYXEL_PassphraseType",dalType_int,		0,	0,	NULL,		NULL,			dalcmd_Forbid},
 	//DHCPV4 SRV SUBNET
 	{"div_wifiSubnet",		dalType_boolean,	0,	0,	NULL,		NULL,			dalcmd_Forbid},
@@ -302,7 +302,7 @@
 				if(!strcmp("None",modeEn)){
 					json_object_object_add(pramJobj, "PskDisplay", json_object_new_string("None"));
 				}
-				else if(!strcmp("WPA2-Personal",modeEn) || !strcmp("WPA-WPA2-Personal",modeEn) || !strcmp("WPA-Personal",modeEn)){
+				else if(!strcmp("WPA2-Personal",modeEn)){
 					if(json_object_get_boolean(json_object_object_get(obj2, "X_ZYXEL_AutoGenPSK"))){
 						json_object_object_add(pramJobj, "PskDisplay", JSON_OBJ_COPY(json_object_object_get(obj2, "X_ZYXEL_Auto_PSK")));
 					}
@@ -1265,14 +1265,9 @@
 	}
 	else if(secMode == SLIDER_POS_MORESECURE)
 	{
-		if(!strcmp(wpaMode,"wpa2psk") || !strcmp(wpaMode,"wpapsk") || !strcmp(wpaMode,"wpawpa2psk"))
+		if(!strcmp(wpaMode,"wpa2psk"))
 		{
-			if(!strcmp(wpaMode,"wpa2psk"))
-				json_object_object_add(wifiSecObj, "ModeEnabled", json_object_new_string("WPA2-Personal"));
-			else if(!strcmp(wpaMode,"wpapsk"))
-				json_object_object_add(wifiSecObj, "ModeEnabled", json_object_new_string("WPA-Personal"));
-			else
-				json_object_object_add(wifiSecObj, "ModeEnabled", json_object_new_string("WPA-WPA2-Personal"));
+			json_object_object_add(wifiSecObj, "ModeEnabled", json_object_new_string("WPA2-Personal"));
 		
 			// AutoGenPSK be from user (Jobj) or default (wifiSecObj)
 			if(json_object_object_get(Jobj,"AutoGenPSK")){
@@ -1302,22 +1297,12 @@
 				}
 			}
 		}
-		else if(!strcmp(wpaMode,"wpa2") || !strcmp(wpaMode,"wpa") || !strcmp(wpaMode,"wpawpa"))
+		else if(!strcmp(wpaMode,"wpa2"))
 		{
-			if(!strcmp(wpaMode,"wpa2"))
-			{
-				json_object_object_add(wifiSecObj, "ModeEnabled", json_object_new_string("WPA2-Enterprise"));
-				json_object_object_add(wifiSecObj, "X_ZYXEL_Preauth", json_object_new_boolean(X_ZYXEL_Preauth));
-				json_object_object_add(wifiSecObj, "X_ZYXEL_ReauthInterval", json_object_new_int(X_ZYXEL_ReauthInterval));
-			}
-			else if(!strcmp(wpaMode,"wpa"))
-				json_object_object_add(wifiSecObj, "ModeEnabled", json_object_new_string("WPA-Enterprise"));
-			else
-			{
-				json_object_object_add(wifiSecObj, "ModeEnabled", json_object_new_string("WPA-WPA2-Enterprise"));
-				json_object_object_add(wifiSecObj, "X_ZYXEL_Preauth", json_object_new_boolean(X_ZYXEL_Preauth));
-				json_object_object_add(wifiSecObj, "X_ZYXEL_ReauthInterval", json_object_new_int(X_ZYXEL_ReauthInterval));
-			}
+
+			json_object_object_add(wifiSecObj, "ModeEnabled", json_object_new_string("WPA2-Enterprise"));
+			json_object_object_add(wifiSecObj, "X_ZYXEL_Preauth", json_object_new_boolean(X_ZYXEL_Preauth));
+			json_object_object_add(wifiSecObj, "X_ZYXEL_ReauthInterval", json_object_new_int(X_ZYXEL_ReauthInterval));
 			
 			json_object_object_add(wifiSecObj, "RadiusServerIPAddr", json_object_new_string(RadiusServerIPAddr));
 			json_object_object_add(wifiSecObj, "RadiusServerPort", json_object_new_int(RadiusServerPort));
@@ -1325,12 +1310,8 @@
 		}
 
 		if(json_object_object_get(Jobj, "encryp")){
-			if(!strcmp(encryp, "tkip"))
-				json_object_object_add(wifiSecObj, "X_ZYXEL_Encryption", json_object_new_string("tkip"));
-			else if(!strcmp(encryp, "aes"))
+			if(!strcmp(encryp, "aes"))
 				json_object_object_add(wifiSecObj, "X_ZYXEL_Encryption", json_object_new_string("aes"));
-			else
-				json_object_object_add(wifiSecObj, "X_ZYXEL_Encryption", json_object_new_string("tkipaes"));
 		}
 
 		// RekeyingInterval be from user (Jobj) or default
@@ -1418,14 +1399,9 @@
 		}
 		else if(secMode == SLIDER_POS_MORESECURE)
 		{
-			if(!strcmp(wpaMode,"wpa2psk") || !strcmp(wpaMode,"wpapsk") || !strcmp(wpaMode,"wpawpa2psk"))
+			if(!strcmp(wpaMode,"wpa2psk"))
 			{
-				if(!strcmp(wpaMode,"wpa2psk"))
-					json_object_object_add(syncWifiSecObj, "ModeEnabled", json_object_new_string("WPA2-Personal"));
-				else if(!strcmp(wpaMode,"wpapsk"))
-					json_object_object_add(syncWifiSecObj, "ModeEnabled", json_object_new_string("WPA-Personal"));
-				else
-					json_object_object_add(syncWifiSecObj, "ModeEnabled", json_object_new_string("WPA-WPA2-Personal"));
+				json_object_object_add(syncWifiSecObj, "ModeEnabled", json_object_new_string("WPA2-Personal"));
 			
 				json_object_object_add(syncWifiSecObj, "X_ZYXEL_AutoGenPSK", json_object_new_boolean(X_ZYXEL_AutoGenPSK));
 			
@@ -1448,34 +1424,20 @@
 					}
 				}
 			}
-			else if(!strcmp(wpaMode,"wpa2") || !strcmp(wpaMode,"wpa") || !strcmp(wpaMode,"wpawpa"))
+			else if(!strcmp(wpaMode,"wpa2"))
 			{
-				if(!strcmp(wpaMode,"wpa2"))
-				{
-					json_object_object_add(syncWifiSecObj, "ModeEnabled", json_object_new_string("WPA2-Enterprise"));
-					json_object_object_add(syncWifiSecObj, "X_ZYXEL_Preauth", json_object_new_boolean(X_ZYXEL_Preauth));
-					json_object_object_add(syncWifiSecObj, "X_ZYXEL_ReauthInterval", json_object_new_int(X_ZYXEL_ReauthInterval));
-				}
-				else if(!strcmp(wpaMode,"wpa"))
-					json_object_object_add(syncWifiSecObj, "ModeEnabled", json_object_new_string("WPA-Enterprise"));
-				else
-				{
-					json_object_object_add(syncWifiSecObj, "ModeEnabled", json_object_new_string("WPA-WPA2-Enterprise"));
-					json_object_object_add(syncWifiSecObj, "X_ZYXEL_Preauth", json_object_new_boolean(X_ZYXEL_Preauth));
-					json_object_object_add(syncWifiSecObj, "X_ZYXEL_ReauthInterval", json_object_new_int(X_ZYXEL_ReauthInterval));
-				}
+
+				json_object_object_add(syncWifiSecObj, "ModeEnabled", json_object_new_string("WPA2-Enterprise"));
+				json_object_object_add(syncWifiSecObj, "X_ZYXEL_Preauth", json_object_new_boolean(X_ZYXEL_Preauth));
+				json_object_object_add(syncWifiSecObj, "X_ZYXEL_ReauthInterval", json_object_new_int(X_ZYXEL_ReauthInterval));
 				
 				json_object_object_add(syncWifiSecObj, "RadiusServerIPAddr", json_object_new_string(RadiusServerIPAddr));
 				json_object_object_add(syncWifiSecObj, "RadiusServerPort", json_object_new_int(RadiusServerPort));
 				json_object_object_add(syncWifiSecObj, "RadiusSecret", json_object_new_string(RadiusSecret));
 			}
 			
-			if(!strcmp(encryp, "tkip"))
-				json_object_object_add(syncWifiSecObj, "X_ZYXEL_Encryption", json_object_new_string("tkip"));
-			else if(!strcmp(encryp, "aes"))
+			if(!strcmp(encryp, "aes"))
 				json_object_object_add(syncWifiSecObj, "X_ZYXEL_Encryption", json_object_new_string("aes"));
-			else
-				json_object_object_add(syncWifiSecObj, "X_ZYXEL_Encryption", json_object_new_string("tkipaes"));
 			
 			json_object_object_add(syncWifiSecObj, "RekeyingInterval", json_object_new_int(RekeyingInterval));
 					
@@ -2137,15 +2099,10 @@
 		}
 	
 		// wpaMode must be set to a proper value
-		if(strcmp(wpaMode,"wpa2psk") && strcmp(wpaMode,"wpapsk") && strcmp(wpaMode,"wpawpa2psk")){
-			printf("wpaMode must be set to \"wpapsk\" or \"wpa2psk\" or \"wpawpa2psk\".\n");
+		if(strcmp(wpaMode,"wpa2psk")){
+			printf("wpaMode must be set to \"wpa2psk\".\n");
 			return ZCFG_INVALID_PARAM_VALUE;
 		}
-		// for main SSID, if WPS is on, then wpapsk is not available
-		if(!strcmp(wpaMode,"wpapsk") && wpsEnabled && isMainSSID){
-			printf("WPS2.0 does not support WPA-PSK. You should disable WPS first.");
-			return ZCFG_REQUEST_REJECT;
-		}
 
 		// AutoGenPSK is optional
 		if(!json_object_object_get(Jobj, "AutoGenPSK")){
@@ -2165,8 +2122,8 @@
 
 		// encryp must be set
 		if(json_object_object_get(Jobj, "encryp")){
-			if(strcmp(encryp, "tkip") && strcmp(encryp, "aes") && strcmp(encryp, "tkipaes")){
-				printf("encryp must be set to \"tkip\" or \"aes\" or \"tkipaes\".\n");
+			if(strcmp(encryp, "aes")){
+				printf("encryp must be set to \"aes\".\n");
 				return ZCFG_INVALID_PARAM_VALUE;
 			}
 		}
