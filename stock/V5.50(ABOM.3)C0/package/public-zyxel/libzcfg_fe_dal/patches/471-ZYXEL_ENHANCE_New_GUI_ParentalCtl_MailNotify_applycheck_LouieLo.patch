Index: libzcfg_fe_dal-1.0/maintenance/mail/zcfg_fe_dal_mail_notification.c
===================================================================
--- libzcfg_fe_dal-1.0.orig/maintenance/mail/zcfg_fe_dal_mail_notification.c	2018-02-23 10:52:57.878308429 +0800
+++ libzcfg_fe_dal-1.0/maintenance/mail/zcfg_fe_dal_mail_notification.c	2018-02-23 13:24:14.968059060 +0800
@@ -82,11 +82,13 @@
 	IID_INIT(objIid);
 	if((ret = zcfgFeObjJsonAdd(RDM_OID_MAIL_SERVICE, &objIid, NULL)) != ZCFG_SUCCESS) {
 		printf("%s: fail to add mail service with ret = %d\n", __FUNCTION__, ret);
+		json_object_object_add(Jobj, "__multi_lang_replyMsg", json_object_new_string("zylang.EmailNotification.EmailNotification.error.add_email_err"));
 		return false;
 	}
 
 	if((ret = zcfgFeObjJsonGet(RDM_OID_MAIL_SERVICE, &objIid, &mailNotificationJobj)) != ZCFG_SUCCESS) {
 		printf("%s: Object retrieve fail\n", __FUNCTION__);
+		json_object_object_add(Jobj, "__multi_lang_replyMsg", json_object_new_string("zylang.EmailNotification.EmailNotification.error.get_email_err"));
 		return false;
 	}
 
@@ -99,9 +101,10 @@
 	json_object_object_add(mailNotificationJobj, "EmailAddress", json_object_new_string(EmailAddress));
 	json_object_object_add(mailNotificationJobj, "SMTPSecurity", json_object_new_string(SMTPSecurity));
 
-	if((ret = zcfgFeObjJsonSet(RDM_OID_MAIL_SERVICE, &objIid, mailNotificationJobj, NULL)) == ZCFG_SUCCESS)
+	if((ret = zcfgFeObjJsonSet(RDM_OID_MAIL_SERVICE, &objIid, mailNotificationJobj, NULL)) != ZCFG_SUCCESS)
 	{
 		dbg_printf("%s: Set mail service fail\n", __FUNCTION__);
+		json_object_object_add(Jobj, "__multi_lang_replyMsg", json_object_new_string("zylang.EmailNotification.EmailNotification.error.set_email_err"));
 		goto exit;
 	}
 
Index: libzcfg_fe_dal-1.0/security/parentalControl/zcfg_fe_dal_parentalControl.c
===================================================================
--- libzcfg_fe_dal-1.0.orig/security/parentalControl/zcfg_fe_dal_parentalControl.c	2018-02-23 10:52:57.926308428 +0800
+++ libzcfg_fe_dal-1.0/security/parentalControl/zcfg_fe_dal_parentalControl.c	2018-02-23 13:25:33.527535642 +0800
@@ -222,7 +222,8 @@
 	zcfgRet_t ret = ZCFG_SUCCESS;
 	
 	if((ret = zcfgFeObjJsonGetWithoutUpdate(RDM_OID_PAREN_CTL, &parCtlObjIid, &parCtlObj)) != ZCFG_SUCCESS) {
-			return ret;
+		json_object_object_add(Jobj, "__multi_lang_replyMsg", json_object_new_string("zylang.Parental_Control.error.get_pcp_err"));		
+		return ret;
 	}
 	if (PrentalCtlEnable)
 		json_object_object_add(parCtlObj, "Enable", json_object_new_boolean(true));
@@ -230,6 +231,7 @@
 		json_object_object_add(parCtlObj, "Enable", json_object_new_boolean(false));
 
 	if((ret = zcfgFeObjJsonSet(RDM_OID_PAREN_CTL, &parCtlObjIid, parCtlObj, NULL)) != ZCFG_SUCCESS){
+		json_object_object_add(Jobj, "__multi_lang_replyMsg", json_object_new_string("zylang.Parental_Control.error.set_pcp_err"));		
 		return ret;
 	}
 	return ret;
@@ -315,6 +317,7 @@
 			if((ret = zcfgFeDalScheduleAdd(schRuleJobj, schRuleRetJarray, NULL)) != ZCFG_SUCCESS){
 				json_object_put(schRuleJobj);
 				json_object_put(schRuleRetJarray);
+				json_object_object_add(Jobj, "__multi_lang_replyMsg", json_object_new_string("zylang.Parental_Control.error.add_schedule_err"));
 				return ret;
 			}
 			schRulePath = Jgets(json_object_array_get_idx(schRuleRetJarray, 0), "path");
@@ -332,6 +335,7 @@
 	IID_INIT(pcpObjIid);
 	zcfgFeObjJsonAdd(RDM_OID_PAREN_CTL_PROF, &pcpObjIid, NULL);
 	if((ret = zcfgFeObjJsonGetWithoutUpdate(RDM_OID_PAREN_CTL_PROF, &pcpObjIid, &pcpObj)) != ZCFG_SUCCESS) {
+		json_object_object_add(Jobj, "__multi_lang_replyMsg", json_object_new_string("zylang.Parental_Control.error.get_pcp_err"));
 		return ret;
 	}
 
@@ -378,7 +382,8 @@
 		return ZCFG_INVALID_FORMAT;
 	
 	if((ret = zcfgFeObjJsonSet(RDM_OID_PAREN_CTL_PROF, &pcpObjIid, pcpObj, NULL)) != ZCFG_SUCCESS){
-			return ret;
+		json_object_object_add(Jobj, "__multi_lang_replyMsg", json_object_new_string("zylang.Parental_Control.error.set_pcp_err"));
+		return ret;
 	}
 #if 0
 	json_object_object_add(pcpObj, "Enable", json_object_new_boolean(pcpEnable));
@@ -474,6 +479,7 @@
 			if(replyMsg)
 				sprintf(replyMsg, "Can't find --Index %d", pcpObjIid.idx[0]);
 			json_object_put(inputJobj);
+			json_object_object_add(Jobj, "__multi_lang_replyMsg", json_object_new_string("zylang.Parental_Control.error.get_pcp_err"));		
 			return ret;
 		}
 		json_object_put(inputJobj);
@@ -484,6 +490,7 @@
 		json_object_put(curJarray);
 		if(replyMsg)
 			sprintf(replyMsg, "Can't find --Index %d", pcpObjIid.idx[0]);
+		json_object_object_add(Jobj, "__multi_lang_replyMsg", json_object_new_string("zylang.Parental_Control.error.get_pcp_err"));		
 		return ret;
 	}
 				
@@ -575,6 +582,7 @@
 			if((ret = zcfgFeDalScheduleAdd(schRuleJobj, schRuleRetJarray, NULL)) != ZCFG_SUCCESS){
 				json_object_put(schRuleJobj);
 				json_object_put(schRuleRetJarray);
+				json_object_object_add(Jobj, "__multi_lang_replyMsg", json_object_new_string("zylang.Parental_Control.error.add_schedule_err"));
 				return ret;
 			}
 			schRulePath = Jgets(json_object_array_get_idx(schRuleRetJarray, 0), "path");
@@ -630,6 +638,7 @@
 	
 	if((ret = zcfgFeObjJsonSet(RDM_OID_PAREN_CTL_PROF, &pcpObjIid, pcpObj, NULL)) != ZCFG_SUCCESS){
 		printf("ret=%d\n", ret);
+		json_object_object_add(Jobj, "__multi_lang_replyMsg", json_object_new_string("zylang.Parental_Control.error.set_pcp_err"));
 		return ret;
 	}
 
@@ -908,28 +917,35 @@
 	if((ret = zcfgFeObjJsonGetWithoutUpdate(RDM_OID_PAREN_CTL_PROF, &pcpObjIid, &pcpObj)) != ZCFG_SUCCESS){
 		if(replyMsg)
 			sprintf(replyMsg, "Can't find --Index %d", pcpObjIid.idx[0]);
+		json_object_object_add(Jobj, "__multi_lang_replyMsg", json_object_new_string("zylang.Parental_Control.error.get_pcp_err"));		
 		return ret;
 	}
 	
 	scheduleRules = json_object_get_string(json_object_object_get(pcpObj, "ScheduleRuleList"));
 	
-	if((ret = zcfgFeObjJsonDel(RDM_OID_PAREN_CTL_PROF, &pcpObjIid, NULL)) != ZCFG_SUCCESS)
+	if((ret = zcfgFeObjJsonDel(RDM_OID_PAREN_CTL_PROF, &pcpObjIid, NULL)) != ZCFG_SUCCESS){
+		json_object_object_add(Jobj, "__multi_lang_replyMsg", json_object_new_string("zylang.Parental_Control.error.del_pcp_err"));		
 		return ret;
+	}
 	
 	buffer = strtok (scheduleRules, ",");
 	if ((buffer == NULL) && strstr(scheduleRules, "X_ZYXEL_Schedule."))
 	{
 		schTimeObjIid.level = 1;
 		sscanf(ScheduleRuleList, "X_ZYXEL_Schedule.%hhu", &schTimeObjIid.idx[0]);
-		if((ret = zcfgFeObjJsonDel(RDM_OID_SCHEDULE, &schTimeObjIid, NULL)) != ZCFG_SUCCESS)
+		if((ret = zcfgFeObjJsonDel(RDM_OID_SCHEDULE, &schTimeObjIid, NULL)) != ZCFG_SUCCESS){
+			json_object_object_add(Jobj, "__multi_lang_replyMsg", json_object_new_string("zylang.Parental_Control.error.del_schedule_err2"));		
 			return ret;
+		}
 	}else
 	{
 		while (buffer) {
 			schTimeObjIid.level = 1;
 			sscanf(buffer, "X_ZYXEL_Schedule.%hhu", &schTimeObjIid.idx[0]);
-			if((ret = zcfgFeObjJsonDel(RDM_OID_SCHEDULE, &schTimeObjIid, NULL)) != ZCFG_SUCCESS)
-				return ret;			
+			if((ret = zcfgFeObjJsonDel(RDM_OID_SCHEDULE, &schTimeObjIid, NULL)) != ZCFG_SUCCESS){
+				json_object_object_add(Jobj, "__multi_lang_replyMsg", json_object_new_string("zylang.Parental_Control.error.del_schedule_err2"));		
+				return ret;
+			}
 			buffer = strtok (NULL, ",");
 		}
 	}
