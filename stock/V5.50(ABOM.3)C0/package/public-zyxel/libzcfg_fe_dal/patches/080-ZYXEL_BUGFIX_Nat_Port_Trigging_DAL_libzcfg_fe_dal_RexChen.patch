Index: libzcfg_fe_dal-1.0/network/nat/zcfg_fe_dal_nat_port_triggering.c
===================================================================
--- libzcfg_fe_dal-1.0.orig/network/nat/zcfg_fe_dal_nat_port_triggering.c	2016-12-07 23:33:37.760333343 +0800
+++ libzcfg_fe_dal-1.0/network/nat/zcfg_fe_dal_nat_port_triggering.c	2016-12-07 23:43:04.070879700 +0800
@@ -13,8 +13,6 @@
 dal_param_t NAT_PORT_TRIGGERING_param[] =
 {
 	{"Enable",		dalType_boolean,	0,	0,	NULL},
-	{"Status",		dalType_string,	0,	19,	NULL},
-	{"Name",		dalType_string,	0,	64,	NULL},
 	{"Interface",		dalType_string,	0,	256,	NULL},
 	{"TriggerPort",		dalType_int,	0,	63737,	NULL},
 	{"TriggerPortEndRange",		dalType_int,	0,	63737,	NULL},
@@ -23,104 +21,139 @@
 	{"Protocol",		dalType_string,	0,	3,	NULL},
 	{"TriggerProtocol",		dalType_string,	0,	3,	NULL},
 	{"Description",		dalType_string,	0,	256,	NULL},			
+	{"Index",		dalType_int,	0,	0,	NULL},
 	{NULL,		0,	0,	0,	NULL}
 };
 
 zcfgRet_t zcfgFeDalNatPortTriggeringAdd(struct json_object *Jobj, char *replyMsg)
 {
 	zcfgRet_t ret = ZCFG_SUCCESS;
-	const char *paraName;
-	objIndex_t objIid;
 	struct json_object *NatPortTriggeringJobj = NULL;
-	int n=0;
-	paraName = (const char *)NAT_PORT_TRIGGERING_param[n++].paraName;
+	objIndex_t objIid = {0};
+	bool enable = false;
+	const char *name = NULL;
+	const char *interface = NULL;
+	int triggerport = 0;
+	int triggerportendrange = 0;
+	int openport = 0;
+	int openportendrange = 0;
+	const char *protocol = NULL;
+	const char *triggerprotocol = NULL;
+	const char *description = NULL;
 
 	IID_INIT(objIid);
-	zcfgFeObjJsonAdd(RDM_OID_NAT_PORT_TRIGGERING, &objIid, NULL);
-	if((ret = zcfgFeObjJsonGet(RDM_OID_NAT_PORT_TRIGGERING, &objIid, &NatPortTriggeringJobj)) != ZCFG_SUCCESS) {
-		printf("%s: Object retrieve fail\n", __FUNCTION__);
-		return ret;
-	}	
-	while(paraName){
-		struct json_object *paramValue = json_object_object_get(Jobj, paraName);
-		if(!paramValue) {
-			printf("function:%s, Line =%d\n", __FUNCTION__,__LINE__);
-			paraName = (const char *)NAT_PORT_TRIGGERING_param[n++].paraName;
-			continue;
-		}
-		json_object_object_add(NatPortTriggeringJobj, paraName, JSON_OBJ_COPY(paramValue));
-		paraName = (const char *)NAT_PORT_TRIGGERING_param[n++].paraName;
-	}
-
-	if((ret = zcfgFeObjJsonSet(RDM_OID_NAT_PORT_TRIGGERING, &objIid, NatPortTriggeringJobj, NULL)) == ZCFG_SUCCESS)
-	{
-		sprintf(replyMsg, "[%d,%d,%d,%d,%d,%d]",objIid.idx[0],objIid.idx[1],objIid.idx[2],
-				objIid.idx[3],objIid.idx[4],objIid.idx[5]);
-		printf("reply msg %s\n",replyMsg);		
+	ret = zcfgFeObjJsonAdd(RDM_OID_NAT_PORT_TRIGGERING, &objIid, NULL);
+	if(ret == ZCFG_SUCCESS){
+		ret = zcfgFeObjJsonGet(RDM_OID_NAT_PORT_TRIGGERING, &objIid, &NatPortTriggeringJobj);
+	}
+	
+	if(ret == ZCFG_SUCCESS){
+		enable = json_object_get_boolean(json_object_object_get(Jobj, "Enable"));
+		interface = json_object_get_string(json_object_object_get(Jobj, "Interface"));
+		triggerport = json_object_get_int(json_object_object_get(Jobj, "TriggerPort"));
+		triggerportendrange = json_object_get_int(json_object_object_get(Jobj, "TriggerPortEndRange"));
+		openport = json_object_get_int(json_object_object_get(Jobj, "OpenPort"));
+		openportendrange = json_object_get_int(json_object_object_get(Jobj, "OpenPortEndRange"));
+		protocol = json_object_get_string(json_object_object_get(Jobj, "Protocol"));
+		triggerprotocol = json_object_get_string(json_object_object_get(Jobj, "TriggerProtocol"));
+		description = json_object_get_string(json_object_object_get(Jobj, "Description"));
+	
+		json_object_object_add(NatPortTriggeringJobj, "Enable", json_object_new_boolean(enable));
+		json_object_object_add(NatPortTriggeringJobj, "Interface", json_object_new_string(interface));
+		json_object_object_add(NatPortTriggeringJobj, "TriggerPort", json_object_new_int(triggerport));
+		json_object_object_add(NatPortTriggeringJobj, "TriggerPortEndRange", json_object_new_int(triggerportendrange));
+		json_object_object_add(NatPortTriggeringJobj, "OpenPort", json_object_new_int(openport));
+		json_object_object_add(NatPortTriggeringJobj, "OpenPortEndRange", json_object_new_int(openportendrange));
+		json_object_object_add(NatPortTriggeringJobj, "Protocol", json_object_new_string(protocol));
+		json_object_object_add(NatPortTriggeringJobj, "TriggerProtocol", json_object_new_string(triggerprotocol));
+		json_object_object_add(NatPortTriggeringJobj, "Description", json_object_new_string(description));
+		ret = zcfgFeObjJsonSet(RDM_OID_NAT_PORT_TRIGGERING, &objIid, NatPortTriggeringJobj, NULL);
 	}
 	
-	json_object_put(NatPortTriggeringJobj);
+	zcfgFeJsonObjFree(NatPortTriggeringJobj);
 	return ret;
 }
 zcfgRet_t zcfgFeDalNatPortTriggeringEdit(struct json_object *Jobj, char *replyMsg)
 {
 
 	zcfgRet_t ret = ZCFG_SUCCESS;
-	const char *paraName;
-	objIndex_t objIid;
 	struct json_object *NatPortTriggeringJobj = NULL;
-	int paramModified = 0, n = 0;
-	struct json_object *iidArray = NULL;
-	uint8_t iidIdx =0;
-	paraName = (const char *)NAT_PORT_TRIGGERING_param[n++].paraName;
-	
-	//IID_INIT(objIid);
-	iidArray = json_object_object_get(Jobj, "iid");
-	for(iidIdx=0;iidIdx<6;iidIdx++){
-		objIid.idx[iidIdx] = json_object_get_int( json_object_array_get_idx(iidArray, iidIdx));
-		if(objIid.idx[iidIdx] != 0)
-			objIid.level = iidIdx+1;
-	}
-	if((ret = zcfgFeObjJsonGet(RDM_OID_NAT_PORT_TRIGGERING, &objIid, &NatPortTriggeringJobj)) != ZCFG_SUCCESS) {
-		return ret;
-	}
-	while(paraName){
-		struct json_object *paramValue = json_object_object_get(Jobj, paraName);
-		if(!paramValue) {
-			paraName = (const char *)NAT_PORT_TRIGGERING_param[n++].paraName;
-			continue;
+	objIndex_t objIid = {0};
+	bool enable = false;
+	const char *interface = NULL;
+	int triggerport = 0;
+	int triggerportendrange = 0;
+	int openport = 0;
+	int openportendrange = 0;
+	const char *protocol = NULL;
+	const char *triggerprotocol = NULL;
+	const char *description = NULL;
+	int index = 0;
+	int count = 0;
+	bool found = false;
+	
+	index = json_object_get_int(json_object_object_get(Jobj, "Index"));
+	IID_INIT(objIid);
+	while(ret = zcfgFeObjJsonGetNext(RDM_OID_NAT_PORT_TRIGGERING, &objIid, &NatPortTriggeringJobj) == ZCFG_SUCCESS) {
+		if(count == index){
+			found = true;
+			break;
 		}
-		json_object_object_add(NatPortTriggeringJobj, paraName, JSON_OBJ_COPY(paramValue));
-		paramModified = 1;				
-		paraName = (const char *)NAT_PORT_TRIGGERING_param[n++].paraName;
+		else
+			count++;
 	}
+	if(found){
+		enable = json_object_get_boolean(json_object_object_get(Jobj, "Enable"));
+		interface = json_object_get_string(json_object_object_get(Jobj, "Interface"));
+		triggerport = json_object_get_int(json_object_object_get(Jobj, "TriggerPort"));
+		triggerportendrange = json_object_get_int(json_object_object_get(Jobj, "TriggerPortEndRange"));
+		openport = json_object_get_int(json_object_object_get(Jobj, "OpenPort"));
+		openportendrange = json_object_get_int(json_object_object_get(Jobj, "OpenPortEndRange"));
+		protocol = json_object_get_string(json_object_object_get(Jobj, "Protocol"));
+		triggerprotocol = json_object_get_string(json_object_object_get(Jobj, "TriggerProtocol"));
+		description = json_object_get_string(json_object_object_get(Jobj, "Description"));
+
+		json_object_object_add(NatPortTriggeringJobj, "Enable", json_object_new_boolean(enable));
+		json_object_object_add(NatPortTriggeringJobj, "Interface", json_object_new_string(interface));
+		json_object_object_add(NatPortTriggeringJobj, "TriggerPort", json_object_new_int(triggerport));
+		json_object_object_add(NatPortTriggeringJobj, "TriggerPortEndRange", json_object_new_int(triggerportendrange));
+		json_object_object_add(NatPortTriggeringJobj, "OpenPort", json_object_new_int(openport));
+		json_object_object_add(NatPortTriggeringJobj, "OpenPortEndRange", json_object_new_int(openportendrange));
+		json_object_object_add(NatPortTriggeringJobj, "Protocol", json_object_new_string(protocol));
+		json_object_object_add(NatPortTriggeringJobj, "Description", json_object_new_string(description));
 
-	if(paramModified) {
-		if((ret = zcfgFeObjJsonSet(RDM_OID_NAT_PORT_TRIGGERING, &objIid, NatPortTriggeringJobj, NULL)) != ZCFG_SUCCESS);
+		ret = zcfgFeObjJsonSet(RDM_OID_NAT_PORT_TRIGGERING, &objIid, NatPortTriggeringJobj, NULL);
 	}
-	json_object_put(NatPortTriggeringJobj);
+
+	zcfgFeJsonObjFree(NatPortTriggeringJobj);
 	return ret;
 }
 zcfgRet_t zcfgFeDalNatPortTriggeringDelete(struct json_object *Jobj, char *replyMsg)
 {
 	
 	zcfgRet_t ret = ZCFG_SUCCESS;
-	objIndex_t objIid;
-	struct json_object *iidArray = NULL;
-	uint8_t iidIdx =0;
-
+	struct json_object *NatPortTriggeringJobj = NULL;
+	objIndex_t objIid = {0};
+	int index = 0;
+	int count = 0;
+	bool found = false;
 	
-	//IID_INIT(objIid);
-	iidArray = json_object_object_get(Jobj, "iid");
+	index = json_object_get_int(json_object_object_get(Jobj, "rowIdx"));
 	
-	for(iidIdx=0;iidIdx<6;iidIdx++){
-		objIid.idx[iidIdx] = json_object_get_int( json_object_array_get_idx(iidArray, iidIdx));
-		if(objIid.idx[iidIdx] != 0)
-			objIid.level = iidIdx+1;
+	IID_INIT(objIid);
+	while(zcfgFeObjJsonGetNext(RDM_OID_NAT_PORT_TRIGGERING, &objIid, &NatPortTriggeringJobj) == ZCFG_SUCCESS) {
+		if(count == index){
+			found = true;
+			break;
+		}
+		else
+			count++;
+	}
+	if(found){
+		ret = zcfgFeObjJsonDel(RDM_OID_NAT_PORT_TRIGGERING, &objIid, NULL);
 	}
 	
-	zcfgFeObjJsonDel(RDM_OID_NAT_PORT_TRIGGERING, &objIid, NULL);
-	
+	zcfgFeJsonObjFree(NatPortTriggeringJobj);
 	return ret;
 	
 }
