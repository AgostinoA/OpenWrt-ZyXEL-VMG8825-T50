Index: libzcfg_fe_dal-1.0/network/wireless/zcfg_fe_dal_wifi_wmm.c
===================================================================
--- libzcfg_fe_dal-1.0.orig/network/wireless/zcfg_fe_dal_wifi_wmm.c	2017-03-31 21:26:21.000041632 +0800
+++ libzcfg_fe_dal-1.0/network/wireless/zcfg_fe_dal_wifi_wmm.c	2017-03-31 21:27:51.078144300 +0800
@@ -17,47 +17,32 @@
 	{NULL,		0,	0,	0,	NULL}
 };
 
-int currSsidLen;
-int mainWmmEnable;
-bool mainUapsdEnable;
-
-void getCurrSsidInfo()
-{
-	objIndex_t ssidIid;
-	struct json_object *WifiSsidJobj = NULL;
-	
-	IID_INIT(ssidIid);
-	while((zcfgFeObjJsonGetNextWithoutUpdate(RDM_OID_WIFI_SSID, &ssidIid, &WifiSsidJobj)) == ZCFG_SUCCESS){
-		currSsidLen = ssidIid.idx[0];
-		zcfgFeJsonObjFree(WifiSsidJobj);
-	}		
-}
 zcfgRet_t zcfgFeDalWifiWmmEdit(struct json_object *Jobj, char *replyMsg)
 {
 	zcfgRet_t ret = ZCFG_SUCCESS;
-	const char *paraName;
 	objIndex_t objIid;
 	struct json_object *WifiApWmmJobj = NULL;
 	struct json_object *wmmEnableArray = NULL;
-	uint8_t iidIdx;
+	struct json_object *iidArray = NULL;
+	int iidIdx = 0;
 	int WMMEnable;
-	
-	getCurrSsidInfo();
+	int len = 0;
+	int idx = 0;
+	bool mainUapsdEnable = true;
+	int mainWmmEnable = 0;
 		
 	wmmEnableArray = json_object_object_get(Jobj, "WMMEnable");
-	mainWmmEnable = json_object_get_int( json_object_array_get_idx(wmmEnableArray, 0));
+	iidArray = json_object_object_get(Jobj, "startidxarray");
 	mainUapsdEnable = json_object_get_int(json_object_object_get(Jobj, "UAPSDEnable"));
-	
-	for(iidIdx = 1; iidIdx < currSsidLen; iidIdx++){
+	len = json_object_array_length(iidArray);
+	mainWmmEnable = json_object_get_int( json_object_array_get_idx(wmmEnableArray, 0));
 		
+	for(iidIdx = 1; iidIdx < len; iidIdx++){
 		WMMEnable = json_object_get_int( json_object_array_get_idx(wmmEnableArray, iidIdx));
+		idx = json_object_get_int( json_object_array_get_idx(iidArray, iidIdx));
 		objIid.level = 1;
-		objIid.idx[0] = iidIdx+1;
-		
-		if((ret = zcfgFeObjJsonGetWithoutUpdate(RDM_OID_WIFI_ACCESS_POINT, &objIid, &WifiApWmmJobj)) != ZCFG_SUCCESS) {
-			return ret;
-		}
-		
+		objIid.idx[0] = idx;
+		if(zcfgFeObjJsonGetWithoutUpdate(RDM_OID_WIFI_ACCESS_POINT, &objIid, &WifiApWmmJobj) == ZCFG_SUCCESS){
 		if(WMMEnable == 1)
 			json_object_object_add(WifiApWmmJobj, "WMMEnable", json_object_new_boolean(true));
 		else
@@ -68,19 +53,15 @@
 		else
 			json_object_object_add(WifiApWmmJobj, "UAPSDEnable", json_object_new_boolean(false));
 		
-		if((ret = zcfgFeObjJsonSetWithoutApply(RDM_OID_WIFI_ACCESS_POINT, &objIid, WifiApWmmJobj, NULL)) != ZCFG_SUCCESS)
-		{
-			return ret;
+			zcfgFeObjJsonSetWithoutApply(RDM_OID_WIFI_ACCESS_POINT, &objIid, WifiApWmmJobj, NULL);
+			json_object_put(WifiApWmmJobj);
 		}
-		json_object_put(WifiApWmmJobj);
 	}
 	
 	IID_INIT(objIid);
 	objIid.level = 1;
-	objIid.idx[0] = 1;
-	if((ret = zcfgFeObjJsonGetWithoutUpdate(RDM_OID_WIFI_ACCESS_POINT, &objIid, &WifiApWmmJobj)) != ZCFG_SUCCESS) {
-		return ret;
-	}
+	objIid.idx[0] = json_object_get_int( json_object_array_get_idx(iidArray, 0));
+	if(zcfgFeObjJsonGet(RDM_OID_WIFI_ACCESS_POINT, &objIid, &WifiApWmmJobj) == ZCFG_SUCCESS){
 	if(mainWmmEnable == 1)
 		json_object_object_add(WifiApWmmJobj, "WMMEnable", json_object_new_boolean(true));
 	else
@@ -89,13 +70,10 @@
 		json_object_object_add(WifiApWmmJobj, "UAPSDEnable", json_object_new_boolean(true));
 	else
 		json_object_object_add(WifiApWmmJobj, "UAPSDEnable", json_object_new_boolean(false));
-	if((ret = zcfgFeObjJsonSet(RDM_OID_WIFI_ACCESS_POINT, &objIid, WifiApWmmJobj, NULL)) != ZCFG_SUCCESS)
-	{
-		return ret;
-	}
 	
+		zcfgFeObjJsonSet(RDM_OID_WIFI_ACCESS_POINT, &objIid, WifiApWmmJobj, NULL);
 	json_object_put(WifiApWmmJobj);
-	
+	}
 	return ret;
 }
 zcfgRet_t zcfgFeDalWifiWmm(const char *method, struct json_object *Jobj, char *replyMsg)
