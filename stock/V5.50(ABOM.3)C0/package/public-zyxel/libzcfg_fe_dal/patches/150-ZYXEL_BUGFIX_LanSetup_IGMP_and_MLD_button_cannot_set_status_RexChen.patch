Index: libzcfg_fe_dal-1.0/network/homeNetworking/zcfg_fe_dal_lansetup.c
===================================================================
--- libzcfg_fe_dal-1.0.orig/network/homeNetworking/zcfg_fe_dal_lansetup.c	2017-03-24 17:35:29.381051570 +0800
+++ libzcfg_fe_dal-1.0/network/homeNetworking/zcfg_fe_dal_lansetup.c	2017-03-24 17:36:37.780242200 +0800
@@ -225,58 +225,66 @@
 	zcfgRet_t ret = ZCFG_SUCCESS;
 	struct json_object *igmpSnoopingObj = NULL;
 	struct json_object *obj = NULL;
+	struct json_object *BrIpIfaceObj = NULL;
+	const char *brtmpname = NULL;
 	objIndex_t igmpSnoopingIid = {0};
-	const char *igmpSnooping = NULL, *curigmpSnooping = NULL;
-	bool enable = false;
+	char *igmpSnooping = NULL;
 	int brsnoopingenable = 0;
-	const char *IfName = NULL;
-	int selectIndex = 0;
+	const char *brIfName = NULL;
+	char *tmp = NULL;
+	char newbrtmp[6] = {0};
+	char igmpBrSnooping[100] = {0};
+	char buff[100] = {0};
+	char *brname = NULL;
+	char newbrstr[100] = {0};
 	objIndex_t iid = {0};
-	char *lengthofigmpsnoopingtmp = NULL, *g = NULL, *igmpsnoopingtmp = NULL, *snoopbrList_tmp = NULL, *snoopbrListtmp;
-	int i=0, j=1,n;
-	char snoopbrListStr[32] = {0}, snoopbrList[32] = {0};
+	int len = 0;
 
-	allIpIfaceObj = json_object_new_array();
+	BrIpIfaceObj = json_object_new_array();
 	IID_INIT(iid);
+	brtmpname = json_object_get_string(json_object_object_get(Jobj, "brName"));
+	if(!strcmp(brtmpname, "Default")){
+		brIfName = "br0";
+	}
+	else{
 	while(zcfgFeObjJsonGetNext(RDM_OID_IP_IFACE, &iid, &obj) == ZCFG_SUCCESS) {
-		json_object_array_add(allIpIfaceObj, obj);
-		struct json_object *subIpIfaceObj = json_object_array_get_idx(allIpIfaceObj, 0);
-		IfName = json_object_get_string(json_object_object_get(subIpIfaceObj, "X_ZYXEL_IfName"));
-		enable = json_object_get_boolean(json_object_object_get(subIpIfaceObj, "Enable"));
+			if(!strcmp(json_object_get_string(json_object_object_get(obj, "X_ZYXEL_SrvName")),brtmpname)){
+				brIfName = json_object_get_string(json_object_object_get(obj, "X_ZYXEL_IfName"));
+				break;
+			}
+			zcfgFeJsonObjFree(obj);
+		}		
 	}
 	IID_INIT(igmpSnoopingIid);
 	if(zcfgFeObjJsonGet(RDM_OID_ZY_IGMP, &igmpSnoopingIid, &igmpSnoopingObj) == ZCFG_SUCCESS){
-		if (enable == true){
 			igmpSnooping = json_object_get_string(json_object_object_get(igmpSnoopingObj, "SnoopingBridgeIfName"));	
 			brsnoopingenable = json_object_get_int(json_object_object_get(Jobj, "brSnoopingEnable"));
-			if (igmpSnooping == NULL){
-				sprintf(igmpSnooping,"%s|%d", IfName, brsnoopingenable);
-				json_object_object_add(igmpSnoopingObj, "SnoopingBridgeIfName", json_object_new_string(igmpSnooping));
-				zcfgFeObjJsonSet(RDM_OID_ZY_IGMP, &igmpSnoopingIid, igmpSnoopingObj, NULL);
-			}
-			else if((strlen(strstr(igmpSnooping, IfName))-strlen(igmpSnooping))>=0){
-				strcpy(snoopbrList,igmpSnooping);
-				snoopbrListtmp = (char*)malloc(strlen(snoopbrList)+1);
-				igmpsnoopingtmp= strtok_r(snoopbrList,",",&snoopbrList_tmp);
-				while(igmpsnoopingtmp!=NULL){
-					g = strtok_r(igmpSnooping,"|",&igmpSnooping);
-					if(!strcmp(g,IfName)){
-						sprintf(snoopbrList,"%s|%d", IfName, brsnoopingenable);
-						}
-					sprintf(snoopbrListStr,"%s,", snoopbrList);
-					igmpsnoopingtmp = strtok_r(snoopbrList_tmp, ",", &snoopbrList_tmp);
+		if(igmpSnooping != NULL){
+			strcpy(buff, igmpSnooping);
+			brname = strtok_r(buff, ",", &tmp);
+			while(brname != NULL){
+				if(strncmp(brIfName,brname,3)){
+					strcat(newbrstr, brname);
+					strcat(newbrstr, ",");
+			}
+				else{
+					sprintf(newbrtmp,"%s|%d",brIfName,brsnoopingenable);
+					strcat(newbrstr, newbrtmp);
+					strcat(newbrstr, ",");
 				}
-			igmpSnooping = lengthofigmpsnoopingtmp = strtok(snoopbrListStr,",");
-			json_object_object_add(igmpSnoopingObj, "SnoopingBridgeIfName", json_object_new_string(igmpSnooping));
-			zcfgFeObjJsonSet(RDM_OID_ZY_IGMP, &igmpSnoopingIid, igmpSnoopingObj, NULL);
+				brname = strtok_r(tmp, ",", &tmp);
 			}
-			else{
-				sprintf(igmpSnooping,"%s,%s|%d",igmpSnooping, IfName, brsnoopingenable);
-				json_object_object_add(igmpSnoopingObj, "SnoopingBridgeIfName", json_object_new_string(igmpSnooping));
+			len = strlen(newbrstr);
+			if(newbrstr[len-1] == ',')
+				newbrstr[len-1] = '\0';
+						}
+		else
+			sprintf(newbrstr,"%s|%d", brIfName, brsnoopingenable);
+
+		json_object_object_add(igmpSnoopingObj, "SnoopingBridgeIfName", json_object_new_string(newbrstr));
 				zcfgFeObjJsonSet(RDM_OID_ZY_IGMP, &igmpSnoopingIid, igmpSnoopingObj, NULL);
 			}
-		}
-	}
+	zcfgFeJsonObjFree(obj);
 	zcfgFeJsonObjFree(igmpSnoopingObj);
 	return ret;	
 }
@@ -288,55 +296,60 @@
 	struct json_object *mldSnoopingObj = NULL;
 	struct json_object *obj = NULL;
 	objIndex_t mldSnoopingIid = {0};
-	const char *mldSnooping = NULL, *curmldSnooping = NULL;
-	bool enable = false;
+	char *mldSnooping = NULL;
 	int brsnoopingenable = 0;
-	const char *IfName = NULL;
-	int selectIndex = 0;
+	const char *brtmpname = NULL;
+	const char *brIfName = NULL;
+	char buff[100] = {0};
+	char *brname = NULL;
+	char *tmp = NULL;
+	char newbrstr[100] = {0};
+	char newbrtmp[6] = {0};
+	char mldBrSnooping[100] = {0};
 	objIndex_t iid = {0};
-	char *lengthofmldsnoopingtmp = NULL, *g = NULL, *mldsnoopingtmp = NULL, *snoopbrList_tmp = NULL, *snoopbrListtmp;
-	int i=0, j=1,n;
-	char snoopbrListStr[32] = {0}, snoopbrList[32] = {0};
+	int len = 0;
 
-	allIpIfaceObj = json_object_new_array();
 	IID_INIT(iid);
+	brtmpname = json_object_get_string(json_object_object_get(Jobj, "brName"));
+	if(!strcmp(brtmpname, "Default")){
+		brIfName = "br0";
+	}
+	else{
 	while(zcfgFeObjJsonGetNext(RDM_OID_IP_IFACE, &iid, &obj) == ZCFG_SUCCESS) {
-		json_object_array_add(allIpIfaceObj, obj);
-		struct json_object *subIpIfaceObj = json_object_array_get_idx(allIpIfaceObj, 0);
-		IfName = json_object_get_string(json_object_object_get(subIpIfaceObj, "X_ZYXEL_IfName"));
-		enable = json_object_get_boolean(json_object_object_get(subIpIfaceObj, "Enable"));
+			if(!strcmp(json_object_get_string(json_object_object_get(obj, "X_ZYXEL_SrvName")),brtmpname)){
+				brIfName = json_object_get_string(json_object_object_get(obj, "X_ZYXEL_IfName"));
+				break;
+			}
+			zcfgFeJsonObjFree(obj);
+		}		
 	}
 	IID_INIT(mldSnoopingIid);
 	if(zcfgFeObjJsonGet(RDM_OID_ZY_MLD, &mldSnoopingIid, &mldSnoopingObj) == ZCFG_SUCCESS){
-		if (enable == true){
 			mldSnooping = json_object_get_string(json_object_object_get(mldSnoopingObj, "SnoopingBridgeIfName"));	
 			brsnoopingenable = json_object_get_int(json_object_object_get(Jobj, "mld_brSnoopingEnable"));
-			if (mldSnooping == NULL){
-				sprintf(mldSnooping,"%s|%d", IfName, brsnoopingenable);
-				json_object_object_add(mldSnoopingObj, "SnoopingBridgeIfName", json_object_new_string(mldSnooping));
-				zcfgFeObjJsonSet(RDM_OID_ZY_MLD, &mldSnoopingIid, mldSnoopingObj, NULL);
-			}
-			else if((strlen(strstr(mldSnooping, IfName))-strlen(mldSnooping))>=0){
-				strcpy(snoopbrList,mldSnooping);
-				mldsnoopingtmp= strtok_r(snoopbrList,",",&snoopbrList_tmp);
-				while(mldsnoopingtmp!=NULL){
-					g = strtok_r(mldSnooping,"|",&mldSnooping);
-					if(!strcmp(g,IfName)){
-						sprintf(snoopbrList,"%s|%d", IfName, brsnoopingenable);
-						}
-					sprintf(snoopbrListStr,"%s,", snoopbrList);
-					mldsnoopingtmp = strtok_r(snoopbrList_tmp, ",", &snoopbrList_tmp);
-				}
-			mldSnooping = lengthofmldsnoopingtmp = strtok(snoopbrListStr,",");
-			json_object_object_add(mldSnoopingObj, "SnoopingBridgeIfName", json_object_new_string(mldSnooping));
-			zcfgFeObjJsonSet(RDM_OID_ZY_MLD, &mldSnoopingIid, mldSnoopingObj, NULL);
+		if(mldSnooping != NULL){
+			strcpy(buff, mldSnooping);
+			brname = strtok_r(buff, ",", &tmp);
+			while(brname != NULL){
+				if(strncmp(brIfName,brname,3)){
+					strcat(newbrstr, brname);
+					strcat(newbrstr, ",");
 			}
 			else{
-				sprintf(mldSnooping,"%s,%s|%d",mldSnooping, IfName, brsnoopingenable);
-				json_object_object_add(mldSnoopingObj, "SnoopingBridgeIfName", json_object_new_string(mldSnooping));
-				zcfgFeObjJsonSet(RDM_OID_ZY_MLD, &mldSnoopingIid, mldSnoopingObj, NULL);
+					sprintf(newbrtmp, "%s|%d", brIfName, brsnoopingenable);
+					strcat(newbrstr, newbrtmp);
+					strcat(newbrstr, ",");
+				}
+				brname = strtok_r(tmp, ",", &tmp);
 			}
+			len = strlen(newbrstr);
+			if(newbrstr[len-1] == ',')
+				newbrstr[len-1] = '\0';
 		}
+		else
+			sprintf(mldBrSnooping, "%s|%d", brIfName, brsnoopingenable);
+		json_object_object_add(mldSnoopingObj, "SnoopingBridgeIfName", json_object_new_string(newbrstr));
+				zcfgFeObjJsonSet(RDM_OID_ZY_MLD, &mldSnoopingIid, mldSnoopingObj, NULL);
 	}
 	zcfgFeJsonObjFree(mldSnoopingObj);
 	return ret;	
