Index: libzcfg_fe_dal-1.0/network/interfaceGrouping/zcfg_fe_dal_intfGrp.c
===================================================================
--- libzcfg_fe_dal-1.0.orig/network/interfaceGrouping/zcfg_fe_dal_intfGrp.c	2017-02-14 11:26:37.776759600 +0800
+++ libzcfg_fe_dal-1.0/network/interfaceGrouping/zcfg_fe_dal_intfGrp.c	2017-02-14 11:27:20.940335900 +0800
@@ -35,14 +35,14 @@
 }s_CritInfo;
 
 typedef struct s_IntfGrpOrg {
-	const char *X_ZYXEL_BridgeName;
+	const char *BridgeName;
 	const char *wanIntf;
 	const char *lanIntf;
 }s_IntfGrpOrg;
 
 typedef struct s_IntfGrp {
 	s_JsonArrayType Iid;
-	const char *X_ZYXEL_BridgeName;
+	const char *BridgeName;
 	const char *wanIntf;
 	const char *lanIntf;
 	int critInfoLen;
@@ -71,9 +71,7 @@
 time_t t1, t2;
 
 dal_param_t IntfGrp_param[] = {
-	{"X_ZYXEL_BridgeName",	dalType_string, 1, 32, NULL,NULL,	dal_Add},
-	//{"wanIntf",				dalType_WanList, 0, 0, NULL,	NULL,	dal_Add},
-	//{"lanIntf",				dalType_LanPortList, 0, 0, NULL,	NULL,	0},
+	{"Name",	dalType_string, 1, 32, NULL,NULL,	dal_Add},
 	{"wanIntf",				dalType_string, 0, 0, NULL,	NULL,	dal_Add},
 	{"lanIntf",				dalType_string, 0, 0, NULL,	NULL,	0},	
 	{"critInfoLen",			dalType_int, 	0, 0, NULL,	NULL,	dal_Add},
@@ -128,31 +126,6 @@
 	}
 }
 
-void getIntefGrpDelKey(struct json_object *Jobj, s_JsonArrayType *IntfGrpDel_Info) {
-	int i = 0;
-	int idx = 0;
-	struct json_object *iidx = json_object_new_array();
-	enum json_type jsonType;
-	struct json_object *iid1= NULL;
-	struct json_object *iid2= NULL;
-
-	printf("getIntefGrpDelKey\n");
-	if(Jobj) {
-		IntfGrpDel_Info->length = json_object_array_length(Jobj);
-		IntfGrpDel_Info->array = (int*) malloc((IntfGrpDel_Info->length)*sizeof(int));
-		get_json_array_proc(Jobj, IntfGrpDel_Info->length, IntfGrpDel_Info->array);
-	}
-
-	printf("======= Dump IntfGrpDel_info =======\n");
-	printf("length %d\n", IntfGrpDel_Info->length);
-	printf("Iid ");
-	for(i=0; i<IntfGrpDel_Info->length; i++) {
-		printf("%d ", IntfGrpDel_Info->array[i]);
-	}
-
-	return;
-}
-
 void freeIntefGrpDelKey(s_JsonArrayType *IntfGrpDel_Info) {
 	IntfGrpDel_Info->length = 0;
 	if(IntfGrpDel_Info->array) {
@@ -198,7 +171,7 @@
 		IntfGrp_info->Iid.array = (int*) malloc((IntfGrp_info->Iid.length)*sizeof(int));
 		get_json_array_proc(IidArrayObj, IntfGrp_info->Iid.length, IntfGrp_info->Iid.array);
 	}
-	IntfGrp_info->X_ZYXEL_BridgeName = json_object_get_string(json_object_object_get(Jobj, "X_ZYXEL_BridgeName"));
+	IntfGrp_info->BridgeName = json_object_get_string(json_object_object_get(Jobj, "Name"));
 	IntfGrp_info->wanIntf = json_object_get_string(json_object_object_get(Jobj, "wanIntf"));
 	IntfGrp_info->lanIntf = json_object_get_string(json_object_object_get(Jobj, "lanIntf"));
 
@@ -256,7 +229,7 @@
 	org_obj = json_object_object_get(Jobj, "org");
 	if(org_obj) {
 		IntfGrp_info->org = (s_IntfGrpOrg*)malloc(sizeof(s_IntfGrpOrg));
-		IntfGrp_info->org->X_ZYXEL_BridgeName = json_object_get_string(json_object_object_get(org_obj, "X_ZYXEL_BridgeName"));
+		IntfGrp_info->org->BridgeName = json_object_get_string(json_object_object_get(org_obj, "BridgeName"));
 		IntfGrp_info->org->wanIntf = json_object_get_string(json_object_object_get(org_obj, "wanIntf"));
 		IntfGrp_info->org->lanIntf = json_object_get_string(json_object_object_get(org_obj, "lanIntf"));	
 	}
@@ -306,7 +279,7 @@
 	printf("\n");
 	
 	printf("modify %d\n", IntfGrp_info->modify);
-	printf("org->X_ZYXEL_BridgeName %s\n", IntfGrp_info->org->X_ZYXEL_BridgeName);
+	printf("org->BridgeName %s\n", IntfGrp_info->org->BridgeName);
 	printf("org->wanIntf %s\n", IntfGrp_info->org->wanIntf);
 	printf("org->lanIntf %s\n", IntfGrp_info->org->lanIntf);
 	printf("critInfoDelLen %d\n", IntfGrp_info->critInfoDelLen);
@@ -595,6 +568,28 @@
 	return find;
 }
 
+bool dalcmdFindObjIid(zcfg_offset_t RDM_OID, int index, objIndex_t* Iid, json_object** Obj) {
+	int k = 0;
+	bool find;
+
+	while(zcfgFeObjJsonGetNextWithoutUpdate(RDM_OID, Iid, Obj) == ZCFG_SUCCESS) {
+		find = true;
+		if(Iid->idx[0] != index) {
+			find = false;
+		}
+		if(find == true) {
+			break;
+		}						
+	}
+	if(find == false) {
+		printf("Can't find the target Iid in RDM %d\n", RDM_OID);
+	}
+	
+	printf("FindObjIid: find = %d, idx[0] = %d\n", find, Iid->idx[0]);	
+	return find;
+}
+
+
 zcfgRet_t zcfgFeDalIntrGrpAdd(struct json_object *Jobj, char *replyMsg) {
 	zcfgRet_t ret = ZCFG_SUCCESS;
 	s_VlanCritInfo vlanCrit;
@@ -658,7 +653,7 @@
 		return ret;
 	}
 	json_object_object_add(newBrObj, "Enable", json_object_new_boolean(true));
-	json_object_object_add(newBrObj, "X_ZYXEL_BridgeName", json_object_new_string(IntfGrp_info.X_ZYXEL_BridgeName));
+	json_object_object_add(newBrObj, "X_ZYXEL_BridgeName", json_object_new_string(IntfGrp_info.BridgeName));
 
 	zcfgFeObjJsonSetWithoutApply(RDM_OID_BRIDGING_BR, &newBrIid, newBrObj, NULL);
 	/*===============================================================================*/
@@ -720,7 +715,7 @@
 	json_object_object_add(newIpObj, "LowerLayers", json_object_new_string(Eth_str));
 	json_object_object_add(newIpObj, "X_ZYXEL_Group_WAN_IpIface", json_object_new_string(IntfGrp_info.wanIntf)); //binding wan interface
 	json_object_object_add(newIpObj, "X_ZYXEL_ConnectionType", json_object_new_string("IP_Routed"));  //inherit connection type of wan interface
-	json_object_object_add(newIpObj, "X_ZYXEL_SrvName", json_object_new_string(IntfGrp_info.X_ZYXEL_BridgeName));  //inherit connection type of wan interface
+	json_object_object_add(newIpObj, "X_ZYXEL_SrvName", json_object_new_string(IntfGrp_info.BridgeName));  //inherit connection type of wan interface
 
 	zcfgFeObjJsonBlockedSet(RDM_OID_IP_IFACE, &newIpIid, newIpObj, NULL);
     /*==============================================================================*/
@@ -1057,11 +1052,11 @@
 	if((IntfGrp_info.modify) && (IntfGrp_info.org)) {
 		//PUT RDM_OID_BRIDGING_BR
 		//printf("3. PUT RDM_OID_BRIDGING_BR\n");
-		if(IntfGrp_info.X_ZYXEL_BridgeName != NULL) {
+		if(IntfGrp_info.BridgeName != NULL) {
 			IID_INIT(BrIid);
 			find = FindObjIid(RDM_OID_BRIDGING_BR, IntfGrp_info.Iid, &BrIid, &BrObj);
 			if(find == true) {
-				json_object_object_add(BrObj, "X_ZYXEL_BridgeName", json_object_new_string(IntfGrp_info.X_ZYXEL_BridgeName));
+				json_object_object_add(BrObj, "X_ZYXEL_BridgeName", json_object_new_string(IntfGrp_info.BridgeName));
 				zcfgFeObjJsonSet(RDM_OID_BRIDGING_BR, &BrIid, BrObj, NULL);
 				zcfgFeJsonObjFree(BrObj);
 			}
@@ -1077,13 +1072,13 @@
 		if(ipIntf_obj) {
 			if((IntfGrp_info.org != NULL) && (IntfGrp_info.org->wanIntf != NULL)) {
 				json_object_object_add(ipIntf_obj, "X_ZYXEL_Group_WAN_IpIface", json_object_new_string(IntfGrp_info.wanIntf));
-				if(IntfGrp_info.org->X_ZYXEL_BridgeName != NULL) {
-					json_object_object_add(ipIntf_obj, "X_ZYXEL_SrvName", json_object_new_string(IntfGrp_info.X_ZYXEL_BridgeName));
+				if(IntfGrp_info.org->BridgeName != NULL) {
+					json_object_object_add(ipIntf_obj, "X_ZYXEL_SrvName", json_object_new_string(IntfGrp_info.BridgeName));
 				}
 				zcfgFeObjJsonSet(RDM_OID_IP_IFACE, &ipIntf_Iid, ipIntf_obj, NULL);
 			}
-			else if(IntfGrp_info.X_ZYXEL_BridgeName != NULL) {
-				json_object_object_add(ipIntf_obj, "X_ZYXEL_SrvName", json_object_new_string(IntfGrp_info.X_ZYXEL_BridgeName));
+			else if(IntfGrp_info.BridgeName != NULL) {
+				json_object_object_add(ipIntf_obj, "X_ZYXEL_SrvName", json_object_new_string(IntfGrp_info.BridgeName));
 				zcfgFeObjJsonSet(RDM_OID_IP_IFACE, &ipIntf_Iid, ipIntf_obj, NULL);
 			}
 			zcfgFeJsonObjFree(ipIntf_obj);
@@ -1167,7 +1162,6 @@
 
 zcfgRet_t zcfgFeDalIntrGrpDelete(struct json_object *Jobj, char *replyMsg){
 	zcfgRet_t ret = ZCFG_SUCCESS;
-	s_JsonArrayType IntfGrpDel_Info;
 	int BrRefKey;
 	bool find;
 	int i = 0;
@@ -1191,13 +1185,11 @@
 	IID_INIT(BrIid);
 	IID_INIT(igmpIid);
 	IID_INIT(mldIid);
-
-	memset(&IntfGrpDel_Info, 0, sizeof(s_JsonArrayType));
-	getIntefGrpDelKey(Jobj, &IntfGrpDel_Info);
-
+	int index = 0;
+	index = json_object_get_int(json_object_object_get(Jobj, "Index"));
 	while(zcfgFeObjJsonGetNextWithoutUpdate(RDM_OID_VLAN_GROUP, &vlanGroupIid, &vlanGroupObj) == ZCFG_SUCCESS) {
 		BrRefKey = (int)json_object_get_int(json_object_object_get(vlanGroupObj, "BrRefKey"));
-		if(BrRefKey == IntfGrpDel_Info.array[0]) {
+		if(BrRefKey == index) {
 			json_object_object_add(vlanGroupObj, "BrRefKey", json_object_new_string(""));
 			zcfgFeObjJsonSet(RDM_OID_VLAN_GROUP, &vlanGroupIid, vlanGroupObj, NULL);
 			zcfgFeJsonObjFree(vlanGroupObj);
@@ -1205,13 +1197,13 @@
 		}
 		zcfgFeJsonObjFree(vlanGroupObj);
 	}
-	find = FindObjIid(RDM_OID_BRIDGING_BR, IntfGrpDel_Info, &BrIid, &BrObj);
+	find = dalcmdFindObjIid(RDM_OID_BRIDGING_BR, index, &BrIid, &BrObj);
 	if(find == true) {
 		zcfgFeObjJsonDel(RDM_OID_BRIDGING_BR, &BrIid, NULL);
 		zcfgFeJsonObjFree(BrObj);
 	}
 	
-	BrIdx = IntfGrpDel_Info.array[0]-1;
+	BrIdx = index-1;
 	memset(tmp, 0, sizeof(tmp));
 	sprintf(tmp, "%d", BrIdx);
 	memset(BrStr, 0, sizeof(BrStr));
@@ -1238,7 +1230,6 @@
 		zcfgFeObjJsonSet(RDM_OID_ZY_MLD, &mldIid, mldObj, NULL);
 	}
 
-	freeIntefGrpDelKey(&IntfGrpDel_Info);
 	return ret;
 }
 
@@ -1496,7 +1487,7 @@
 	memset(&IntfGrp_info, 0, sizeof(s_IntfGrp));
 
 	// Get parameter
-	bridgename = json_object_get_string(json_object_object_get(Jobj, "X_ZYXEL_BridgeName"));
+	bridgename = json_object_get_string(json_object_object_get(Jobj, "Name"));
 	wanintf = json_object_get_string(json_object_object_get(Jobj, "wanIntf"));
 	if(json_object_get_string(json_object_object_get(Jobj, "lanIntf")))
 		lanintf = json_object_get_string(json_object_object_get(Jobj, "lanIntf"));
@@ -1919,103 +1910,6 @@
 	return;
 }
 
-
-
-bool dalcmdFindObjIid(zcfg_offset_t RDM_OID, int index, objIndex_t* Iid, json_object** Obj) {
-	int k = 0;
-	bool find;
-
-	while(zcfgFeObjJsonGetNextWithoutUpdate(RDM_OID, Iid, Obj) == ZCFG_SUCCESS) {
-		find = true;
-		if(Iid->idx[0] != index) {
-			find = false;
-		}
-		if(find == true) {
-			break;
-		}						
-	}
-	if(find == false) {
-		printf("Can't find the target Iid in RDM %d\n", RDM_OID);
-	}
-	
-	printf("FindObjIid: find = %d, idx[0] = %d\n", find, Iid->idx[0]);	
-	return find;
-}
-
-zcfgRet_t dalcmdIntrGrpDelete(struct json_object *Jobj, char *replyMsg){
-	zcfgRet_t ret = ZCFG_SUCCESS;
-	int BrRefKey;
-	bool find;
-	int i = 0;
-	int BrIdx = 0;
-	char tmp[10] = {0};
-	char BrStr[30] = {0};
-	char snoopingList[100] = {0};
-	const char *snoopingStr = NULL;
-	const char *single_snpStr = NULL;
-	const char *rest_str = NULL;
-
-	json_object *vlanGroupObj = NULL;
-	json_object *BrObj = NULL;
-	json_object *igmpObj;
-	json_object *mldObj;
-	objIndex_t vlanGroupIid = {0};
-	objIndex_t BrIid = {0};
-	objIndex_t igmpIid = {0};
-	objIndex_t mldIid = {0};
-	IID_INIT(vlanGroupIid);
-	IID_INIT(BrIid);
-	IID_INIT(igmpIid);
-	IID_INIT(mldIid);
-	int index = 0;
-	index = json_object_get_int(json_object_object_get(Jobj, "Index"));
-	while(zcfgFeObjJsonGetNextWithoutUpdate(RDM_OID_VLAN_GROUP, &vlanGroupIid, &vlanGroupObj) == ZCFG_SUCCESS) {
-		BrRefKey = (int)json_object_get_int(json_object_object_get(vlanGroupObj, "BrRefKey"));
-		if(BrRefKey == index) {
-			json_object_object_add(vlanGroupObj, "BrRefKey", json_object_new_string(""));
-			zcfgFeObjJsonSet(RDM_OID_VLAN_GROUP, &vlanGroupIid, vlanGroupObj, NULL);
-			zcfgFeJsonObjFree(vlanGroupObj);
-			break;
-		}
-		zcfgFeJsonObjFree(vlanGroupObj);
-	}
-	find = dalcmdFindObjIid(RDM_OID_BRIDGING_BR, index, &BrIid, &BrObj);
-	if(find == true) {
-		zcfgFeObjJsonDel(RDM_OID_BRIDGING_BR, &BrIid, NULL);
-		zcfgFeJsonObjFree(BrObj);
-	}
-	
-	BrIdx = index-1;
-	memset(tmp, 0, sizeof(tmp));
-	sprintf(tmp, "%d", BrIdx);
-	memset(BrStr, 0, sizeof(BrStr));
-	strcat(BrStr, "br");
-	strcat(BrStr, tmp);
-	memset(snoopingList, 0 ,sizeof(snoopingList));
-	strcat(snoopingList, "br0|1");
-	ret = zcfgFeObjJsonGetWithoutUpdate(RDM_OID_ZY_IGMP, &igmpIid, &igmpObj);
-	if(ret == ZCFG_SUCCESS){
-		snoopingStr = json_object_get_string(json_object_object_get(igmpObj, "SnoopingBridgeIfName"));
-		single_snpStr = strtok_r(snoopingStr, ",", &rest_str);
-		while(strcmp(rest_str,"")) {
-			if(!strstr(rest_str, BrStr)) {
-				sprintf(snoopingList,"%s%s",",",single_snpStr);
-			}
-			single_snpStr = strtok_r(rest_str, ",", &rest_str);
-		}
-		json_object_object_add(igmpObj, "SnoopingBridgeIfName", json_object_new_string(snoopingList));
-		zcfgFeObjJsonSet(RDM_OID_ZY_IGMP, &igmpIid, igmpObj, NULL);
-	}
-	ret = zcfgFeObjJsonGetWithoutUpdate(RDM_OID_ZY_MLD, &mldIid, &mldObj);
-	if(ret == ZCFG_SUCCESS){
-		json_object_object_add(mldObj, "SnoopingBridgeIfName", json_object_new_string(snoopingList));
-		zcfgFeObjJsonSet(RDM_OID_ZY_MLD, &mldIid, mldObj, NULL);
-	}
-
-	return ret;
-}
-
-
 void zcfgFeDalShowIntrGrp(struct json_object *Jarray){
 
 	int i, len = 0;
@@ -2028,7 +1922,7 @@
 		return;
 	}
 	printf("%-6s %-12s %-35s %-55s %-35s \n",
-		    "Index","Group Name", "WAN Interface", "LAN Interfaces", "Criteria");
+		    "Index","Name", "WAN Interface", "LAN Interfaces", "Criteria");
 	
 	
 	len = json_object_array_length(Jarray);
@@ -2079,9 +1973,6 @@
 		ret = zcfgFeDalIntrGrpEdit(Jobj, NULL);
 	}
 	else if(!strcmp(method, "DELETE")) {
-		if(json_object_object_get(Jobj, "Index") != NULL){
-			ret = dalcmdIntrGrpDelete(Jobj, NULL);
-		}else
 		ret = zcfgFeDalIntrGrpDelete(Jobj, NULL);
 	}
 	else if(!strcmp(method, "GET")) {
