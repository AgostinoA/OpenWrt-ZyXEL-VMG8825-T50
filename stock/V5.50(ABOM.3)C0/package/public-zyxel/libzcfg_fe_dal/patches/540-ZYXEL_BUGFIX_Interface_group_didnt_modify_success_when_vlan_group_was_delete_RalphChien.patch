Index: libzcfg_fe_dal-1.0/network/interfaceGrouping/zcfg_fe_dal_intfGrp.c
===================================================================
--- libzcfg_fe_dal-1.0.orig/network/interfaceGrouping/zcfg_fe_dal_intfGrp.c	2018-05-02 16:50:35.087629413 +0800
+++ libzcfg_fe_dal-1.0/network/interfaceGrouping/zcfg_fe_dal_intfGrp.c	2018-05-02 16:53:14.236557100 +0800
@@ -830,7 +830,6 @@
 	sprintf(brPathName,"Bridging.Bridge.%d.Port.1",index);
 	
     printf("dalcmdIntrGrpEdit: criteriaNum:%d\n", criteriaNum);
-    
 	if(name != NULL || wanintf != NULL) //update bridge name, bind wan interface
     {
 		if(name != NULL)
@@ -1017,32 +1016,32 @@
 							}							
 						}
 					zcfgFeJsonObjFree(BridgeFilterObj);
-				}
+                    }
 				}
                 else if(!strcmp(act,"edit"))
                 {
-					VlanIid.idx[0] = idx;
-					VlanIid.level = 1;
-                        if(zcfgFeObjJsonGetWithoutUpdate(RDM_OID_VLAN_GROUP, &VlanIid, &VlanObj) == ZCFG_SUCCESS)
-                        {
-						json_object_object_add(VlanObj, "BrRefKey", json_object_new_string(""));
-						zcfgFeObjJsonSet(RDM_OID_VLAN_GROUP, &VlanIid, VlanObj, NULL);
-						zcfgFeJsonObjFree(VlanObj);
-			}
-			IID_INIT(VlanIid);
+                    VlanIid.idx[0] = idx;
+                    VlanIid.level = 1;
+                    if(zcfgFeObjJsonGetWithoutUpdate(RDM_OID_VLAN_GROUP, &VlanIid, &VlanObj) == ZCFG_SUCCESS)
+                    {
+                        json_object_object_add(VlanObj, "BrRefKey", json_object_new_string(""));
+                        zcfgFeObjJsonSet(RDM_OID_VLAN_GROUP, &VlanIid, VlanObj, NULL);
+                        zcfgFeJsonObjFree(VlanObj);
+                    }
+                    IID_INIT(VlanIid);
                     while(zcfgFeObjJsonGetNextWithoutUpdate(RDM_OID_VLAN_GROUP, &VlanIid, &VlanObj) == ZCFG_SUCCESS)
                     {
                         if(!strcmp(vlanvalue,json_object_get_string(json_object_object_get(VlanObj, "GroupName"))))
                         {
-							sprintf(bfKey,"%d",index);
-							json_object_object_add(VlanObj, "BrRefKey", json_object_new_string(bfKey));
-					zcfgFeObjJsonSet(RDM_OID_VLAN_GROUP, &VlanIid, VlanObj, NULL);
-					zcfgFeJsonObjFree(VlanObj);
-					break;
-				}
-				zcfgFeJsonObjFree(VlanObj);
-			}
-		}
+                            sprintf(bfKey,"%d",index);
+                            json_object_object_add(VlanObj, "BrRefKey", json_object_new_string(bfKey));
+                            zcfgFeObjJsonSet(RDM_OID_VLAN_GROUP, &VlanIid, VlanObj, NULL);
+                            zcfgFeJsonObjFree(VlanObj);
+                            break;
+                        }
+                        zcfgFeJsonObjFree(VlanObj);
+                    }
+                }
 				else if(!strcmp(act,"delete"))
                 {
 					VlanIid.idx[0] = idx;
@@ -1054,22 +1053,44 @@
 						zcfgFeJsonObjFree(VlanObj);
 					}
 				}
+                else if(!strcmp(act, "re_add"))
+                {
+                    /*
+                     * If only change port bind to option bind, lanIntf will be null,
+                     * also same as only set option bind.
+                    */
+                    if((ret = zcfgFeDalIntrGrpDelete(Jobj, NULL)) == ZCFG_SUCCESS)
+                    {
+                        if((ret = dalcmdIntrGrpAdd(Jobj, replyMsg)) == ZCFG_SUCCESS)
+                        {
+                            printf("dalcmdIntrGrpEdit: SUCCESS Delete rule, and re-add one!\n");
+                        }
+                        else
+                        {
+                            printf("dalcmdIntrGrpEdit:SUCCESS Delete rule, but FAILED re-add one!\n");
+                        }
+                    }
+                    else
+                    {
+                        printf("dalcmdIntrGrpEdit:FAILED Delete rule!\n");
+                    }
+                }
 				else{	// for CLI change criteria, original criteria exist vlan group rule, new criteria do not have. Rex Chen
                     while(zcfgFeObjJsonGetNextWithoutUpdate(RDM_OID_VLAN_GROUP, &VlanIid, &VlanObj) == ZCFG_SUCCESS)
                     {
 						brRefKey = json_object_get_string(json_object_object_get(VlanObj, "BrRefKey"));
-                            if(strcmp(brRefKey, ""))
+                        if(strcmp(brRefKey, ""))
+                        {
+                            if(index == atoi(brRefKey))
                             {
-                                if(index == atoi(brRefKey))
-                                {
-					json_object_object_add(VlanObj, "BrRefKey", json_object_new_string(""));
-					zcfgFeObjJsonSet(RDM_OID_VLAN_GROUP, &VlanIid, VlanObj, NULL);
-					zcfgFeJsonObjFree(VlanObj);
-					break;
-				}
-						}
-				zcfgFeJsonObjFree(VlanObj);
-			}
+                                json_object_object_add(VlanObj, "BrRefKey", json_object_new_string(""));
+                                zcfgFeObjJsonSet(RDM_OID_VLAN_GROUP, &VlanIid, VlanObj, NULL);
+                                zcfgFeJsonObjFree(VlanObj);
+                                break;
+                            }
+                        }
+                        zcfgFeJsonObjFree(VlanObj);
+                    }
 				}
 			}//if(!strcmp(type,"vlangroup"))
 			else
@@ -1081,7 +1102,7 @@
 				op60value = json_object_get_string(json_object_object_get(obj, "op60_value"));
 				op61value = json_object_get_string(json_object_object_get(obj, "op61_value"));
 				op125value = json_object_get_string(json_object_object_get(obj, "op125value"));
-			cmd = json_object_get_string(json_object_object_get(Jobj, "cmdtype"));
+                cmd = json_object_get_string(json_object_object_get(Jobj, "cmdtype"));
 				if(!strcmp(cmd, "GUI")){
 					wildcardenable = json_object_get_string(json_object_object_get(obj, "wildcardEnable"));
 				}
@@ -1094,36 +1115,18 @@
 						wildcardenable = "N";
 				}
 				
-				// IID_INIT(BridgeFilterIid);
-                //first, it will reset already bind port, back to bind br0.
-				// if(reset == 0)
-                // {
-					// if(strcmp(act,"delete")){
-                        // while(zcfgFeObjJsonGetNextWithoutUpdate(RDM_OID_BRIDGING_FILTER, &BridgeFilterIid, &BridgeFilterObj) == ZCFG_SUCCESS)
-                        // {
-                            // if(!strcmp(json_object_get_string(json_object_object_get(BridgeFilterObj, "Bridge")),brPath)
-                                // && !strcmp(json_object_get_string(json_object_object_get(BridgeFilterObj, "X_ZYXEL_PreIfaceGroup")),""))
-                            // {
-                                // json_object_object_add(BridgeFilterObj, "Bridge", json_object_new_string("Bridging.Bridge.1"));
-                                // zcfgFeObjJsonBlockedSet(RDM_OID_BRIDGING_FILTER, &BridgeFilterIid, BridgeFilterObj, NULL);
-                                // zcfgFeJsonObjFree(BridgeFilterObj);
-                            // }
-                            // zcfgFeJsonObjFree(BridgeFilterObj);
-                        // }
-					// }
-                // }
 				IID_INIT(BridgeFilterIid);
 				if(!strcmp(act,"add"))
                 {
-			IID_INIT(BridgeFilterIid);
+                    IID_INIT(BridgeFilterIid);
                     if((ret = zcfgFeObjJsonAdd(RDM_OID_BRIDGING_FILTER, &BridgeFilterIid, NULL)) != ZCFG_SUCCESS) 
                     {
-				return ret;
-			}
+                        return ret;
+                    }
                     if((ret = zcfgFeObjJsonGetWithoutUpdate(RDM_OID_BRIDGING_FILTER, &BridgeFilterIid, &BridgeFilterObj)) != ZCFG_SUCCESS) 
                     {
-				return ret;
-			}
+                        return ret;
+                    }
 					if(cmd != NULL){
 						while(zcfgFeObjJsonGetNextWithoutUpdate(RDM_OID_VLAN_GROUP, &VlanIid, &VlanObj) == ZCFG_SUCCESS){
 							brRefKey = json_object_get_string(json_object_object_get(VlanObj, "BrRefKey"));
@@ -1154,7 +1157,7 @@
                     printf("dalcmdIntrGrpEdit: brPath:%s\n", brPath);
 					dalcmdcirteriaToObject(BridgeFilterObj, brPath, type, macvalue, op60value, op61value, op125value, wildcardenable);
                     zcfgFeObjJsonBlockedSet(RDM_OID_BRIDGING_FILTER, &BridgeFilterIid, BridgeFilterObj, NULL);
-			zcfgFeJsonObjFree(BridgeFilterObj);
+                    zcfgFeJsonObjFree(BridgeFilterObj);
 					reset++;
 
 				}
