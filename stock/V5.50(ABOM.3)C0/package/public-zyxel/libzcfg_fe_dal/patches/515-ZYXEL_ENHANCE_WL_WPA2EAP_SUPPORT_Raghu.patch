Index: libzcfg_fe_dal-1.0/network/wireless/zcfg_fe_dal_wifi_general.c
===================================================================
--- libzcfg_fe_dal-1.0.orig/network/wireless/zcfg_fe_dal_wifi_general.c	2018-03-28 18:00:46.053327501 +0800
+++ libzcfg_fe_dal-1.0/network/wireless/zcfg_fe_dal_wifi_general.c	2018-03-28 18:02:10.167272263 +0800
@@ -67,9 +67,9 @@
 	{"WEP64Key4",	dalType_string, 	0,	0,	NULL,		NULL,			0},
 	{"wepid",				dalType_string,		0,	0,	NULL,		"key1|key2|key3|key4",			0},
 #ifdef ZYXEL_WIFI_SUPPORT_WPA_MIX_MODE
-	{"wpaMode",				dalType_string,		0,	0,	NULL,		"wpawpa2psk|wpa2psk",	0},
+	{"wpaMode",				dalType_string,		0,	0,	NULL,		"wpawpa2psk|wpa2psk|wpawpa2",	0},
 #else
-	{"wpaMode",				dalType_string,		0,	0,	NULL,		"wpa2psk",			0},
+	{"wpaMode",				dalType_string,		0,	0,	NULL,		"wpa2psk|wpa2",			0},
 #endif
 	// {"X_ZYXEL_AutoGenPSK",	dalType_boolean,	0,	0,	NULL,		NULL,			0},
 	{"AutoGenPSK",	dalType_boolean,	0,	0,	NULL,		NULL,			0},
@@ -377,6 +377,12 @@
 				json_object_object_add(pramJobj, "CurrentPSKValue", JSON_OBJ_COPY(json_object_object_get(obj2, "KeyPassphrase")));
 				json_object_object_add(pramJobj, "RekeyingInterval", JSON_OBJ_COPY(json_object_object_get(obj2, "RekeyingInterval")));
 				json_object_object_add(pramJobj, "encryp", JSON_OBJ_COPY(json_object_object_get(obj2, "X_ZYXEL_Encryption")));
+				json_object_object_add(pramJobj, "RadiusServerIPAddr", JSON_OBJ_COPY(json_object_object_get(obj2, "RadiusServerIPAddr")));
+				json_object_object_add(pramJobj, "RadiusServerPort", JSON_OBJ_COPY(json_object_object_get(obj2, "RadiusServerPort")));
+				json_object_object_add(pramJobj, "RadiusSecret", JSON_OBJ_COPY(json_object_object_get(obj2, "RadiusSecret")));
+				json_object_object_add(pramJobj, "X_ZYXEL_Preauth", JSON_OBJ_COPY(json_object_object_get(obj2, "X_ZYXEL_Preauth")));
+				json_object_object_add(pramJobj, "X_ZYXEL_ReauthInterval", JSON_OBJ_COPY(json_object_object_get(obj2, "X_ZYXEL_ReauthInterval")));				
+
 			}
 		}
 
@@ -1683,10 +1689,10 @@
 			return ZCFG_INVALID_PARAM_VALUE;
 		}
 #else
-		if(strcmp(wpaMode,"wpa2psk")){
-			printf("wpaMode must be set to \"wpa2psk\".\n");
-			return ZCFG_INVALID_PARAM_VALUE;
-		}
+               if(strcmp(wpaMode,"wpa2psk") && strcmp(wpaMode,"wpa2")){
+                       printf("wpaMode must be set to \"wpa2psk\" or \"wpa2\".\n");
+                       return ZCFG_INVALID_PARAM_VALUE;
+               }
 #endif
 
 		// AutoGenPSK is optional
