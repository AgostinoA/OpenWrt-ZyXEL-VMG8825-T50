Index: libzcfg_fe_dal-1.0/voip/phone/zcfg_fe_dal_phone_region.c
===================================================================
--- libzcfg_fe_dal-1.0.orig/voip/phone/zcfg_fe_dal_phone_region.c	2018-02-01 18:32:45.438597548 +0800
+++ libzcfg_fe_dal-1.0/voip/phone/zcfg_fe_dal_phone_region.c	2018-02-02 10:18:34.045396557 +0800
@@ -94,30 +94,37 @@
 
 zcfgRet_t zcfgFeDalVoipFlashAndCountryEdit(struct json_object *Jobj)
 {
-	zcfgRet_t ret = ZCFG_SUCCESS;
-	struct json_object *setJson = NULL;
+    zcfgRet_t ret = ZCFG_SUCCESS;
+    struct json_object *setJson = NULL;
 
-	IID_INIT(Iid);
-	while (zcfgFeObjJsonGetNextWithoutUpdate(RDM_OID_VOICE_PROF, &Iid, &profObj) == ZCFG_SUCCESS)
-	{
-		if (json_object_object_get(Jobj, "Service_Mode"))
-			json_object_object_add(profObj, "X_ZYXEL_FlashUsageStyle", json_object_new_string(X_ZYXEL_FlashUsageStyle));
-		if (json_object_object_get(Jobj, "Region"))
-			json_object_object_add(profObj, "Region", json_object_new_string(Region));
-
-		if ((setJson = zcfgFeJsonMultiObjAppend(RDM_OID_VOICE_PROF, &Iid, multiJobj, profObj)) == NULL)
-		{
-			printf("%s:(ERROR) fail to append object oid(%d)\n", __FUNCTION__, RDM_OID_VOICE_PROF);
-			zcfgFeJsonObjFree(profObj);
-			return ZCFG_INTERNAL_ERROR;
-		}
-
-		zcfgFeJsonObjFree(profObj);
-	}
-
-	//printf("%s(): Append Pro obj to multiJobj (%s) \n ",__FUNCTION__,json_object_to_json_string(multiJobj));
-	//printf("%s() exit \n ",__FUNCTION__);
-	return ret;
+    IID_INIT(Iid);
+    while (zcfgFeObjJsonGetNextWithoutUpdate(RDM_OID_VOICE_PROF, &Iid, &profObj) == ZCFG_SUCCESS)
+    {
+        if (json_object_object_get(Jobj, "Service_Mode"))
+        {
+            json_object_object_add(profObj, "X_ZYXEL_FlashUsageStyle", json_object_new_string(X_ZYXEL_FlashUsageStyle));
+        }
+        if (json_object_object_get(Jobj, "Region"))
+        {
+            json_object_object_add(profObj, "Region", json_object_new_string(Region));
+        }
+
+        if ((setJson = zcfgFeJsonMultiObjAppend(RDM_OID_VOICE_PROF, &Iid, multiJobj, profObj)) == NULL)
+        {
+            printf("%s:(ERROR) fail to append object oid(%d)\n", __FUNCTION__, RDM_OID_VOICE_PROF);
+            zcfgFeJsonObjFree(profObj);
+            return ZCFG_INTERNAL_ERROR;
+        }
+
+        zcfgFeJsonObjFree(profObj);
+
+        break;
+        /* Backend will sync these two configs, so we only need to set the first profile in DAL. */
+    }
+
+    //printf("%s(): Append Pro obj to multiJobj (%s) \n ",__FUNCTION__,json_object_to_json_string(multiJobj));
+    //printf("%s() exit \n ",__FUNCTION__);
+    return ret;
 }
 
 zcfgRet_t zcfgFeDalVoipRegionEdit(struct json_object *Jobj, char *replyMsg)
