Index: libzcfg_fe_schema-1.0/zcfg_fe_schema.c
===================================================================
--- libzcfg_fe_schema-1.0.orig/zcfg_fe_schema.c	2014-01-03 16:07:44.000000000 +0800
+++ libzcfg_fe_schema-1.0/zcfg_fe_schema.c	2014-09-18 13:17:46.220641934 +0800
@@ -20,6 +20,28 @@
 	struct zcfgAttrRecord_s *next;
 }zcfgAttrRecord_t;
 /*
+ *  Function Name: zcfgFeObjIsSingle
+ *  Description: check object is single onject
+ */
+int zcfgFeObjIsSingle(zcfg_offset_t rdmObjId)
+{
+	objInfo_t *objInfo = NULL;
+
+	if(schemaShmAddr == NULL)
+		zcfgFeSharedMemInit();
+
+	objInfo = GET_OBJ_INFO_BY_OID(rdmObjId);
+	
+	if(objInfo){
+		if(!(objInfo->attr & ATTR_INDEXNODE) && objInfo->idxLevel == 0)
+			return 1;
+		else
+			return 0;
+	}
+
+	return -1;
+}
+/*
  *  Function Name: zcfgFeObjAttrGet
  *  Description: Used to get object attribute
  */
Index: libzcfg_fe_schema-1.0/zcfg_fe_schema.h
===================================================================
--- libzcfg_fe_schema-1.0.orig/zcfg_fe_schema.h	2014-01-03 16:07:44.000000000 +0800
+++ libzcfg_fe_schema-1.0/zcfg_fe_schema.h	2014-09-18 13:17:59.084226096 +0800
@@ -6,6 +6,7 @@
 	struct zcfgSubObjNameList_s *next;
 }zcfgSubObjNameList_t;
 
+int zcfgFeObjIsSingle(zcfg_offset_t);
 int zcfgFeObjAttrGet(zcfg_offset_t);
 int zcfgFeParamAttrGetByName(zcfg_offset_t, char *);
 int zcfgFeParamTypeGetByName(zcfg_offset_t, char *);
