Index: libzyutil-1.0/BROADCOM/libzyutil_wrapper.c
===================================================================
--- libzyutil-1.0.orig/BROADCOM/libzyutil_wrapper.c	2018-12-20 13:23:25.081707856 +0800
+++ libzyutil-1.0/BROADCOM/libzyutil_wrapper.c	2018-12-20 13:28:59.708582108 +0800
@@ -526,4 +526,183 @@
 
 }
 
+
+/*!
+ *  ZIGBEE reset (get state)
+ *
+ *  @return    -1 - ioctl failed
+ *              0 - Low
+ *              1 - High
+ *              2 - ZIGBEE not supported
+ *  @note get zigbee reset state
+ */
+int zyzigbeereset_get(void)
+{
+    int boardFd = 0;
+    int rc = 0;
+    unsigned int offset = 0;
+    BOARD_IOCTL_PARMS ioctlParms;
+
+    boardFd = open(BOARD_DEVICE_NAME, O_RDWR);
+
+    if(boardFd != -1) 
+    {
+        ioctlParms.result = -2;//Because -1 to 2 has been used, the initial value of -2
+
+        rc = ioctl(boardFd, BOARD_IOCTL_GET_ZIGBEE_RESET, &ioctlParms);
+        close(boardFd);
+
+        if (rc < 0 || (ioctlParms.result != 0 && ioctlParms.result != 1) ) 
+        {
+            if (ioctlParms.result == -1)
+            {
+                zyutil_dbg_printf("ZIGBEE not supported\n");
+                return 2;
+            }
+            zyutil_dbg_printf("ioctl failed\n");
+            return -1;
+        }
+        zyutil_dbg_printf("get zigbee reset value: %d\n",ioctlParms.result);	
+        return ioctlParms.result;
+    }
+    else 
+    {
+        return -1;
+    }
+}
+
+/*!
+ *  ZIGBEE reset
+ *
+ *  @return    -1 - ioctl failed
+ *              0 - Fail to reset zigbee module
+ *              1 - Reset zigbee module succeed
+ *  @note ZIGBEE reset
+ */
+int zyzigbeereset_set(void)
+{
+    int boardFd = 0;
+    int rc = 0;
+    unsigned int offset = 0;
+    BOARD_IOCTL_PARMS ioctlParms;
+
+    boardFd = open(BOARD_DEVICE_NAME, O_RDWR);
+
+    if(boardFd != -1) 
+    {
+        ioctlParms.strLen =  1;//start up zigbee reset
+        ioctlParms.result = -1;
+
+        rc = ioctl(boardFd, BOARD_IOCTL_SET_ZIGBEE_RESET, &ioctlParms);
+        close(boardFd);
+
+        if(rc < 0) 
+        {
+            zyutil_dbg_printf("ioctl failed\n");
+            return -1;
+        }
+
+        if (ioctlParms.result == 1)
+        {
+            zyutil_dbg_printf("Reset zigbee module succeed.\n");
+            return ioctlParms.result;
+        }
+        else
+        {
+            zyutil_dbg_printf("Fail to reset zigbee module.\n");
+            return ioctlParms.result;
+        }
+    }
+    else 
+    {
+        return -1;
+    }
+}
+/*!
+ *  get UPS state
+ *
+ *  @return    -1            - ioctl failed
+ *             Globe value   - UPS state
+ *
+ *  @note   Globe value: ups_active_status
+ *         (bit3,bit2,bit1,bit0) => (miss battery, on battery, low battery, fail battery)
+ *          bit0 : 1(active) - fail Self Test, 0(inactive) - battery is charged
+ *          bit1 : 1(active) - battery < 45% capacity, 0(inactive) - battery full capacity
+ *          bit2 : 1(active) - operating from battery, 0(inactive) - operating from utility line
+ *          bit3 : 1(active) - battery is missing, 0(inactive) - battery is present
+ */
+int zyupsstate_get(void)
+{
+    int boardFd = 0;
+    int rc = 0;
+    unsigned int offset = 0;
+    BOARD_IOCTL_PARMS ioctlParms;
+
+    boardFd = open(BOARD_DEVICE_NAME, O_RDWR);
+
+    if(boardFd != -1) 
+    {
+        ioctlParms.result = -1;
+
+        rc = ioctl(boardFd, BOARD_IOCTL_GET_UPS_STATE, &ioctlParms);
+        close(boardFd);
+
+        if (rc < 0) 
+        {
+            zyutil_dbg_printf("ioctl failed\n");
+            return -1;
+        }
+        return ioctlParms.result;
+    }
+    else 
+    {
+        return -1;
+    }
+}
+
+/*!
+ *  sfp operation
+ *  @param[in]  subvalue    - SFP operation options (0-6)
+ *              input       - active/inactive
+ *
+ *  @return       -1        - ioctl failed
+ *                 0        - inactive
+ *                 1        - active
+ *
+ *  @note get/set sfp  
+ */
+int zysfpoperation(int subvalue ,int input)
+{
+    int boardFd = 0;
+    int rc = 0;
+    BOARD_IOCTL_PARMS ioctlParms;
+    
+    if ((subvalue > (ZYGOIOSATAT_MAX_NUM_COMMANDS - 1)) || subvalue < GET_SFP_PRESENT || (input != 0 && input != 1) )
+    {
+        return -1;
+    }
+
+    boardFd = open(BOARD_DEVICE_NAME, O_RDWR);
+    if(boardFd != -1) 
+    {
+        ioctlParms.result = -1;
+        ioctlParms.strLen = subvalue;
+        ioctlParms.offset = input;
+
+        rc = ioctl(boardFd, BOARD_IOCTL_SET_GET_SFP, &ioctlParms);
+        close(boardFd);
+
+        if (rc < 0) 
+        {
+            zyutil_dbg_printf("ioctl failed\n");
+            return -1;
+        }
+
+        return ioctlParms.result;
+    }
+    else 
+    {
+        return -1;
+    }
+}
 #endif
Index: libzyutil-1.0/ECONET/libzyutil_wrapper.c
===================================================================
--- libzyutil-1.0.orig/ECONET/libzyutil_wrapper.c	2018-12-20 13:23:25.353707856 +0800
+++ libzyutil-1.0/ECONET/libzyutil_wrapper.c	2018-12-20 13:29:14.821166294 +0800
@@ -835,4 +835,27 @@
 	}
 }
 
+//-----------------------------------------------------
+//mapping broadcom/libzyutil_wrapper.c.
+//Avoid mistakes, So given the empty function
+int zyzigbeereset_get(void)
+{
+    return -1;
+}
+
+int zyzigbeereset_set(void)
+{
+    return -1;
+}
+
+int zyupsstate_get(void)
+{
+    return -1;
+}
+
+int zysfpoperation(int val ,int input)
+{
+    return -1;
+}
+//-----------------------------------------------------
 #endif
Index: libzyutil-1.0/libzyutil_wrapper.h
===================================================================
--- libzyutil-1.0.orig/libzyutil_wrapper.h	2018-12-20 13:23:25.125707856 +0800
+++ libzyutil-1.0/libzyutil_wrapper.h	2018-12-20 13:28:49.204645814 +0800
@@ -35,6 +35,68 @@
 zcfgRet_t memaccess(int type, unsigned long addr, unsigned long *value);
 #endif
 
+/*!
+ *  ZIGBEE reset (get state)
+ *
+ *  @return    -1 - ioctl failed
+ *              0 - Low
+ *              1 - High
+ *              2 - ZIGBEE not supported
+ *  @note get zigbee reset states
+ */
+int   zyzigbeereset_get(void);
+
+/*!
+ *  ZIGBEE reset
+ *
+ *  @return    -1 - ioctl failed
+ *              0 - Fail to reset zigbee module
+ *              1 - Reset zigbee module succeed
+ *  @note ZIGBEE reset
+ */
+int   zyzigbeereset_set(void);
+
+/*!
+ *  get UPS state
+ *
+ *  @return    -1           - ioctl failed
+ *             Globe value  - UPS state
+ *
+ *  @note   Globe value: ups_active_status
+ *          (bit3,bit2,bit1,bit0) => (miss battery, on battery, low battery, fail battery)
+ *           bit0 : 1(active) - fail Self Test, 0(inactive) - battery is charged
+ *           bit1 : 1(active) - battery < 45% capacity, 0(inactive) - battery full capacity
+ *           bit2 : 1(active) - operating from battery, 0(inactive) - operating from utility line
+ *           bit3 : 1(active) - battery is missing, 0(inactive) - battery is present
+ */
+int   zyupsstate_get(void);
+
+/*!
+ *  sfp operation
+ *  @param[in]  subvalue    - SFP operation options (0-6)
+ *              input       - inactive/active(0/1)
+ *
+ *  @return       -1        - ioctl failed
+ *                 0        - inactive
+ *                 1        - active
+ *
+ *  @note get/set sfp  
+ */
+int   zysfpoperation(int subvalue ,int input);
+
+typedef enum //Increase before MAX_NUM_COMMANDS
+{
+    GET_SFP_PRESENT = 0,
+    GET_SFP_AE_LOS,
+    GET_SFP_TX_FAULT,
+    GET_SFP_TX_DISABLE,
+    SET_SFP_TX_DISABLE,
+    GET_SFP_RX_SLEEP,
+    SET_SFP_RX_SLEEP,
+    ZYGOIOSATAT_MAX_NUM_COMMANDS
+} zygpio_sfp_msgs_e;
+
+
 int   zyUtilGetGPIO(int gpioNum);
 float transferOpticalTemperature(int input_value);
 float transferOpticalPower(float input_value);
