Index: libzyutil-1.0/BROADCOM/libzyutil_wrapper.c
===================================================================
--- libzyutil-1.0.orig/BROADCOM/libzyutil_wrapper.c	2016-12-23 10:43:41.451743729 +0800
+++ libzyutil-1.0/BROADCOM/libzyutil_wrapper.c	2016-12-23 10:45:17.895743729 +0800
@@ -349,4 +349,41 @@
 
     return boardFd;
 }
+
+/*
+ *  This function is using for access memory with 4 bytes size
+ *  type: 1 means write memory, and 0 means read memory
+ *  addr: the access memory address. For example 0xFFFF0000
+ *  value: read out or write into memory through it.
+ */
+zcfgRet_t memaccess(int type, unsigned long addr, unsigned long *value)
+{
+	int siz = 4;
+	BOARD_MEMACCESS_IOCTL_PARMS parms;
+	int fd;
+
+    if ((fd = open (BOARD_DEVICE_NAME, O_RDWR)) < 0)
+    {
+        printf ("Can't open /dev/brcmboard ");
+    }
+
+	parms.address = (void *)addr;
+	parms.size = siz;
+	parms.space = BOARD_MEMACCESS_IOCTL_SPACE_REG;
+	parms.count = 1;
+	parms.buf = (char *)value;
+	if( type == 0)
+		parms.op = BOARD_MEMACCESS_IOCTL_OP_READ;
+	else if( type == 1)
+		parms.op = BOARD_MEMACCESS_IOCTL_OP_WRITE;
+	else
+		return ZCFG_INTERNAL_ERROR;
+
+	ioctl(fd, BOARD_IOCTL_MEM_ACCESS, &parms);
+	close(fd);
+
+	//printf("[%s]reg %08x value was %08x\n", __func__, addr, *value );
+	return ZCFG_SUCCESS;
+}
+
 #endif
Index: libzyutil-1.0/libzyutil_wrapper.h
===================================================================
--- libzyutil-1.0.orig/libzyutil_wrapper.h	2016-12-23 10:43:41.491743729 +0800
+++ libzyutil-1.0/libzyutil_wrapper.h	2016-12-23 10:45:17.895743729 +0800
@@ -20,6 +20,9 @@
 zcfgRet_t zyUtilGetDualImageInfo(int bootFlag, char *fwversion);
 zcfgRet_t zyUtilGetWlanReserveAreaOffset(unsigned int*);
 #endif
+#ifdef BROADCOM_PLATFORM
+zcfgRet_t memaccess(int type, unsigned long addr, unsigned long *value);
+#endif
 int zyUtilGetGPIO(int gpioNum);
 float transferOpticalTemperature(int input_value);
 float transferOpticalPower(float input_value);
