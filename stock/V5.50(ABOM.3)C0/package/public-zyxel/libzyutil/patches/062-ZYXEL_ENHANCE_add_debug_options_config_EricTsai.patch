Index: libzyutil-1.0/debugcfg.c
===================================================================
--- libzyutil-1.0.orig/debugcfg.c	2017-08-31 15:55:33.769767601 +0800
+++ libzyutil-1.0/debugcfg.c	2017-08-31 15:55:33.777767601 +0800
@@ -12,21 +12,45 @@
 	char zcfgDebugMsgStr[MAX_DEBUGMSG_SIZE] = {0};
 	va_list ap;
 	va_start(ap, fmt);
+
 	if(myDebugCfgObj){
 		if(((myDebugCfgObjLevel & ZCFG_DEBUGCFG_SYSLOG) || (logLev & ZCFG_DEBUGCFG_SYSLOG))
-                   && ((myDebugCfgObjLevel & ZCFG_DEBUGCFG_MASK) >= logLev)){
+			&& ((myDebugCfgObjLevel & ZCFG_DEBUGCFG_LOGLEVMASK) >= (logLev & ZCFG_DEBUGCFG_LOGLEVMASK))){
+
+			if((logLev & ZCFG_DEBUGCFG_OPTIONMASK) && !((myDebugCfgObjLevel & ZCFG_DEBUGCFG_OPTIONMASK) & logLev))
+				goto complete;
+
 			vsnprintf(zcfgDebugMsgStr, MAX_DEBUGMSG_SIZE, fmt, ap);
-			syslog((logLev & ZCFG_DEBUGCFG_MASK), "%s", zcfgDebugMsgStr);
+			syslog((logLev & ZCFG_DEBUGCFG_LOGLEVMASK), "%s", zcfgDebugMsgStr);
 		}
 		if(((myDebugCfgObjLevel & ZCFG_DEBUGCFG_STDLOG) || (logLev & ZCFG_DEBUGCFG_STDLOG))
-                       && ((myDebugCfgObjLevel & ZCFG_DEBUGCFG_MASK) >= logLev))
+			&& ((myDebugCfgObjLevel & ZCFG_DEBUGCFG_LOGLEVMASK) >= (logLev & ZCFG_DEBUGCFG_LOGLEVMASK))){
+
+			if((logLev & ZCFG_DEBUGCFG_OPTIONMASK) && !((myDebugCfgObjLevel & ZCFG_DEBUGCFG_OPTIONMASK) & logLev))
+				goto complete;
+
 			vprintf(fmt, ap);
+		}
 	}else if(ZCFG_LOG_LEVEL >= logLev){
 		vsnprintf(zcfgDebugMsgStr, MAX_DEBUGMSG_SIZE, fmt, ap);
 		syslog(logLev, "%s", zcfgDebugMsgStr);
 	}
+
+complete:
 	va_end(ap);
 	return;
 #endif
 }
 
+unsigned int zcfgMsgDebugCfgLevel(void)
+{
+	printf("%s\n", __FUNCTION__);
+	return myDebugCfgObjLevel;
+}
+
+void zcfgMsgDebugCfgLevelSet(unsigned int debugCfgLevel)
+{
+	printf("%s\n", __FUNCTION__);
+	myDebugCfgObjLevel = debugCfgLevel;
+}
+
Index: libzyutil-1.0/zyutil.h
===================================================================
--- libzyutil-1.0.orig/zyutil.h	2017-08-31 15:55:33.769767601 +0800
+++ libzyutil-1.0/zyutil.h	2017-08-31 15:55:33.777767601 +0800
@@ -44,9 +44,10 @@
 
 
 int zyUtilQueryUtilityEid(const char *name);
+
 zcfgRet_t zyUtilHandleRecvdMsgDebugCfg(const char *msg);
-//#define ZYUTIL_DEBUG_API
-void zcfgDebug(int, const char *,...);
+unsigned int zcfgMsgDebugCfgLevel(void);
+void zcfgMsgDebugCfgLevelSet(unsigned int debugCfgLevel);
 
 /* skconn */
 #include <sys/un.h>
Index: libzyutil-1.0/common.c
===================================================================
--- libzyutil-1.0.orig/common.c	2017-08-31 15:55:33.761767601 +0800
+++ libzyutil-1.0/common.c	2017-08-31 15:56:17.933768448 +0800
@@ -626,9 +626,10 @@
 
 		return ZCFG_EID_ESMD;
 	}
-	else if(!strcmp(name, "utility name")){
-
+	else if(!strcmp(name, "tr69"))
+        {
 
+		return ZCFG_EID_TR69;
 	}
 
 
