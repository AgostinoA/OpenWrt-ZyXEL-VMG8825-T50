Index: libzcfg_fe_tr98-1.0/lanDev.c
===================================================================
--- libzcfg_fe_tr98-1.0.orig/lanDev.c	2019-09-02 18:31:31.597550418 +0800
+++ libzcfg_fe_tr98-1.0/lanDev.c	2019-09-02 18:32:52.427736983 +0800
@@ -1428,7 +1428,6 @@
 	*idx = numOfBridge;
 #endif
 
-	printf("%s\n", __FUNCTION__);
 
 	IID_INIT(objIid);
 	if((ret = zcfgFeObjStructAdd(RDM_OID_ETH_LINK, &objIid, NULL)) != ZCFG_SUCCESS){
@@ -4835,6 +4834,26 @@
 		else if(!strcmp(paramList->name, "IEEE11iAuthenticationMode")) {
 			paramValue = json_object_object_get(apSecJobj, "X_ZYXEL_11iAuthentication");
 		}
+#ifdef SUPPORT_WL_WPA_EAP
+		else if(!strcmp(paramList->name, "X_ZYXEL_RadiusServerIPAddr")) {
+			paramValue = json_object_object_get(apSecJobj, "RadiusServerIPAddr");
+		}
+		else if(!strcmp(paramList->name, "X_ZYXEL_RadiusServerPort")) {
+			paramValue = json_object_object_get(apSecJobj, "RadiusServerPort");
+		}
+		else if(!strcmp(paramList->name, "X_ZYXEL_RadiusSecret")) {
+			paramValue = json_object_object_get(apSecJobj, "RadiusSecret");
+		}
+		else if(!strcmp(paramList->name, "X_ZYXEL_Preauth")) {
+			paramValue = json_object_object_get(apSecJobj, "X_ZYXEL_Preauth");
+		}
+		else if(!strcmp(paramList->name, "X_ZYXEL_ReauthInterval")) {
+			paramValue = json_object_object_get(apSecJobj, "X_ZYXEL_ReauthInterval");
+		}
+		else if(!strcmp(paramList->name, "X_ZYXEL_RekeyingInterval")) {
+			paramValue = json_object_object_get(apSecJobj, "RekeyingInterval");
+		}
+#endif
 		else if(!strcmp(paramList->name, "BasicAuthenticationMode")) {
 			paramValue = json_object_object_get(apSecJobj, "X_ZYXEL_WEPAuthentication");
 		}
@@ -4997,6 +5016,7 @@
 		}
 	}
 	else if(!strcmp(type, "11i")) {
+
 		int apAuth = 0;
 
 		tr98ParmStr_1 = json_object_get_string(json_object_object_get(tr98Jobj, "IEEE11iAuthenticationMode"));
@@ -5008,9 +5028,12 @@
 
 		if(apAuth == WPA2_PERSONAL) {
 			if(!strcmp(tr98ParmStr_1, "EAPAuthentication")) {
+#ifndef SUPPORT_WL_WPA_EAP
 				if((index == WIFI_24_PRIMARY_LINK) || (index == WIFI_5_PRIMARY_LINK))
+				{
 					return ZCFG_INVALID_PARAM_VALUE;
-
+				}
+#endif
 				json_object_object_add(apSecJobj, "ModeEnabled", json_object_new_string("WPA2-Enterprise"));
 			}else json_object_object_add(apSecJobj, "ModeEnabled", json_object_new_string("WPA2-Personal"));
 		}else if(apAuth == WPA2_ENTERPRISE) {
@@ -5019,8 +5042,12 @@
 			else json_object_object_add(apSecJobj, "ModeEnabled", json_object_new_string("WPA2-Enterprise"));
 		}else {
 			if(!strcmp(tr98ParmStr_1, "EAPAuthentication")) {
+#ifndef SUPPORT_WL_WPA_EAP
 				if((index == WIFI_24_PRIMARY_LINK) || (index == WIFI_5_PRIMARY_LINK))
+				{
 					return ZCFG_INVALID_PARAM_VALUE;
+				}
+#endif					
 
 				json_object_object_add(apSecJobj, "ModeEnabled", json_object_new_string("WPA2-Enterprise"));
 			}else if(!strcmp(tr98ParmStr_1, "PSKAuthentication")) {
@@ -5037,6 +5064,7 @@
 
 		if(!strcmp(tr98ParmStr_1, "AESEncryption"))
 			json_object_object_add(apSecJobj, "X_ZYXEL_Encryption", json_object_new_string("aes"));
+
 	}
 	else if(!strcmp(type, "WPAand11i")) {
 		int apAuth = 0, apEncryp = 0;
@@ -5089,10 +5117,8 @@
 				json_object_object_add(apSecJobj, "X_ZYXEL_Encryption", json_object_new_string("tkipaes"));
 		}
 	}
-	else {
+	else 
 		ret = ZCFG_INVALID_PARAM_VALUE;
-	}
-
 	return ret;
 }
 
@@ -5708,6 +5734,8 @@
 				if((ret = wifiSecuritySet(ssidIid.idx[0], apSecJobj, tr98Jobj, paramValue, wepKeyLength)) != ZCFG_SUCCESS) {
 					goto finish;
 				}
+				
+				const char *modeEnabled = json_object_get_string(json_object_object_get(apSecJobj, "ModeEnabled"));
 #if 0
 				if(apWpsEnable && ((ssidIid.idx[0] == WIFI_24_PRIMARY_LINK) || (ssidIid.idx[0] == WIFI_5_PRIMARY_LINK))) {
 					const char *beaconType = json_object_get_string(paramValue);
@@ -5736,6 +5764,26 @@
 			else if(!strcmp(paramList->name, "IEEE11iAuthenticationMode")) {
 				json_object_object_add(apSecJobj, "X_ZYXEL_11iAuthentication", JSON_OBJ_COPY(paramValue));
 			}
+#ifdef SUPPORT_WL_WPA_EAP
+			else if(!strcmp(paramList->name, "X_ZYXEL_RadiusServerIPAddr")) {
+				json_object_object_add(apSecJobj, "RadiusServerIPAddr", JSON_OBJ_COPY(paramValue));
+			}
+			else if(!strcmp(paramList->name, "X_ZYXEL_RadiusServerPort")) {
+				json_object_object_add(apSecJobj, "RadiusServerPort", JSON_OBJ_COPY(paramValue));
+			}
+			else if(!strcmp(paramList->name, "X_ZYXEL_RadiusSecret")) {
+				json_object_object_add(apSecJobj, "RadiusSecret", JSON_OBJ_COPY(paramValue));
+			}
+			else if(!strcmp(paramList->name, "X_ZYXEL_Preauth")) {
+				json_object_object_add(apSecJobj, "X_ZYXEL_Preauth", JSON_OBJ_COPY(paramValue));
+			}
+			else if(!strcmp(paramList->name, "X_ZYXEL_ReauthInterval")) {
+				json_object_object_add(apSecJobj, "X_ZYXEL_ReauthInterval", JSON_OBJ_COPY(paramValue));
+			}
+			else if(!strcmp(paramList->name, "X_ZYXEL_RekeyingInterval")) {
+				json_object_object_add(apSecJobj, "RekeyingInterval", JSON_OBJ_COPY(paramValue));
+			}
+#endif
 			else if(!strcmp(paramList->name, "WPAAuthenticationMode")) {
 				json_object_object_add(apSecJobj, "X_ZYXEL_WPAAuthentication", JSON_OBJ_COPY(paramValue));
 			}
@@ -5748,7 +5796,6 @@
 
 			/*End of special case*/
 		}
-
 		paramList++;
 	} /*Edn while*/
 
Index: libzcfg_fe_tr98-1.0/lanDev_parameter.h
===================================================================
--- libzcfg_fe_tr98-1.0.orig/lanDev_parameter.h	2019-09-02 18:31:31.537550416 +0800
+++ libzcfg_fe_tr98-1.0/lanDev_parameter.h	2019-09-02 18:31:31.613550419 +0800
@@ -312,6 +312,14 @@
 #ifdef ELISA_CUSTOMIZATION
 	{ "X_ZYXEL_ChanimStats", PARAMETER_ATTR_READONLY, 257, json_type_string},
 #endif
+#ifdef SUPPORT_WL_WPA_EAP
+	{ "X_ZYXEL_RadiusServerIPAddr", PARAMETER_ATTR_WRITE, 65, json_type_string},
+	{ "X_ZYXEL_RadiusServerPort", PARAMETER_ATTR_WRITE, 0, json_type_uint32},
+	{ "X_ZYXEL_RadiusSecret", PARAMETER_ATTR_WRITE | PARAMETER_ATTR_PASSWORD, 256, json_type_string},
+	{ "X_ZYXEL_Preauth", PARAMETER_ATTR_WRITE, 0, json_type_boolean},
+	{ "X_ZYXEL_ReauthInterval", PARAMETER_ATTR_WRITE, 0, json_type_uint32},
+	{ "X_ZYXEL_RekeyingInterval", PARAMETER_ATTR_WRITE, 0, json_type_uint32},
+#endif
 	{ NULL, 0, 0, 0}
 };
 
Index: libzcfg_fe_tr98-1.0/Makefile
===================================================================
--- libzcfg_fe_tr98-1.0.orig/Makefile	2019-09-02 18:31:31.549550416 +0800
+++ libzcfg_fe_tr98-1.0/Makefile	2019-09-02 18:31:31.613550419 +0800
@@ -154,6 +154,11 @@
 CFLAGS += -DZYXEL_VOICE_CONFIG_TR069_FAXT38_ENABLE_MAPPING_TO_FAXMODE
 endif
 
+ifeq ($(CONFIG_ZYXEL_SUPPORT_WL_WPA2_EAP),y)
+CFLAGS += -DSUPPORT_WL_WPA_EAP
+CFLAGS += -DWIFISECURITY_AUTH_WITH_EAP
+endif
+
 ## Wind ##
 ifeq ($(CONFIG_WIND_ITALY_CUSTOMIZATION),y)
 CFLAGS += -DZYXEL_WIND_ITALY_CUSTOMIZATION
