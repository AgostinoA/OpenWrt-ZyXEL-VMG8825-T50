Index: libzcfg_fe_tr98-1.0/l3fwd.c
===================================================================
--- libzcfg_fe_tr98-1.0.orig/l3fwd.c	2014-05-29 09:54:40.371340710 +0800
+++ libzcfg_fe_tr98-1.0/l3fwd.c	2014-05-29 09:56:01.529517761 +0800
@@ -70,11 +70,10 @@
 {
 	zcfgRet_t ret;
 	uint8_t idx = 0;
-	objIndex_t objIid;
-	struct json_object *ipv4FwdObj = NULL;
+	objIndex_t objIid, ipifaceIid;
+	struct json_object *ipv4FwdObj = NULL, *ipIfaceJobj = NULL;
 	struct json_object *paramValue = NULL;
 	tr98Parameter_t *paramList = NULL;
-	char devIpIface[48] = {0};
 	char iface[40] = {0};
 	char lowerLayer[32] = {0};
 	char tr98ObjName[TR98_MAX_OBJ_NAME_LENGTH] = {0};
@@ -98,12 +97,23 @@
 		/*special case*/
 		if(!strcmp(paramList->name, "Interface")) {
 			paramValue = json_object_object_get(ipv4FwdObj, paramList->name);
-			strcpy(devIpIface, json_object_get_string(paramValue));
-			sscanf(devIpIface, "Device.%s", iface);
+			strcpy(iface, json_object_get_string(paramValue));
+
+			IID_INIT(ipifaceIid);
+			ipifaceIid.level = 1;
+			sscanf(iface, "IP.Interface.%hhu", &ipifaceIid.idx[0]);
+			if((ret = zcfgFeObjJsonGetWithoutUpdate(RDM_OID_IP_IFACE, &ipifaceIid, &ipIfaceJobj)) != ZCFG_SUCCESS) {
+				zcfgLog(ZCFG_LOG_ERR, "%s : Get IP.Interface Fail\n", __FUNCTION__);
+				printf("%s : Get IP.Interface Fail\n", __FUNCTION__);
+			}
+			else {
+				strcpy(lowerLayer, json_object_get_string(json_object_object_get(ipIfaceJobj, "LowerLayers")));
+
+				if(strstr(lowerLayer, "PPP.I") != NULL) {
+					strcpy(iface, lowerLayer);
+				}
 
-			zcfgFeTr181IfaceStackLowerLayerGet(iface, lowerLayer);
-			if(strstr(lowerLayer, "PPP.Interface") != NULL) {
-				strcpy(iface, lowerLayer);
+				json_object_put(ipIfaceJobj);
 			}
 
 			zcfgFe181To98MappingNameGet(iface, tr98ObjName);
@@ -159,7 +169,6 @@
 	char iface[40] = {0};
 	char tr98ConnObjName[TR98_MAX_OBJ_NAME_LENGTH] = {0};
 	char higherLayer[32] = {0};
-	char devIpIface[48] = {0};
 
 	printf("%s : Enter\n", __FUNCTION__);
 
@@ -197,8 +206,7 @@
 						strcpy(iface, higherLayer);
 					}
 					
-					sprintf(devIpIface, "Device.%s", iface);
-					json_object_object_add(ipv4FwdObj, paramList->name, json_object_new_string(devIpIface));
+					json_object_object_add(ipv4FwdObj, paramList->name, json_object_new_string(iface));
 				}
 			}
 			paramList++;
