Index: libzcfg_fe_tr98-1.0/lanDev.c
===================================================================
--- libzcfg_fe_tr98-1.0.orig/lanDev.c	2015-10-22 16:31:13.105663118 +0800
+++ libzcfg_fe_tr98-1.0/lanDev.c	2015-10-22 16:30:45.791616100 +0800
@@ -18,8 +18,10 @@
 #define WIFI_5_PRIMARY_LINK 5
 #define WPA2_ENTERPRISE 1
 #define WPA2_PERSONAL  2
+
 #define TKIPAES 1
 #define AES 2
+#define TKIP 3
 
 #ifdef SOL_TR69_NO_LAN_HOST
 #include "zcfg_net.h"
@@ -81,10 +83,10 @@
 		\"BeaconType\": { \"Basic\": { }, \"WPA\": { }, \"11i\": { }, \"WPAand11i\": { }, \"Emp\": { } },\
 		\"DeviceOperationMode\": { \"InfrastructureAccessPoint\": { }, \"Emp\": { } },\
 		\"BasicEncryptionModes\": { \"None\": { }, \"WEPEncryption\": { } },\
-		\"BasicAuthenticationMode\": { \"None\": { } },\
-  		\"WPAEncryptionModes\": { \"TKIPEncryption\": { }, \"TKIPandAESEncryption\": { }, \"Emp\": { } },\
+		\"BasicAuthenticationMode\": { \"None\": { }, \"SharedAuthentication\": { } },\
+  		\"WPAEncryptionModes\": { \"AESEncryption\": { }, \"TKIPEncryption\": { }, \"TKIPandAESEncryption\": { }, \"Emp\": { } },\
   		\"WPAAuthenticationMode\": { \"PSKAuthentication\": { }, \"Emp\": { } },\
-  		\"IEEE11iEncryptionModes\": { \"AESEncryption\": { }, \"TKIPandAESEncryption\": { }, \"Emp\": { } },\
+  		\"IEEE11iEncryptionModes\": { \"AESEncryption\": { }, \"TKIPEncryption\": { }, \"TKIPandAESEncryption\": { }, \"Emp\": { } },\
   		\"IEEE11iAuthenticationMode\": { \"PSKAuthentication\": { }, \"Emp\": { } },\
 		\"X_ZYXEL_OperatingFrequencyBand\": { \"2.4GHz\": { }, \"5GHz\": { } },\
 		\"X_ZYXEL_OperatingChannelBandwidth\": { \"20MHz\": { }, \"40MHz\": { }, \"80MHz\": { } },\
@@ -4196,26 +4198,39 @@
 		tr98ParmStr_1 = json_object_get_string(json_object_object_get(tr98Jobj, "IEEE11iEncryptionModes"));
 		tr98ParmStr_2 = json_object_get_string(json_object_object_get(tr98Jobj, "WPAEncryptionModes"));
 
-		if(strcmp(tr98ParmStr_2, "TKIPandAESEncryption") && strcmp(tr98ParmStr_2, "AESEncryption") &&
-			strcmp(tr98ParmStr_1, "TKIPandAESEncryption") && strcmp(tr98ParmStr_1, "AESEncryption"))
-			return ZCFG_INVALID_PARAM_VALUE;
+		//if(strcmp(tr98ParmStr_2, "TKIPandAESEncryption") && strcmp(tr98ParmStr_2, "AESEncryption") &&
+		//	strcmp(tr98ParmStr_1, "TKIPandAESEncryption") && strcmp(tr98ParmStr_1, "AESEncryption"))
+		//	return ZCFG_INVALID_PARAM_VALUE;
 
 		if(!strcmp(json_object_get_string(json_object_object_get(apSecJobj, "X_ZYXEL_Encryption")), "aes"))
 			apEncryp = AES;
 		else if(!strcmp(json_object_get_string(json_object_object_get(apSecJobj, "X_ZYXEL_Encryption")), "tkipaes"))
 			apEncryp = TKIPAES;
+		else if(!strcmp(json_object_get_string(json_object_object_get(apSecJobj, "X_ZYXEL_Encryption")), "tkip"))
+			apEncryp = TKIP;
 
 		if(apEncryp == AES) {
 			if(!strcmp(tr98ParmStr_1, "TKIPandAESEncryption") || !strcmp(tr98ParmStr_2, "TKIPandAESEncryption"))
 				json_object_object_add(apSecJobj, "X_ZYXEL_Encryption", json_object_new_string("tkipaes"));
+			else if(!strcmp(tr98ParmStr_1, "TKIPEncryption") || !strcmp(tr98ParmStr_2, "TKIPEncryption"))
+				json_object_object_add(apSecJobj, "X_ZYXEL_Encryption", json_object_new_string("tkip"));
 		}else if(apEncryp == TKIPAES) {
 			if(!strcmp(tr98ParmStr_1, "AESEncryption") || !strcmp(tr98ParmStr_2, "AESEncryption"))
 				json_object_object_add(apSecJobj, "X_ZYXEL_Encryption", json_object_new_string("aes"));
+			else if(!strcmp(tr98ParmStr_1, "TKIPEncryption") || !strcmp(tr98ParmStr_2, "TKIPEncryption"))
+				json_object_object_add(apSecJobj, "X_ZYXEL_Encryption", json_object_new_string("tkip"));
+		}else if(apEncryp == TKIP) {
+			if(!strcmp(tr98ParmStr_1, "AESEncryption") || !strcmp(tr98ParmStr_2, "AESEncryption"))
+				json_object_object_add(apSecJobj, "X_ZYXEL_Encryption", json_object_new_string("aes"));
+			else if(!strcmp(tr98ParmStr_1, "TKIPandAESEncryption") || !strcmp(tr98ParmStr_2, "TKIPandAESEncryption"))
+				json_object_object_add(apSecJobj, "X_ZYXEL_Encryption", json_object_new_string("tkipaes"));
 		}else {
 			if(!strcmp(tr98ParmStr_1, "AESEncryption")) 
 				json_object_object_add(apSecJobj, "X_ZYXEL_Encryption", json_object_new_string("aes"));
 			else if(!strcmp(tr98ParmStr_1, "TKIPandAESEncryption"))
 				json_object_object_add(apSecJobj, "X_ZYXEL_Encryption", json_object_new_string("tkipaes"));
+			else if(!strcmp(tr98ParmStr_1, "TKIPEncryption"))
+				json_object_object_add(apSecJobj, "X_ZYXEL_Encryption", json_object_new_string("tkip"));
 		}
 	}
 	else {
@@ -4538,7 +4553,7 @@
 		else {
 			if(!strcmp(paramList->name, "Channel")) {
 				if((ret = lanDevWlanConfirmRadio(&apIid, tr98Jobj, radioJobj)) != ZCFG_SUCCESS)
-					return ret;
+					goto finish;
 			}
 			tr181ParamValue = json_object_object_get(radioJobj, paramList->name);
 			if(tr181ParamValue != NULL) {
@@ -4566,14 +4581,7 @@
 					continue;
 				}
 			}
-#if 0
-			zcfgRet_t paramSecured = zcfgFe98ParamGuard(paramGuardObj, (const char *)paramList->name, paramValue);
-			if(paramSecured == ZCFG_INVALID_PARAM_VALUE){
-				printf("%s: invalid parameter value\n", __FUNCTION__);
-				ret = paramSecured;
-				goto finish;
-			}
-#endif
+
 			/*special case*/
 			if(!strcmp(paramList->name, "BeaconType")) {
 				int wepKeyLength = (wepKeyLen > wepKey64Len) ? wepKeyLen : wepKey64Len;
