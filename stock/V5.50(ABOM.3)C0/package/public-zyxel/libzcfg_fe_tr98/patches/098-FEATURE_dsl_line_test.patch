Index: libzcfg_fe_tr98-1.0/wanDev.c
===================================================================
--- libzcfg_fe_tr98-1.0.orig/wanDev.c	2015-01-16 23:43:20.767102578 +0800
+++ libzcfg_fe_tr98-1.0/wanDev.c	2015-01-16 23:41:43.941221100 +0800
@@ -52,6 +52,9 @@
 
 	return ZCFG_SUCCESS;
 }
+
+#define LT_PARM_EMPTY  "None"
+
 /* InternetGatewayDevice.WANDevice.1.WANDSLDiagnostics */
 zcfgRet_t WANDslDiagObjGet(char *tr98FullPathName, int handler, struct json_object **tr98Jobj, bool updateFlag)
 {
@@ -63,7 +66,7 @@
 	rdm_DslDiagAdslLineTest_t *DslDiagObj = NULL;
 	struct json_object *dslDiagJObj = NULL, *tr181ParamObj = NULL;
 	tr98Parameter_t *paramList = NULL;
-	char *tr181ParamStr = NULL;
+	char *tr181ParamStr = NULL, *tr181ParamStateStr = NULL;
 	
 	zcfgLog(ZCFG_LOG_INFO, "%s : Enter\n", __FUNCTION__);
 	if(!strstr(tr98FullPathName, ".WANDevice")) return ZCFG_NO_SUCH_OBJECT;
@@ -80,24 +83,33 @@
 		
 	IID_INIT(objIid);
 
-	//if((ret = feObjStructGet(RDM_OID_DSL_DIAG_ADSL_LINE_TEST, &objIid, (void **)&DslDiagObj, updateFlag)) == ZCFG_SUCCESS){
-	//sscanf(tr181Obj, "DSL.Channel.%hhu", &objIid.idx[0]);
-	//objIid.idx[0] = 1;
-	//objIid.level = 1;
+	objIid.idx[0] = 1;
 	if((ret = zcfgFeObjJsonGet(RDM_OID_DSL_DIAG_ADSL_LINE_TEST, &objIid, &dslDiagJObj)) != ZCFG_SUCCESS){
-		//zcfgLog(ZCFG_LOG_ERR, "%s : retrieve ADSLLineTest object Fail\n", __FUNCTION__);
+		zcfgLog(ZCFG_LOG_ERR, "%s : retrieve ADSLLineTest object Fail\n", __FUNCTION__);
 		return ZCFG_INTERNAL_ERROR;
 	}
 	tr181ParamStr = json_object_get_string(json_object_object_get(dslDiagJObj, "Interface"));
-	if(strstr(tr181ParamStr, tr181Obj)) {
-		tr181ParamStr = NULL;
+
+	printf("%s: tr181Obj %s\n", __FUNCTION__, tr181Obj);
+
+	if(!tr181ParamStr) {
+		printf("%s: tr181ParamStr 0\n", __FUNCTION__);
+		usleep(10000);
+		strstr(tr181ParamStr, tr181Obj);
+	}
+	
+	printf("%s: tr181ParamStr %s\n", __FUNCTION__, tr181ParamStr);
+	usleep(10000);
+
+	if(tr181ParamStr && strstr(tr181ParamStr, tr181Obj)) {
 		tr181ParamObj = json_object_object_get(dslDiagJObj, "DiagnosticsState");
-		tr181ParamStr = json_object_get_string(tr181ParamObj);
-	}else tr181ParamStr = NULL;
-	if(strstr(tr181ParamStr, "Complete")) {
+		tr181ParamStateStr = json_object_get_string(tr181ParamObj);
+	}
+
+	if(tr181ParamStateStr && strstr(tr181ParamStateStr, "Complete")) {
 		paramList = tr98Obj[handler].parameter;
 		json_object_object_add(*tr98Jobj, paramList->name, JSON_OBJ_COPY(tr181ParamObj));
-		paramList += 2;
+		paramList ++;
 		while(paramList->name != NULL) {
 			struct json_object *paramValue = json_object_object_get(dslDiagJObj, paramList->name);
 			if(paramValue) json_object_object_add(*tr98Jobj, paramList->name, JSON_OBJ_COPY(paramValue));
@@ -105,9 +117,12 @@
 			paramList++;
 		}
 	}else {
-		if(!tr181ParamStr) {
+		if(!tr181ParamStateStr) {
 			json_object_object_add(*tr98Jobj, "LoopDiagnosticsState", json_object_new_string("None"));
-		}else json_object_object_add(*tr98Jobj, "LoopDiagnosticsState", JSON_OBJ_COPY(tr181ParamObj));
+		}else{
+			if(tr181ParamObj) json_object_object_add(*tr98Jobj, "LoopDiagnosticsState", JSON_OBJ_COPY(tr181ParamObj));
+			else json_object_object_add(*tr98Jobj, "LoopDiagnosticsState", json_object_new_string("None"));
+		}
 
 		{
 			DslDiagObj = (rdm_DslDiagAdslLineTest_t *)malloc(sizeof(rdm_DslDiagAdslLineTest_t));
@@ -122,32 +137,30 @@
 			json_object_object_add(*tr98Jobj, "HLINGus", json_object_new_int(DslDiagObj->HLINGus));
 			json_object_object_add(*tr98Jobj, "HLOGGds", json_object_new_int(DslDiagObj->HLOGGds));
 			json_object_object_add(*tr98Jobj, "HLOGGus", json_object_new_int(DslDiagObj->HLOGGus));
-			json_object_object_add(*tr98Jobj, "HLOGpsds", json_object_new_string(DslDiagObj->HLOGpsds));
-			json_object_object_add(*tr98Jobj, "HLOGpsus", json_object_new_string(DslDiagObj->HLOGpsus));
+			json_object_object_add(*tr98Jobj, "HLOGpsds", json_object_new_string(LT_PARM_EMPTY));
+			json_object_object_add(*tr98Jobj, "HLOGpsus", json_object_new_string(LT_PARM_EMPTY));
 			json_object_object_add(*tr98Jobj, "HLOGMTds", json_object_new_int(DslDiagObj->HLOGMTds));
 			json_object_object_add(*tr98Jobj, "HLOGMTus", json_object_new_int(DslDiagObj->HLOGMTus));
-			json_object_object_add(*tr98Jobj, "LATNpbds", json_object_new_string(DslDiagObj->LATNpbds));
-			json_object_object_add(*tr98Jobj, "LATNpbus", json_object_new_string(DslDiagObj->LATNpbus));
-			json_object_object_add(*tr98Jobj, "SATNds", json_object_new_string(DslDiagObj->SATNds));
-			json_object_object_add(*tr98Jobj, "SATNus", json_object_new_string(DslDiagObj->SATNus));
-			json_object_object_add(*tr98Jobj, "HLINpsds", json_object_new_string(DslDiagObj->HLINpsds));
-			json_object_object_add(*tr98Jobj, "HLINpsus", json_object_new_string(DslDiagObj->HLINpsus));
+			json_object_object_add(*tr98Jobj, "LATNpbds", json_object_new_string(LT_PARM_EMPTY));
+			json_object_object_add(*tr98Jobj, "LATNpbus", json_object_new_string(LT_PARM_EMPTY));
+			json_object_object_add(*tr98Jobj, "SATNds", json_object_new_string(LT_PARM_EMPTY));
+			json_object_object_add(*tr98Jobj, "SATNus", json_object_new_string(LT_PARM_EMPTY));
+			json_object_object_add(*tr98Jobj, "HLINpsds", json_object_new_string(LT_PARM_EMPTY));
+			json_object_object_add(*tr98Jobj, "HLINpsus", json_object_new_string(LT_PARM_EMPTY));
 			json_object_object_add(*tr98Jobj, "QLNGds", json_object_new_int(DslDiagObj->QLNGds));
 			json_object_object_add(*tr98Jobj, "QLNGus", json_object_new_int(DslDiagObj->QLNGus));
-			json_object_object_add(*tr98Jobj, "QLNpsds", json_object_new_string(DslDiagObj->QLNpsds));
-			json_object_object_add(*tr98Jobj, "QLNpsus", json_object_new_string(DslDiagObj->QLNpsus));
+			json_object_object_add(*tr98Jobj, "QLNpsds", json_object_new_string(LT_PARM_EMPTY));
+			json_object_object_add(*tr98Jobj, "QLNpsus", json_object_new_string(LT_PARM_EMPTY));
 			json_object_object_add(*tr98Jobj, "QLNMTds", json_object_new_int(DslDiagObj->QLNMTds));
 			json_object_object_add(*tr98Jobj, "QLNMTus", json_object_new_int(DslDiagObj->QLNMTus));
 			json_object_object_add(*tr98Jobj, "SNRGds", json_object_new_int(DslDiagObj->SNRGds));
 			json_object_object_add(*tr98Jobj, "SNRGus", json_object_new_int(DslDiagObj->SNRGus));
-			json_object_object_add(*tr98Jobj, "SNRpsds", json_object_new_string(DslDiagObj->SNRpsds));
-			json_object_object_add(*tr98Jobj, "SNRpsus", json_object_new_string(DslDiagObj->SNRpsus));
+			json_object_object_add(*tr98Jobj, "SNRpsds", json_object_new_string(LT_PARM_EMPTY));
+			json_object_object_add(*tr98Jobj, "SNRpsus", json_object_new_string(LT_PARM_EMPTY));
 			json_object_object_add(*tr98Jobj, "SNRMTds", json_object_new_int(DslDiagObj->SNRMTds));
 			json_object_object_add(*tr98Jobj, "SNRMTus", json_object_new_int(DslDiagObj->SNRMTus));
-			json_object_object_add(*tr98Jobj, "BITSpsds", json_object_new_string(DslDiagObj->BITSpsds));
-			json_object_object_add(*tr98Jobj, "BITSpsus", json_object_new_string(DslDiagObj->BITSpsus));
-//			json_object_object_add(*tr98Jobj, "GAINSpsds", json_object_new_string(DslDiagObj->GAINSpsds));
-			//zcfgFeObjStructFree(DslDiagObj);
+			json_object_object_add(*tr98Jobj, "BITSpsds", json_object_new_string(LT_PARM_EMPTY));
+			json_object_object_add(*tr98Jobj, "BITSpsus", json_object_new_string(LT_PARM_EMPTY));
 			free(DslDiagObj);
 		}
 	}
@@ -165,6 +178,7 @@
 	objIndex_t objIid;
 	struct json_object *DslDiagObj = NULL;
 	struct json_object *tr98ParamObj = NULL;
+	struct json_object *tmpObj = NULL;
 	char *tr98ParamStr = NULL;
 	char *tr181ParamStr = NULL;
 
@@ -185,7 +199,7 @@
 		
 	
 	if(!(tr98ParamObj = json_object_object_get(tr98Jobj, "LoopDiagnosticsState"))) {
-		//zcfgLog(ZCFG_LOG_ERR, "%s : retrieve tr98 LoopDiagnosticsState Fail\n", __FUNCTION__);
+		zcfgLog(ZCFG_LOG_ERR, "%s : retrieve tr98 LoopDiagnosticsState Fail\n", __FUNCTION__);
 		return ZCFG_INVALID_ARGUMENTS;
 	}
 
@@ -193,9 +207,7 @@
 	if(!strstr(tr98ParamStr, "Requested")) return ZCFG_INVALID_PARAM_VALUE;
 
 	IID_INIT(objIid);
-	//objIid.idx[0] = 1;
-	//objIid.level = 1;
-	//sscanf(tr181Obj, "DSL.Channel.%hhu", &objIid.idx[0]);
+	objIid.idx[0] = 1;
 	if((ret = zcfgFeObjJsonGet(RDM_OID_DSL_DIAG_ADSL_LINE_TEST, &objIid, &DslDiagObj)) != ZCFG_SUCCESS){
 		//zcfgLog(ZCFG_LOG_ERR, "%s : retrieve ADSLLineTest object Fail\n", __FUNCTION__);
 		return ZCFG_INTERNAL_ERROR;
@@ -204,27 +216,28 @@
 	tr181ParamStr = json_object_get_string(json_object_object_get(DslDiagObj, "DiagnosticsState"));
 	if((!tr181ParamStr) || strstr(tr181ParamStr, "Requested")) {
 		zcfgLog(ZCFG_LOG_DEBUG, "%s : DSL.Diagnostics is on processing\n", __FUNCTION__);
-		printf("%s : DSL.Diagnostics is on processing\n", __FUNCTION__);
 		zcfgFeJsonObjFree(DslDiagObj);
 		return ZCFG_REQUEST_REJECT;
 	}
 	json_object_object_add(DslDiagObj, "DiagnosticsState", json_object_new_string("Requested"));
 	json_object_object_add(DslDiagObj, "Interface", json_object_new_string(tr181Obj));
 
-	ret = zcfgFeObjJsonSet(RDM_OID_DSL_DIAG_ADSL_LINE_TEST, &objIid, DslDiagObj, NULL);
-	if((ret != ZCFG_SUCCESS) && (ret != ZCFG_DELAY_APPLY)) {
-		zcfgLog(ZCFG_LOG_ERR, "%s : Set DSL.Diagnostics Fail\n", __FUNCTION__);
-		printf("%s: Set DSL.Diagnostics Fail\n", __FUNCTION__);
-		printf("%d \n", ret);
-	}
-	else {
-		ret = ZCFG_SUCCESS;
-		zcfgLog(ZCFG_LOG_DEBUG, "%s : Set DSL.Diagnostics Success\n", __FUNCTION__);
-		printf("%s: Set DSL.Diagnostics Success\n", __FUNCTION__);
+	if(multiJobj) {
+		tmpObj = DslDiagObj;
+		DslDiagObj = NULL;
+		DslDiagObj = zcfgFeJsonMultiObjAppend(RDM_OID_DSL_DIAG_ADSL_LINE_TEST, &objIid, multiJobj, tmpObj);
+		json_object_put(tmpObj);
+	}else {
+		ret = zcfgFeObjJsonSet(RDM_OID_DSL_DIAG_ADSL_LINE_TEST, &objIid, DslDiagObj, NULL);
+		if((ret != ZCFG_SUCCESS) && (ret != ZCFG_DELAY_APPLY)) {
+			zcfgLog(ZCFG_LOG_ERR, "%s : Set DSL.Diagnostics Fail\n", __FUNCTION__);
+		}
+		else {
+			zcfgLog(ZCFG_LOG_DEBUG, "%s : Set DSL.Diagnostics Success\n", __FUNCTION__);
+		}
+		zcfgFeJsonObjFree(DslDiagObj);
 	}
 
-	zcfgFeJsonObjFree(DslDiagObj);
-
 	return ret;
 }
 
