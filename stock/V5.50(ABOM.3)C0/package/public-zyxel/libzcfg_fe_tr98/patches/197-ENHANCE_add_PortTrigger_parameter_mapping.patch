Index: libzcfg_fe_tr98-1.0/lanDev.c
===================================================================
--- libzcfg_fe_tr98-1.0.orig/lanDev.c	2015-08-19 17:46:42.086798310 +0800
+++ libzcfg_fe_tr98-1.0/lanDev.c	2015-08-19 17:51:30.762805975 +0800
@@ -503,6 +503,104 @@
 	return ZCFG_SUCCESS;
 }
 
+zcfgRet_t lanDevHostsObjNotify(char *tr98ObjName, char *tr181ParamName, struct json_object *tr181ParamVal, int handler, struct json_object **tr98NotifyInfo)
+{
+	char tr98Notify[256] = {0};
+	tr98Parameter_t *paramList = NULL;
+	char *attrParamNamePtr = NULL;
+	
+	zcfgLog(ZCFG_LOG_INFO, "Enter %s\n", __FUNCTION__);
+
+	if(*tr98NotifyInfo == NULL) {
+		*tr98NotifyInfo = json_object_new_object();
+	}
+
+	paramList = tr98Obj[handler].parameter;
+	while(paramList->name != NULL) {
+		if(strcmp(paramList->name, tr181ParamName)){
+			paramList++;
+			continue;
+		}
+		attrParamNamePtr = tr181ParamName;
+		break;
+	}
+
+	if(attrParamNamePtr && strlen(attrParamNamePtr) > 0) {
+		sprintf(tr98Notify, "%s.%s", tr98ObjName, attrParamNamePtr);
+		json_object_object_add(*tr98NotifyInfo, tr98Notify, JSON_OBJ_COPY(tr181ParamVal));
+	}
+
+	return ZCFG_SUCCESS;
+}
+
+int lanDevHostsObjAttrGet(char *tr98FullPathName, int handler, char *paramName)
+{
+	char mapObj[128] = {0};
+	int attrValue = ZCFG_NO_SUCH_PARAMETER;
+	tr98Parameter_t *paramList = NULL;
+
+	zcfgLog(ZCFG_LOG_DEBUG, "Enter %s\n", __FUNCTION__);
+
+	if(zcfgFe98To181MappingNameGet(tr98FullPathName, mapObj) != ZCFG_SUCCESS) {
+		return ZCFG_INVALID_OBJECT;
+	}
+	
+	paramList = tr98Obj[handler].parameter;
+	while(paramList->name != NULL) {
+		if(strcmp(paramList->name, paramName)){
+			paramList++;
+			continue;
+		}
+		attrValue = zcfgFeParamAttrGetByName(RDM_OID_HOSTS, paramList->name);
+		
+		if(attrValue < 0 ) {
+			attrValue = 0;
+		}
+		break;
+	}
+	
+	return attrValue;
+}
+
+zcfgRet_t lanDevHostsObjAttrSet(char *tr98FullPathName, int handler, char *paramName, int newNotify, struct json_object *multiAttrJobj)
+{
+	zcfgRet_t ret = ZCFG_SUCCESS;
+	int attrValue = ZCFG_NO_SUCH_PARAMETER;
+	uint32_t oid = 0;
+	tr98Parameter_t *paramList = NULL;
+
+	zcfgLog(ZCFG_LOG_INFO, "Enter %s\n", __FUNCTION__);
+	
+	paramList = tr98Obj[handler].parameter;
+	while(paramList->name != NULL) {
+		if(strcmp(paramList->name, paramName)){
+			paramList++;
+			continue;
+		}
+
+		if((ret = zcfgFeTr98ParamAttrChk(paramList->attr, newNotify)) != ZCFG_SUCCESS)
+			return ret;
+
+		attrValue = zcfgFeParamAttrGetByName(oid, paramList->name);
+		break;
+	}
+
+	if(attrValue >= 0) {
+		/*Write new parameter attribute from tr98 object to tr181 objects*/
+		attrValue = zcfgFeNotifyAttrValSet(attrValue, newNotify);
+		ret = zcfgFeMultiParamAttrAppend(oid, multiAttrJobj, paramList->name, attrValue);
+
+		if( ret != ZCFG_SUCCESS){
+			zcfgLog(ZCFG_LOG_ERR, "%s(): set %d %s attribute fail\n", __FUNCTION__, oid, paramList->name);
+		}
+	}
+	else {
+		ret = ZCFG_INVALID_ARGUMENTS;
+	}
+
+	return ret;
+}
+
 /*  TR98 Object Name : InternetGatewayDevice.LANDevice.i.Hosts.Host.i
 
     Related object in TR181:
@@ -727,6 +825,104 @@
 	return ZCFG_SUCCESS;
 }
 
+zcfgRet_t lanDevHostObjNotify(char *tr98ObjName, char *tr181ParamName, struct json_object *tr181ParamVal, int handler, struct json_object **tr98NotifyInfo)
+{
+	char tr98Notify[256] = {0};
+	tr98Parameter_t *paramList = NULL;
+	char *attrParamNamePtr = NULL;
+	
+	zcfgLog(ZCFG_LOG_INFO, "Enter %s\n", __FUNCTION__);
+
+	if(*tr98NotifyInfo == NULL) {
+		*tr98NotifyInfo = json_object_new_object();
+	}
+
+	paramList = tr98Obj[handler].parameter;
+	while(paramList->name != NULL) {
+		if(strcmp(paramList->name, tr181ParamName)){
+			paramList++;
+			continue;
+		}
+		attrParamNamePtr = tr181ParamName;
+		break;
+	}
+
+	if(attrParamNamePtr && strlen(attrParamNamePtr) > 0) {
+		sprintf(tr98Notify, "%s.%s", tr98ObjName, attrParamNamePtr);
+		json_object_object_add(*tr98NotifyInfo, tr98Notify, JSON_OBJ_COPY(tr181ParamVal));
+	}
+
+	return ZCFG_SUCCESS;
+}
+
+int lanDevHostObjAttrGet(char *tr98FullPathName, int handler, char *paramName)
+{
+	char mapObj[128] = {0};
+	int attrValue = ZCFG_NO_SUCH_PARAMETER;
+	tr98Parameter_t *paramList = NULL;
+
+	zcfgLog(ZCFG_LOG_DEBUG, "Enter %s\n", __FUNCTION__);
+
+	if(zcfgFe98To181MappingNameGet(tr98FullPathName, mapObj) != ZCFG_SUCCESS) {
+		return ZCFG_INVALID_OBJECT;
+	}
+	
+	paramList = tr98Obj[handler].parameter;
+	while(paramList->name != NULL) {
+		if(strcmp(paramList->name, paramName)){
+			paramList++;
+			continue;
+		}
+		attrValue = zcfgFeParamAttrGetByName(RDM_OID_HOSTS_HOST, paramList->name);
+		
+		if(attrValue < 0 ) {
+			attrValue = 0;
+		}
+		break;
+	}
+	
+	return attrValue;
+}
+
+zcfgRet_t lanDevHostObjAttrSet(char *tr98FullPathName, int handler, char *paramName, int newNotify, struct json_object *multiAttrJobj)
+{
+	zcfgRet_t ret = ZCFG_SUCCESS;
+	int attrValue = ZCFG_NO_SUCH_PARAMETER;
+	uint32_t oid = 0;
+	tr98Parameter_t *paramList = NULL;
+
+	zcfgLog(ZCFG_LOG_INFO, "Enter %s\n", __FUNCTION__);
+	
+	paramList = tr98Obj[handler].parameter;
+	while(paramList->name != NULL) {
+		if(strcmp(paramList->name, paramName)){
+			paramList++;
+			continue;
+		}
+
+		if((ret = zcfgFeTr98ParamAttrChk(paramList->attr, newNotify)) != ZCFG_SUCCESS)
+			return ret;
+
+		attrValue = zcfgFeParamAttrGetByName(oid, paramList->name);
+		break;
+	}
+
+	if(attrValue >= 0) {
+		/*Write new parameter attribute from tr98 object to tr181 objects*/
+		attrValue = zcfgFeNotifyAttrValSet(attrValue, newNotify);
+		ret = zcfgFeMultiParamAttrAppend(oid, multiAttrJobj, paramList->name, attrValue);
+
+		if( ret != ZCFG_SUCCESS){
+			zcfgLog(ZCFG_LOG_ERR, "%s(): set %d %s attribute fail\n", __FUNCTION__, oid, paramList->name);
+		}
+	}
+	else {
+		ret = ZCFG_INVALID_ARGUMENTS;
+	}
+
+	return ret;
+}
+
 /*  TR98 Object Name : InternetGatewayDevice.LANDevice.i
 
     Related object in TR181:
Index: libzcfg_fe_tr98-1.0/lanDev.h
===================================================================
--- libzcfg_fe_tr98-1.0.orig/lanDev.h	2015-08-19 17:46:41.490798295 +0800
+++ libzcfg_fe_tr98-1.0/lanDev.h	2015-08-19 17:51:44.846806349 +0800
@@ -35,7 +35,15 @@
 
 /*Handler Function*/
 extern zcfgRet_t lanDevHostsObjGet(char *tr98FullPathName, int handler, struct json_object **tr98Jobj, bool updateFlag);
+extern zcfgRet_t lanDevHostsObjNotify(char *, char *, struct json_object *, int, struct json_object **);
+extern int lanDevHostsObjAttrGet(char *, int, char *);
+extern zcfgRet_t lanDevHostsObjAttrSet(char *, int, char *, int , struct json_object *);
+
 extern zcfgRet_t lanDevHostObjGet(char *tr98FullPathName, int handler, struct json_object **tr98Jobj, bool updateFlag);
+extern zcfgRet_t lanDevHostObjNotify(char *, char *, struct json_object *, int, struct json_object **);
+extern int lanDevHostObjAttrGet(char *, int, char *);
+extern zcfgRet_t lanDevHostObjAttrSet(char *, int, char *, int , struct json_object *);
+
 
 extern zcfgRet_t lanDevObjGet(char *tr98FullPathName, int handler, struct json_object **tr98Jobj, bool updateFlag);
 extern zcfgRet_t lanDevObjAdd(char *tr98FullPathName, int *idx);
Index: libzcfg_fe_tr98-1.0/wanDev.c
===================================================================
--- libzcfg_fe_tr98-1.0.orig/wanDev.c	2015-08-19 17:46:42.114798311 +0800
+++ libzcfg_fe_tr98-1.0/wanDev.c	2015-08-19 17:52:28.546807509 +0800
@@ -6110,6 +6110,352 @@
 }
 
 /*  
+ *   TR98 Object Name : InternetGatewayDevice.WANDevice.i.WANConnectionDevice.i.WANIPConnection.i.X_ZYXEL_PortTriggering.i
+ *                      InternetGatewayDevice.WANDevice.i.WANConnectionDevice.i.WANPPPConnection.i.X_ZYXEL_PortTriggering.i
+ *
+ *   Related object in TR181:
+ *   Device.NAT.X_ZYXEL_PortTriggering.i
+ */
+zcfgRet_t WANPortTriggerObjGet(char *tr98FullPathName, int handler, struct json_object **tr98Jobj, bool updateFlag)
+{
+	zcfgRet_t ret = ZCFG_SUCCESS;
+	char natPortTrigger[32] = {0};
+	objIndex_t objIid;
+	struct json_object *triggerJobj = NULL;
+	struct json_object *paramValue = NULL;
+	tr98Parameter_t *paramList = NULL;
+
+	printf("%s : Enter\n", __FUNCTION__);
+
+	if((ret = zcfgFe98To181MappingNameGet(tr98FullPathName, natPortTrigger)) != ZCFG_SUCCESS) {
+		/*  The instance number of X_ZYXEL_PortTriggering.i will be continuous because of the tr98 to tr181 mapping table. 
+		 *  Therefore, just return "ZCFG_NO_MORE_INSTANCE" when there is no related mapping of tr181 for
+		 *  this PortMapping object.
+		 */	
+		return ret;
+	}
+
+	IID_INIT(objIid);
+	objIid.level = 1;
+	sscanf(natPortTrigger, "NAT.X_ZYXEL_PortTriggering.%hhu", &objIid.idx[0]);
+
+	if((ret = feObjJsonGet(RDM_OID_NAT_PORT_TRIGGERING, &objIid, &triggerJobj, updateFlag)) != ZCFG_SUCCESS)
+		return ret;
+
+	/*fill up tr98 object from related tr181 objects*/
+	*tr98Jobj = json_object_new_object();
+	paramList = tr98Obj[handler].parameter;
+	while(paramList->name != NULL) {
+		/*Write parameter value from tr181 objects to tr98 object*/		
+		paramValue = json_object_object_get(triggerJobj, paramList->name);
+		if(paramValue != NULL) {
+			json_object_object_add(*tr98Jobj, paramList->name, JSON_OBJ_COPY(paramValue));
+			paramList++;
+			continue;
+		}
+		
+		/*Not defined in tr181, give it a default value*/
+#if TR98_MAPPING_DEBUG
+		printf("Can't find parameter %s in TR181\n", paramList->name);
+#endif
+		paramList++;
+	}	
+
+	json_object_put(triggerJobj);
+
+	return ZCFG_SUCCESS;
+}
+
+zcfgRet_t WANPortTriggerObjSet(char *tr98FullPathName, int handler, struct json_object *tr98Jobj, struct json_object *multiJobj, char *paramfault)
+{
+	zcfgRet_t ret = ZCFG_SUCCESS;
+	objIndex_t objIid;
+	struct json_object *triggerJobj = NULL;
+	struct json_object *tmpObj = NULL;
+	struct json_object *tr181ParamValue = NULL;
+	struct json_object *paramValue = NULL;
+	char portTrigger[32] = {0};
+	tr98Parameter_t *paramList = NULL;
+
+	printf("%s : Enter\n", __FUNCTION__);
+
+	if((ret = zcfgFe98To181MappingNameGet(tr98FullPathName, portTrigger)) != ZCFG_SUCCESS) {
+		return ret;
+	}
+
+	printf("%s : portTrigger %s\n", __FUNCTION__, portTrigger);
+
+	IID_INIT(objIid);
+	objIid.level = 1;
+	sscanf(portTrigger, "NAT.X_ZYXEL_PortTriggering.%hhu", &objIid.idx[0]);
+
+	if((ret = zcfgFeObjJsonGet(RDM_OID_NAT_PORT_TRIGGERING, &objIid, &triggerJobj)) != ZCFG_SUCCESS) {
+		return ret;
+	}
+
+	if(multiJobj){
+		tmpObj = triggerJobj;
+		triggerJobj = NULL;
+		triggerJobj = zcfgFeJsonMultiObjAppend(RDM_OID_NAT_PORT_TRIGGERING, &objIid, multiJobj, tmpObj);
+	}
+
+	paramList = tr98Obj[handler].parameter;
+	while(paramList->name != NULL) {
+		/*Write new parameter value from tr98 object to tr181 objects*/		
+		paramValue = json_object_object_get(tr98Jobj, paramList->name);
+		if(paramValue != NULL) {
+			tr181ParamValue = json_object_object_get(triggerJobj, paramList->name);
+			if(tr181ParamValue != NULL) {
+				json_object_object_add(triggerJobj, paramList->name, JSON_OBJ_COPY(paramValue));
+				paramList++;
+				continue;
+			}
+		}
+#if TR98_MAPPING_DEBUG
+		printf("Can't find parameter %s in TR181\n", paramList->name);
+#endif
+		paramList++;	
+	}
+
+	/*Set Device.NAT.X_ZYXEL_PortTriggering.i*/
+	if(multiJobj){
+		json_object_put(tmpObj);
+	}
+	else{
+		if((ret = zcfgFeObjJsonSet(RDM_OID_NAT_PORT_TRIGGERING, &objIid, triggerJobj, NULL)) != ZCFG_SUCCESS ) {
+			json_object_put(triggerJobj);
+			return ret;
+		}
+		json_object_put(triggerJobj);
+	}
+
+	return ZCFG_SUCCESS;
+}
+
+zcfgRet_t WANPortTriggerAdd(char *tr98FullPathName, int *idx)
+{
+	zcfgRet_t ret = ZCFG_SUCCESS;
+	objIndex_t objIid;
+	char tr98ConnName[TR98_MAX_OBJ_NAME_LENGTH] = {0};
+	char iface[32] = {0};
+	char *ptr = NULL;
+	rdm_IpIface_t *ipIface = NULL;
+	rdm_NatPortTriggering_t *natPortTriggerObj = NULL;
+
+	printf("%s : Enter\n", __FUNCTION__);
+
+	strcpy(tr98ConnName, tr98FullPathName);
+	ptr = strstr(tr98ConnName, ".X_ZYXEL_PortTriggering");
+	*ptr = '\0';
+
+	if((ret = zcfgFe98To181MappingNameGet(tr98ConnName, iface)) != ZCFG_SUCCESS) {
+		return ret;
+	}
+	printf("iface = %s\n", iface);
+	// PPP.Interface
+	if(strstr(iface, "PPP")){
+		printf("PPP case\n");
+		IID_INIT(objIid);
+		while((ret = zcfgFeObjStructGetNext(RDM_OID_IP_IFACE, &objIid, (void **)&ipIface)) == ZCFG_SUCCESS) {
+			if(strcmp(ipIface->LowerLayers, iface) == 0) {
+				memset(iface, '\0', sizeof(iface));
+				snprintf(iface, sizeof(iface), "IP.Interface.%d",  objIid.idx[0]);
+				printf("match! new iface = %s\n", iface);
+				zcfgFeObjStructFree(ipIface);
+				break;
+			}
+			zcfgFeObjStructFree(ipIface);
+		}
+	}else{
+		//IP.Interface
+		IID_INIT(objIid);
+		sscanf(iface, "IP.Interface.%hhu", &objIid.idx[0]);
+	}
+
+	IID_INIT(objIid);
+	if((ret = zcfgFeObjStructAdd(RDM_OID_NAT_PORT_TRIGGERING, &objIid, NULL)) != ZCFG_SUCCESS) {
+		printf("%s : Add NAT.X_ZYXEL_PortTriggering Fail.\n", __FUNCTION__);
+		return ret;
+	}
+
+	if(zcfgFeObjStructGet(RDM_OID_NAT_PORT_TRIGGERING, &objIid, (void **)&natPortTriggerObj) == ZCFG_SUCCESS) {
+		strcpy(natPortTriggerObj->Interface, iface);
+		ret = zcfgFeObjStructSet(RDM_OID_NAT_PORT_TRIGGERING, &objIid, (void *)natPortTriggerObj, NULL);
+		if((ret != ZCFG_DELAY_APPLY) && (ret != ZCFG_SUCCESS))
+		{
+			printf("%s : Set NAT.X_ZYXEL_PortTriggering Fail.\n", __FUNCTION__);
+		}
+        printf("%s: Set PortTriggering complete\n", __FUNCTION__);
+		zcfgFeObjStructFree(natPortTriggerObj);
+
+#ifdef ZCFG_DYNAMIC_NAMEMAPPING
+		if((ret == ZCFG_DELAY_APPLY) || (ret == ZCFG_SUCCESS)){
+			zcfg_name_t nameSeqNum = 0;
+			objIndex_t tr98ObjIid;
+			char tr181PathName[64] = {0};
+
+			sprintf(tr181PathName, "NAT.X_ZYXEL_PortTriggering.%d", objIid.idx[0] );
+		
+			IID_INIT(tr98ObjIid);
+			zcfgFe98To181ObjMappingNameAdd((const char *)tr98FullPathName, (const char *)tr181PathName, &nameSeqNum, &tr98ObjIid);
+		
+			if(IS_SEQNUM_RIGHT(nameSeqNum)) {
+				printf("Added PortTriggering %d\n", tr98ObjIid.idx[3]);
+				*idx = tr98ObjIid.idx[3];
+			}
+		}
+#endif
+		return ret;
+	}
+	else {
+		printf("%s : Get NAT.X_ZYXEL_PortTriggering Fail.\n", __FUNCTION__);
+		return ZCFG_INTERNAL_ERROR;	
+	}
+
+	return ZCFG_SUCCESS;
+}
+
+zcfgRet_t WANPortTriggerDel(char *tr98FullPathName)
+{
+	zcfgRet_t ret = ZCFG_SUCCESS;
+	objIndex_t objIid;
+	char portTrigger[32] = {0};
+
+	printf("%s : Enter\n", __FUNCTION__);
+
+	if((ret = zcfgFe98To181MappingNameGet(tr98FullPathName, portTrigger)) != ZCFG_SUCCESS) {
+		return ret;
+	}
+
+	IID_INIT(objIid);
+	objIid.level = 1;
+	sscanf(portTrigger, "NAT.X_ZYXEL_PortTriggering.%hhu", &objIid.idx[0]);
+
+	ret = zcfgFeObjStructDel(RDM_OID_NAT_PORT_TRIGGERING, &objIid, NULL);
+	if((ret != ZCFG_DELAY_APPLY) && (ret != ZCFG_SUCCESS))
+	{
+		printf("%s : Delete NAT.X_ZYXEL_PortTriggering Fail\n", __FUNCTION__);
+	}
+
+	return ret;
+}
+
+zcfgRet_t WANPortTriggerNotify(char *tr98ObjName, char *tr181ParamName, struct json_object *tr181ParamVal, int handler, struct json_object **tr98NotifyInfo)
+{
+	bool found = false;
+	char tr98Notify[256] = "";
+	tr98Parameter_t *paramList = NULL;
+
+	zcfgLog(ZCFG_LOG_DEBUG, "Enter %s\n", __FUNCTION__);
+
+	if(*tr98NotifyInfo == NULL) {
+		*tr98NotifyInfo = json_object_new_object();
+	}
+
+	paramList = tr98Obj[handler].parameter;
+	while(paramList->name != NULL) {
+		if(strcmp(tr181ParamName, paramList->name) == 0) {
+			found = true;
+			sprintf(tr98Notify, "%s.%s", tr98ObjName, paramList->name);
+			break;
+		}
+		paramList++;
+	}
+
+	if(found) {
+		json_object_object_add(*tr98NotifyInfo, tr98Notify, JSON_OBJ_COPY(tr181ParamVal));
+	}
+
+	return ZCFG_SUCCESS;
+}
+
+int WANPortTriggerAttrGet(char *tr98FullPathName, int handler, char *paramName)
+{
+	char tr181Obj[128] = {0};
+	char mapObj[128] = {0};
+	uint32_t  devInfoOid = 0;
+	objIndex_t devInfoIid;
+	int attrValue = ZCFG_NO_SUCH_PARAMETER;
+	tr98Parameter_t *paramList = NULL;
+
+	zcfgLog(ZCFG_LOG_INFO, "Enter %s\n", __FUNCTION__);
+
+	if(zcfgFe98To181MappingNameGet(tr98FullPathName, mapObj) != ZCFG_SUCCESS) {
+		return ZCFG_INVALID_OBJECT;
+	}
+	
+	IID_INIT(devInfoIid);
+	snprintf(tr181Obj, sizeof(tr181Obj),"Device.%s", mapObj);
+	devInfoOid = zcfgFeObjNameToObjId(tr181Obj, &devInfoIid);
+	
+	/*fill up tr98 devInfo object*/
+	paramList = tr98Obj[handler].parameter;
+	while(paramList->name != NULL) {
+		if(strcmp(paramList->name, paramName)){
+			paramList++;
+			continue;
+		}
+		
+		attrValue = zcfgFeParamAttrGetByName(devInfoOid, paramList->name);
+		
+		if(attrValue < 0 ) {
+			attrValue = 0;
+		}
+		break;
+	}
+	
+	return attrValue;
+}
+
+zcfgRet_t WANPortTriggerAttrSet(char *tr98FullPathName, int handler, char *paramName, int newNotify, struct json_object *multiAttrJobj)
+{
+	zcfgRet_t ret = ZCFG_SUCCESS;
+	char tr181Obj[128] = {0};
+	char mapObj[128] = {0};
+	uint32_t  devInfoOid = 0;
+	objIndex_t devInfoIid;
+	int attrValue = 0;
+	tr98Parameter_t *paramList = NULL;
+
+	zcfgLog(ZCFG_LOG_INFO, "Enter %s\n", __FUNCTION__);
+	if(zcfgFe98To181MappingNameGet(tr98FullPathName, mapObj) != ZCFG_SUCCESS) {
+		return ZCFG_INVALID_OBJECT;
+	}
+	
+	IID_INIT(devInfoIid);
+	snprintf(tr181Obj, sizeof(tr181Obj),"Device.%s", mapObj);
+	devInfoOid = zcfgFeObjNameToObjId(tr181Obj, &devInfoIid);
+
+	paramList = tr98Obj[handler].parameter;
+	while(paramList->name != NULL) {
+		/*find the matched parameter*/
+		if(strcmp(paramList->name, paramName)){
+			paramList++;
+			continue;
+		}
+
+		if((ret = zcfgFeTr98ParamAttrChk(paramList->attr, newNotify)) != ZCFG_SUCCESS)
+			return ret;
+		
+		attrValue = zcfgFeParamAttrGetByName(devInfoOid, paramList->name);
+		
+		if(attrValue < 0) {
+			ret = ZCFG_INVALID_ARGUMENTS;
+			break;
+		}
+
+		/*Write new parameter attribute from tr98 object to tr181 objects*/
+		ret = zcfgFeMultiParamAttrAppend(devInfoOid, multiAttrJobj, paramList->name, attrValue);
+		
+		if( ret != ZCFG_SUCCESS){
+			zcfgLog(ZCFG_LOG_ERR, "%s(): set %d %s attribute fail\n", __FUNCTION__, devInfoOid, paramList->name);
+		}
+		break;
+	}
+	return ret;
+}
+
+/*  
  *   TR98 Object Name : InternetGatewayDevice.WANDevice.i.WANConnectionDevice.i.WANIPConnection.i.PortMapping.i
  *                      InternetGatewayDevice.WANDevice.i.WANConnectionDevice.i.WANPPPConnection.i.PortMapping.i
  *
Index: libzcfg_fe_tr98-1.0/wanDev.h
===================================================================
--- libzcfg_fe_tr98-1.0.orig/wanDev.h	2015-08-19 17:46:42.026798309 +0800
+++ libzcfg_fe_tr98-1.0/wanDev.h	2015-08-19 17:52:47.534808013 +0800
@@ -19,6 +19,7 @@
 extern tr98Parameter_t para_ReqDhcpOpt[];
 extern tr98Parameter_t para_WANIpConnMld[];
 extern tr98Parameter_t para_WANIpPortMap[];
+extern tr98Parameter_t para_WANIpPortTrigger[];
 extern tr98Parameter_t para_WANIpConnStat[];
 #ifdef IPV6INTERFACE_PROFILE
 extern tr98Parameter_t para_WANIpv6Addr[];
@@ -33,6 +34,7 @@
 
 extern tr98Parameter_t para_WANPppConn[];
 extern tr98Parameter_t para_WANPppPortMap[];
+extern tr98Parameter_t para_WANPppPortTrigger[];
 extern tr98Parameter_t para_WANPppConnStat[];
 extern tr98Parameter_t para_WANPppConnMld[];
 #ifdef IPV6INTERFACE_PROFILE
@@ -144,6 +146,16 @@
 extern int WANPortMappingAttrGet(char *, int, char *);
 extern zcfgRet_t WANPortMappingAttrSet(char *, int, char *, int , struct json_object *);
 
+/* InternetGatewayDevice.WANDevice.i.WANConnectionDevice.i.WANIPConnection.i.X_ZYXEL_PortTriggering.i */
+/* InternetGatewayDevice.WANDevice.i.WANConnectionDevice.i.WANPPPConnection.i.X_ZYXEL_PortTriggering.i */
+extern zcfgRet_t WANPortTriggerObjGet(char *, int, struct json_object **, bool);
+extern zcfgRet_t WANPortTriggerSet(char *, int, struct json_object *, struct json_object *);
+extern zcfgRet_t WANPortTriggerAdd(char *, int *);
+extern zcfgRet_t WANPortTriggerDel(char *);
+extern zcfgRet_t WANPortTriggerNotify(char *, char *, struct json_object *, int, struct json_object **);
+extern int WANPortTriggerAttrGet(char *, int, char *);
+extern zcfgRet_t WANPortTriggerAttrSet(char *, int, char *, int , struct json_object *);
+
 /* InternetGatewayDevice.WANDevice.i.WANConnectionDevice.i.WANIPConnection.i.Stats */
 /* InternetGatewayDevice.WANDevice.i.WANConnectionDevice.i.WANPPPConnection.i.Stats */
 extern zcfgRet_t WANConnStObjGet(char *, int, struct json_object **, bool);
Index: libzcfg_fe_tr98-1.0/wanDev_parameter.h
===================================================================
--- libzcfg_fe_tr98-1.0.orig/wanDev_parameter.h	2015-08-19 17:46:41.934798306 +0800
+++ libzcfg_fe_tr98-1.0/wanDev_parameter.h	2015-08-19 17:53:07.994808556 +0800
@@ -499,6 +499,21 @@
 	{ NULL, 0, 0, 0}
 };
 
+tr98Parameter_t para_WANIpPortTrigger[] = {
+	{ "Enable", PARAMETER_ATTR_WRITE, 0, json_type_boolean},
+	{ "Name", PARAMETER_ATTR_WRITE, 60, json_type_string},
+	{ "Status", PARAMETER_ATTR_WRITE, 20, json_type_string},
+	{ "Interface", PARAMETER_ATTR_READONLY, 257, json_type_string},
+	{ "TriggerPort", PARAMETER_ATTR_WRITE, 0, json_type_uint32},
+	{ "TriggerPortEndRange", PARAMETER_ATTR_WRITE, 0, json_type_uint32},
+	{ "OpenPort", PARAMETER_ATTR_WRITE, 0, json_type_uint32},
+	{ "OpenPortEndRange", PARAMETER_ATTR_WRITE, 0, json_type_uint32},
+	{ "Protocol", PARAMETER_ATTR_WRITE, 4, json_type_string},
+	{ "TriggerProtocol", PARAMETER_ATTR_WRITE, 4, json_type_string},
+	{ "Description", PARAMETER_ATTR_WRITE, 257, json_type_string},
+	{ NULL, 0, 0, 0}
+};
+
 tr98Parameter_t para_WANIpConnStat[] = {
 	{ "EthernetBytesSent", PARAMETER_ATTR_READONLY|PARAMETER_ATTR_DENY_ACTIVENOTIFY_REQUEST, 0, json_type_uint32},
 	{ "EthernetBytesReceived", PARAMETER_ATTR_READONLY|PARAMETER_ATTR_DENY_ACTIVENOTIFY_REQUEST, 0, json_type_uint32},
@@ -667,6 +682,21 @@
 	{ NULL, 0, 0, 0}
 };
 
+tr98Parameter_t para_WANPppPortTrigger[] = {
+	{ "Enable", PARAMETER_ATTR_WRITE, 0, json_type_boolean},
+	{ "Name", PARAMETER_ATTR_WRITE, 60, json_type_string},
+	{ "Status", PARAMETER_ATTR_WRITE, 20, json_type_string},
+	{ "Interface", PARAMETER_ATTR_READONLY, 257, json_type_string},
+	{ "TriggerPort", PARAMETER_ATTR_WRITE, 0, json_type_uint32},
+	{ "TriggerPortEndRange", PARAMETER_ATTR_WRITE, 0, json_type_uint32},
+	{ "OpenPort", PARAMETER_ATTR_WRITE, 0, json_type_uint32},
+	{ "OpenPortEndRange", PARAMETER_ATTR_WRITE, 0, json_type_uint32},
+	{ "Protocol", PARAMETER_ATTR_WRITE, 4, json_type_string},
+	{ "TriggerProtocol", PARAMETER_ATTR_WRITE, 4, json_type_string},
+	{ "Description", PARAMETER_ATTR_WRITE, 257, json_type_string},
+	{ NULL, 0, 0, 0}
+};
+
 tr98Parameter_t para_WANPppConnStat[] = {
 #if 0
 	{ "EthernetBytesSent", PARAMETER_ATTR_READONLY, 0, json_type_uint32},
Index: libzcfg_fe_tr98-1.0/zcfg_fe_tr98.c
===================================================================
--- libzcfg_fe_tr98-1.0.orig/zcfg_fe_tr98.c	2015-08-19 17:46:42.114798311 +0800
+++ libzcfg_fe_tr98-1.0/zcfg_fe_tr98.c	2015-08-19 17:53:28.754809107 +0800
@@ -190,6 +190,7 @@
 {e_TR98_SENT_DHCP_OPT           , &tr98Obj[e_TR98_SENT_DHCP_OPT           -e_TR98_START]},
 {e_TR98_REQ_DHCP_OPT            , &tr98Obj[e_TR98_REQ_DHCP_OPT            -e_TR98_START]},
 {e_TR98_WAN_IP_PORT_MAP         , &tr98Obj[e_TR98_WAN_IP_PORT_MAP         -e_TR98_START]},
+{e_TR98_WAN_IP_PORT_TRIGGER     , &tr98Obj[e_TR98_WAN_IP_PORT_TRIGGER     -e_TR98_START]},
 {e_TR98_WAN_IP_CONN_STAT        , &tr98Obj[e_TR98_WAN_IP_CONN_STAT        -e_TR98_START]},
 #ifdef IPV6INTERFACE_PROFILE
 {e_TR98_WAN_IP_CONN_IPV6ADDR    , &tr98Obj[e_TR98_WAN_IP_CONN_IPV6ADDR    -e_TR98_START]},
@@ -203,6 +204,7 @@
 #endif
 {e_TR98_WAN_PPP_CONN            , &tr98Obj[e_TR98_WAN_PPP_CONN            -e_TR98_START]},
 {e_TR98_WAN_PPP_PORT_MAP        , &tr98Obj[e_TR98_WAN_PPP_PORT_MAP        -e_TR98_START]},
+{e_TR98_WAN_PPP_PORT_TRIGGER    , &tr98Obj[e_TR98_WAN_PPP_PORT_TRIGGER    -e_TR98_START]},
 {e_TR98_WAN_PPP_CONN_STAT       , &tr98Obj[e_TR98_WAN_PPP_CONN_STAT       -e_TR98_START]},
 {e_TR98_WAN_PPP_CONN_MLD        , &tr98Obj[e_TR98_WAN_PPP_CONN_MLD        -e_TR98_START]},
 #ifdef IPV6INTERFACE_PROFILE
Index: libzcfg_fe_tr98-1.0/zcfg_fe_tr98_handle.h
===================================================================
--- libzcfg_fe_tr98-1.0.orig/zcfg_fe_tr98_handle.h	2015-08-19 17:46:42.114798311 +0800
+++ libzcfg_fe_tr98-1.0/zcfg_fe_tr98_handle.h	2015-08-19 17:53:49.262809652 +0800
@@ -146,6 +146,7 @@
 #define TR98_SENT_DHCP_OPT            "InternetGatewayDevice.WANDevice.i.WANConnectionDevice.i.WANIPConnection.i.DHCPClient.SentDHCPOption.i"
 #define TR98_REQ_DHCP_OPT             "InternetGatewayDevice.WANDevice.i.WANConnectionDevice.i.WANIPConnection.i.DHCPClient.ReqDHCPOption.i"
 #define TR98_WAN_IP_PORT_MAP          "InternetGatewayDevice.WANDevice.i.WANConnectionDevice.i.WANIPConnection.i.PortMapping.i"
+#define TR98_WAN_IP_PORT_TRIGGER      "InternetGatewayDevice.WANDevice.i.WANConnectionDevice.i.WANIPConnection.i.X_ZYXEL_PortTriggering.i"
 #define TR98_WAN_IP_CONN_STAT         "InternetGatewayDevice.WANDevice.i.WANConnectionDevice.i.WANIPConnection.i.Stats"
 #define TR98_WAN_IP_CONN_MLD		  "InternetGatewayDevice.WANDevice.i.WANConnectionDevice.i.WANIPConnection.i.X_ZYXEL_MLD"
 #ifdef IPV6INTERFACE_PROFILE
@@ -160,6 +161,7 @@
 #endif
 #define TR98_WAN_PPP_CONN             "InternetGatewayDevice.WANDevice.i.WANConnectionDevice.i.WANPPPConnection.i"
 #define TR98_WAN_PPP_PORT_MAP         "InternetGatewayDevice.WANDevice.i.WANConnectionDevice.i.WANPPPConnection.i.PortMapping.i"
+#define TR98_WAN_PPP_PORT_TRIGGER     "InternetGatewayDevice.WANDevice.i.WANConnectionDevice.i.WANPPPConnection.i.X_ZYXEL_PortTriggering.i"
 #define TR98_WAN_PPP_CONN_STAT        "InternetGatewayDevice.WANDevice.i.WANConnectionDevice.i.WANPPPConnection.i.Stats"
 #define TR98_WAN_PPP_CONN_MLD		  "InternetGatewayDevice.WANDevice.i.WANConnectionDevice.i.WANPPPConnection.i.X_ZYXEL_MLD"
 #ifdef IPV6INTERFACE_PROFILE
@@ -342,8 +344,8 @@
 {TR98_PSK,                      ATTR_INDEXNODE, para_Psk,               lanDevWlanCfgPskObjGet,  lanDevWlanCfgPskObjSet, NULL,             NULL,            NULL},
 //{TR98_AP_WMM_PARAM,             ATTR_INDEXNODE, NULL,                   NULL,                    NULL,                   NULL,             NULL,            NULL},
 //{TR98_STA_WMM_PARAM,            ATTR_INDEXNODE, NULL,                   NULL,                    NULL,                   NULL,             NULL,            NULL},
-{TR98_HOSTS,                    ATTR_INDEXNODE, para_Hosts,				lanDevHostsObjGet,			NULL,                   NULL,             NULL,            NULL},
-{TR98_HOST,                     ATTR_INDEXNODE, para_Host,				lanDevHostObjGet,			NULL,                   NULL,             NULL,            NULL},
+{TR98_HOSTS,                    ATTR_INDEXNODE, para_Hosts,				lanDevHostsObjGet,			NULL,                   NULL,             NULL,            lanDevHostsObjNotify, lanDevHostsObjAttrGet, lanDevHostsObjAttrSet},
+{TR98_HOST,                     ATTR_INDEXNODE, para_Host,				lanDevHostObjGet,			NULL,                   NULL,             NULL,            lanDevHostObjNotify, lanDevHostObjAttrGet, lanDevHostObjAttrSet},
 //{TR98_LAN_INTF,                 0,              NULL,                   NULL,                    NULL,                   NULL,             NULL,            NULL},
 //{TR98_LAN_INTF_ETH_INTF_CONF,   ATTR_INDEXNODE, NULL,                   NULL,                    NULL,                   NULL,             NULL,            NULL},
 //{TR98_USB_INTF_CONF,            ATTR_INDEXNODE, NULL,                   NULL,                    NULL,                   NULL,             NULL,            NULL},
@@ -380,6 +382,7 @@
 {TR98_SENT_DHCP_OPT,            ATTR_INDEX_CREA, para_SentDhcpOpt,      DhcpClientSentOptObjGet, DhcpClientSentOptObjSet, DhcpClientSentOptObjAdd, DhcpClientSentOptObjDel, DhcpClientOptObjNotify, DhcpClientSentOptObjAttrGet, DhcpClientSentOptObjAttrSet},
 {TR98_REQ_DHCP_OPT,             ATTR_INDEX_CREA, para_ReqDhcpOpt,       DhcpClientReqOptObjGet,  DhcpClientReqOptObjSet, DhcpClientReqOptObjAdd, DhcpClientReqOptObjDel, DhcpClientOptObjNotify, DhcpClientReqOptObjAttrGet, DhcpClientReqOptObjAttrSet},
 {TR98_WAN_IP_PORT_MAP,          ATTR_INDEX_CREA, para_WANIpPortMap,      WANPortMappingObjGet,       WANPortMappingSet,      WANPortMappingAdd, WANPortMappingDel, WANPortMappingNotify, WANPortMappingAttrGet, WANPortMappingAttrSet},
+{TR98_WAN_IP_PORT_TRIGGER,      ATTR_INDEX_CREA, para_WANIpPortTrigger, WANPortTriggerObjGet,    WANPortTriggerSet,      WANPortTriggerAdd, WANPortTriggerDel, WANPortTriggerNotify, WANPortTriggerAttrGet, WANPortTriggerAttrSet},
 {TR98_WAN_IP_CONN_STAT,         0,              para_WANIpConnStat,     WANConnStObjGet,         NULL,                   NULL,     NULL, WANConnStObjNotify, WANConnStObjAttrGet, WANConnStObjAttrSet},
 #ifdef IPV6INTERFACE_PROFILE
 {TR98_WAN_IP_CONN_IPV6ADDR,     ATTR_INDEX_CREA, para_WANIpv6Addr,      WANIpv6AddrObjGet,        WANIpv6AddrObjSet,     WANIpv6AddrObjAdd, WANIpv6AddrObjDel,            NULL},
@@ -393,6 +396,7 @@
 #endif
 {TR98_WAN_PPP_CONN,             ATTR_INDEX_CREA,para_WANPppConn,        WANPppConnObjGet,        WANPppConnObjSet,       WANPppConnObjAdd, WANPppConnObjDel, WANPppConnObjNotify, WANPppConnObjAttrGet, WANIpPppConnObjAttrSet},
 {TR98_WAN_PPP_PORT_MAP,         ATTR_INDEX_CREA,para_WANPppPortMap,     WANPortMappingObjGet,    WANPortMappingSet,      WANPortMappingAdd, WANPortMappingDel, WANPortMappingNotify, WANPortMappingAttrGet, WANPortMappingAttrSet},	
+{TR98_WAN_PPP_PORT_TRIGGER,     ATTR_INDEX_CREA,para_WANPppPortTrigger, WANPortTriggerObjGet,    WANPortTriggerSet,      WANPortTriggerAdd, WANPortTriggerDel, WANPortTriggerNotify, WANPortTriggerAttrGet, WANPortTriggerAttrSet},
 {TR98_WAN_PPP_CONN_STAT,        0,              para_WANPppConnStat,    WANConnStObjGet,         NULL,                   NULL,   NULL, WANConnStObjNotify, WANConnStObjAttrGet, WANConnStObjAttrSet},
 {TR98_WAN_PPP_CONN_MLD,	        0,              para_WANPppConnMld,      WANConnMldObjGet,        WANConnMldObjSet,       NULL, 			   NULL, 			WANConnMldObjNotify, WANConnMldObjAttrGet, WANConnMldObjAttrSet},
 #ifdef IPV6INTERFACE_PROFILE
