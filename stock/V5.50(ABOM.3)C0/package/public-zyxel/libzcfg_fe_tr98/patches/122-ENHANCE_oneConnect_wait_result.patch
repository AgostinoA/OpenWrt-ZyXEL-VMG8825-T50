Index: libzcfg_fe_tr98-1.0/oneConnect.c
===================================================================
--- libzcfg_fe_tr98-1.0.orig/oneConnect.c	2015-05-21 17:49:19.365000076 +0800
+++ libzcfg_fe_tr98-1.0/oneConnect.c	2015-05-21 17:49:50.644447879 +0800
@@ -19,6 +19,9 @@
 #define DATABASE_PATH    "/tmp/netprobe.db"
 #define BROADCASTMAC     "00:00:00:00:00:00"
 
+#define RET_FILE		"/tmp/1905ReturnValue"
+#define RET_SUCCESS		"00"
+
 #define FWCHECK			(1 << 0)
 #define FW_UPGRADE		(1 << 1)
 #define FW_DOWNLOAD		(1 << 2)
@@ -93,6 +96,45 @@
 	sqlite3_close(db);
 }
 
+
+zcfgRet_t oneConnectCommand(const char *cmd, const char * alMac){
+	FILE *fp = NULL;
+	char result[16] = {0};
+	char sql[256] = {0};;
+	char *tmp = sql;
+	int index = 0;
+	zcfgRet_t ret = ZCFG_SUCCESS;
+	char res[16] = {0};
+	
+	system(cmd);
+	
+	while(1) {
+		if((fp = fopen(RET_FILE, "r")) != NULL) {
+			if(fgets(result, sizeof(result), fp) != NULL ){
+				fclose(fp);
+				break;
+			}
+			fclose(fp);
+		}
+	}
+	
+	// the content in RET_FILE is xx\n\0  but we don't need \n
+	for(; index < strlen(result); index++){
+		if(result[index] == '\n'){
+			result[index] = '\0';
+			break;
+		}
+	}
+	
+	if(strcmp(result, RET_SUCCESS) != 0){
+		printf("oneConnect command failed, result = %s\n", result);
+		ret = ZCFG_INTERNAL_ERROR;
+	}
+
+	return ret;
+}
+
+
 /*
  *   TR98 Object Name : InternetGatewayDevice.LANDevice.i.Hosts.Host.i.X_ZYXEL_EXT"
  *
@@ -101,7 +143,7 @@
  */
 zcfgRet_t oneConnectExtObjSet(char *tr98FullPathName, int handler, struct json_object *tr98Jobj, struct json_object *multiJobj, char *paramfault)
 {
-	zcfgRet_t ret;
+	zcfgRet_t ret = ZCFG_SUCCESS;
 	objIndex_t objIid, hostIid;
 	tr98Parameter_t *paramList = NULL;
 	char tr181Name[32] = {0};
@@ -191,20 +233,24 @@
 				if(json_object_get_boolean(paramValue) == true) {
 					if(broadcast){
 						sprintf(cmd, "/usr/sbin/zy1905App 2 %s", BROADCASTMAC);
-						system(cmd);
-						printf("zy1905 cmd = %s\n", cmd);
+						ret = oneConnectCommand(cmd, BROADCASTMAC);
+						printf("%d:zy1905 cmd = %s\n", __LINE__, cmd);
 					}
 					else{
 						if(tr_db_is_subIntf(macAddress, alMac) != 0){ 
-							fprintf( stderr , "can't find ALMac\n");
+							printf("can't find ALMac\n");
 							return ZCFG_INTERNAL_ERROR;
 						}
 						
-						if(strcmp(alMac, "") != 0){
+						if(strchr(alMac, ':') != 0){
 							sprintf(cmd, "/usr/sbin/zy1905App 2 %s", alMac);
-							system(cmd);
+							ret = oneConnectCommand(cmd, alMac);
+							printf("%d:zy1905 cmd = %s\n", __LINE__, cmd);
+						}
+						else{
+							printf("%d: Wrong ALMac %s\n", __LINE__, alMac);
+							return ZCFG_INTERNAL_ERROR;
 						}
-						printf("zy1905 cmd = %s\n", cmd);
 					}
 				}
 			}
@@ -212,20 +258,24 @@
 				if(json_object_get_boolean(paramValue) == true) {
 					if(broadcast){
 						sprintf(cmd, "/usr/sbin/zy1905App 10 %s", BROADCASTMAC);
-						system(cmd);
-						printf("zy1905 cmd = %s\n", cmd);
+						ret = oneConnectCommand(cmd, BROADCASTMAC);
+						printf("%d:zy1905 cmd = %s\n", __LINE__, cmd);
 					}
 					else{
 						if(tr_db_is_subIntf(macAddress, alMac) != 0){
-							fprintf( stderr , "can't find ALMac\n");
+							printf("can't find ALMac\n");
 							return ZCFG_INTERNAL_ERROR;
 						}
 						
-						if(strcmp(alMac, "") != 0){
+						if(strchr(alMac, ':') != 0){
 							sprintf(cmd, "/usr/sbin/zy1905App 10 %s", alMac);
-							system(cmd);
+							ret = oneConnectCommand(cmd, alMac);
+							printf("%d:zy1905 cmd = %s\n", __LINE__, cmd);
+						}
+						else{
+							printf("%d: Wrong ALMac %s\n", __LINE__, alMac);
+							return ZCFG_INTERNAL_ERROR;
 						}
-						printf("zy1905 cmd = %s\n", cmd);
 					}
 				}
 			}
@@ -268,20 +318,24 @@
 	if(actOption != 0) {	
 		if(broadcast){
 			sprintf(cmd, "/usr/sbin/zy1905App 9 %s %d %d %s", BROADCASTMAC, actOption, urlOption, fwUrl);
-			system(cmd);
-			printf("zy1905 cmd = %s\n", cmd);
+			ret = oneConnectCommand(cmd, BROADCASTMAC);
+			printf("%d:zy1905 cmd = %s\n", __LINE__, cmd);
 		}
 		else{
 			if(tr_db_is_subIntf(macAddress, alMac) != 0){
-				fprintf( stderr , "can't find ALMac\n");
+				printf("can't find ALMac\n");
 				return ZCFG_INTERNAL_ERROR;
 			}
 			
-			if(strcmp(alMac, "") != 0){
+			if(strchr(alMac, ':') != 0){
 				sprintf(cmd, "/usr/sbin/zy1905App 9 %s %d %d %s", alMac, actOption, urlOption, fwUrl);
-				system(cmd);
+				ret = oneConnectCommand(cmd, alMac);
+				printf("%d:zy1905 cmd = %s\n", __LINE__, cmd);
+			}
+			else{
+				printf("%d: Wrong ALMac %s\n", __LINE__, alMac);
+				return ZCFG_INTERNAL_ERROR;
 			}
-			printf("zy1905 cmd = %s\n", cmd);
 		}
 	}	
 // Firmware Control End-------------------------	
@@ -289,7 +343,7 @@
 	if(db != NULL)
 		tr_db_close();
 	
-	return ZCFG_SUCCESS;
+	return ret;
 }
 
 
