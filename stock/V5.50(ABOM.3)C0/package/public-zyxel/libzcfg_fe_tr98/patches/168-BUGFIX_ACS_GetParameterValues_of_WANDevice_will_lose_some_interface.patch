Index: libzcfg_fe_tr98-1.0/wanDev.c
===================================================================
--- libzcfg_fe_tr98-1.0.orig/wanDev.c	2015-07-13 13:18:18.372224726 +0800
+++ libzcfg_fe_tr98-1.0/wanDev.c	2015-07-13 13:23:57.353513338 +0800
@@ -1019,12 +1019,12 @@
 	zcfgLog(ZCFG_LOG_DEBUG, "%s : Enter\n", __FUNCTION__);
 
 	/*Check if WANConnectionDevice.i exists or not*/
-	if(zcfgFe98To181MappingNameGet(tr98FullPathName, tr181Obj) != ZCFG_SUCCESS) {
+	if((ret = zcfgFe98To181MappingNameGet(tr98FullPathName, tr181Obj)) != ZCFG_SUCCESS) {
 		/*  The instance number of WANConnectionDevice.i will be continuous because of the tr98 to tr181 mapping table. 
 		 *  Therefore, just return "ZCFG_NO_MORE_INSTANCE" when there is no related mapping of tr181 for
 		 *  this WANConnectionDevice object.
 		 */	
-		return ZCFG_NO_MORE_INSTANCE;
+		return ret;//ZCFG_NO_MORE_INSTANCE;
 	}
 
 	sprintf(wanIpConnName, "%s.WANIPConnection.%d", tr98FullPathName, (count+1));
@@ -1908,12 +1908,12 @@
 
 	printf("%s : Enter\n", __FUNCTION__);
 
-	if(zcfgFe98To181MappingNameGet(tr98FullPathName, ipIface) != ZCFG_SUCCESS) {
+	if((ret = zcfgFe98To181MappingNameGet(tr98FullPathName, ipIface)) != ZCFG_SUCCESS) {
 		/*  The instance number of WANIPConnection.i will be continuous. Therefore, 
 		 *  just return "ZCFG_NO_MORE_INSTANCE" when there is no related mapping of tr181 for
 		 *  this WANIPConnection object.
 		 */
-		return ZCFG_NO_MORE_INSTANCE;
+		return ret;
 	}
 
 	IID_INIT(ipIfaceIid);
@@ -4228,12 +4228,12 @@
 	zcfgLog(ZCFG_LOG_INFO, "Enter %s\n", __FUNCTION__);
 
 	/*find tr181 mapping object*/
-	if(zcfgFe98To181MappingNameGet(tr98FullPathName, pppIface) != ZCFG_SUCCESS) {
+	if((ret = zcfgFe98To181MappingNameGet(tr98FullPathName, pppIface)) != ZCFG_SUCCESS) {
 		/*  The instance number of WANPPPConnection.i will be continuous. Therefore, 
 		 *  just return "ZCFG_NO_MORE_INSTANCE" when there is no related mapping of tr181 for
 		 *  this WANPPPConnection object.
 		 */
-		return ZCFG_NO_MORE_INSTANCE;
+		return ret;
 	}
 
 	zcfgLog(ZCFG_LOG_INFO, "PPP Interface object %s\n", pppIface);
@@ -5537,31 +5537,12 @@
 
 	printf("%s : Enter\n", __FUNCTION__);
 
-	if(zcfgFe98To181MappingNameGet(tr98FullPathName, natPortMap) != ZCFG_SUCCESS) {
-		objIndex_t iid;
-		struct json_object *pmJobj = NULL;
-		char *p=NULL;
-		char tr98pn[256]={0};
-		int idx;
-
-		strcpy(tr98pn, tr98FullPathName);
-		p = strstr(tr98pn, ".PortMapping.") + strlen(".PortMapping.");
-		idx = atoi(p);
-		// For the case: add 3 nat port mappings, then delete the index 1 object. What happen when ACS get
-		// 'InternetGatewayDevice.WANDevice.i.WANConnectionDevice.i.WANIPConnection.i.PortMapping.'?
-		IID_INIT(iid);
-		while((ret = feObjJsonGetNext(RDM_OID_NAT_PORT_MAPPING, &iid, &pmJobj, updateFlag)) == ZCFG_SUCCESS) {
-			json_object_put(pmJobj);
-			if ((iid.level==1) && (iid.idx[0] > idx)) {
-				return ZCFG_NO_SUCH_OBJECT;
-			}
-		}
-
+	if((ret = zcfgFe98To181MappingNameGet(tr98FullPathName, natPortMap)) != ZCFG_SUCCESS) {
 		/*  The instance number of PortMapping.i will be continuous because of the tr98 to tr181 mapping table. 
 		 *  Therefore, just return "ZCFG_NO_MORE_INSTANCE" when there is no related mapping of tr181 for
-		 *  this PortMapping object. Is that true for enchance tr98/tr181 mapping?!
+		 *  this PortMapping object.
 		 */	
-		return ZCFG_NO_MORE_INSTANCE;
+		return ret;
 	}
 
 	IID_INIT(objIid);
Index: libzcfg_fe_tr98-1.0/zcfg_fe_msg.c
===================================================================
--- libzcfg_fe_tr98-1.0.orig/zcfg_fe_msg.c	2015-07-13 13:18:18.372224726 +0800
+++ libzcfg_fe_tr98-1.0/zcfg_fe_msg.c	2015-07-13 13:24:31.009505383 +0800
@@ -83,8 +83,9 @@
 
 	recvMsgHdr = (zcfgMsg_t*)recvBuf;
 	if ( recvMsgHdr->type == RESPONSE_FAIL ) {
+		ret = recvMsgHdr->statCode;
 		free(recvBuf);
-		return ZCFG_INTERNAL_ERROR;
+		return ret; //ZCFG_INTERNAL_ERROR;
 	}
 
 	if( recvMsgHdr->length > 0 ) {
@@ -100,7 +101,7 @@
 
 	free(recvBuf);
 
-	return ZCFG_SUCCESS;
+	return recvMsgHdr->statCode;//ZCFG_SUCCESS;
 }
 
 zcfgRet_t zcfgFeParmAttrQry(zcfg_name_t seqnum, objIndex_t *tr98ObjIid, const char *parmName, zcfg_offset_t *oid, objIndex_t *objIid, char *queriedParmName, uint32_t *attr)
