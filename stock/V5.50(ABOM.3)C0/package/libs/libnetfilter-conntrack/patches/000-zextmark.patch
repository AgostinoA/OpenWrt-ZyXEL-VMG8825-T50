Index: libnetfilter_conntrack-1.0.4/include/internal/object.h
===================================================================
--- libnetfilter_conntrack-1.0.4.orig/include/internal/object.h	2013-08-06 21:22:55.524412776 +0800
+++ libnetfilter_conntrack-1.0.4/include/internal/object.h	2018-09-01 15:22:49.472811076 +0800
@@ -192,6 +192,9 @@
 
 	struct nfct_bitmask *connlabels;
 	struct nfct_bitmask *connlabels_mask;
+#ifdef ZYXEL_EXT_MARK
+	u_int32_t	zextmark;// 20180621 jessy Zyxel
+#endif
 };
 
 /*
@@ -274,6 +276,9 @@
 	struct nfct_filter_dump_mark	mark;
 	u_int8_t			l3num;
 	u_int32_t			set;
+#ifdef ZYXEL_EXT_MARK
+	struct nfct_filter_dump_mark	zextmark;//20180621 jessy zyxel
+#endif
 };
 
 /*
Index: libnetfilter_conntrack-1.0.4/include/libnetfilter_conntrack/libnetfilter_conntrack.h
===================================================================
--- libnetfilter_conntrack-1.0.4.orig/include/libnetfilter_conntrack/libnetfilter_conntrack.h	2013-08-06 21:22:55.528412862 +0800
+++ libnetfilter_conntrack-1.0.4/include/libnetfilter_conntrack/libnetfilter_conntrack.h	2018-09-01 14:09:16.420848623 +0800
@@ -135,6 +135,7 @@
 	ATTR_HELPER_INFO,			/* variable length */
 	ATTR_CONNLABELS,			/* variable length */
 	ATTR_CONNLABELS_MASK,			/* variable length */
+    ATTR_ZEXTMARK,				/* u32 bits */ //zyxel jessy 20180621
 	ATTR_MAX
 };
 
@@ -532,6 +533,7 @@
 enum nfct_filter_dump_attr {
 	NFCT_FILTER_DUMP_MARK = 0,	/* struct nfct_filter_dump_mark */
 	NFCT_FILTER_DUMP_L3NUM,		/* u_int8_t */
+	NFCT_FILTER_DUMP_ZEXTMARK ,	/* struct nfct_filter_dump_mark */
 	NFCT_FILTER_DUMP_MAX
 };
 
Index: libnetfilter_conntrack-1.0.4/include/libnetfilter_conntrack/linux_nfnetlink_conntrack.h
===================================================================
--- libnetfilter_conntrack-1.0.4.orig/include/libnetfilter_conntrack/linux_nfnetlink_conntrack.h	2013-08-06 21:22:55.528412862 +0800
+++ libnetfilter_conntrack-1.0.4/include/libnetfilter_conntrack/linux_nfnetlink_conntrack.h	2018-09-01 14:11:09.685176110 +0800
@@ -55,6 +55,8 @@
 	CTA_MARK_MASK,
 	CTA_LABELS,
 	CTA_LABELS_MASK,
+	CTA_ZEXTMARK,  // zyxel jessy 20180621
+	CTA_ZEXTMARK_MASK,  // zyxel jessy 20180621
 	__CTA_MAX
 };
 #define CTA_MAX (__CTA_MAX - 1)
Index: libnetfilter_conntrack-1.0.4/src/conntrack/build.c
===================================================================
--- libnetfilter_conntrack-1.0.4.orig/src/conntrack/build.c	2013-06-05 20:14:08.283944508 +0800
+++ libnetfilter_conntrack-1.0.4/src/conntrack/build.c	2018-09-01 15:21:34.988811709 +0800
@@ -368,6 +368,15 @@
 {
 	nfnl_addattr32(&req->nlh, size, CTA_MARK, htonl(ct->mark));
 }
+#ifdef ZYXEL_EXT_MARK
+// 20160621 jessy zyxel
+static void __build_zextmark(struct nfnlhdr *req,
+			 size_t size,
+			 const struct nf_conntrack *ct)
+{
+	nfnl_addattr32(&req->nlh, size, CTA_ZEXTMARK, htonl(ct->zextmark));
+}
+#endif

 static void __build_secmark(struct nfnlhdr *req,
 			    size_t size,
@@ -486,6 +495,11 @@
 
 	if (test_bit(ATTR_MARK, ct->head.set))
 		__build_mark(req, size, ct);
+#ifdef ZYXEL_EXT_MARK
+    //20180621 jessy Zyxel
+	if (test_bit(ATTR_ZEXTMARK, ct->head.set))
+		__build_zextmark(req, size, ct);
+#endif

 	if (test_bit(ATTR_SECMARK, ct->head.set))
 		__build_secmark(req, size, ct);
Index: libnetfilter_conntrack-1.0.4/src/conntrack/build_mnl.c
===================================================================
--- libnetfilter_conntrack-1.0.4.orig/src/conntrack/build_mnl.c	2013-06-05 20:14:08.283944508 +0800
+++ libnetfilter_conntrack-1.0.4/src/conntrack/build_mnl.c	2018-09-01 15:22:35.200811197 +0800
@@ -350,6 +350,15 @@
 	return 0;
 }
 
+#ifdef ZYXEL_EXT_MARK
+//20160621 jessy zyxel
+static int
+nfct_build_zextmark(struct nlmsghdr *nlh, const struct nf_conntrack *ct)
+{
+	mnl_attr_put_u32(nlh, CTA_ZEXTMARK, htonl(ct->zextmark));
+	return 0;
+}
+#endif
 static int
 nfct_build_secmark(struct nlmsghdr *nlh, const struct nf_conntrack *ct)
 {
@@ -450,6 +459,10 @@
 	if (test_bit(ATTR_MARK, ct->head.set))
 		nfct_build_mark(nlh, ct);
 
+#ifdef ZYXEL_EXT_MARK
+	if (test_bit(ATTR_ZEXTMARK, ct->head.set))
+		nfct_build_zextmark(nlh, ct);
+#endif
 	if (test_bit(ATTR_SECMARK, ct->head.set))
 		nfct_build_secmark(nlh, ct);
 
Index: libnetfilter_conntrack-1.0.4/src/conntrack/copy.c
===================================================================
--- libnetfilter_conntrack-1.0.4.orig/src/conntrack/copy.c	2013-06-05 20:14:08.287944834 +0800
+++ libnetfilter_conntrack-1.0.4/src/conntrack/copy.c	2018-09-01 14:09:16.424848623 +0800
@@ -307,6 +307,13 @@
 {
 	dest->mark = orig->mark;
 }
+#ifdef ZYXEL_EXT_MARK // 20180621 jessy
+static void copy_attr_zextmark(struct nf_conntrack *dest,
+			   const struct nf_conntrack *orig)
+{
+	dest->zextmark = orig->zextmark;
+}
+#endif
 
 static void copy_attr_secmark(struct nf_conntrack *dest,
 			      const struct nf_conntrack *orig)
@@ -541,6 +548,9 @@
 	[ATTR_HELPER_INFO]		= copy_attr_help_info,
 	[ATTR_CONNLABELS]		= copy_attr_connlabels,
 	[ATTR_CONNLABELS_MASK]		= copy_attr_connlabels_mask,
+#ifdef ZYXEL_EXT_MARK
+	[ATTR_ZEXTMARK]			= copy_attr_zextmark, // 20160621 jessy
+#endif
 };
 
 /* this is used by nfct_copy() with the NFCT_CP_OVERRIDE flag set. */
Index: libnetfilter_conntrack-1.0.4/src/conntrack/filter_dump.c
===================================================================
--- libnetfilter_conntrack-1.0.4.orig/src/conntrack/filter_dump.c	2012-02-10 01:43:18.000000000 +0800
+++ libnetfilter_conntrack-1.0.4/src/conntrack/filter_dump.c	2018-09-01 14:13:20.168366347 +0800
@@ -41,6 +41,12 @@
 				htonl(filter_dump->mark.val));
 		nfnl_addattr32(&req->nlh, size, CTA_MARK_MASK,
 				htonl(filter_dump->mark.mask));
+#ifdef ZYXEL_EXT_MARK	    // 20180621 jessy Zyxel
+	    nfnl_addattr32(&req->nlh, size, CTA_ZEXTMARK,
+				htonl(filter_dump->zextmark.val));
+	    nfnl_addattr32(&req->nlh, size, CTA_ZEXTMARK_MASK,
+				htonl(filter_dump->zextmark.mask));
+#endif
 	}
 	if (filter_dump->set & (1 << NFCT_FILTER_DUMP_L3NUM)) {
 		struct nfgenmsg *nfg = NLMSG_DATA(&req->nlh);
Index: libnetfilter_conntrack-1.0.4/src/conntrack/getter.c
===================================================================
--- libnetfilter_conntrack-1.0.4.orig/src/conntrack/getter.c	2013-06-05 20:14:08.287944834 +0800
+++ libnetfilter_conntrack-1.0.4/src/conntrack/getter.c	2018-09-01 14:09:16.424848623 +0800
@@ -223,7 +223,12 @@
 {
 	return &ct->mark;
 }
-
+#ifdef ZYXEL_EXT_MARK // 20180621 jessy Zyxel
+static const void *get_attr_zextmark(const struct nf_conntrack *ct)
+{
+	return &ct->zextmark;
+}
+#endif
 static const void *get_attr_secmark(const struct nf_conntrack *ct)
 {
 	return &ct->secmark;
@@ -418,4 +423,7 @@
 	[ATTR_HELPER_INFO]		= get_attr_helper_info,
 	[ATTR_CONNLABELS]		= get_attr_connlabels,
 	[ATTR_CONNLABELS_MASK]		= get_attr_connlabels_mask,
+#ifdef ZYXEL_EXT_MARK
+	[ATTR_ZEXTMARK]			= get_attr_zextmark, // 20180621 jessy Zyxel
+#endif
 };
Index: libnetfilter_conntrack-1.0.4/src/conntrack/parse.c
===================================================================
--- libnetfilter_conntrack-1.0.4.orig/src/conntrack/parse.c	2013-07-03 08:05:10.102245855 +0800
+++ libnetfilter_conntrack-1.0.4/src/conntrack/parse.c	2018-09-01 15:22:23.740811294 +0800
@@ -546,6 +546,12 @@
 		ct->mark = ntohl(*(u_int32_t *)NFA_DATA(cda[CTA_MARK-1]));
 		set_bit(ATTR_MARK, ct->head.set);
 	}
+#ifdef ZYXEL_EXT_MARK // 20180621 jessy Zyxel
+	if (cda[CTA_ZEXTMARK-1]) {
+		ct->zextmark = ntohl(*(u_int32_t *)NFA_DATA(cda[CTA_ZEXTMARK-1]));
+		set_bit(ATTR_ZEXTMARK, ct->head.set);
+	}
+#endif
 
 	if (cda[CTA_SECMARK-1]) {
 		ct->secmark = ntohl(*(u_int32_t *)NFA_DATA(cda[CTA_SECMARK-1]));
Index: libnetfilter_conntrack-1.0.4/src/conntrack/parse_mnl.c
===================================================================
--- libnetfilter_conntrack-1.0.4.orig/src/conntrack/parse_mnl.c	2013-07-03 08:05:10.102245855 +0800
+++ libnetfilter_conntrack-1.0.4/src/conntrack/parse_mnl.c	2018-09-01 15:21:17.016811862 +0800
@@ -820,6 +820,7 @@
 	case CTA_TIMEOUT:
 	case CTA_MARK:
 	case CTA_SECMARK:
+	case CTA_ZEXTMARK: //20180621 jessy xyzel
 	case CTA_USE:
 	case CTA_ID:
 		if (mnl_attr_validate(attr, MNL_TYPE_U32) < 0)
@@ -907,6 +908,12 @@
 		set_bit(ATTR_MARK, ct->head.set);
 	}
 
+#ifdef ZYXEL_EXT_MARK    // 20180621 jessy zyxel
+	if (tb[CTA_ZEXTMARK]) {
+		ct->zextmark = ntohl(mnl_attr_get_u32(tb[CTA_ZEXTMARK]));
+		set_bit(ATTR_ZEXTMARK, ct->head.set);
+	}
+#endif
 	if (tb[CTA_SECMARK]) {
 		ct->secmark = ntohl(mnl_attr_get_u32(tb[CTA_SECMARK]));
 		set_bit(ATTR_SECMARK, ct->head.set);
Index: libnetfilter_conntrack-1.0.4/src/conntrack/snprintf_default.c
===================================================================
--- libnetfilter_conntrack-1.0.4.orig/src/conntrack/snprintf_default.c	2013-07-11 05:34:00.079382500 +0800
+++ libnetfilter_conntrack-1.0.4/src/conntrack/snprintf_default.c	2018-09-01 15:22:10.640811406 +0800
@@ -211,6 +211,13 @@
 	return (snprintf(buf, len, "mark=%u ", ct->mark));
 }
 
+#ifdef ZYXEL_EXT_MARK // 20180621 jessy zyxel
+static int
+__snprintf_zextmark(char *buf, unsigned int len, const struct nf_conntrack *ct)
+{
+	return (snprintf(buf, len, "zextmark=%u ", ct->zextmark));
+}
+#endif
 static int
 __snprintf_secmark(char *buf, unsigned int len, const struct nf_conntrack *ct)
 {
@@ -430,6 +437,12 @@
 		BUFFER_SIZE(ret, size, len, offset);
 	}
 
+#ifdef ZYXEL_EXT_MARK
+	if (test_bit(ATTR_ZEXTMARK, ct->head.set)) { //20180621 jessy zyxel
+		ret = __snprintf_zextmark(buf+offset, len, ct);
+		BUFFER_SIZE(ret, size, len, offset);
+	}
+#endif
 	if (test_bit(ATTR_SECMARK, ct->head.set)) {
 		ret = __snprintf_secmark(buf+offset, len, ct);
 		BUFFER_SIZE(ret, size, len, offset);
Index: libnetfilter_conntrack-1.0.4/src/conntrack/snprintf_xml.c
===================================================================
--- libnetfilter_conntrack-1.0.4.orig/src/conntrack/snprintf_xml.c	2013-07-11 05:34:00.079382500 +0800
+++ libnetfilter_conntrack-1.0.4/src/conntrack/snprintf_xml.c	2018-09-01 15:21:57.368811519 +0800
@@ -542,7 +542,8 @@
 	    test_bit(ATTR_ID, ct->head.set) ||
 	    test_bit(ATTR_CONNLABELS, ct->head.set) ||
 	    test_bit(ATTR_TIMESTAMP_START, ct->head.set) ||
-	    test_bit(ATTR_TIMESTAMP_STOP, ct->head.set)) {
+	    test_bit(ATTR_TIMESTAMP_STOP, ct->head.set) ||
+	    test_bit(ATTR_ZEXTMARK, ct->head.set) ) { // 20180621 jessy zyxel
 	    	ret = snprintf(buf+offset, len, "</meta>");
 		BUFFER_SIZE(ret, size, len, offset);
 	}
Index: libnetfilter_conntrack-1.0.4/src/conntrack/compare.c
===================================================================
--- libnetfilter_conntrack-1.0.4.orig/src/conntrack/compare.c	2013-07-03 08:05:10.102245855 +0800
+++ libnetfilter_conntrack-1.0.4/src/conntrack/compare.c	2018-09-01 15:23:16.404810846 +0800
@@ -295,6 +295,15 @@
 }
 
+#ifdef ZYXEL_EXT_MARK
+static int
+cmp_zextmark(const struct nf_conntrack *ct1,
+	 const struct nf_conntrack *ct2,
+	 unsigned int flags)
+{
+	return (ct1->zextmark == ct2->zextmark);
+}
+#endif
 static int 
 cmp_timeout(const struct nf_conntrack *ct1,
 	    const struct nf_conntrack *ct2,
 	    unsigned int flags)
@@ -423,6 +432,10 @@
 		return 0;
 	if (!__cmp(ATTR_MARK, ct1, ct2, flags, cmp_mark))
 		return 0;
+#ifdef ZYXEL_EXT_MARK
+	if (!__cmp(ATTR_ZEXTMARK, ct1, ct2, flags, cmp_mark))
+		return 0;
+#endif
 	if (!__cmp(ATTR_TIMEOUT, ct1, ct2, flags, cmp_timeout))
 		return 0;
 	if (!__cmp(ATTR_STATUS, ct1, ct2, flags, cmp_status))
