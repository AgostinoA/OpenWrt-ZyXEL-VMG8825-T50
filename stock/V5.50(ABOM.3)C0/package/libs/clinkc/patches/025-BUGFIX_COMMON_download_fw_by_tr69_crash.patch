Index: clinkc/src/cybergarage/http/chttp_packet.c
===================================================================
--- clinkc.orig/src/cybergarage/http/chttp_packet.c	2014-06-14 20:29:28.635921654 +0800
+++ clinkc/src/cybergarage/http/chttp_packet.c	2014-06-14 20:29:28.695921653 +0800
@@ -598,12 +598,14 @@
 	FILE *fp = NULL;
 	int length;
 	char *contentType = NULL;
+	char *boundaryPtr = NULL;
 	char *fileStart = NULL;
 	char boundary[BOUNDARY_SIZE] = {0};
+	BOOL hasboundary = FALSE;
 	int parseFlag = 0;
 
 	cg_log_debug_l4("Entering...\n");
-
+	
 	conLen = cg_http_packet_getcontentlength(httpPkt);
 	if (0 < conLen) {
 		fp = fopen( savedFile, "wb" );
@@ -611,6 +613,13 @@
 			cg_log_debug_l4( "fopen %s fail", savedFile );
 			return FALSE;
 		}
+		
+		contentType = cg_http_packet_getheadervalue(httpPkt, CG_HTTP_CONTENT_TYPE);
+		if(contentType && (boundaryPtr = strstr(contentType, "boundary=")) != NULL){
+			boundaryPtr += strlen("boundary=");
+			snprintf(boundary, BOUNDARY_SIZE, "--%s", boundaryPtr);
+			hasboundary = TRUE;
+		}
 
 		readLen = 0;
 
@@ -620,18 +629,14 @@
 			memset(readBuf, '\0', sizeof(readBuf));
 			length = cg_socket_read(sock, readBuf, READBUF_LENGTH);
 			/*for http server to parse upload multipart/form-data packet boundary and get the binary file start pointer*/
-			contentType = cg_http_packet_getheadervalue(httpPkt, CG_HTTP_CONTENT_TYPE);
-			if((contentType = strstr(contentType, "boundary=")) != NULL){
-				contentType += strlen("boundary=");
-				snprintf(boundary, BOUNDARY_SIZE, "--%s", contentType);
-				if((strstr(readBuf, boundary) != NULL) && (strstr(readBuf, "Content-Disposition") != NULL)){
-					/*the first boundary carry from browser end with '\r\n\r\n' */
-					fileStart = strstr(readBuf, "\r\n\r\n") + 4;
-					parseFlag = 1;
-				}
-				else
-					parseFlag = 0;
+			if(hasboundary && (strstr(readBuf, boundary) != NULL) && (strstr(readBuf, "Content-Disposition") != NULL)){
+				/*the first boundary carry from browser end with '\r\n\r\n' */
+				fileStart = strstr(readBuf, "\r\n\r\n") + 4;
+				parseFlag = 1;
 			}
+			else
+				parseFlag = 0;
+				
 			if (length <= 0){
 				tries++;
 			}
