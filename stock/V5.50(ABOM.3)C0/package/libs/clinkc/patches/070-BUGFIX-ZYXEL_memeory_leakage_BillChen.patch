Index: clinkc/src/cybergarage/ssl/cssl.c
===================================================================
--- clinkc.orig/src/cybergarage/ssl/cssl.c	2016-04-25 15:32:02.809780961 +0800
+++ clinkc/src/cybergarage/ssl/cssl.c	2016-04-25 15:32:35.215589763 +0800
@@ -264,8 +264,10 @@
 					if(strncmp(commonName, "*.", 2)==0 ){
 						ptr = strstr(ctxdata->verify_cn, commonName+2 );
 						if(ptr){
-							if((ptr-ctxdata->verify_cn)+strlen(commonName)-2 == strlen(ctxdata->verify_cn) )
+							if((ptr-ctxdata->verify_cn)+strlen(commonName)-2 == strlen(ctxdata->verify_cn) ){
+								if(cert) X509_free(cert);
 								return TRUE;
+							}
 						}
 
 					}
@@ -274,12 +276,14 @@
 					//cg_log_debug_l4("Common Name doesn't math host name");
 					printf("commonName=%s, ctxdata->verify_cn=%s\n", commonName, ctxdata->verify_cn);	// for test
 					printf("Common Name doesn't math host name\n");	// for test
+					if(cert) X509_free(cert);
 					return FALSE;
 				}
 			}
 		}
 
   	}
+	if(cert) X509_free(cert);
 	return TRUE;
 
 }
Index: clinkc/src/cybergarage/net/csocket.c
===================================================================
--- clinkc.orig/src/cybergarage/net/csocket.c	2016-04-25 15:32:02.973780961 +0800
+++ clinkc/src/cybergarage/net/csocket.c	2016-04-25 15:32:40.716183827 +0800
@@ -638,11 +638,13 @@
 	cg_socket_setid(sock, socket(addrInfo->ai_family, addrInfo->ai_socktype, 0));
 	if (sock->id== -1) {
 		cg_socket_close(sock);
+		freeaddrinfo(addrInfo);
 		return FALSE;
 	}
 	if (reuseFlag == TRUE) {
 		if (cg_socket_setreuseaddress(sock, TRUE) == FALSE) {
 			cg_socket_close(sock);
+			freeaddrinfo(addrInfo);
 			return FALSE;
 		}
 	}
