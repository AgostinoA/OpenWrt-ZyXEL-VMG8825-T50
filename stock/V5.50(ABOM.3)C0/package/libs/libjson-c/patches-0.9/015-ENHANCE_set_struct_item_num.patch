Index: json-c-0.9/arraylist.c
===================================================================
--- json-c-0.9.orig/arraylist.c	2015-05-13 17:36:58.684740428 +0800
+++ json-c-0.9/arraylist.c	2015-05-13 17:40:43.022702700 +0800
@@ -46,6 +46,26 @@
   return arr;
 }
 
+struct array_list*
+array_list_new_list(int array_list_size, array_list_free_fn *free_fn)
+{
+  struct array_list *arr;
+
+  arr = (struct array_list*)calloc(1, sizeof(struct array_list));
+  if(!arr) return NULL;
+
+  array_list_size = (array_list_size > 0) ? array_list_size : ARRAY_LIST_DEFAULT_SIZE;
+
+  arr->size = array_list_size;
+  arr->length = 0;
+  arr->free_fn = free_fn;
+  if(!(arr->array = (void**)calloc(sizeof(void*), arr->size))) {
+    free(arr);
+    return NULL;
+  }
+  return arr;
+}
+
 extern void
 array_list_free(struct array_list *arr)
 {
Index: json-c-0.9/arraylist.h
===================================================================
--- json-c-0.9.orig/arraylist.h	2015-05-13 17:36:58.684740428 +0800
+++ json-c-0.9/arraylist.h	2015-05-13 17:40:50.095409900 +0800
@@ -31,6 +31,9 @@
 extern struct array_list*
 array_list_new(array_list_free_fn *free_fn);
 
+extern struct array_list*
+array_list_new_list(int array_list_size, array_list_free_fn *free_fn);
+
 extern void
 array_list_free(struct array_list *al);
 
Index: json-c-0.9/json_object.c
===================================================================
--- json-c-0.9.orig/json_object.c	2015-05-13 17:36:58.752740429 +0800
+++ json-c-0.9/json_object.c	2015-05-13 17:41:01.791579400 +0800
@@ -318,6 +318,20 @@
   return jso;
 }
 
+struct json_object* json_object_new_c_object(int table_entries)
+{
+  struct json_object *jso = json_object_new(json_type_object);
+  if(!jso) return NULL;
+
+  if(table_entries <= 0) table_entries = JSON_OBJECT_DEF_HASH_ENTRIES;
+
+  jso->_delete = &json_object_object_delete;
+  jso->_to_json_string = &json_object_object_to_json_string;
+  jso->o.c_object = lh_kchar_table_new(table_entries,
+					NULL, &json_object_lh_entry_free);
+  return jso;
+}
+
 struct lh_table* json_object_get_object(struct json_object *jso)
 {
   if(!jso) return NULL;
@@ -603,6 +617,16 @@
   return jso;
 }
 
+struct json_object* json_object_new_array_list(int array_list_size)
+{
+  struct json_object *jso = json_object_new(json_type_array);
+  if(!jso) return NULL;
+  jso->_delete = &json_object_array_delete;
+  jso->_to_json_string = &json_object_array_to_json_string;
+  jso->o.c_array = array_list_new_list(array_list_size, &json_object_array_entry_free);
+  return jso;
+}
+
 struct array_list* json_object_get_array(struct json_object *jso)
 {
   if(!jso) return NULL;
Index: json-c-0.9/json_object.h
===================================================================
--- json-c-0.9.orig/json_object.h	2015-05-13 17:36:58.752740429 +0800
+++ json-c-0.9/json_object.h	2015-05-13 17:41:09.255325700 +0800
@@ -123,6 +123,11 @@
  */
 extern struct json_object* json_object_new_object(void);
 
+/** Create a new empty object and set table entries num
+ * @returns a json_object of type json_type_object
+ */
+extern struct json_object* json_object_new_c_object(int table_entries);
+
 /** Get the hashtable of a json_object of type json_type_object
  * @param obj the json_object instance
  * @returns a linkhash
@@ -192,6 +197,11 @@
  */
 extern struct json_object* json_object_new_array(void);
 
+/** Create a new empty json_object of type json_type_array and set its item num
+ * @returns a json_object of type json_type_array
+ */
+extern struct json_object* json_object_new_array_list(int array_list_size);
+
 /** Get the arraylist of a json_object of type json_type_array
  * @param obj the json_object instance
  * @returns an arraylist
