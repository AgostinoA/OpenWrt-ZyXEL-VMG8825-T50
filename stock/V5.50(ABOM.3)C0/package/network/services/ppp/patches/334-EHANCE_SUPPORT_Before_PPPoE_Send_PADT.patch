Index: ppp-2.4.3/pppd/options.c
===================================================================
--- ppp-2.4.3.orig/pppd/options.c	2015-04-23 16:25:13.519623751 +0800
+++ ppp-2.4.3/pppd/options.c	2015-04-23 16:26:53.152032900 +0800
@@ -92,7 +92,11 @@
 bool	demand = 0;		/* do dial-on-demand */
 char	*ipparam = NULL;	/* Extra parameter for ip up/down scripts */
 int	idle_time_limit = 0;	/* Disconnect if idle for this many seconds */
+#ifdef USA_PRODUCT
+int	holdoff = 15;		/* # seconds to pause before reconnecting */
+#else
 int	holdoff = 30;		/* # seconds to pause before reconnecting */
+#endif
 bool	holdoff_specified;	/* true if a holdoff value has been given */
 int	log_to_fd = 1;		/* send log messages to this fd too */
 bool	log_default = 1;	/* log_to_fd is default (stdout) */
Index: ppp-2.4.3/pppd/plugins/rp-pppoe/plugin.c
===================================================================
--- ppp-2.4.3.orig/pppd/plugins/rp-pppoe/plugin.c	2015-04-23 16:25:13.523623751 +0800
+++ ppp-2.4.3/pppd/plugins/rp-pppoe/plugin.c	2015-04-23 16:27:35.842032900 +0800
@@ -65,6 +65,9 @@
 #if 1 /* vlanautohunt, ZyXEL, John */
 extern int vid;
 #endif
+#ifdef USA_PRODUCT
+int first_init = 1;
+#endif
 
 static int PPPoEDevnameHook(char *cmd, char **argv, int doit);
 static option_t Options[] = {
@@ -148,6 +151,15 @@
 	}
     } else {
 	discovery(conn);
+#ifdef USA_PRODUCT
+	if(first_init == 1){
+			char Before_PADT[64] = "Send a PADT before the PPPoE connection";
+			char buf[1024] = {};
+			sprintf(buf, "RP-PPPoE: %s", Before_PADT);
+			sendPADT(conn, buf);
+			first_init = 0;
+	}
+#endif
 	if (conn->discoveryState != STATE_SESSION) {
 	    error("Unable to complete PPPoE Discovery");
 	    return -1;
