Index: ppp-2.4.3/pppd/lcp.c
===================================================================
--- ppp-2.4.3.orig/pppd/lcp.c	2018-09-04 19:51:54.847333351 +0800
+++ ppp-2.4.3/pppd/lcp.c	2018-09-04 19:58:59.367474800 +0800
@@ -75,6 +75,9 @@
 int	lcp_echo_fails = 0;	/* Tolerance to unanswered echo-requests */
 bool	lax_recv = 0;		/* accept control chars in asyncmap */
 bool	noendpoint = 0;		/* don't send/accept endpoint discriminator */
+#ifdef ABOG_CUSTOMIZATION
+int lcp_echo = 0;			/* temp parameter for lcp echo interval. Project: AOBG_Mobile */
+#endif
 
 static int noopt __P((char **));
 
@@ -1875,6 +1878,12 @@
 lcp_up(f)
     fsm *f;
 {
+#ifdef ABOG_CUSTOMIZATION
+	if(lcp_echo == 0){
+		lcp_echo = lcp_echo_interval;
+		lcp_echo_interval = lcp_echo / (lcp_echo_fails + 1);
+	}
+#endif
     lcp_options *wo = &lcp_wantoptions[f->unit];
     lcp_options *ho = &lcp_hisoptions[f->unit];
     lcp_options *go = &lcp_gotoptions[f->unit];
Index: ppp-2.4.3/pppd/options.c
===================================================================
--- ppp-2.4.3.orig/pppd/options.c	2018-09-04 19:51:54.943333352 +0800
+++ ppp-2.4.3/pppd/options.c	2018-09-04 19:51:55.359333354 +0800
@@ -97,6 +97,9 @@
 #else
 int	holdoff = 30;		/* # seconds to pause before reconnecting */
 #endif
+#ifdef ABOG_CUSTOMIZATION
+int count_sendPADI = 0;	/* count how many packets sending*/
+#endif
 bool	holdoff_specified;	/* true if a holdoff value has been given */
 int	log_to_fd = 1;		/* send log messages to this fd too */
 bool	log_default = 1;	/* log_to_fd is default (stdout) */
Index: ppp-2.4.3/pppd/plugins/rp-pppoe/discovery.c
===================================================================
--- ppp-2.4.3.orig/pppd/plugins/rp-pppoe/discovery.c	2018-09-04 19:51:55.151333353 +0800
+++ ppp-2.4.3/pppd/plugins/rp-pppoe/discovery.c	2018-09-04 19:51:55.359333354 +0800
@@ -681,6 +681,9 @@
     int padiAttempts = 0;
     int padrAttempts = 0;
     int timeout = PADI_TIMEOUT;
+#ifdef ABOG_CUSTOMIZATION
+	int rand_send_PADI_time = 0;
+#endif
 
     /* Skip discovery and don't open discovery socket? */
     if (conn->skipDiscovery && conn->noDiscoverySocket) {
@@ -706,6 +709,25 @@
 	    return;
 	}
 	sendPADI(conn);
+#ifdef ABOG_CUSTOMIZATION
+	count_sendPADI++;
+	if(count_sendPADI == 1){
+		do{
+			rand_send_PADI_time = (rand() % 1000) + 1;
+			if(rand_send_PADI_time > 100 && rand_send_PADI_time < 1000) {
+				holdoff = rand_send_PADI_time / 100;
+				break;
+			}
+		} while(rand_send_PADI_time < 100);
+
+	}
+	else if(count_sendPADI == 2){
+		holdoff = (rand() % 180) + 1; 
+	}
+	else if(count_sendPADI > 2){
+		holdoff = (rand() % 300) + 1; 
+	}
+#endif
 	conn->discoveryState = STATE_SENT_PADI;
 	waitForPADO(conn, timeout);
 
Index: ppp-2.4.3/pppd/pppd.h
===================================================================
--- ppp-2.4.3.orig/pppd/pppd.h	2018-09-04 19:51:55.075333352 +0800
+++ ppp-2.4.3/pppd/pppd.h	2018-09-04 19:51:55.359333354 +0800
@@ -307,6 +307,9 @@
 extern bool	cryptpap;	/* Others' PAP passwords are encrypted */
 extern int	idle_time_limit;/* Shut down link if idle for this long */
 extern int	holdoff;	/* Dead time before restarting */
+#ifdef ABOG_CUSTOMIZATION
+extern int	count_sendPADI;	/* count how many packets sending */
+#endif
 extern bool	holdoff_specified; /* true if user gave a holdoff value */
 extern bool	notty;		/* Stdin/out is not a tty */
 extern char	*pty_socket;	/* Socket to connect to pty */
