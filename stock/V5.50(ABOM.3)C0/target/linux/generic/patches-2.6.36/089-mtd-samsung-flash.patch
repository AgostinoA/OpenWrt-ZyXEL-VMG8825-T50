--- a/drivers/mtd/chips/cfi_cmdset_0002.c
+++ b/drivers/mtd/chips/cfi_cmdset_0002.c
@@ -371,9 +371,34 @@ static struct cfi_fixup fixup_table[] =
 static void cfi_fixup_major_minor(struct cfi_private *cfi,
 				  struct cfi_pri_amdstd *extp)
 {
-	if (cfi->mfr == CFI_MFR_SAMSUNG && cfi->id == 0x257e &&
-	    extp->MajorVersion == '0')
-		extp->MajorVersion = '1';
+	/* Manufacturers are defined in include/linux/mtd/cfi.h */
+
+	if (cfi->mfr == CFI_MFR_SAMSUNG &&
+		extp->MajorVersion == '0') {
+			printk("  Fixed Samsung's Amd/Fujitsu Extended Query version from %c.%c",
+				extp->MajorVersion, extp->MinorVersion);
+
+			extp->MajorVersion = '1';
+			extp->MinorVersion = '0';
+
+			printk(" to %c.%c.\n",
+				extp->MajorVersion, extp->MinorVersion);
+	}
+
+	if (cfi->mfr == CFI_MFR_SAMSUNG &&
+		extp->MajorVersion == '3' && extp->MinorVersion == '3') {
+			printk(KERN_NOTICE "  Newer Samsung flash detected, "
+				"should be compatible with Amd/Fujitsu.\n");
+
+			printk("  Fixed Samsung's Amd/Fujitsu Extended Query version from %c.%c",
+				extp->MajorVersion, extp->MinorVersion);
+
+			extp->MajorVersion = '1';	// set to 1.3
+			extp->MinorVersion = '3';
+
+			printk(" to %c.%c.\n",
+				extp->MajorVersion, extp->MinorVersion);
+	}
 }
 
 struct mtd_info *cfi_cmdset_0002(struct map_info *map, int primary)
