Index: linux-3.18.21/arch/mips/econet/usb_oc_protect.c
===================================================================
--- linux-3.18.21.orig/arch/mips/econet/usb_oc_protect.c	2018-11-23 10:34:59.709158979 +0800
+++ linux-3.18.21/arch/mips/econet/usb_oc_protect.c	2018-11-22 18:47:58.461217600 +0800
@@ -19,7 +19,7 @@
 #include <asm/addrspace.h>
 #include <asm/tc3162/tc3162.h>
 #include <asm/tc3162/ledcetrl.h>
-
+#include <asm/tc3162/set_get_GPIO.h>
 // defined at ecnt_kernel_ext.c
 extern void (*Usb_Pwr_Ctrl_Op_Hook)(int action);
 
@@ -67,85 +67,6 @@
 static int _1ST_OC_FLG=0;
 #endif
 
-
-//using for set/get GPIO 0~63
-#define SET_GPIO_LOW(x)		do {	\
-								if(x > 31) {	\
-									regWrite32(CR_GPIO_DATA1,regRead32(CR_GPIO_DATA1)& ~(1<<(x-32)));	\
-								}else{	\
-									regWrite32(CR_GPIO_DATA,regRead32(CR_GPIO_DATA)& ~(1<<x));	\
-								}\
-							} while(0)
-#define SET_GPIO_HIGH(x)	do {	\
-								if(x > 31) {	\
-									regWrite32(CR_GPIO_DATA1,regRead32(CR_GPIO_DATA1)|(1<<(x-32)));	\
-								}else{	\
-									regWrite32(CR_GPIO_DATA,regRead32(CR_GPIO_DATA)|(1<<x));	\
-								}\
-							} while(0)
-static int GET_GPIO(int x) {
-	if(x > 31)
-		return (regRead32(CR_GPIO_DATA1)|(1<<(x-32)));
-	else
-		return (regRead32(CR_GPIO_DATA)&(1<<x));
-	return 0;
-}
-/* set input/output mode for gpio 0~63 */
-#define SET_GPIO_IN(x)	do { 	\
-			if(x > 31){							\
-				if(x > 47)						\
-					regWrite32(CR_GPIO_CTRL3,regRead32(CR_GPIO_CTRL3)&~(0x00000003 << ((x-48)* 2)));	\
-				else							\
-					regWrite32(CR_GPIO_CTRL2,regRead32(CR_GPIO_CTRL2)&~(0x00000003 << ((x-32)* 2)));	\
-				regWrite32(CR_GPIO_ODRAIN1,regRead32(CR_GPIO_ODRAIN1)&~(0x00000001 << (x-32)));	\
-			}									\
-			else{								\
-				if(x > 15)						\
-					regWrite32(CR_GPIO_CTRL1,regRead32(CR_GPIO_CTRL1)&~(0x00000003 << ((x-16)* 2)));	\
-				else							\
-					regWrite32(CR_GPIO_CTRL,regRead32(CR_GPIO_CTRL)&~(0x00000003 << (x* 2)));	\
-				regWrite32(CR_GPIO_ODRAIN,regRead32(CR_GPIO_ODRAIN)&~(0x00000001 << x));	\
-			}	\
-		} while(0)
-#define SET_GPIO_OUT(x)	do { 	\
-			if(x > 31){							\
-				if(x > 47){						\
-					regWrite32(CR_GPIO_CTRL3,regRead32(CR_GPIO_CTRL3)&~(3<<((x-48)*2))|(1<<((x-48)*2)));	\
-				}else{							\
-					regWrite32(CR_GPIO_CTRL2,regRead32(CR_GPIO_CTRL2)&~(3<<((x-32)*2))|(1<<((x-32)*2)));	\
-				}								\
-				regWrite32(CR_GPIO_ODRAIN1,regRead32(CR_GPIO_ODRAIN1)|(1<<(x-32)));	\
-			}									\
-			else{								\
-				if(x > 15){						\
-					regWrite32(CR_GPIO_CTRL1,regRead32(CR_GPIO_CTRL1)&~(3<<((x-16)*2))|(1<<((x-16)*2)));	\
-				}else{							\
-					regWrite32(CR_GPIO_CTRL,regRead32(CR_GPIO_CTRL)&~(3<<(x*2))|(1<<(x*2)));	\
-				}								\
-				regWrite32(CR_GPIO_ODRAIN,regRead32(CR_GPIO_ODRAIN)|(1<<(x)));	\
-			}	\
-		} while(0)
-static int IS_GPIO_OUT(int gpio_num) {
-	int val=0;
-	if(gpio_num > 31){
-		if(gpio_num > 47){
-			val = (regRead32(CR_GPIO_CTRL3)&(0x00000003<<((gpio_num-48)*2)));
-		}else{
-			val = (regRead32(CR_GPIO_CTRL2)&(0x00000003<<((gpio_num-32)*2)));
-		}
-	}
-	else{
-		if(gpio_num > 15){
-			val = (regRead32(CR_GPIO_CTRL1)&(0x00000003<<((gpio_num-16)*2)));
-		}else{
-			val = (regRead32(CR_GPIO_CTRL)&(0x00000003<<(gpio_num*2)));
-		}
-	}
-	DBG_MSG("IS_GPIO_OUT(%d)=%x\n", gpio_num, val);
-	if(val) return 1;
-	return 0;
-}
-
 static int _enable_1st_usb_power(int enable) {
 #ifndef ZYXEL_USB_OC_ENABLE_GPIO_ACTIVE_LOW
 	// Active HIGH
Index: linux-3.18.21/arch/mips/include/asm/tc3162/set_get_GPIO.h
===================================================================
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ linux-3.18.21/arch/mips/include/asm/tc3162/set_get_GPIO.h	2018-11-22 18:20:58.956851900 +0800
@@ -0,0 +1,107 @@
+#ifndef _SET_GET_GPIO_
+#define _SET_GET_GPIO_
+
+//CR_GPIO_DATA    (0/1)=>(low/high)
+#define SET_GPIO_LOW(x)		do {	\
+								if(x > 31) {	\
+									regWrite32(CR_GPIO_DATA1,regRead32(CR_GPIO_DATA1)& ~(1<<(x-32)));	\
+								}else{	\
+									regWrite32(CR_GPIO_DATA,regRead32(CR_GPIO_DATA)& ~(1<<x));	\
+								}\
+							} while(0)
+								
+#define SET_GPIO_HIGH(x)	do {	\
+								if(x > 31) {	\
+									regWrite32(CR_GPIO_DATA1,regRead32(CR_GPIO_DATA1)|(1<<(x-32)));	\
+								}else{	\
+									regWrite32(CR_GPIO_DATA,regRead32(CR_GPIO_DATA)|(1<<x));	\
+								}\
+							} while(0)
+
+//CR_GPIO_ODRAIN (0/1)=>(output disable/enable)
+//CR_GPIO_CTRL   (0/1)=>(input/output mode)
+#define SET_GPIO_IN(x)	do { 	\
+			if(x > 31){							\
+				if(x > 47)						\
+					regWrite32(CR_GPIO_CTRL3,regRead32(CR_GPIO_CTRL3)&~(0x00000003 << ((x-48)* 2)));	\
+				else							\
+					regWrite32(CR_GPIO_CTRL2,regRead32(CR_GPIO_CTRL2)&~(0x00000003 << ((x-32)* 2)));	\
+				regWrite32(CR_GPIO_ODRAIN1,regRead32(CR_GPIO_ODRAIN1)&~(0x00000001 << (x-32)));	\
+			}									\
+			else{								\
+				if(x > 15)						\
+					regWrite32(CR_GPIO_CTRL1,regRead32(CR_GPIO_CTRL1)&~(0x00000003 << ((x-16)* 2)));	\
+				else							\
+					regWrite32(CR_GPIO_CTRL,regRead32(CR_GPIO_CTRL)&~(0x00000003 << (x* 2)));	\
+				regWrite32(CR_GPIO_ODRAIN,regRead32(CR_GPIO_ODRAIN)&~(0x00000001 << x));	\
+			}	\
+		} while(0)
+			
+#define SET_GPIO_OUT(x)	do { 	\
+			if(x > 31){							\
+				if(x > 47){						\
+					regWrite32(CR_GPIO_CTRL3,regRead32(CR_GPIO_CTRL3)&~(3<<((x-48)*2))|(1<<((x-48)*2)));	\
+				}else{							\
+					regWrite32(CR_GPIO_CTRL2,regRead32(CR_GPIO_CTRL2)&~(3<<((x-32)*2))|(1<<((x-32)*2)));	\
+				}								\
+				regWrite32(CR_GPIO_ODRAIN1,regRead32(CR_GPIO_ODRAIN1)|(1<<(x-32)));	\
+			}									\
+			else{								\
+				if(x > 15){						\
+					regWrite32(CR_GPIO_CTRL1,regRead32(CR_GPIO_CTRL1)&~(3<<((x-16)*2))|(1<<((x-16)*2)));	\
+				}else{							\
+					regWrite32(CR_GPIO_CTRL,regRead32(CR_GPIO_CTRL)&~(3<<(x*2))|(1<<(x*2)));	\
+				}								\
+				regWrite32(CR_GPIO_ODRAIN,regRead32(CR_GPIO_ODRAIN)|(1<<(x)));	\
+			}	\
+		} while(0)
+
+//low or high			
+static int GET_GPIO(int x) 
+{
+	if(x > 31)
+	{
+		return ((regRead32(CR_GPIO_DATA1)&(1<<(x-32)))>>(x-32));
+	}
+	else
+	{
+		return ((regRead32(CR_GPIO_DATA) &(1<<x))>>(x));
+	}
+	return 0;
+}							
+
+static int IS_GPIO_OUT(int gpio_num) 
+{
+	int val=0;
+	if (gpio_num > 31)
+	{
+		if (gpio_num > 47)
+		{
+			val = (regRead32(CR_GPIO_CTRL3)&(0x00000003<<((gpio_num-48)*2)));
+		}
+		else
+		{
+			val = (regRead32(CR_GPIO_CTRL2)&(0x00000003<<((gpio_num-32)*2)));
+		}
+	}
+	else
+	{
+		if (gpio_num > 15)
+		{
+			val = (regRead32(CR_GPIO_CTRL1)&(0x00000003<<((gpio_num-16)*2)));
+		}
+		else
+		{
+			val = (regRead32(CR_GPIO_CTRL)&(0x00000003<<(gpio_num*2)));
+		}
+	}
+
+	if(val) 
+	{
+		return 1;
+	}
+	
+	return 0;
+}			
+
+#endif
