Index: linux-3.18.21/arch/mips/econet/Makefile
===================================================================
--- linux-3.18.21.orig/arch/mips/econet/Makefile	2018-11-23 15:45:34.009158979 +0800
+++ linux-3.18.21/arch/mips/econet/Makefile	2018-11-21 17:06:16.418841500 +0800
@@ -27,3 +27,4 @@
 endif
 
 obj-$(ZYXEL_SUPPORT_USB_PROTECTION_CIRCUIT) += usb_oc_protect.o
+obj-$(ZYXEL_SUPPORT_ZIGBEE_PROC_FS)    += zigbee_proc_fs.o
Index: linux-3.18.21/arch/mips/econet/zigbee_proc_fs.c
===================================================================
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ linux-3.18.21/arch/mips/econet/zigbee_proc_fs.c	2018-11-22 18:09:19.903068400 +0800
@@ -0,0 +1,283 @@
+#include <linux/kernel.h>
+#include <linux/spinlock.h>
+#include <linux/interrupt.h>
+#include <linux/signal.h>
+#include <linux/sched.h>
+#include <linux/module.h>
+#include <linux/init.h>
+#include <linux/delay.h>
+#include <linux/timer.h>
+#include <linux/proc_fs.h>
+#include <linux/version.h>
+#include <asm/addrspace.h>
+#include <asm/tc3162/tc3162.h>
+#include <asm/tc3162/ledcetrl.h>
+#include <asm/tc3162/set_get_GPIO.h>
+
+#define _USGPIOZIGBEESTOPBTL	ZYXEL_ZIGBEE_STOPBTL_GPIO  //22
+#define _USGPIOZIGBEERESET		ZYXEL_ZIGBEE_RESET_GPIO    //23
+
+struct proc_dir_entry *zigbee_proc_reset=NULL,*zigbee_proc_update=NULL,*pZIGBEE=NULL;
+			
+static int _is_zigbee_stopbtl_enabled(void) 
+{
+#ifndef ZYXEL_ZIGBEE_STOPBTL_GPIO_ACTIVE_LOW
+	// Active HIGH
+	if (GET_GPIO(_USGPIOZIGBEESTOPBTL) == 1)
+	{
+		return 1;
+	}
+	else
+	{
+		return 0;
+	}
+#else
+	// Active LOW
+	if (GET_GPIO(_USGPIOZIGBEESTOPBTL) == 0)
+	{
+		return 1;
+	}
+	else
+	{
+		return 0;
+	}
+#endif
+}
+
+static int _is_zigbee_reset_enabled(void) 
+{
+#ifndef ZYXEL_ZIGBEE_RESET_GPIO_ACTIVE_LOW
+	// Active HIGH
+	if (GET_GPIO(_USGPIOZIGBEERESET) == 1)
+	{
+		return 1;
+	}
+	else
+	{	
+		return 0;
+	}
+#else
+	// Active LOW
+	if (GET_GPIO(_USGPIOZIGBEERESET) == 0)
+	{
+		return 1;
+	}
+	else
+	{
+		return 0;
+	}
+#endif
+}
+//for minimum reset assertion time of 100 microsecond.
+static int reset_zigbee_module( void )
+{
+	SET_GPIO_HIGH(_USGPIOZIGBEERESET);
+	SET_GPIO_LOW(_USGPIOZIGBEERESET);
+	udelay(100);
+	SET_GPIO_HIGH(_USGPIOZIGBEERESET);
+	return 1;
+}
+	
+//----------------------read------------------------------------
+static int proc_get_zigbee_reset(char *page, char **start, off_t off, int count, int *eof, void *data)
+{
+	int len;
+
+	len = sprintf(page, "%d\n", _is_zigbee_reset_enabled());
+	len -= off;
+	*start = page + off;
+
+	if (len > count)
+	{
+		len = count;
+	}
+	else
+	{
+		*eof = 1;
+	}
+
+	if (len < 0)
+	{
+		len = 0;
+	}
+
+	return len;
+}
+static int proc_get_zigbee_stop_btl(char *page, char **start, off_t off, int count, int *eof, void *data)
+{
+	int len;
+
+	len = sprintf(page, "%d\n", _is_zigbee_stopbtl_enabled());
+	len -= off;
+	*start = page + off;
+
+	if (len > count)
+	{
+		len = count;
+	}
+	else
+	{
+		*eof = 1;
+	}
+
+	if (len < 0)
+	{
+		len = 0;
+	}
+
+	return len;
+}
+//----------------------read------------------------------------	
+
+//----------------------write-----------------------------------
+static int proc_set_zigbee_reset(struct file *file, const char *buffer, unsigned long count, void *data)
+{
+	char val_string[2]={0};
+	uint reset;
+
+	if (count != 2)
+	{	
+		printk("\nError format, just input 1 or 0\n");
+		printk("\ncount=%d\n",count);//chia
+		return -EINVAL;
+	}
+	
+	if (copy_from_user(val_string, buffer, count))
+	{
+		return -EFAULT;
+	}
+	
+	val_string[count] = '\0';
+
+	sscanf(val_string, "%d", &reset) ;
+	
+	if (reset == 1)
+	{
+		if ( !reset_zigbee_module() )//23
+		{
+			printk("Fail to reset zigbee module.\n");
+		}
+		else
+		{
+			printk("Reset zigbee module succeed.\n");
+		}
+	}
+	else if (reset == 0)
+	{
+		printk("Do nothing!\n");
+	}
+	else
+	{
+		printk("\nError format, just input 1 or 0\n");
+		return -EFAULT;
+	}
+	
+	return count;
+}
+
+static int proc_set_zigbee_stop_btl(struct file *file, const char *buffer, unsigned long count, void *data)
+{
+	char val_string[2]={0};
+	uint stop_btl;
+
+	if (count != 2)
+	{
+		printk("\nError format, just input 1 or 0\n");
+		printk("\ncount=%d\n",count);//chia
+		return -EFAULT;
+	}
+
+	if (copy_from_user(val_string, buffer, count) )
+	{
+		return -EFAULT;
+	}
+	
+	val_string[count] = '\0';
+	sscanf(val_string, "%d", &stop_btl) ;
+	
+	if (stop_btl == 1)//22
+	{
+		SET_GPIO_LOW(_USGPIOZIGBEESTOPBTL);
+	}
+	else if (stop_btl == 0)
+	{
+		SET_GPIO_HIGH(_USGPIOZIGBEESTOPBTL);
+	}
+	else
+	{
+		printk("\nError format, just input 1 or 0\n");
+		printk("\ncount=%d\n",count);//chia
+		printk("\stop_btl=%d\n",stop_btl);
+		return -EFAULT;
+	}
+
+	return count;
+}
+//----------------------write-----------------------------------
+
+void zigbee_gpioModeChk(void)
+{
+	// make sure zigbee reset pin is output
+	if(!IS_GPIO_OUT(_USGPIOZIGBEERESET)) 
+	{
+		SET_GPIO_OUT(_USGPIOZIGBEERESET);
+	}
+	
+		// make sure zigbee stop pin is output
+	if(!IS_GPIO_OUT(_USGPIOZIGBEESTOPBTL)) 
+	{
+		SET_GPIO_OUT(_USGPIOZIGBEESTOPBTL);
+	}
+}
+
+static int __init zigbee_update_reset_init(void)
+{
+	zigbee_gpioModeChk();
+	pZIGBEE = proc_mkdir("zigbee",NULL);
+	if (pZIGBEE)
+	{
+		zigbee_proc_reset = create_proc_entry("reset", 0644, pZIGBEE);
+		if (zigbee_proc_reset == NULL)
+		{
+			return -1;
+		}
+		zigbee_proc_reset->read_proc   = proc_get_zigbee_reset;
+		zigbee_proc_reset->write_proc  = proc_set_zigbee_reset;
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,30)
+		//New linux no longer requires proc_dir_entry->owner field.
+#else
+		zigbee_proc_reset->owner	   = THIS_MODULE;
+#endif
+
+		zigbee_proc_update = create_proc_entry("stop_btl", 0644, pZIGBEE);
+		if (zigbee_proc_update == NULL)
+		{
+			return -1;
+		}
+		zigbee_proc_update->read_proc   = proc_get_zigbee_stop_btl;
+		zigbee_proc_update->write_proc  = proc_set_zigbee_stop_btl;
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,30)
+		//New linux no longer requires proc_dir_entry->owner field.
+#else
+		zigbee_proc_update->owner		= THIS_MODULE;
+#endif
+	}
+
+	return 0;	
+}
+
+static void __exit zigbee_update_reset_exit(void)
+{
+	if (zigbee_proc_reset)
+	{
+		remove_proc_entry("reset", zigbee_proc_reset);
+	}
+	
+	if (zigbee_proc_update)
+	{
+		remove_proc_entry("stop_btl", zigbee_proc_update);
+	}
+}
+
+module_init(zigbee_update_reset_init);
+module_exit(zigbee_update_reset_exit);
