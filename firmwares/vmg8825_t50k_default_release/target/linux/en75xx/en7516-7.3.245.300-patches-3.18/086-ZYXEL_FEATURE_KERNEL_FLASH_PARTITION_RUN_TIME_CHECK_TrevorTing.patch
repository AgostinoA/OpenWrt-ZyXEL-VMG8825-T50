Index: linux-3.18.21/drivers/mtd/maps/tc3162-flash.c
===================================================================
--- linux-3.18.21.orig/drivers/mtd/maps/tc3162-flash.c	2018-08-15 10:48:20.285116000 +0800
+++ linux-3.18.21/drivers/mtd/maps/tc3162-flash.c	2018-08-15 10:54:44.645116000 +0800
@@ -212,6 +212,12 @@
 #define SIZE_KB_FOR_WWANPKG    0
 #endif
 
+#if defined(ZYXEL_FLASH_PARTITION_RUN_TIME_CHECK)
+extern const u32 ZYXEL_FLASH_SIZE_CHECK_128MB;
+extern const u32 ZYXEL_FLASH_SIZE_CHECK_256MB;
+extern u32 flashSize_mtd_partition_parse;
+#endif
+
 static struct mtd_info *tc3162_mtd_info;
 
 static struct map_info tc3162_map = {
@@ -1710,12 +1716,37 @@
 	if (IS_NANDFLASH) {
 	}
 #endif
+#if defined(ZYXEL_FLASH_PARTITION_RUN_TIME_CHECK) 
+    //printk("%s,%d, device size:0x%x \n", __FUNCTION__, __LINE__, flashSize_mtd_partition_parse);
+    if (flashSize_mtd_partition_parse == ZYXEL_FLASH_SIZE_CHECK_128MB)
+    {
+        //printk("%s,%d, device size:0x%x \n", __FUNCTION__, __LINE__, flashSize_mtd_partition_parse);
+        /* parse command line */
+        if (tc3162_mtdpart_setup(VMG8623_T50A_TCSUPPORT_PARTITIONS_CMDLINE_STR, blocksize) == 0)
+        {
+            printk("tc3162_mtdpart_setup fail, 0x8000000\n");
+            return 0;
+        }
+    }
+    else if (flashSize_mtd_partition_parse == ZYXEL_FLASH_SIZE_CHECK_256MB)
+    {
+        //printk("%s,%d, device size:0x%x \n", __FUNCTION__, __LINE__, flashSize_mtd_partition_parse);
+        /* parse command line */
+        if (tc3162_mtdpart_setup(VMG8825_T50A_TCSUPPORT_PARTITIONS_CMDLINE_STR, blocksize) == 0)
+        {
+            printk("tc3162_mtdpart_setup fail, 0x8000000\n");
+            return 0;
+        }
+    }
+#else //defined(ZYXEL_FLASH_PARTITION_RUN_TIME_CHECK)
 	/* parse command line */
-	if(tc3162_mtdpart_setup(TCSUPPORT_PARTITIONS_CMDLINE_STR, blocksize) == 0){
+	if (tc3162_mtdpart_setup(TCSUPPORT_PARTITIONS_CMDLINE_STR, blocksize) == 0)
+	{
 		printk("tc3162_mtdpart_setup fail\n");
 		return 0;
 	}
-	
+#endif //defined(ZYXEL_FLASH_PARTITION_RUN_TIME_CHECK)
+
 	for(i = 0, offset = 0; i < num_parts; i++)
 	{
 		if(ecnt_parts[i].offset == OFFSET_BACK_FORWARD){
Index: linux-3.18.21/kernel_ext/drivers/mtd/chips/spi_nand_flash.c
===================================================================
--- linux-3.18.21.orig/kernel_ext/drivers/mtd/chips/spi_nand_flash.c	2018-08-15 10:48:20.729116000 +0800
+++ linux-3.18.21/kernel_ext/drivers/mtd/chips/spi_nand_flash.c	2018-08-15 10:55:04.317116000 +0800
@@ -377,6 +377,12 @@
 
 struct SPI_NAND_FLASH_INFO_T	_current_flash_info_t;			/* Store the current flash information */
 
+#if defined(ZYXEL_FLASH_PARTITION_RUN_TIME_CHECK)
+const u32 ZYXEL_FLASH_SIZE_CHECK_128MB = 0x8000000;
+const u32 ZYXEL_FLASH_SIZE_CHECK_256MB = 0x10000000;
+u32 flashSize_mtd_partition_parse = 0;
+#endif
+
 /* LOCAL SUBPROGRAM BODIES------------------------------------------------------------ */
 #if !(defined(TCSUPPORT_2_6_36_KERNEL) || defined(TCSUPPORT_3_18_21_KERNEL))
 static int generic_ffs(int x)
@@ -3672,9 +3678,13 @@
 
 		rtn_status = scan_spi_nand_table(ptr_rtn_device_t);
 	}
-
+	
 	_SPI_NAND_PRINTF("spi_nand_probe: mfr_id=0x%x, dev_id=0x%x\n", ptr_rtn_device_t->mfr_id, ptr_rtn_device_t->dev_id);
 
+#if defined(ZYXEL_FLASH_PARTITION_RUN_TIME_CHECK)
+	flashSize_mtd_partition_parse = ptr_rtn_device_t->device_size;
+#endif
+
 	if(rtn_status == SPI_NAND_FLASH_RTN_NO_ERROR)
 	{
 		_SPI_NAND_DEBUG_PRINTF(SPI_NAND_FLASH_DEBUG_LEVEL_1, "spi_nand_probe: device size:0x%x \n", ptr_rtn_device_t->device_size);
@@ -4054,7 +4064,6 @@
 			}
 #endif
 		}
-
 		_SPI_NAND_PRINTF("Detected SPI NAND Flash : %s, Flash Size=0x%x\n", _current_flash_info_t.ptr_name,  _current_flash_info_t.device_size);
 
 		rtn_status = SPI_NAND_FLASH_RTN_NO_ERROR;
