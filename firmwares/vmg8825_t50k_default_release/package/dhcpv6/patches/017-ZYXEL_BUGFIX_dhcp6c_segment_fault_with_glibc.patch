Index: wide-dhcpv6-20080615/dhcp6c.c
===================================================================
--- wide-dhcpv6-20080615.orig/dhcp6c.c	2018-03-20 10:43:41.882272742 +0800
+++ wide-dhcpv6-20080615/dhcp6c.c	2018-03-20 13:52:16.096331630 +0800
@@ -1166,13 +1166,13 @@
 #include <sys/ioctl.h>
 #include <net/if.h>   //ifreq
 #include <unistd.h>   //close
-unsigned char * getmacaddr(ifname)
+unsigned char * getmacaddr(ifname, mac)
     unsigned char *ifname;
+    unsigned char *mac;
 {
     int fd;
     struct ifreq ifr;
     char *iface = ifname;
-    unsigned char *mac;
 
     fd = socket(AF_INET, SOCK_DGRAM, 0);
 
@@ -1183,7 +1183,7 @@
 
     close(fd);
 
-    mac = (unsigned char *)ifr.ifr_hwaddr.sa_data;
+    memcpy(mac, ifr.ifr_hwaddr.sa_data, 6);
     return mac;
 }
 
@@ -1240,7 +1240,7 @@
         //  a well-known value, e.g., zero.
         
 		// WenHsien: Here get MAC address, merge opt. type to generate unique IAID.
-		unsigned char *mac=NULL;
+        unsigned char mac[6];
 		unsigned char *ifname=NULL;
    		unsigned int type = 0;
 		// get mac
@@ -1249,7 +1249,7 @@
 		} else {
 			ifname = "eth0";
 		}
-   		mac = getmacaddr(ifname);
+   		 getmacaddr(ifname, mac);
 		// get type
    		if (IATYPE_PD == iac->type) {
    			type = 25;
