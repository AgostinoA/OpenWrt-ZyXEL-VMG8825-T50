Index: wide-dhcpv6-20080615/dhcp6c.c
===================================================================
--- wide-dhcpv6-20080615.orig/dhcp6c.c	2016-02-18 14:00:16.560579372 +0800
+++ wide-dhcpv6-20080615/dhcp6c.c	2016-02-18 14:36:59.423616509 +0800
@@ -1283,13 +1283,17 @@
 
 	/* elapsed time */
 	if (ev->timeouts == 0) {
-		gettimeofday(&ev->tv_start, NULL);
+		//gettimeofday(&ev->tv_start, NULL);
+		(&ev->tv_start)->tv_sec = getUptime();
+		(&ev->tv_start)->tv_usec = 0;
 		optinfo.elapsed_time = 0;
 	} else {
 		struct timeval now, tv_diff;
 		long et;
 
-		gettimeofday(&now, NULL);
+		//gettimeofday(&now, NULL);
+		now.tv_sec = getUptime();
+		now.tv_usec = 0;
 		tv_sub(&now, &ev->tv_start, &tv_diff);
 
 		/*
Index: wide-dhcpv6-20080615/timer.c
===================================================================
--- wide-dhcpv6-20080615.orig/timer.c	2007-03-21 17:52:56.000000000 +0800
+++ wide-dhcpv6-20080615/timer.c	2016-02-18 14:15:47.582954800 +0800
@@ -39,6 +39,7 @@
 #include <syslog.h>
 #include <stdlib.h>
 #include <string.h>
+#include <sys/sysinfo.h>
 #if defined(__NetBSD__) || defined(__OpenBSD__)
 #include <search.h>
 #endif
@@ -56,6 +57,13 @@
 static void timeval_add __P((struct timeval *, struct timeval *,
 			     struct timeval *));
 
+unsigned long getUptime()
+{
+	struct sysinfo s_info;
+	sysinfo(&s_info);
+	return s_info.uptime;
+}
+
 void
 dhcp6_timer_init()
 {
@@ -107,7 +115,9 @@
 	struct timeval now;
 
 	/* reset the timer */
-	gettimeofday(&now, NULL);
+	//gettimeofday(&now, NULL);
+	now.tv_sec = getUptime();
+	now.tv_usec = 0;
 
 	timeval_add(&now, tm, &timer->tm);
 
@@ -130,7 +140,9 @@
 	struct timeval now;
 	struct dhcp6_timer *tm, *tm_next;
 
-	gettimeofday(&now, NULL);
+	//gettimeofday(&now, NULL);
+	now.tv_sec = getUptime();
+	now.tv_usec = 0;
 
 	tm_sentinel = tm_max;
 	for (tm = LIST_FIRST(&timer_head); tm; tm = tm_next) {
@@ -163,7 +175,10 @@
 	struct timeval now;
 	static struct timeval returnval; /* XXX */
 
-	gettimeofday(&now, NULL);
+	//gettimeofday(&now, NULL);
+	now.tv_sec = getUptime();
+	now.tv_usec = 0;
+	
 	if (TIMEVAL_LEQ(timer->tm, now)) {
 		dprintf(LOG_DEBUG, FNAME,
 		    "a timer must be expired, but not yet");
Index: wide-dhcpv6-20080615/timer.h
===================================================================
--- wide-dhcpv6-20080615.orig/timer.h	2007-03-21 17:52:56.000000000 +0800
+++ wide-dhcpv6-20080615/timer.h	2016-02-18 14:07:22.539143259 +0800
@@ -60,3 +60,5 @@
 
 void timeval_sub __P((struct timeval *, struct timeval *,
 			     struct timeval *));
+unsigned long getUptime __P((void));
+
