Index: updatedd-2.6/src/updatedd.c
===================================================================
--- updatedd-2.6.orig/src/updatedd.c	2014-07-18 17:06:33.886339139 +0800
+++ updatedd-2.6/src/updatedd.c	2014-07-18 17:10:15.406251948 +0800
@@ -142,6 +142,22 @@
 
 }
 
+void get_time(char *time){
+	FILE *fp = NULL;
+	char *lst = calloc(128, sizeof(char));
+
+	fp = popen("date", "r");
+	if(fp != NULL){
+		if((fgets(lst, 128, fp)) != NULL){
+			strncpy(time, lst+4, 15);
+		}
+		pclose(fp);
+	}
+	free(lst);
+
+	return ;
+}
+
 int
 get_service(DIR *dir, char *buf, size_t size)
 {
@@ -185,6 +201,8 @@
 	int ret;
 	lib_main	ptr_main;
 	lib_getretmsg	ptr_getretmsg;
+	char cmd[64] = {0};
+	char time[16]={0};
 
 	ptr_main	= (lib_main)get_libfunc(service, LIB_MAIN);
 	ptr_getretmsg	= (lib_getretmsg)get_libfunc(service, LIB_GETRETMSG);
@@ -201,10 +219,15 @@
         case RET_WARNING:
         case RET_ERROR:
 		warn(NONE, "%s", (*ptr_getretmsg)());
+		get_time(time);
+		sprintf(cmd, "echo Not Accepted/%s/%s > /var/log/ddns.log", argv[argc-1], time);
+		system(cmd);
 		break;
         case RET_OK:
 		notice(NONE, "%s", (*ptr_getretmsg)());
-
+		get_time(time);
+		sprintf(cmd, "echo Accepted/%s/%s > /var/log/ddns.log", argv[argc-1],time);
+		system(cmd);
 	}
 
 	return ret;
