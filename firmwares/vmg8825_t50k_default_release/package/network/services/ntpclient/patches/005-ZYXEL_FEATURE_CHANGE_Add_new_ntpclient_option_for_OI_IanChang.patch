Index: ntpclient-2007/ntpclient.c
===================================================================
--- ntpclient-2007.orig/ntpclient.c	2017-10-18 13:50:14.961285851 +0800
+++ ntpclient-2007/ntpclient.c	2017-10-18 13:52:38.448147074 +0800
@@ -85,6 +85,12 @@
 #define  REPLAY_OPTION
 #endif
 
+#ifdef ZyXEL_PATCH
+#define  FIRST_SYNC_OPTION   "n:"
+#else
+#define  FIRST_SYNC_OPTION
+#endif
+
 extern char *optarg;  /* according to man 2 getopt */
 
 #include <stdint.h>
@@ -759,14 +765,15 @@
 #ifdef ZyXEL_PATCH
 	int port, probes_sent=0, err;
 	char *tmp;
-	int ntp_idx = 0;
+	int ntp_idx = 0, ntp_first_sync = 0;
+	static int first_time = 1; /* Keep track if it's the first time enabled ntpclient */
 	ntpc.ntp_server_count = 0;
 	memset(ntpc.ntp_server, 0, sizeof(NTP_SERVER)*NTP_MAX);
 	ntpclient_eid_register();
 #endif	
 
 	for (;;) {
-		c = getopt( argc, argv, "c:" DEBUG_OPTION "f:g:h:i:lp:q:" REPLAY_OPTION "st");
+		c = getopt( argc, argv, "c:" DEBUG_OPTION "f:g:h:i:lp:q:" REPLAY_OPTION FIRST_SYNC_OPTION "st");
 		if (c == EOF) break;
 		switch (c) {
 			case 'c':
@@ -830,7 +837,11 @@
 			case 't':
 				(ntpc.cross_check)=0;
 				break;
-
+#ifdef ZyXEL_PATCH
+			case 'n':
+				ntp_first_sync = atoi(optarg);
+				break;
+#endif
 			default:
 				usage(argv[0]);
 				exit(1);
@@ -957,6 +968,13 @@
 			}
 		}
 		close(usd);
+#if ZyXEL_PATCH
+		if(first_time) {
+			first_time = 0;
+			sleep(ntp_first_sync); /* Sleep 300 seconds for the first time synchronization */
+		}
+		else
+#endif
 		sleep(ntpc.cycle_time); 
 	}
 #else
