Index: udhcp-0.9.8/dhcpc.c
===================================================================
--- udhcp-0.9.8.orig/dhcpc.c	2015-02-13 18:40:58.069634896 +0800
+++ udhcp-0.9.8/dhcpc.c	2015-02-13 18:47:56.632678166 +0800
@@ -733,6 +733,31 @@
 					run_script(&packet, "nak");
 					if (state != REQUESTING)
 						run_script(NULL, "deconfig");
+					
+#if 1	/* renew fail, send ZCFG_MSG_WAN_CONNECTION_LOST to ESMD for notification*/
+					if (state == REBINDING){
+						char ip[16] = {0};
+						unsigned char *tmpIp;
+						struct json_object *dhcpc_opt = NULL;
+						const char *payload = NULL;
+						int payloadLen = 0;
+						
+						dhcpc_opt = json_object_new_object();
+						tmpIp = (unsigned char *) &requested_ip;
+						sprintf(ip, "%d.%d.%d.%d", tmpIp[0], tmpIp[1], tmpIp[2], tmpIp[3]);
+						json_object_object_add(dhcpc_opt, "ip", json_object_new_string(ip));
+						
+						json_object_object_add(dhcpc_opt, "addressAssigned", json_object_new_boolean(false));
+						json_object_object_add(dhcpc_opt, "pidfile", json_object_new_string(client_config.pidfile));
+						
+						payload = json_object_to_json_string(dhcpc_opt);
+						
+						payloadLen = strlen(payload) + 1;
+						dhcpMsgSend(ZCFG_MSG_DHCPC_RELEASE, ZCFG_EID_ESMD, payloadLen, payload);
+						json_object_put(dhcpc_opt);
+					}
+#endif
+
 					state = INIT_SELECTING;
 					timeout = now;
 					requested_ip = 0;
