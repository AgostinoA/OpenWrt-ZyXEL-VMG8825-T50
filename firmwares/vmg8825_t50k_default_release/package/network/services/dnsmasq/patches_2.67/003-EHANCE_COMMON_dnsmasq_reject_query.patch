Index: dnsmasq-2.67/src/forward.c
===================================================================
--- dnsmasq-2.67.orig/src/forward.c	2013-10-25 17:37:30.000000000 +0800
+++ dnsmasq-2.67/src/forward.c	2014-06-16 19:11:13.174681452 +0800
@@ -359,6 +359,12 @@
 		fd = start->sfd->fd;
 	      else 
 		{
+#ifdef ZYXEL_PATCH //reject query when special domain query has no socket
+			if(type == SERV_HAS_DOMAIN && hostname_isequal(domain, start->domain)){
+				my_syslog(LOG_WARNING, _("Reject query for %s"), start->domain);
+						break;
+			}
+#endif
 #ifdef HAVE_IPV6
 		  if (start->addr.sa.sa_family == AF_INET6)
 		    {
Index: dnsmasq-2.67/src/network.c
===================================================================
--- dnsmasq-2.67.orig/src/network.c	2013-10-25 17:37:30.000000000 +0800
+++ dnsmasq-2.67/src/network.c	2014-06-16 19:11:13.174681452 +0800
@@ -1031,8 +1031,14 @@
 
   return 1;
 }
+#ifdef ZYXEL_PATCH
+#define allocate_sfd(a, i) do_allocate_sfd(a, i, 0)
+#define allocate_sfd_mark(a, i, m) do_allocate_sfd(a, i, m)
 
+static struct serverfd *do_allocate_sfd(union mysockaddr *addr, char *intname, unsigned long mark)
+#else
 static struct serverfd *allocate_sfd(union mysockaddr *addr, char *intname)
+#endif
 {
   struct serverfd *sfd;
   int errsave;
@@ -1072,6 +1078,11 @@
       free(sfd);
       return NULL;
     }
+#ifdef ZYXEL_PATCH
+	if(mark != 0) {
+		setsockopt(sfd->fd, SOL_SOCKET, SO_MARK, &mark, sizeof(mark));  
+	}
+#endif
   
   if (!local_bind(sfd->fd, addr, intname, 0) || !fix_fd(sfd->fd))
     { 
@@ -1120,7 +1131,11 @@
   
   for (srv = daemon->servers; srv; srv = srv->next)
     if (!(srv->flags & (SERV_LITERAL_ADDRESS | SERV_NO_ADDR | SERV_USE_RESOLV | SERV_NO_REBIND)) &&
+#ifdef ZYXEL_PATCH
+	!allocate_sfd_mark(&srv->source_addr, srv->interface, srv->sock_mark) &&
+#else
 	!allocate_sfd(&srv->source_addr, srv->interface) &&
+#endif
 	errno != 0 &&
 	option_bool(OPT_NOWILD))
       {
@@ -1141,6 +1156,8 @@
   struct irec *iface;
   struct server *new, *tmp, *ret = NULL;
   int port = 0;
+#ifdef ZYXEL_PATCH
+#endif
 
   /* interface may be new since startup */
   if (!option_bool(OPT_NOWILD))
@@ -1158,8 +1175,12 @@
 	  if (new->addr.sa.sa_family == AF_INET &&
 	      new->addr.in.sin_addr.s_addr == 0)
 	    {
+#ifdef ZYXEL_PATCH  // don't ignoring 0.0.0.0, for special reject query
+          goto SETTOLIST;
+#else
 	      free(new);
 	      continue;
+#endif
 	    }
 
 	  for (iface = daemon->interfaces; iface; iface = iface->next)
@@ -1174,17 +1195,25 @@
 	  
 	  /* Do we need a socket set? */
 	  if (!new->sfd && 
+#ifdef ZYXEL_PATCH
+	      !(new->sfd = allocate_sfd_mark(&new->source_addr, new->interface, new->sock_mark)) &&
+#else
 	      !(new->sfd = allocate_sfd(&new->source_addr, new->interface)) &&
+#endif
 	      errno != 0)
 	    {
 	      my_syslog(LOG_WARNING, 
 			_("ignoring nameserver %s - cannot make/bind socket: %s"),
 			daemon->namebuff, strerror(errno));
+#ifndef ZYXEL_PATCH //don't free special domain rule. for reject query
 	      free(new);
 	      continue;
+#endif
 	    }
 	}
-      
+#ifdef ZYXEL_PATCH
+SETTOLIST:
+#endif      
       /* reverse order - gets it right. */
       new->next = ret;
       ret = new;
Index: dnsmasq-2.67/src/dnsmasq.h
===================================================================
--- dnsmasq-2.67.orig/src/dnsmasq.h	2014-06-16 19:11:13.154681452 +0800
+++ dnsmasq-2.67/src/dnsmasq.h	2014-06-16 19:11:13.178681452 +0800
@@ -443,6 +443,9 @@
   
 struct server {
   union mysockaddr addr, source_addr;
+#ifdef ZYXEL_PATCH
+  unsigned long sock_mark;
+#endif
   char interface[IF_NAMESIZE+1];
   struct serverfd *sfd; 
   char *domain; /* set if this server only handles a domain. */ 
@@ -1053,8 +1056,13 @@
 void set_option_bool(unsigned int opt);
 void reset_option_bool(unsigned int opt);
 struct hostsfile *expand_filelist(struct hostsfile *list);
+#ifdef ZYXEL_PATCH
+char *parse_server(char *arg, union mysockaddr *addr, 
+		   union mysockaddr *source_addr, char *interface, int *flags, unsigned long *mark);
+#else
 char *parse_server(char *arg, union mysockaddr *addr, 
 		   union mysockaddr *source_addr, char *interface, int *flags);
+#endif
 
 /* forward.c */
 void reply_query(int fd, int family, time_t now);
Index: dnsmasq-2.67/src/option.c
===================================================================
--- dnsmasq-2.67.orig/src/option.c	2013-10-25 17:37:30.000000000 +0800
+++ dnsmasq-2.67/src/option.c	2014-06-16 19:13:01.399686700 +0800
@@ -555,7 +555,24 @@
 
   return ret;
 }
+#ifdef ZYXEL_PATCH
+static int hextoul_check(char *a, unsigned long *res)
+{
+  char *p;
+
+  if (!a)
+    return 0;
 
+  unhide_metas(a);
+  
+  for (p = a; *p; p++)
+     if ( !((*p >= '0' && *p <= '9') || (*p >= 'a' && *p <= 'f')) )
+       return 0;
+
+  *res = strtoul(a, NULL, 16);
+  return 1;
+}
+#endif
 static int atoi_check(char *a, int *res)
 {
   char *p;
@@ -656,8 +673,11 @@
 }
 
 #define ret_err(x) do { strcpy(errstr, (x)); return 0; } while (0)
-
+#ifdef ZYXEL_PATCH
+char *parse_server(char *arg, union mysockaddr *addr, union mysockaddr *source_addr, char *interface, int *flags, unsigned long *mark)
+#else
 char *parse_server(char *arg, union mysockaddr *addr, union mysockaddr *source_addr, char *interface, int *flags)
+#endif
 {
   int source_port = 0, serv_port = NAMESERVER_PORT;
   char *portno, *source;
@@ -665,12 +685,21 @@
   int scope_index = 0;
   char *scope_id;
 #endif
+#ifdef ZYXEL_PATCH
+  char *markPtr = NULL;
+  unsigned long sock_mark = 0;
+#endif
   
   if ((source = split_chr(arg, '@')) && /* is there a source. */
       (portno = split_chr(source, '#')) &&
       !atoi_check16(portno, &source_port))
     return _("bad port");
-  
+#ifdef ZYXEL_PATCH
+  if (source && /* is there a source. */
+      (markPtr = split_chr(source, '$')) &&
+      !hextoul_check(markPtr, &sock_mark))
+    return _("bad mark");	
+#endif  
   if ((portno = split_chr(arg, '#')) && /* is there a port no. */
       !atoi_check16(portno, &serv_port))
     return _("bad port");
@@ -691,6 +720,11 @@
       
       if (source)
 	{
+#ifdef ZYXEL_PATCH
+		if(mark){
+			*mark = sock_mark;
+		}
+#endif
 	  if (flags)
 	    *flags |= SERV_HAS_SOURCE;
 	  source_addr->in.sin_port = htons(source_port);
@@ -2104,7 +2138,11 @@
 	  }
 	else
 	  {
+#ifdef ZYXEL_PATCH	  
+	    char *err = parse_server(arg, &newlist->addr, &newlist->source_addr, newlist->interface, &newlist->flags, &newlist->sock_mark);
+#else
 	    char *err = parse_server(arg, &newlist->addr, &newlist->source_addr, newlist->interface, &newlist->flags);
+#endif
 	    if (err)
 	      ret_err(err);
 	  }
Index: dnsmasq-2.67/src/dbus.c
===================================================================
--- dnsmasq-2.67.orig/src/dbus.c	2013-10-25 17:37:30.000000000 +0800
+++ dnsmasq-2.67/src/dbus.c	2014-06-16 19:11:13.178681452 +0800
@@ -416,7 +416,11 @@
       memset(&interface, 0, sizeof(interface));
 
       /* parse the IP address */
+#ifdef ZYXEL_PATCH		  
+      addr_err = parse_server(str_addr, &addr, &source_addr, (char *) &interface, NULL, NULL);
+#else
       addr_err = parse_server(str_addr, &addr, &source_addr, (char *) &interface, NULL);
+#endif
 
       if (addr_err)
         {
