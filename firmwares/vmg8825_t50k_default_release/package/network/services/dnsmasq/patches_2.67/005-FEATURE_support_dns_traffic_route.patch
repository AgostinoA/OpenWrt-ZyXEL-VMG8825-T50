diff -Naur dnsmasq-2.67.orig/src/cache.c dnsmasq-2.67/src/cache.c
--- dnsmasq-2.67.orig/src/cache.c	2013-10-25 17:37:30.000000000 +0800
+++ dnsmasq-2.67/src/cache.c	2014-08-29 15:43:07.109749700 +0800
@@ -512,12 +512,70 @@
   return new;
 }
 
+#ifdef DNS_TRAFFIC_ROUTE
+add_dns_traffic_route(uint32_t s_addr, const char *cname, int *flush)
+{
+	char sysCmd[128] = "";
+	struct in_addr srcIP;
+	srcIP.s_addr = s_addr;
+	struct server *serv = NULL;
+
+	if(s_addr == 0){
+		return;
+	}
+	
+	serv = daemon->servers;
+	
+	while(serv){
+		if(serv->domain && (strcmp(cname, serv->domain) == 0)){
+			if(*flush){
+				/* deledt */
+				sprintf(sysCmd, "iptables -t mangle -D IP_ROUTE2_DNSRT -j DNSRT_RULE_%d", serv->rule_no);
+				system(sysCmd);
+
+				sprintf(sysCmd, "iptables -t mangle -F DNSRT_RULE_%d", serv->rule_no);
+				system(sysCmd);
+
+				sprintf(sysCmd, "iptables -t mangle -X DNSRT_RULE_%d", serv->rule_no);
+				system(sysCmd);
+				
+				/* create */
+				sprintf(sysCmd, "iptables -t mangle -N DNSRT_RULE_%d", serv->rule_no);
+				system(sysCmd);
+
+				sprintf(sysCmd, "iptables -t mangle -A IP_ROUTE2_DNSRT -j DNSRT_RULE_%d", serv->rule_no);
+				system(sysCmd);
+				
+				*flush = 0;
+			}
+			
+			/* add */
+			sprintf(sysCmd, "iptables -t mangle -D DNSRT_RULE_%d -d %s/%d -j MARK --or-mark 0x%x 2> /dev/null", 
+					serv->rule_no, inet_ntoa(srcIP), serv->subnet_mask, serv->sock_mark);
+			system(sysCmd);
+			
+			sprintf(sysCmd, "iptables -t mangle -A DNSRT_RULE_%d -d %s/%d -j MARK --or-mark 0x%x", 
+					serv->rule_no, inet_ntoa(srcIP), serv->subnet_mask, serv->sock_mark);
+			system(sysCmd);
+			
+			break;
+		}
+		serv = serv->next;
+	}
+}
+#endif
+
 /* after end of insertion, commit the new entries */
 void cache_end_insert(void)
 {
+#ifdef DNS_TRAFFIC_ROUTE
+  struct in_addr *target = NULL;
+  int flush = 1;
+#endif
+
   if (insert_error)
     return;
-  
+
   while (new_chain)
     { 
       struct crec *tmp = new_chain->next;
@@ -529,6 +587,15 @@
 	  cache_hash(new_chain);
 	  cache_link(new_chain);
 	  cache_inserted++;
+#ifdef DNS_TRAFFIC_ROUTE	
+		if((new_chain->flags & (F_FORWARD|F_IPV4)) == (F_FORWARD|F_IPV4)){
+			target = &new_chain->addr.addr.addr.addr4;
+		}
+
+		if(target){
+			add_dns_traffic_route(target->s_addr, cache_get_name(new_chain), &flush);
+		}
+#endif
 	}
       new_chain = tmp;
     }
diff -Naur dnsmasq-2.67.orig/src/dbus.c dnsmasq-2.67/src/dbus.c
--- dnsmasq-2.67.orig/src/dbus.c	2014-08-23 02:22:30.903783200 +0800
+++ dnsmasq-2.67/src/dbus.c	2014-08-29 15:37:40.543527100 +0800
@@ -416,8 +416,12 @@
       memset(&interface, 0, sizeof(interface));
 
       /* parse the IP address */
-#ifdef ZYXEL_PATCH		  
+#ifdef ZYXEL_PATCH
+#ifdef DNS_TRAFFIC_ROUTE
+      addr_err = parse_server(str_addr, &addr, &source_addr, (char *) &interface, NULL, NULL, NULL, NULL);
+#else
       addr_err = parse_server(str_addr, &addr, &source_addr, (char *) &interface, NULL, NULL);
+#endif
 #else
       addr_err = parse_server(str_addr, &addr, &source_addr, (char *) &interface, NULL);
 #endif
diff -Naur dnsmasq-2.67.orig/src/dnsmasq.h dnsmasq-2.67/src/dnsmasq.h
--- dnsmasq-2.67.orig/src/dnsmasq.h	2014-08-23 02:22:30.903783200 +0800
+++ dnsmasq-2.67/src/dnsmasq.h	2014-08-29 15:38:13.274434400 +0800
@@ -445,6 +445,10 @@
   union mysockaddr addr, source_addr;
 #ifdef ZYXEL_PATCH
   unsigned long sock_mark;
+#ifdef DNS_TRAFFIC_ROUTE
+  int subnet_mask;
+  int rule_no;
+#endif
 #endif
   char interface[IF_NAMESIZE+1];
   struct serverfd *sfd; 
@@ -1057,8 +1061,14 @@
 void reset_option_bool(unsigned int opt);
 struct hostsfile *expand_filelist(struct hostsfile *list);
 #ifdef ZYXEL_PATCH
+#ifdef DNS_TRAFFIC_ROUTE
+char *parse_server(char *arg, union mysockaddr *addr, 
+		   union mysockaddr *source_addr, char *interface, int *flags, unsigned long *mark,
+		   int *subnet_mask, int *rule_no);
+#else
 char *parse_server(char *arg, union mysockaddr *addr, 
 		   union mysockaddr *source_addr, char *interface, int *flags, unsigned long *mark);
+#endif
 #else
 char *parse_server(char *arg, union mysockaddr *addr, 
 		   union mysockaddr *source_addr, char *interface, int *flags);
diff -Naur dnsmasq-2.67.orig/src/option.c dnsmasq-2.67/src/option.c
--- dnsmasq-2.67.orig/src/option.c	2014-08-23 02:22:30.903783200 +0800
+++ dnsmasq-2.67/src/option.c	2014-08-29 15:45:11.313805300 +0800
@@ -674,7 +674,11 @@
 
 #define ret_err(x) do { strcpy(errstr, (x)); return 0; } while (0)
 #ifdef ZYXEL_PATCH
+#ifdef DNS_TRAFFIC_ROUTE
+char *parse_server(char *arg, union mysockaddr *addr, union mysockaddr *source_addr, char *interface, int *flags, unsigned long *mark, int *subnet_mask, int *rule_no)
+#else
 char *parse_server(char *arg, union mysockaddr *addr, union mysockaddr *source_addr, char *interface, int *flags, unsigned long *mark)
+#endif
 #else
 char *parse_server(char *arg, union mysockaddr *addr, union mysockaddr *source_addr, char *interface, int *flags)
 #endif
@@ -688,6 +692,12 @@
 #ifdef ZYXEL_PATCH
   char *markPtr = NULL;
   unsigned long sock_mark = 0;
+#ifdef DNS_TRAFFIC_ROUTE
+  char *maskPtr = NULL;
+  int mask = 32;
+  char *rulePtr = NULL;
+  int rule = 0;
+#endif
 #endif
   
   if ((source = split_chr(arg, '@')) && /* is there a source. */
@@ -695,10 +705,20 @@
       !atoi_check16(portno, &source_port))
     return _("bad port");
 #ifdef ZYXEL_PATCH
+#ifdef DNS_TRAFFIC_ROUTE
+  if (source && /* is there a source. */
+      (rulePtr = split_chr(source, '|')) &&
+      !atoi_check(rulePtr, &rule))
+    return _("bad rule");
+  if (source && /* is there a source. */
+      (maskPtr = split_chr(source, '&')) &&
+      !atoi_check(maskPtr, &mask))
+    return _("bad mask");
+#endif
   if (source && /* is there a source. */
       (markPtr = split_chr(source, '$')) &&
       !hextoul_check(markPtr, &sock_mark))
-    return _("bad mark");	
+    return _("bad mark");
 #endif  
   if ((portno = split_chr(arg, '#')) && /* is there a port no. */
       !atoi_check16(portno, &serv_port))
@@ -724,6 +744,14 @@
 		if(mark){
 			*mark = sock_mark;
 		}
+#ifdef DNS_TRAFFIC_ROUTE
+		if(subnet_mask){
+			*subnet_mask = mask;
+		}
+		if(rule_no){
+			*rule_no = rule;
+		}
+#endif
 #endif
 	  if (flags)
 	    *flags |= SERV_HAS_SOURCE;
@@ -2138,8 +2166,12 @@
 	  }
 	else
 	  {
-#ifdef ZYXEL_PATCH	  
+#ifdef ZYXEL_PATCH
+#ifdef DNS_TRAFFIC_ROUTE
+	    char *err = parse_server(arg, &newlist->addr, &newlist->source_addr, newlist->interface, &newlist->flags, &newlist->sock_mark, &newlist->subnet_mask, &newlist->rule_no);
+#else
 	    char *err = parse_server(arg, &newlist->addr, &newlist->source_addr, newlist->interface, &newlist->flags, &newlist->sock_mark);
+#endif
 #else
 	    char *err = parse_server(arg, &newlist->addr, &newlist->source_addr, newlist->interface, &newlist->flags);
 #endif
