--- a/src/drivers/driver_nl80211.c
+++ b/src/drivers/driver_nl80211.c
@@ -3394,16 +3394,18 @@ wpa_driver_nl80211_finish_drv_init(struc
 }
 
 
-static int wpa_driver_nl80211_del_beacon(struct wpa_driver_nl80211_data *drv)
+static int wpa_driver_nl80211_del_bss_beacon(struct i802_bss *bss)
 {
+	struct wpa_driver_nl80211_data *drv = bss->drv;
 	struct nl_msg *msg;
 
+	bss->beacon_set = 0;
 	msg = nlmsg_alloc();
 	if (!msg)
 		return -ENOMEM;
 
 	nl80211_cmd(drv, msg, 0, NL80211_CMD_DEL_BEACON);
-	NLA_PUT_U32(msg, NL80211_ATTR_IFINDEX, drv->ifindex);
+	NLA_PUT_U32(msg, NL80211_ATTR_IFINDEX, bss->ifindex);
 
 	return send_and_recv_msgs(drv, msg, NULL, NULL);
  nla_put_failure:
@@ -3411,6 +3413,21 @@ static int wpa_driver_nl80211_del_beacon
 	return -ENOBUFS;
 }
 
+static int wpa_driver_nl80211_del_beacon(struct wpa_driver_nl80211_data *drv)
+{
+	struct i802_bss *bss;
+
+	for (bss = &drv->first_bss; bss; bss = bss->next)
+		wpa_driver_nl80211_del_bss_beacon(bss);
+
+	return 0;
+}
+
+static int wpa_driver_nl80211_stop_ap(void *priv)
+{
+	struct i802_bss *bss = priv;
+	return wpa_driver_nl80211_del_beacon(bss->drv);
+}
 
 /**
  * wpa_driver_nl80211_deinit - Deinitialize nl80211 driver interface
@@ -9238,4 +9255,5 @@ const struct wpa_driver_ops wpa_driver_n
 	.send_tdls_mgmt = nl80211_send_tdls_mgmt,
 	.tdls_oper = nl80211_tdls_oper,
 #endif /* CONFIG_TDLS */
+	.stop_ap = wpa_driver_nl80211_stop_ap,
 };
--- a/src/drivers/driver.h
+++ b/src/drivers/driver.h
@@ -2053,6 +2053,9 @@ struct wpa_driver_ops {
 	 */
 	int (*probe_req_report)(void *priv, int report);
 
+
+	int (*stop_ap)(void *priv);
+
 	/**
 	 * deinit_ap - Deinitialize AP mode
 	 * @priv: Private driver interface data
