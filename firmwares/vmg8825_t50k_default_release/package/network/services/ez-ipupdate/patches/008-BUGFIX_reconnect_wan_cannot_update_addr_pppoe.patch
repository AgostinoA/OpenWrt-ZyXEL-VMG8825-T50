Index: ez-ipupdate-3.0.11b8/ez-ipupdate.c
===================================================================
--- ez-ipupdate-3.0.11b8.orig/ez-ipupdate.c
+++ ez-ipupdate-3.0.11b8/ez-ipupdate.c
@@ -135,6 +135,8 @@ char address_log[17]="0.0.0.0";
 #define DEFAULT_UPDATE_PERIOD 120
 #define DEFAULT_RESOLV_PERIOD 30
 
+#define TRY_COUNT 10
+
 #ifdef DEBUG
 #  define BUFFER_SIZE (16*1024)
 #else
@@ -1692,17 +1694,17 @@ int Check_Host_IP() {
 
   if(hp == NULL) {
     printf("Get host IP failed\n"); // no such domain name or still not regist yet
-    free(currentip);
+    //free(currentip);
 	return -1;
   } else {
     if(strcmp(inet_ntoa(*(struct in_addr*)(hp->h_addr_list[0])), currentip) == 0) {
       printf("Updated IP has not changed since the last update, stop update!\n");
       dprintf((stderr, "Updated IP: %s, current IP: %s\n", inet_ntoa(*(struct in_addr*)(hp->h_addr_list[0])), currentip));
-      free(currentip);
+      //free(currentip);
       return -2;
     }
     printf("Updated IP: %s, current IP: %s\nGo on with DDNS update\n", inet_ntoa(*(struct in_addr*)(hp->h_addr_list[0])), currentip);
-    free(currentip);
+    //free(currentip);
     return 0;
   }
 }
@@ -2205,7 +2207,12 @@ int DYNDNS_update_entry(void)
   int btot;
   int ret;
   int retval = UPDATERES_OK;
+#if 1
+  int cnt = 0;
 
+  for(cnt=0; cnt<TRY_COUNT; cnt++)
+  {
+#endif
   buf[BUFFER_SIZE] = '\0';
 
   int ddns = Check_Host_IP();
@@ -2458,6 +2465,12 @@ int DYNDNS_update_entry(void)
       retval = UPDATERES_ERROR;
       break;
   }
+#if 1
+  if(retval == UPDATERES_OK)
+  	break;
+  }
+  free(currentip);
+#endif
   if(retval != UPDATERES_OK){
 	success[0]='1';
   }
