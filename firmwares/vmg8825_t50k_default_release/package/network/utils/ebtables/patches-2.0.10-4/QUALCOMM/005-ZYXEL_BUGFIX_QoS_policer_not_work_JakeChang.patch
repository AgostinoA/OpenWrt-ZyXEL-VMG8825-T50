Index: ebtables-v2.0.10-4/extensions/ebt_ftos.c
===================================================================
--- ebtables-v2.0.10-4.orig/extensions/ebt_ftos.c
+++ ebtables-v2.0.10-4/extensions/ebt_ftos.c
@@ -71,7 +71,11 @@ parse(int c, char **argv, int argc,
 
 	switch (c) {
 	case FTOS_TRGT:
+#if 1	/* porting from MSTC */
+		ebt_check_option2(flags, OPT_FTOS_TARGET);
+#else
 		ebt_check_option2(flags, FTOS_TRGT);
+#endif
 		if (FILL_TARGET(optarg, ftosinfo->target))
 			ebt_print_error("Illegal --ftos-target target");
 		break;
Index: ebtables-v2.0.10-4/include/linux/netfilter_bridge/ebt_ip.h
===================================================================
--- ebtables-v2.0.10-4.orig/include/linux/netfilter_bridge/ebt_ip.h
+++ ebtables-v2.0.10-4/include/linux/netfilter_bridge/ebt_ip.h
@@ -25,24 +25,16 @@
 #define EBT_IP_DPORT 0x20
 
 #if 1 /* ZyXEL QoS, John (porting from MSTC) */
-#if defined(CONFIG_BCM_KF_NETFILTER) || !defined(CONFIG_BCM_IN_KERNEL)
 #define EBT_IP_DSCP  0x40
-#endif
 #define EBT_IP_LENGTH 0x80
 #define EBT_IP_TCP_FLAGS 0x100
 #define EBT_IP_DHCP_OPT60 0x200
 #define EBT_IP_DHCP_OPT61 0x400
 #define EBT_IP_DHCP_OPT77 0x800
 #define EBT_IP_DHCP_OPT125 0x1000
-#if defined(CONFIG_BCM_KF_NETFILTER) || !defined(CONFIG_BCM_IN_KERNEL)
 #define EBT_IP_MASK (EBT_IP_SOURCE | EBT_IP_DEST | EBT_IP_TOS | EBT_IP_PROTO |\
  EBT_IP_SPORT | EBT_IP_DPORT | EBT_IP_DSCP | EBT_IP_LENGTH | EBT_IP_TCP_FLAGS |\
  EBT_IP_DHCP_OPT60 | EBT_IP_DHCP_OPT61 | EBT_IP_DHCP_OPT77 | EBT_IP_DHCP_OPT125)
-#else
-#define EBT_IP_MASK (EBT_IP_SOURCE | EBT_IP_DEST | EBT_IP_TOS | EBT_IP_PROTO |\
- EBT_IP_SPORT | EBT_IP_DPORT | EBT_IP_LENGTH | EBT_IP_TCP_FLAGS |\
- EBT_IP_DHCP_OPT60 | EBT_IP_DHCP_OPT61 | EBT_IP_DHCP_OPT77 | EBT_IP_DHCP_OPT125)
-#endif
 #define DHCP_OPTION_MAX_LEN 556 /* IP header(20) + UDP header(8)+ DHCP header(528) */
 
 #define DHCP_PADDING                            0x00
@@ -116,9 +108,7 @@ struct ebt_ip_info
 	__be32 smsk;
 	__be32 dmsk;
 	__u8  tos;
-#if defined(CONFIG_BCM_KF_NETFILTER) || !defined(CONFIG_BCM_IN_KERNEL)
 	__u8  dscp; /* brcm */
-#endif
 	__u8  protocol;
 	__u16  bitmask;
 	__u16  invflags;
