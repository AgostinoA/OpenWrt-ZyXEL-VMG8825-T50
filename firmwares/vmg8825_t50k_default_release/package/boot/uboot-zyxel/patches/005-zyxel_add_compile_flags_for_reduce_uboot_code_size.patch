Index: u-boot-2009.11/net/net.c
===================================================================
--- u-boot-2009.11.orig/net/net.c	2012-10-19 16:28:05.509512011 +0800
+++ u-boot-2009.11/net/net.c	2012-10-19 16:28:17.909505974 +0800
@@ -431,18 +431,20 @@
 			DhcpRequest();		/* Basically same as BOOTP */
 			break;
 #endif
-
+#if defined(CONFIG_CMD_BOOTP)
 		case BOOTP:
 			BootpTry = 0;
 			NetOurIP = 0;
 			BootpRequest ();
 			break;
-
+#endif
+#if defined(CONFIG_CMD_RARP)
 		case RARP:
 			RarpTry = 0;
 			NetOurIP = 0;
 			RarpRequest ();
 			break;
+#endif
 #if defined(CONFIG_CMD_PING)
 		case PING:
 			PingStart();
Index: u-boot-2009.11/net/Makefile
===================================================================
--- u-boot-2009.11.orig/net/Makefile	2012-10-19 16:28:05.513516711 +0800
+++ u-boot-2009.11/net/Makefile	2012-10-19 16:28:17.913508439 +0800
@@ -32,7 +32,7 @@
 COBJS-y += eth.o
 COBJS-y += net.o
 COBJS-y += nfs.o
-COBJS-y += rarp.o
+COBJS-$(CONFIG_CMD_RARP) += rarp.o
 COBJS-$(CONFIG_CMD_SNTP) += sntp.o
 COBJS-y += tftp.o
 
Index: u-boot-2009.11/net/bootp.c
===================================================================
--- u-boot-2009.11.orig/net/bootp.c	2012-10-19 16:28:05.501508198 +0800
+++ u-boot-2009.11/net/bootp.c	2012-10-19 16:29:49.000000000 +0800
@@ -72,6 +72,8 @@
 
 #endif
 
+#if defined(CONFIG_CMD_BOOTP) || defined(CONFIG_CMD_DHCP)
+
 static int BootpCheckPkt(uchar *pkt, unsigned dest, unsigned src, unsigned len)
 {
 	Bootp_t *bp = (Bootp_t *) pkt;
@@ -138,9 +140,10 @@
 	}
 	return (curlen);
 }
+#endif
 
 #if !defined(CONFIG_CMD_DHCP)
-
+#if defined(CONFIG_CMD_BOOTP)
 static void BootpVendorFieldProcess (u8 * ext)
 {
 	int size = *(ext + 1);
@@ -278,7 +281,7 @@
 		debug("NetOurNISDomain : %s\n", NetOurNISDomain);
 
 	if (NetBootFileSize)
-		debug("NetBootFileSize: %d\n", NetBootFileSize);
+		debug("NetBootFileSize: %u\n", NetBootFileSize);
 }
 /*
  *	Handle a BOOTP received packet.
@@ -336,10 +339,12 @@
 	TftpStart();
 }
 #endif
+#endif
 
 /*
  *	Timeout on BOOTP/DHCP request.
  */
+#if defined(CONFIG_CMD_BOOTP) || defined(CONFIG_CMD_DHCP)
 static void
 BootpTimeout(void)
 {
@@ -351,6 +356,7 @@
 		BootpRequest ();
 	}
 }
+#endif
 
 /*
  *	Initialize BOOTP extension fields in the request.
@@ -473,6 +479,7 @@
 /*
  *	Warning: no field size check - change CONFIG_BOOTP_* at your own risk!
  */
+#if defined(CONFIG_CMD_BOOTP) && !defined(CONFIG_CMD_DHCP)
 static int BootpExtended (u8 * e)
 {
 	u8 *start = e;
@@ -540,7 +547,9 @@
 	return e - start;
 }
 #endif
+#endif
 
+#if defined(CONFIG_CMD_BOOTP) || defined(CONFIG_CMD_DHCP)
 void
 BootpRequest (void)
 {
@@ -677,6 +686,7 @@
 #endif
 	NetSendPacket(NetTxPacket, pktlen);
 }
+#endif
 
 #if defined(CONFIG_CMD_DHCP)
 static void DhcpOptionsProcess (uchar * popt, Bootp_t *bp)
Index: u-boot-2009.11/fs/jffs2/jffs2_1pass.c
===================================================================
--- u-boot-2009.11.orig/fs/jffs2/jffs2_1pass.c	2012-10-19 16:28:05.493510810 +0800
+++ u-boot-2009.11/fs/jffs2/jffs2_1pass.c	2012-10-19 16:28:17.913508439 +0800
@@ -593,6 +593,7 @@
 }
 
 /* Compression names */
+#ifdef CONFIG_CMD_JFFS2_FSINFO
 static char *compr_names[] = {
 	"NONE",
 	"ZERO",
@@ -606,6 +607,7 @@
 	"LZARI",
 #endif
 };
+#endif
 
 /* Memory management */
 struct mem_block {
@@ -1074,6 +1076,7 @@
 	return 0;
 }
 
+#ifdef CONFIG_CMD_JFFS2_LS
 /* list inodes with the given pino */
 static u32
 jffs2_1pass_list_inodes(struct b_lists * pL, u32 pino)
@@ -1116,6 +1119,7 @@
 	}
 	return pino;
 }
+#endif
 
 static u32
 jffs2_1pass_search_inode(struct b_lists * pL, const char *fname, u32 pino)
@@ -1249,6 +1253,7 @@
 	return jffs2_1pass_search_inode(pL, tmp, pino);
 }
 
+#ifdef CONFIG_CMD_JFFS2_LS
 static u32
 jffs2_1pass_search_list_inodes(struct b_lists * pL, const char *fname, u32 pino)
 {
@@ -1296,6 +1301,7 @@
 	return pino;
 
 }
+#endif
 
 unsigned char
 jffs2_1pass_rescan_needed(struct part_info *part)
@@ -1866,6 +1872,7 @@
 }
 
 
+#ifdef CONFIG_CMD_JFFS2_FSINFO
 static u32
 jffs2_1pass_fill_info(struct b_lists * pL, struct b_jffs2_info * piL)
 {
@@ -1893,7 +1900,7 @@
 	}
 	return 0;
 }
-
+#endif
 
 static struct b_lists *
 jffs2_get_list(struct part_info * part, const char *who)
@@ -1912,6 +1919,7 @@
 
 
 /* Print directory / file contents */
+#ifdef CONFIG_CMD_JFFS2_LS
 u32
 jffs2_1pass_ls(struct part_info * part, const char *fname)
 {
@@ -1935,7 +1943,7 @@
 
 	return ret;
 }
-
+#endif
 
 /* Load a file from flash into memory. fname can be a full path */
 u32
@@ -1970,6 +1978,7 @@
 	return ret;
 }
 
+#ifdef CONFIG_CMD_JFFS2_FSINFO
 /* Return information about the fs on this partition */
 u32
 jffs2_1pass_info(struct part_info * part)
@@ -1994,3 +2003,4 @@
 	}
 	return 1;
 }
+#endif
Index: u-boot-2009.11/common/cmd_net.c
===================================================================
--- u-boot-2009.11.orig/common/cmd_net.c	2012-10-19 16:28:05.529506178 +0800
+++ u-boot-2009.11/common/cmd_net.c	2012-10-19 16:28:17.913508439 +0800
@@ -31,7 +31,7 @@
 extern int do_bootm (cmd_tbl_t *, int, int, char *[]);
 
 static int netboot_common (proto_t, cmd_tbl_t *, int , char *[]);
-
+#if defined(CONFIG_CMD_BOOTP)
 int do_bootp (cmd_tbl_t *cmdtp, int flag, int argc, char *argv[])
 {
 	return netboot_common (BOOTP, cmdtp, argc, argv);
@@ -42,7 +42,7 @@
 	"boot image via network using BOOTP/TFTP protocol",
 	"[loadAddress] [[hostIPaddr:]bootfilename]"
 );
-
+#endif
 int do_tftpb (cmd_tbl_t *cmdtp, int flag, int argc, char *argv[])
 {
 	return netboot_common (TFTP, cmdtp, argc, argv);
@@ -53,7 +53,7 @@
 	"boot image via network using TFTP protocol",
 	"[loadAddress] [[hostIPaddr:]bootfilename]"
 );
-
+#if defined(CONFIG_CMD_RARP)
 int do_rarpb (cmd_tbl_t *cmdtp, int flag, int argc, char *argv[])
 {
 	return netboot_common (RARP, cmdtp, argc, argv);
@@ -64,7 +64,7 @@
 	"boot image via network using RARP/TFTP protocol",
 	"[loadAddress] [[hostIPaddr:]bootfilename]"
 );
-
+#endif
 #if defined(CONFIG_CMD_DHCP)
 int do_dhcp (cmd_tbl_t *cmdtp, int flag, int argc, char *argv[])
 {
Index: u-boot-2009.11/common/cmd_jffs2.c
===================================================================
--- u-boot-2009.11.orig/common/cmd_jffs2.c	2012-10-19 16:28:05.521520524 +0800
+++ u-boot-2009.11/common/cmd_jffs2.c	2012-10-19 16:28:17.913508439 +0800
@@ -554,6 +554,7 @@
 	return 1;
 }
 
+#ifdef CONFIG_CMD_JFFS2_LS
 /**
  * Routine implementing u-boot ls command which lists content of a given
  * directory on a current partition.
@@ -591,7 +592,8 @@
 	}
 	return 1;
 }
-
+#endif
+#ifdef CONFIG_CMD_JFFS2_FSINFO
 /**
  * Routine implementing u-boot fsinfo command. This routine prints out
  * miscellaneous filesystem informations/statistics.
@@ -629,7 +631,7 @@
 	}
 	return 1;
 }
-
+#endif
 /***************************************************/
 U_BOOT_CMD(
 	fsload,	3,	0,	do_jffs2_fsload,
@@ -638,15 +640,18 @@
 	"    - load binary file from flash bank\n"
 	"      with offset 'off'"
 );
+#ifdef CONFIG_CMD_JFFS2_LS
 U_BOOT_CMD(
 	ls,	2,	1,	do_jffs2_ls,
 	"list files in a directory (default /)",
 	"[ directory ]"
 );
-
+#endif
+#ifdef CONFIG_CMD_JFFS2_FSINFO
 U_BOOT_CMD(
 	fsinfo,	1,	1,	do_jffs2_fsinfo,
 	"print information about filesystems",
 	""
 );
+#endif
 /***************************************************/
