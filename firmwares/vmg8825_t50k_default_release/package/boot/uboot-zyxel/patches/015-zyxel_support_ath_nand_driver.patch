Index: u-boot-2009.11/drivers/mtd/nand/Makefile
===================================================================
--- u-boot-2009.11.orig/drivers/mtd/nand/Makefile	2009-12-16 06:20:54.000000000 +0800
+++ u-boot-2009.11/drivers/mtd/nand/Makefile	2013-03-14 14:07:10.697109945 +0800
@@ -26,12 +26,17 @@
 LIB	:= $(obj)libnand.a
 
 ifdef CONFIG_CMD_NAND
+ifeq ($(ATH_DUAL_FLASH),)
 COBJS-y += nand.o
 COBJS-y += nand_base.o
 COBJS-y += nand_bbt.o
 COBJS-y += nand_ecc.o
 COBJS-y += nand_ids.o
 COBJS-y += nand_util.o
+else
+COBJS-y += nand_ids.o
+COBJS-y += nand_util.o
+endif
 
 COBJS-$(CONFIG_NAND_ATMEL) += atmel_nand.o
 COBJS-$(CONFIG_DRIVER_NAND_BFIN) += bfin_nand.o
Index: u-boot-2009.11/common/cmd_nand.c
===================================================================
--- u-boot-2009.11.orig/common/cmd_nand.c	2009-12-16 06:20:54.000000000 +0800
+++ u-boot-2009.11/common/cmd_nand.c	2013-03-14 14:07:10.697109945 +0800
@@ -207,10 +207,14 @@
 static void nand_print_info(int idx)
 {
 	nand_info_t *nand = &nand_info[idx];
+#ifndef CONFIG_ATH_NAND_SUPPORT
 	struct nand_chip *chip = nand->priv;
 	printf("Device %d: ", idx);
 	if (chip->numchips > 1)
 		printf("%dx ", chip->numchips);
+#else
+	printf("Device %d: ", idx);
+#endif
 	printf("%s, sector size %u KiB\n",
 	       nand->name, nand->erasesize >> 10);
 }
Index: u-boot-2009.11/drivers/mtd/nand/nand_util.c
===================================================================
--- u-boot-2009.11.orig/drivers/mtd/nand/nand_util.c	2009-12-16 06:20:54.000000000 +0800
+++ u-boot-2009.11/drivers/mtd/nand/nand_util.c	2013-03-14 14:24:21.824146916 +0800
@@ -98,6 +98,12 @@
 	 * check from erase() method, set block check method to dummy
 	 * and disable bad block table while erasing.
 	 */
+#ifdef CONFIG_ATH_NAND_SUPPORT
+	if (opts->scrub||opts->jffs2) {
+		puts("ath_nand: not support option 'scrub'&'.jffs2' yet!\n");
+		return -1;
+	}
+#else
 	if (opts->scrub) {
 		struct nand_chip *priv_nand = meminfo->priv;
 
@@ -111,6 +117,7 @@
 		}
 		priv_nand->bbt = NULL;
 	}
+#endif
 
 	if (erase_length < meminfo->erasesize) {
 		printf("Warning: Erase size 0x%08lx smaller than one "	\
