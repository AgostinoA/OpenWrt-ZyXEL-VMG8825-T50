Index: libzcfg_fe_schema-1.0/zcfg_fe_schema.c
===================================================================
--- libzcfg_fe_schema-1.0.orig/zcfg_fe_schema.c	2017-08-02 09:56:43.556533421 +0800
+++ libzcfg_fe_schema-1.0/zcfg_fe_schema.c	2017-08-02 09:56:43.564533421 +0800
@@ -83,6 +83,28 @@
 
 	return ZCFG_SUCCESS;
 }
+
+zcfgRet_t zcfgFeObjParamInfoQuery(zcfg_offset_t rdmObjId, struct json_object **objParamInfo)
+{
+	objInfo_t *objInfo;
+	struct json_object *paramObj;
+
+	//if(schemaShmAddr == NULL)
+	//	zcfgFeSharedMemInit();
+
+	objInfo = GET_OBJ_INFO_BY_OID(rdmObjId);
+	*objParamInfo = json_object_new_object();
+
+	GET_PAMAMETERS_IN_OBJECT(objInfo, paramInfo, parmName){
+		paramObj = json_object_new_object();
+		json_object_object_add(paramObj, "attr", json_object_new_int(paramInfo->attr));
+		//json_object_object_add(paramObj, "type", json_object_new_int(paramInfo->type));
+
+		json_object_object_add(*objParamInfo, parmName, paramObj);
+	}
+
+	return ZCFG_SUCCESS;
+}
 /*
  *  Function Name: zcfgFeParamTypeGetByName
  *  Description: Used to get parameter type from schema
Index: libzcfg_fe_schema-1.0/zcfg_fe_schema.h
===================================================================
--- libzcfg_fe_schema-1.0.orig/zcfg_fe_schema.h	2017-08-02 09:56:43.556533421 +0800
+++ libzcfg_fe_schema-1.0/zcfg_fe_schema.h	2017-08-02 09:47:37.510048100 +0800
@@ -18,6 +18,8 @@
 zcfgSubObjNameList_t* zcfgFeSubObjNameListGet(zcfg_offset_t rdmObjId);
 void zcfgFeSubObjListFree(zcfgSubObjNameList_t *);
 
+zcfgRet_t zcfgFeObjParamInfoQuery(zcfg_offset_t, struct json_object **);
+
 #define zcfgFeParamNameForEach(obj, paramName) char *paramName; \
 	for(struct lh_entry *entry = (obj ? json_object_get_object(obj)->head : NULL); ({ if(entry) { paramName = (char*)entry->k; } ; entry; }); entry = entry->next )
 #define zcfgFeNotifyAttrValSet(attr, value) (attr & (~PARAMETER_ATTR_NOTIFY_MASK)) | value
