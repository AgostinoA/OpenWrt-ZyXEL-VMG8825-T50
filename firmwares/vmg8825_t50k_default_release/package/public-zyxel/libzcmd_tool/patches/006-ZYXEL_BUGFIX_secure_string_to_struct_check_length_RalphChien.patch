Index: libzcmd_tool-1.0/zcmd_tool.c
===================================================================
--- libzcmd_tool-1.0.orig/zcmd_tool.c	2017-08-22 15:16:59.484648680 +0800
+++ libzcmd_tool-1.0/zcmd_tool.c	2017-08-22 15:19:42.646676685 +0800
@@ -285,23 +285,28 @@
 			case json_type_hex:
 				//zcfgLog(ZCFG_LOG_DEBUG, "json_type_string\n");
 				//zcfgLog(ZCFG_LOG_DEBUG, "Name %s length %d\n", paramName, len);
-				v.str_val = (char *)calloc(len+1, 1);
-				strncpy(v.str_val, json_object_get_string(tmpJobj), len);
-                                memcpy(*objStruct+pos, v.str_val, len);
-				free(v.str_val);
+                if(strlen(json_object_get_string(tmpJobj)) <= len){
+                    v.str_val = (char *)calloc(len+1, 1);
+                    strncpy(v.str_val, json_object_get_string(tmpJobj), len);
+                    memcpy(*objStruct+pos, v.str_val, len);
+                    free(v.str_val);
 
-				pos = pos + len;
+                    pos = pos + len;
 
-				if(len > redundantSpace) {
-					len = len - redundantSpace;
-					if((len % BOUNDARY) != 0)
-						redundantSpace = BOUNDARY - (len % BOUNDARY);
-					else
-						redundantSpace = 0;
-				}
-				else {
-					redundantSpace = redundantSpace - len;
-				}
+                    if(len > redundantSpace) {
+                        len = len - redundantSpace;
+                        if((len % BOUNDARY) != 0)
+                            redundantSpace = BOUNDARY - (len % BOUNDARY);
+                        else
+                            redundantSpace = 0;
+                    }
+                    else {
+                        redundantSpace = redundantSpace - len;
+                    }
+                }else{
+                    zcfgLog(ZCFG_LOG_ERR, "Input value was too long!!\n");
+                    return ZCFG_INVALID_PARAM_VALUE_LENGTH;
+                }
 				break;
 			default :
 				zcfgLog(ZCFG_LOG_ERR, "Default type %d\n", type);
