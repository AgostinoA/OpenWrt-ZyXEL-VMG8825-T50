Index: libzcfg_fe_dal-1.0/network/interfaceGrouping/zcfg_fe_dal_intfGrp.c
===================================================================
--- libzcfg_fe_dal-1.0.orig/network/interfaceGrouping/zcfg_fe_dal_intfGrp.c	2017-10-03 17:51:54.550680228 +0800
+++ libzcfg_fe_dal-1.0/network/interfaceGrouping/zcfg_fe_dal_intfGrp.c	2017-10-03 17:54:31.073471700 +0800
@@ -1142,7 +1142,7 @@
 		}
 		json_object_object_add(criteria, "wildcardEnable", json_object_new_string("Y"));
 		json_object_object_add(criteria, "act", json_object_new_string(act));
-		op125ParameterTrahsfer(criteria, replyMsg);
+		op125ParameterTrahsfer(criteria);
 		json_object_object_add(criteria, "cmd", json_object_new_string("CLI"));
 		json_object_object_add(Jobj, "0", JSON_OBJ_COPY(criteria));
 	}
@@ -1179,7 +1179,7 @@
 	return ret;
 }
 
-zcfgRet_t op125ParameterTrahsfer(struct json_object *obj, char *replyMsg){
+zcfgRet_t op125ParameterTrahsfer(struct json_object *obj){
 	zcfgRet_t ret = ZCFG_SUCCESS;
 	char en[64] = {0};
 	char oui[64] = {0};
@@ -1190,7 +1190,6 @@
 	const char *OUI = NULL;
 	const char *SN = NULL;
 	const char *Class = NULL;
-	int count = 1;
 	if(json_object_object_get(obj, "Enterprise_Number")){
 		EN = json_object_get_string(json_object_object_get(obj, "Enterprise_Number"));
 		strcat(op125value, "enterprise=");
@@ -1199,30 +1198,22 @@
 	}
 	if(json_object_object_get(obj, "OUI")){
 		OUI = json_object_get_string(json_object_object_get(obj, "OUI"));
-		sprintf(oui,"\%\%\%\%%d=%s",count,OUI);
+		sprintf(oui,"\%\%\%\%1=%s",OUI);
 		strcat(op125value, oui);
-		count++;
 	}
 	if(json_object_object_get(obj, "SN")){
 		SN = json_object_get_string(json_object_object_get(obj, "SN"));
-		sprintf(sn,"\%\%\%\%%d=%s",count,SN);
+		sprintf(sn,"\%\%\%\%2=%s",SN);
 		strcat(op125value, sn);
-		count++;
 	}
 	if(json_object_object_get(obj, "Class")){
 		Class = json_object_get_string(json_object_object_get(obj, "Class"));
-		sprintf(class,"\%\%\%\%%d=%s",count,Class);
+		sprintf(class,"\%\%\%\%3=%s",Class);
 		strcat(op125value, class);
-		count++;
 	}
 	json_object_object_add(obj, "op125value", json_object_new_string(op125value));
-	if(count == 1 && !json_object_object_get(obj, "Enterprise_Number")){
-		if(replyMsg != NULL)
-		strcat(replyMsg, "The DHCP option 125 is selected, but one or more than one value is invalid.");
-		return ZCFG_INVALID_PARAM_VALUE;
-	}
 	return ret;
-	}
+}
 
 //This function is only for GUI to transfer json object struct.
 zcfgRet_t GUICeireriaReconstruct(struct json_object *Jobj, char *replyMsg){
@@ -1355,7 +1346,7 @@
 				json_object_object_add(opt125, "Class", json_object_new_string(Class));
 			}
 			json_object_object_add(opt125, "wildcardEnable", json_object_new_string("Y"));
-			op125ParameterTrahsfer(opt125, replyMsg);
+			op125ParameterTrahsfer(opt125);
 			json_object_object_add(Jobj, cnt, JSON_OBJ_COPY(opt125));
 
 		}
