Index: libzcfg_fe_dal-1.0/network/homeNetworking/zcfg_fe_dal_lansetup.c
===================================================================
--- libzcfg_fe_dal-1.0.orig/network/homeNetworking/zcfg_fe_dal_lansetup.c	2017-08-01 17:39:45.225183229 +0800
+++ libzcfg_fe_dal-1.0/network/homeNetworking/zcfg_fe_dal_lansetup.c	2017-08-01 17:47:11.625173766 +0800
@@ -501,8 +501,10 @@
 	zcfgRet_t ret = ZCFG_SUCCESS;
 	struct json_object *dhcpSrvObj = NULL;
 	struct json_object *dhcpRelayObj = NULL;
+	struct json_object *dhcpServerObj = NULL; // RDM_OID_DHCPV4_SRV
 	objIndex_t dhcpSrvIid = {0};
 	objIndex_t dhcpRelayIid = {0};
+	objIndex_t dhcpServerIid = {0}; // RDM_OID_DHCPV4_SRV
 	const char *dhcpIfacePath = NULL, *dhcpRelayPath = NULL;
 	const char *dhcpRelayAddr = NULL, *curdhcpRelayAddr = NULL;
 	const char *dhcpMinAdr = NULL, *curDhcpMinAdr = NULL;
@@ -514,8 +516,16 @@
 	bool dhcpAutoReserve = false, curDhcpAutoReserve = false;
 	int leaseTime = 0, curLeaseTime;
 	bool setParam = false;
-	const char *DHCPType = NULL;
+	const char *DHCPType = NULL;
+	bool dhcpServerEnable = false;
 
+	// RDM_OID_DHCPV4_SRV
+	IID_INIT(dhcpServerIid);
+	if(zcfgFeObjJsonGet(RDM_OID_DHCPV4_SRV, &dhcpServerIid, &dhcpServerObj) == ZCFG_SUCCESS){
+		dhcpServerEnable = json_object_get_boolean(json_object_object_get(dhcpServerObj, "Enable"));
+	}
+
+	// RDM_OID_DHCPV4_SRV_POOL
 	IID_INIT(dhcpSrvIid);
 	while(zcfgFeObjJsonGetNext(RDM_OID_DHCPV4_SRV_POOL, &dhcpSrvIid, &dhcpSrvObj) == ZCFG_SUCCESS) {
 		dhcpIfacePath = json_object_get_string(json_object_object_get(dhcpSrvObj, "Interface"));
@@ -633,6 +643,13 @@
 			setParam = true;
 		}
 
+		// 20170725 Max Add
+		if(dhcpServerEnable == false){
+			json_object_object_add(dhcpServerObj, "Enable", json_object_new_boolean(true));
+			zcfgFeObjJsonSetWithoutApply(RDM_OID_DHCPV4_SRV, &dhcpServerIid, dhcpServerObj, NULL);
+			sleep(3); // make sure RDM_OID_DHCPV4_SRV already set
+		}
+
 		if(setParam){
 			json_object_object_add(dhcpSrvObj, "Enable", json_object_new_boolean(true));
 			json_object_object_add(dhcpSrvObj, "MinAddress", json_object_new_string(dhcpMinAdr));
@@ -658,6 +675,7 @@
 	}
 	zcfgFeJsonObjFree(dhcpSrvObj);
 	zcfgFeJsonObjFree(dhcpRelayObj);
+	zcfgFeJsonObjFree(dhcpServerObj);
 	return ret;
 }
 
