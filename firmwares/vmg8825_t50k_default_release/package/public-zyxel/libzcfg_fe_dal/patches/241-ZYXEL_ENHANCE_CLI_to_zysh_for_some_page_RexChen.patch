Index: libzcfg_fe_dal-1.0/maintenance/zcfg_fe_dal_sysinfo.c
===================================================================
--- libzcfg_fe_dal-1.0.orig/maintenance/zcfg_fe_dal_sysinfo.c	2017-07-04 18:37:10.111184424 +0800
+++ /dev/null	1970-01-01 00:00:00.000000000 +0000
@@ -1,107 +0,0 @@
-#include <ctype.h>
-#include <json/json.h>
-#include <time.h>
-#include "zcfg_common.h"
-#include "zcfg_fe_rdm_string.h"
-#include "zcfg_fe_rdm_struct.h"
-#include "zcfg_rdm_oid.h"
-#include "zcfg_rdm_obj.h"
-#include "zcfg_debug.h"
-#include "zcfg_msg.h"
-#include "zcfg_fe_dal_common.h"
-
-dal_param_t SYSTEM_INFO_param[]={
-	{"HostName", 	dalType_string,	0,	30,	NULL},
-	{"DomainName",  dalType_string,	0,	30,	NULL},
-	{NULL,			0,	0,	0,	NULL},
-};
-
-void zcfgFeDalShowSystemInfo(struct json_object *Jarray){
-	int i, len = 0;
-	struct json_object *obj;
-	const char *hostName = NULL;
-	const char *domainName = NULL;
-
-	if(json_object_get_type(Jarray) != json_type_array){
-		printf("wrong Jobj format!\n");
-		return;
-	}
-
-	len = json_object_array_length(Jarray);
-	for(i=0;i<len;i++){
-		obj = json_object_array_get_idx(Jarray,i);
-		hostName = json_object_get_string(json_object_object_get(obj, "HostName"));
-		domainName = json_object_get_string(json_object_object_get(obj, "DomainName"));
-		printf("%-15s %s\n","Host name: ",hostName);
-		printf("%-15s %s\n","Domain name: ",domainName);
-	}
-}
-
-zcfgRet_t zcfgFeDal_System_Info_Get(struct json_object *Jobj, struct json_object *Jarray, char *replyMsg){
-	zcfgRet_t ret = ZCFG_SUCCESS;
-	struct json_object *obj = NULL;
-	struct json_object *sysObj = NULL;
-	objIndex_t sysIid = {0};
-	const char *hostName = NULL;
-	const char *domainName = NULL;
-
-	IID_INIT(sysIid);
-	ret = zcfgFeObjJsonGetWithoutUpdate(RDM_OID_SYSTEM_INFO, &sysIid, &obj);
-
-	if(ret == ZCFG_SUCCESS){
-		sysObj = json_object_new_object();
-		hostName = json_object_get_string(json_object_object_get(obj, "HostName"));
-		domainName = json_object_get_string(json_object_object_get(obj, "DomainName"));
-		json_object_object_add(sysObj, "HostName", json_object_new_string(hostName));
-		json_object_object_add(sysObj, "DomainName", json_object_new_string(domainName));
-		json_object_array_add(Jarray, sysObj);
-		zcfgFeJsonObjFree(obj);
-	}
-	
-	return ret;
-}
-
-zcfgRet_t zcfgFeDal_System_Info_Edit(struct json_object *Jobj, char *replyMsg){
-	zcfgRet_t ret = ZCFG_SUCCESS;
-	struct json_object *sysObj = NULL;
-	objIndex_t sysIid = {0};
-	const char *hostName = NULL;
-	const char *domainName = NULL;
-
-	IID_INIT(sysIid);
-	ret = zcfgFeObjJsonGetWithoutUpdate(RDM_OID_SYSTEM_INFO, &sysIid, &sysObj);
-
-	if(ret == ZCFG_SUCCESS){
-		hostName = json_object_get_string(json_object_object_get(Jobj, "HostName"));
-		domainName = json_object_get_string(json_object_object_get(Jobj, "DomainName"));
-
-		if(json_object_object_get(Jobj, "HostName")){
-			json_object_object_add(sysObj, "HostName", json_object_new_string(hostName));
-		}
-		if(json_object_object_get(Jobj, "DomainName")){
-			json_object_object_add(sysObj, "DomainName", json_object_new_string(domainName));
-		}
-		ret = zcfgFeObjJsonSet(RDM_OID_SYSTEM_INFO, &sysIid, sysObj, NULL);
-		zcfgFeJsonObjFree(sysObj);
-	}
-	
-	return ret;
-}
-
-
-zcfgRet_t zcfgFeDalSystemInfo(const char *method, struct json_object *Jobj, struct json_object *Jarray, char *replyMsg){
-	zcfgRet_t ret = ZCFG_SUCCESS;
-	
-	if(!strcmp(method, "PUT")){
-		ret = zcfgFeDal_System_Info_Edit(Jobj, NULL);
-	}
-	else if(!strcmp(method, "GET")){
-		ret = zcfgFeDal_System_Info_Get(Jobj, Jarray, NULL);
-	}
-	else{
-		printf("Unknown method:%s\n", method);
-	}
-	return ret;
-}
-
-
Index: libzcfg_fe_dal-1.0/network/usbService/zcfg_fe_dal_usb_mediaserver.c
===================================================================
--- libzcfg_fe_dal-1.0.orig/network/usbService/zcfg_fe_dal_usb_mediaserver.c	2017-07-04 18:37:10.119184424 +0800
+++ libzcfg_fe_dal-1.0/network/usbService/zcfg_fe_dal_usb_mediaserver.c	2017-07-04 18:43:45.780230000 +0800
@@ -31,7 +31,7 @@
 		return;
 	}
 	dbg_printf("%s : Jarray = %s",__FUNCTION__,json_object_to_json_string(Jarray));
-	printf("%-15s %-15s %-20s\n","Enable/Disable","Interface7","Media Server Path");
+	printf("%-15s %-15s %-20s\n","Enable/Disable","Interface","Media Server Path");
 
 	len = json_object_array_length(Jarray);
 	for(i=0;i<len;i++){
Index: libzcfg_fe_dal-1.0/security/macFilter/zcfg_fe_dal_mac_filter.c
===================================================================
--- libzcfg_fe_dal-1.0.orig/security/macFilter/zcfg_fe_dal_mac_filter.c	2017-07-04 18:37:10.119184424 +0800
+++ libzcfg_fe_dal-1.0/security/macFilter/zcfg_fe_dal_mac_filter.c	2017-07-04 18:47:11.070230000 +0800
@@ -14,7 +14,7 @@
 {
 	{"Filter_Enable", 	dalType_boolean, 	0, 	0, 	NULL,	NULL,	NULL},
 	{"Restrict", 		dalType_boolean, 	0, 	0, 	NULL,	NULL,	NULL},
-	{"Index", 			dalType_int, 		0, 	0, 	NULL,	NULL,	dal_Edit|dal_Delete},
+	{"Index", 			dalType_int, 		0, 	0, 	NULL,	NULL,	dal_Delete},
 	{"Enable", 			dalType_boolean, 	0, 	0, 	NULL,	NULL,	dal_Add},
 	{"HostName", 		dalType_string, 	0, 	0, 	NULL,	NULL,	dal_Add},
 	{"MACAddress", 		dalType_string, 	0, 	0, 	NULL,	NULL,	dal_Add},
@@ -92,13 +92,16 @@
 	macaddr = json_object_get_string(json_object_object_get(Jobj, "MACAddress"));
 	hostname = json_object_get_string(json_object_object_get(Jobj, "HostName"));
 	oid = RDM_OID_ZY_MAC_FILTER_WHITE_LIST;
-	ret = dalcmdParamCheck(hostname, oid, "HostName", replyMsg);
+	if(json_object_object_get(Jobj, "HostName")){
+		ret = dalcmdParamCheck(NULL, hostname, oid, "HostName", "HostName", replyMsg);
 	if(ret != ZCFG_SUCCESS)
 		return ret;
-	ret = dalcmdParamCheck(macaddr, oid, "MACAddress", replyMsg);
+	}
+	if(json_object_object_get(Jobj, "MACAddress")){
+		ret = dalcmdParamCheck(NULL, macaddr, oid, "MACAddress", "MACAddress", replyMsg);
 	if(ret != ZCFG_SUCCESS)
 		return ret;
-	
+	}
 	ret = zcfgFeObjJsonAdd(RDM_OID_ZY_MAC_FILTER_WHITE_LIST, &whiteListIid, NULL);
 	if(ret == ZCFG_SUCCESS){
 		ret = zcfgFeObjJsonGet(RDM_OID_ZY_MAC_FILTER_WHITE_LIST, &whiteListIid, &whiteListObj);
@@ -147,18 +150,26 @@
 			}
 		}
 	
-		whiteListIid.level = 1;
-		whiteListIid.idx[0] = json_object_get_int(json_object_object_get(Jobj, "Index"));
+		index = json_object_get_int(json_object_object_get(Jobj, "Index"));
 		action = json_object_get_boolean(json_object_object_get(Jobj, "Enable"));
 		hostName = json_object_get_string(json_object_object_get(Jobj, "HostName"));
 		MACAddress = json_object_get_string(json_object_object_get(Jobj, "MACAddress"));
 		oid = RDM_OID_ZY_MAC_FILTER_WHITE_LIST;
-		ret = dalcmdParamCheck(hostName, oid, "HostName", replyMsg);
+		if(json_object_object_get(Jobj, "Index")){
+			ret = convertIndextoIid(index, &whiteListIid, oid, NULL, NULL, replyMsg);
 		if(ret != ZCFG_SUCCESS)
 			return ret;
-		ret = dalcmdParamCheck(MACAddress, oid, "MACAddress", replyMsg);
+			if(json_object_object_get(Jobj, "HostName")){	
+				ret = dalcmdParamCheck(&whiteListIid, hostName, oid, "HostName", "HostName", replyMsg);
 		if(ret != ZCFG_SUCCESS)
 			return ret;
+			}
+			if(json_object_object_get(Jobj, "MACAddress")){
+				ret = dalcmdParamCheck(&whiteListIid, MACAddress, oid, "MACAddress", "MACAddress", replyMsg);
+				if(ret != ZCFG_SUCCESS)
+					return ret;
+			}
+		}
 		if(zcfgFeObjJsonGetWithoutUpdate(RDM_OID_ZY_MAC_FILTER_WHITE_LIST, &whiteListIid, &whiteListObj) == ZCFG_SUCCESS){
 			if(json_object_object_get(Jobj, "Enable"))
 				json_object_object_add(whiteListObj, "Enable", json_object_new_boolean(action));
@@ -226,6 +237,7 @@
 	struct json_object *allObj = NULL;
 	objIndex_t macfilterIid = {0};
 	objIndex_t whiteListIid = {0};
+	int count  = 1;
 	allObj = json_object_new_object();
 	whiteListtmpObj = json_object_new_array();
 
@@ -239,12 +251,13 @@
 	}
 	while(zcfgFeObjJsonGetNextWithoutUpdate(RDM_OID_ZY_MAC_FILTER_WHITE_LIST, &whiteListIid, &whiteListObj) == ZCFG_SUCCESS){
 		paramJobj1 = json_object_new_object();
-		json_object_object_add(paramJobj1, "Index", json_object_new_int(whiteListIid.idx[0]));
+		json_object_object_add(paramJobj1, "Index", json_object_new_int(count));
 		json_object_object_add(paramJobj1, "Enable", JSON_OBJ_COPY(json_object_object_get(whiteListObj, "Enable")));
 		json_object_object_add(paramJobj1, "MACAddress", JSON_OBJ_COPY(json_object_object_get(whiteListObj, "MACAddress")));
 		json_object_object_add(paramJobj1, "HostName", JSON_OBJ_COPY(json_object_object_get(whiteListObj, "HostName")));
 		json_object_array_add(whiteListtmpObj, paramJobj1);
 	zcfgFeJsonObjFree(whiteListObj);
+		count++;
 	}
 	json_object_object_add(allObj, "whitelist", whiteListtmpObj);
 	json_object_array_add(Jarray, allObj);
@@ -254,9 +267,16 @@
 zcfgRet_t zcfgFeDal_MAC_Filter_Delete(struct json_object *Jobj, char *replyMsg){	//for dalcmd
 	zcfgRet_t ret = ZCFG_SUCCESS;
 	objIndex_t whiteListIid = {0};
-	whiteListIid.level = 1;
-	whiteListIid.idx[0] = json_object_get_int(json_object_object_get(Jobj, "Index"));
-	zcfgFeObjJsonDel(RDM_OID_ZY_MAC_FILTER_WHITE_LIST, &whiteListIid, NULL);
+	int index = 0;
+	zcfg_offset_t oid;
+	oid = RDM_OID_ZY_MAC_FILTER_WHITE_LIST;
+	
+	index = json_object_get_int(json_object_object_get(Jobj, "Index"));
+	ret = convertIndextoIid(index, &whiteListIid, oid, NULL, NULL, replyMsg);
+	if(ret != ZCFG_SUCCESS)
+		return ret;
+	
+	zcfgFeObjJsonDel(oid, &whiteListIid, NULL);
 
 	return ret;
 }
@@ -272,7 +292,7 @@
 	else if(!strcmp(method, "PUT")) 
 		ret = zcfgFeDal_MAC_Filter_Edit(Jobj, replyMsg);
 	else if(!strcmp(method, "DELETE"))
-		ret = zcfgFeDal_MAC_Filter_Delete(Jobj, NULL);
+		ret = zcfgFeDal_MAC_Filter_Delete(Jobj, replyMsg);
 	else if(!strcmp(method, "GET"))
 		ret = zcfgFeDal_MAC_Filter_Get(Jobj, Jarray, NULL);
 	else
Index: libzcfg_fe_dal-1.0/zcfg_fe_dal.c
===================================================================
--- libzcfg_fe_dal-1.0.orig/zcfg_fe_dal.c	2017-07-04 18:37:10.123184424 +0800
+++ libzcfg_fe_dal-1.0/zcfg_fe_dal.c	2017-07-04 19:01:50.234230000 +0800
@@ -53,7 +53,6 @@
 #ifdef BUILD_SONIQ
 extern dal_param_t WIFI_SONIQ_param[];
 #endif
-extern dal_param_t SYSTEM_INFO_param[];
 extern dal_param_t WIFI_OTHERS_param[];
 extern dal_param_t SNMP_param[];
 extern dal_param_t TIME_param[];
@@ -129,7 +128,6 @@
 #ifdef BUILD_SONIQ
 extern zcfgRet_t zcfgFeDalWifiSoniq(const char *method, struct json_object *Jobj, struct json_object *Jarray, char *replyMsg);
 #endif
-extern zcfgRet_t zcfgFeDalSystemInfo(const char *method, struct json_object *Jobj, struct json_object *Jarray, char *replyMsg);
 extern zcfgRet_t zcfgFeDalWifiOthers(const char *method, struct json_object *Jobj, struct json_object *Jarray, char *replyMsg);
 extern zcfgRet_t zcfgFeDalSNMP(const char *method, struct json_object *Jobj, struct json_object *Jarray, char *replyMsg);
 extern zcfgRet_t zcfgFeDalTime(const char *method, struct json_object *Jobj, struct json_object *Jarray, char *replyMsg);
@@ -189,7 +187,6 @@
 extern void zcfgFeDalShowFirewall(struct json_object *Jarray);
 extern void zcfgFeDalShowHomeConnect(struct json_object *Jarray);
 extern void zcfgFeDalShowWanAdvance(struct json_object *Jarray);
-extern void zcfgFeDalShowSystemInfo(struct json_object *Jarray);
 extern void zcfgFeDalShowSNMP(struct json_object *Jarray);
 extern void zcfgFeDalShowPolicyRoute(struct json_object *Jarray);
 extern void zcfgFeDalShowFirewallDos(struct json_object *Jarray);
@@ -237,7 +234,7 @@
 {"firewall_proto",	FIREWALL_PROTOCOL_param, zcfgFeDalFirewallProtocol,zcfgFeDalShowFirewallProtocol,	"get|add|edit|delete", 	"Firewall"},//Firewall
 {"firewall_acl", 	FIREWALL_ACL_param, zcfgFeDalFirewallACL,	zcfgFeDalShowFirewallACL,	"add|edit|delete|get",	"Firewall"},
 {"wlan",			WIFI_GENERAL_param,	zcfgFeDalWifiGeneral,   zcfgFeDalShowWifiGeneral,	"edit|get",			"Wireless"},
-{"MACFILTER",		MAC_Filter_param,	zcfgFeDalMACFilter,		zcfgFeDalShowMACFilter,		"get|add|edit|delete",	"MAC Filter"},//MAC_Filter
+{"macfilter",		MAC_Filter_param,	zcfgFeDalMACFilter,		zcfgFeDalShowMACFilter,		"get|add|edit|delete",	"MAC Filter"},//MAC_Filter
 {"QOS_GENERAL",		QosGeneral_param,	zcfgFeDalQosGeneral,	NULL,						"add|edit|delete",	""},//QoS
 {"QOS_QUEUE",		QosQueue_param,		zcfgFeDalQosQueue,		NULL,						"add|edit|delete",	""},//QoS
 {"QOS_CLASS",		QosClass_param,		zcfgFeDalQosClass,		NULL,						"add|edit|delete",	""},//QoS
@@ -250,8 +247,7 @@
 {"WIFI_SONIQ",		WIFI_SONIQ_param, 	zcfgFeDalWifiSoniq,		NULL,						"edit", 			""},//Wireless
 #endif
 {"WIFI_OTHERS",		WIFI_OTHERS_param,	zcfgFeDalWifiOthers,	NULL,						"edit",				""},//Wireless
-{"SYSINFO", 		SYSTEM_INFO_param,	zcfgFeDalSystemInfo,	zcfgFeDalShowSystemInfo,	"edit|get",			"System"},
-{"SNMP",			SNMP_param, 		zcfgFeDalSNMP,			zcfgFeDalShowSNMP,			"edit|get",				"SNMP"},
+{"snmp",			SNMP_param, 		zcfgFeDalSNMP,			zcfgFeDalShowSNMP,			"edit|get",				"SNMP"},
 {"TIME",			TIME_param, 		zcfgFeDalTime,			NULL,						"edit",				""},//Time
 {"TRUST_DOMAIN",	TRUST_DOMAIN_param, zcfgFeDalTrustDomain,	NULL,						"add|delete",		""},//Remote_MGMT
 {"SP_TRUST_DOMAIN",	SP_TRUST_DOMAIN_param, zcfgFeDalSpTrustDomain,NULL,						"add|delete",		""},//SP_Domain
@@ -272,13 +268,13 @@
 {"OAMPING", 		OAMPING_param,		zcfgFeOamPing,			NULL,						"edit",				""},//Diagnostic_Result
 {"USB_FILESHARING", USB_FILESHARING_param,	zcfgFeDalUsbFilesharing,zcfgFeDalShowUsbFilesharing,	"get|edit", 	"USB_Service"},//USB_Service
 {"USB_SAMBA",		USB_SAMBA_param,	zcfgFeDalUsbSamba,		zcfgFeDalShowUsbSamba,		"get|add|edit|delete",	"USB_Service"},//USB_Service
-{"USB_MEDIASERVER", USB_MEDIASERVER_param,	zcfgFeDalUsbMediaserver,	zcfgFeDalShowUsbMediaserver,"edit|get", 	"USB_Service"},
+{"media_server", 	USB_MEDIASERVER_param,	zcfgFeDalUsbMediaserver,	zcfgFeDalShowUsbMediaserver,"edit|get", 	"USB_Service"},
 {"PAREN_CTL", 		PAREN_CTL_param,	zcfgFeDalParentCtl,		NULL,						"add|edit|delete",	""},//Parental_Control
-{"SCHEDULE",		SCHEDULE_param, 	zcfgFeDalSchedule,		zcfgFeDalShowSchedule,		"get|add|edit|delete",	"Scheduler_Rule"},
+{"scheduler",		SCHEDULE_param, 	zcfgFeDalSchedule,		zcfgFeDalShowSchedule,		"get|add|edit|delete",	"Scheduler_Rule"},
 {"DEV_SEC_CERT", 	DEV_SEC_CERT_param,	zcfgFeDalDevSecCert, 	NULL,						"add|edit|delete", 	""},//Certificates
-{"HOME_CONNECTIVYITY", HOME_CONNECTIVYITY_param, zcfgFeDalHomeConnectivity,zcfgFeDalShowHomeConnect, 	"get|edit", 		"Home_Connectivity"},//Home_Connectivity
+{"HOME_CONNECTIVYITY", 	HOME_CONNECTIVYITY_param, zcfgFeDalHomeConnectivity,zcfgFeDalShowHomeConnect, 	"get|edit", 		"Home_Connectivity"},//Home_Connectivity
 {"mgmt_srv", 		MGMT_SRV_param,	zcfgFeDalMgmtSrv,			zcfgFeDalShowMgmtSrv,		"edit|get",			"Remote_MGMT"},
-{"sp_mgmt_srv", 	SP_MGMT_SRV_param,	zcfgFeDalSPMgmtSrv,		zcfgFeDalShowSPMgmtSrv,		"edit|get",			"SP_Domain"},//SP_Domain
+{"SP_MGMT_SRV", 		SP_MGMT_SRV_param,	zcfgFeDalSPMgmtSrv,			NULL,		"edit",			""},
 {"LOGIN_PRIVILEGE", LOGIN_PRIVILEGE_param,	zcfgFeDalLoginPrivilege,NULL, 					"edit",				""},//root_only
 {"QUICKSTART", 		QUICK_START_param,	zcfgFeDalQuickStart,	NULL,						"edit",				""},//root_only
 {"USER_ACCOUNT",	USER_ACCOUNT_param, zcfgFeDalUserAccount,	zcfgFeDalShowUserAccount,	"get|add|edit|delete",	"User_Account"}, //temporarily root_only //User_Account
Index: libzcfg_fe_dal-1.0/maintenance/mgmt/zcfg_fe_dal_mgmt.c
===================================================================
--- libzcfg_fe_dal-1.0.orig/maintenance/mgmt/zcfg_fe_dal_mgmt.c	2017-07-04 18:37:10.111184424 +0800
+++ libzcfg_fe_dal-1.0/maintenance/mgmt/zcfg_fe_dal_mgmt.c	2017-07-04 18:58:56.722230000 +0800
@@ -20,7 +20,7 @@
 	{"ConnectionRequestPassword", dalType_string, 0, 256, NULL},	
 	{"PeriodicInformEnable", dalType_boolean, 0, 0, NULL},	
 	{"PeriodicInformInterval", dalType_int, 0, 0, NULL},
-	{"PeriodicInformTime", dalType_string, 0, 256, NULL},
+	{"PeriodicInformTime", dalType_string, 0, 256, dalcmd_Forbid},
 	{"X_ZYXEL_ActiveNotifyUpdateInterval", dalType_int, 0, 0, NULL, NULL, dalcmd_Forbid},
 	{"DebugLevelEnable", dalType_int, 0, 0, NULL},
 	{"DebugLevelDisable", dalType_int, 0, 0, NULL},
@@ -29,6 +29,7 @@
 	{"IPv6_Enable", dalType_boolean, 0, 0, NULL},
 	{"IPv4_Enable", dalType_boolean, 0, 0, NULL},
 	{"DisplaySOAP", dalType_boolean, 0, 0, NULL},
+	{"EnableAuthentication", dalType_boolean, 0, 0, NULL, NULL},	
 	{"BoundInterfaceMode", dalType_string, 0, 256, NULL, "Any_WAN|Multi_WAN"},
 	{"BoundInterfaceList", dalType_MultiRtWanWWan, 0, 256, NULL},
 	{"ConnectionRequestURL", dalType_string, 0, 0, NULL, NULL, dalcmd_Forbid},
@@ -173,7 +174,15 @@
 		printf("%s: Object retrieve fail\n", __FUNCTION__);
 		return ret;
 	}
-
+	if(json_object_object_get(paramObj, "IPv4_Enable") &&json_object_object_get(paramObj, "IPv6_Enable")){
+		bool v4Enable = json_object_get_boolean(json_object_object_get(paramObj, "IPv4_Enable"));
+		bool v6Enable = json_object_get_boolean(json_object_object_get(paramObj, "IPv6_Enable"));
+		if(!v4Enable && !v6Enable){
+			if(replyMsg)
+				strcat(replyMsg, "IPv4 and IPv6 protocol cannot disable together.");
+			return ZCFG_INVALID_PARAM_VALUE;
+		}
+	}
 	while(paraName) {
 		struct json_object *paramValue = json_object_object_get(paramObj, paraName);
 		if(!paramValue) {
@@ -252,6 +261,14 @@
 		else if(!strcmp(paraName, "ConnectionRequestURL")) {
 			//readonly parameter		
 		}
+		else if(!strcmp(paraName, "EnableAuthentication")){
+			bool enableAuth = json_object_get_boolean(paramValue);
+			if(!enableAuth){
+				json_object_object_add(mgmtJobj, "ConnectionRequestUsername", json_object_new_string(""));	
+				json_object_object_add(mgmtJobj, "ConnectionRequestPassword", json_object_new_string(""));
+				paramModified = 1;	
+			}
+		}
 		else {
 			json_object_object_add(mgmtJobj, paraName, JSON_OBJ_COPY(paramValue));
 			paramModified = 1;			
@@ -278,10 +295,10 @@
 		return ZCFG_INTERNAL_ERROR;
 
 	if(!strcmp(method, "PUT")) {
-		ret = zcfgFeDalMgmtSet(Jobj, NULL);
+		ret = zcfgFeDalMgmtSet(Jobj, replyMsg);
 	}
 	else if(!strcmp(method, "POST")) {
-		ret = zcfgFeDalMgmtSet(Jobj, NULL);
+		ret = zcfgFeDalMgmtSet(Jobj, replyMsg);
 	}
 	else if(!strcmp(method, "GET")) {
 		ret = zcfgFeDalMgmtGet(Jobj, Jarray, NULL);
Index: libzcfg_fe_dal-1.0/maintenance/zcfg_fe_dal_snmp.c
===================================================================
--- libzcfg_fe_dal-1.0.orig/maintenance/zcfg_fe_dal_snmp.c	2017-07-04 18:37:10.111184424 +0800
+++ libzcfg_fe_dal-1.0/maintenance/zcfg_fe_dal_snmp.c	2017-07-04 18:57:00.373230000 +0800
@@ -16,15 +16,16 @@
 dal_param_t SNMP_param[]={
 /* set RDM_OID_ZY_SNMP object */
 {"Enable", 		dalType_boolean,	0,	0,	NULL},
-{"ROCommunity", dalType_string,		0, 15,	NULL},
-{"RWCommunity", dalType_string, 	0, 15, NULL},
+{"GetCommunity", dalType_string, 	0, 15,	NULL},
+{"SetCommunity", dalType_string, 	0, 15, NULL},
 {"TrapCommunity", dalType_string, 	0, 15, NULL},
 /* set RDM_OID_SYSTEM_INFO object */
 {"HostName", 	dalType_string, 	0, 30, NULL},
+{"DomainName",	dalType_string, 	0, 30, NULL},	// system info
 {"Location", 	dalType_string,		0, 15, NULL},
 {"Contact", 	dalType_string,		0, 50, NULL},
 /* set RDM_OID_TRAP_ADDR object */
-{"Host", 		dalType_string,		0, 0, NULL},
+{"TrapDest",		dalType_v4v6Addr,	0, 0, NULL,	"None",	NULL},
 {"Port", 		dalType_int,		0, 65535, NULL},
 {NULL, 			0, 					0, 0, NULL}
 };
@@ -39,17 +40,21 @@
 	const char *TrapCommunity = NULL;
 
 	enable = json_object_get_boolean(json_object_object_get(Jobj, "Enable"));
-	ROCommunity = json_object_get_string(json_object_object_get(Jobj, "ROCommunity"));
-	RWCommunity = json_object_get_string(json_object_object_get(Jobj, "RWCommunity"));
+	ROCommunity = json_object_get_string(json_object_object_get(Jobj, "GetCommunity"));
+	RWCommunity = json_object_get_string(json_object_object_get(Jobj, "SetCommunity"));
 	TrapCommunity = json_object_get_string(json_object_object_get(Jobj, "TrapCommunity"));
 
 	IID_INIT(snmpIid);
 	ret = zcfgFeObjJsonGetWithoutUpdate(RDM_OID_ZY_SNMP, &snmpIid, &snmpObj);
 
 	if(ret == ZCFG_SUCCESS){
+		if(json_object_object_get(Jobj, "Enable"))
 		json_object_object_add(snmpObj, "Enable", json_object_new_boolean(enable));
+		if(json_object_object_get(Jobj, "GetCommunity"))
 		json_object_object_add(snmpObj, "ROCommunity", json_object_new_string(ROCommunity));
+		if(json_object_object_get(Jobj, "SetCommunity"))
 		json_object_object_add(snmpObj, "RWCommunity", json_object_new_string(RWCommunity));
+		if(json_object_object_get(Jobj, "TrapCommunity"))
 		json_object_object_add(snmpObj, "TrapCommunity", json_object_new_string(TrapCommunity));
 
 		zcfgFeObjJsonSet(RDM_OID_ZY_SNMP, &snmpIid, snmpObj, NULL);
@@ -66,18 +71,25 @@
 	const char *HostName = NULL;
 	const char *Location = NULL;
 	const char *Contact = NULL;
+	const char *domainName = NULL;
 
 	HostName = json_object_get_string(json_object_object_get(Jobj, "HostName"));
 	Location = json_object_get_string(json_object_object_get(Jobj, "Location"));
 	Contact = json_object_get_string(json_object_object_get(Jobj, "Contact"));
+	domainName = json_object_get_string(json_object_object_get(Jobj, "DomainName"));
 
 	IID_INIT(SysInfoIid);
 	ret = zcfgFeObjJsonGetWithoutUpdate(RDM_OID_SYSTEM_INFO, &SysInfoIid, &SysInfoObj);
 
 	if(ret == ZCFG_SUCCESS){
+		if(json_object_object_get(Jobj, "HostName"))
 		json_object_object_add(SysInfoObj, "HostName", json_object_new_string(HostName));
+		if(json_object_object_get(Jobj, "Location"))
 		json_object_object_add(SysInfoObj, "Location", json_object_new_string(Location));
+		if(json_object_object_get(Jobj, "Contact"))
 		json_object_object_add(SysInfoObj, "Contact", json_object_new_string(Contact));
+		if(json_object_object_get(Jobj, "DomainName"))
+			json_object_object_add(SysInfoObj, "DomainName", json_object_new_string(domainName));
 
 		zcfgFeObjJsonSet(RDM_OID_SYSTEM_INFO, &SysInfoIid, SysInfoObj, NULL);
 	}
@@ -111,15 +123,20 @@
 	}
 
 	if(found == true && trapObj != NULL){
-		host = json_object_get_string(json_object_object_get(Jobj, "Host"));
+		host = json_object_get_string(json_object_object_get(Jobj, "TrapDest"));
 		port = json_object_get_int(json_object_object_get(Jobj, "Port"));
-
-		if(!strcmp(host, "undefined")){
-			ret = zcfgFeObjJsonDel(RDM_OID_TRAP_ADDR, &trapIid, NULL);
-		}else{
-			json_object_object_add(trapObj, "Host", json_object_new_string(host));
-			json_object_object_add(trapObj, "Port", json_object_new_int(port));
-			zcfgFeObjJsonSet(RDM_OID_TRAP_ADDR, &trapIid, trapObj, NULL);
+		if(json_object_object_get(Jobj, "TrapDest")){
+			if(!strcmp(host, "undefined") || !strcmp(host, "None")){
+				ret = zcfgFeObjJsonDel(RDM_OID_TRAP_ADDR, &trapIid, NULL);
+			}else{
+				if(json_object_object_get(Jobj, "TrapDest"))
+					json_object_object_add(trapObj, "Host", json_object_new_string(host));
+				if(json_object_object_get(Jobj, "Port"))
+					json_object_object_add(trapObj, "Port", json_object_new_int(port));
+				else if(json_object_object_get(Jobj, "TrapDest") && !json_object_object_get(Jobj, "Port"))
+					json_object_object_add(trapObj, "Port", json_object_new_int(162));
+				zcfgFeObjJsonSet(RDM_OID_TRAP_ADDR, &trapIid, trapObj, NULL);
+			}
 		}
 	}
 
@@ -162,6 +179,7 @@
 		printf("%-20s: %s\n","System Name",json_object_get_string(json_object_object_get(obj, "HostName")));
 		printf("%-20s: %s\n","System Location",json_object_get_string(json_object_object_get(obj, "Location")));
 		printf("%-20s: %s\n","System Contact",json_object_get_string(json_object_object_get(obj, "Contact")));
+		printf("%-20s: %s\n","Domain Name",json_object_get_string(json_object_object_get(obj, "DomainName")));
 		printf("%-20s: %s\n","Trap Destination",json_object_get_string(json_object_object_get(obj, "Host")));
 
 	}
@@ -185,6 +203,7 @@
 	const char *HostName = NULL;
 	const char *Location = NULL;
 	const char *Contact = NULL;
+	const char *domainname = NULL;
 
 	/* RDM_OID_TRAP_ADDR */
 	struct json_object *trapObj = NULL;
@@ -215,7 +234,9 @@
 		HostName = json_object_get_string(json_object_object_get(SysInfoObj, "HostName"));
 		Location = json_object_get_string(json_object_object_get(SysInfoObj, "Location"));
 		Contact = json_object_get_string(json_object_object_get(SysInfoObj, "Contact"));
+		domainname = json_object_get_string(json_object_object_get(SysInfoObj, "DomainName"));
 		json_object_object_add(retObj, "HostName", json_object_new_string(HostName));
+		json_object_object_add(retObj, "DomainName", json_object_new_string(domainname));
 		json_object_object_add(retObj, "Location", json_object_new_string(Location));
 		json_object_object_add(retObj, "Contact", json_object_new_string(Contact));
 		zcfgFeJsonObjFree(SysInfoObj);
