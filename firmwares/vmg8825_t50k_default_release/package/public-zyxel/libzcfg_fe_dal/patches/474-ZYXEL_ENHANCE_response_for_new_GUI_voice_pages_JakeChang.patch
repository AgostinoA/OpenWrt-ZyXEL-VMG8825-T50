Index: libzcfg_fe_dal-1.0/voip/phone/zcfg_fe_dal_phone_phone_device.c
===================================================================
--- libzcfg_fe_dal-1.0.orig/voip/phone/zcfg_fe_dal_phone_phone_device.c	2018-02-23 09:44:54.844190424 +0800
+++ libzcfg_fe_dal-1.0/voip/phone/zcfg_fe_dal_phone_phone_device.c	2018-02-23 10:11:07.683125500 +0800
@@ -358,51 +358,110 @@
 	objIndex_t voipdeviceIid = {0};
 	objIndex_t voipvoicelineIid = {0};
 	InSIPJobj = json_object_new_object();
-	int count = 1, PhyReferenceFXSList = 0, lenSIP1 = 0, lenSIP2 = 0;
-	char internum[8] = {0}, phoneId[8] = {0}, incomingSIP1[512] = {0}, incomingSIP2[512] = {0}, incomingSIP[16] = {0};
-	const char *directoryNumber = NULL;
+	int count = 1, PhyReferenceFXSList = 0;
+	char internum[8] = {0}, phoneId[8] = {0};
+    char incomingSIP1[512] = {0}, incomingSIP2[512] = {0}, incomingSIP[16] = {0};
+    char incomingSIP1List[512] = {0}, incomingSIP2List[512] = {0}, incomingSIPList[16] = {0};
+    char LinePath[64] = {0}, LineList[512] = {0};
+    char NumberList[128] = {0};
+    const char *directoryNumber = NULL;
+
 	while(zcfgFeObjJsonGetNextWithoutUpdate(RDM_OID_VOICE_LINE, &voipvoicelineIid, &voipvoicelineObj) == ZCFG_SUCCESS){
 		PhyReferenceFXSList = json_object_get_int(json_object_object_get(voipvoicelineObj, "X_ZYXEL_PhyReferenceFXSList"));
 		directoryNumber = json_object_get_string(json_object_object_get(voipvoicelineObj, "DirectoryNumber"));
-		if(PhyReferenceFXSList == 1){
-			strcat(incomingSIP1,directoryNumber);
-			strcat(incomingSIP1,",");
-		}
-		else if(PhyReferenceFXSList == 2){
-			strcat(incomingSIP2,directoryNumber);
-			strcat(incomingSIP2,",");
-		}
-		else if(PhyReferenceFXSList == 3){
-			strcat(incomingSIP1,directoryNumber);
-			strcat(incomingSIP1,",");
-			strcat(incomingSIP2,directoryNumber);
-			strcat(incomingSIP2,",");
-		}
-		zcfgFeJsonObjFree(voipvoicelineObj);
-	}
-	lenSIP1 = strlen(incomingSIP1);
-	lenSIP2 = strlen(incomingSIP2);
-	if(lenSIP1>0){
-		if(incomingSIP1[lenSIP1-1] == ',')
-			incomingSIP1[lenSIP1-1] = '\0';
-	}
-	if(lenSIP2>0){
-		if(incomingSIP2[lenSIP2-1] == ',')
-			incomingSIP2[lenSIP2-1] = '\0';
-	}
+
+        if (NumberList[0] != '\0')
+        {
+            strcat(NumberList, ",");
+        }
+        strcat(NumberList, directoryNumber);
+
+        snprintf(LinePath, sizeof(LinePath), "Device.Services.VoiceService.1.VoiceProfile.%d.Line.%d", voipvoicelineIid.idx[1], voipvoicelineIid.idx[2]);
+
+        if (LineList[0] != '\0')
+        {
+            strcat(LineList, ",");
+        }
+        strcat(LineList, LinePath);
+
+        if (PhyReferenceFXSList == 1)
+        {
+            if (incomingSIP1[0] != '\0')
+            {
+                strcat(incomingSIP1,",");
+            }
+            strcat(incomingSIP1,directoryNumber);
+
+            if (incomingSIP1List[0] != '\0')
+            {
+                strcat(incomingSIP1List,",");
+            }
+            strcat(incomingSIP1List, LinePath);
+        }
+        else if (PhyReferenceFXSList == 2)
+        {
+            if (incomingSIP2[0] != '\0')
+            {
+                strcat(incomingSIP2,",");
+            }
+            strcat(incomingSIP2,directoryNumber);
+
+            if (incomingSIP2List[0] != '\0')
+            {
+                strcat(incomingSIP2List,",");
+            }
+            strcat(incomingSIP2List, LinePath);
+        }
+        else if (PhyReferenceFXSList == 3)
+        {
+            if (incomingSIP1[0] != '\0')
+            {
+                strcat(incomingSIP1,",");
+            }
+            strcat(incomingSIP1,directoryNumber);
+
+            if (incomingSIP1List[0] != '\0')
+            {
+                strcat(incomingSIP1List,",");
+            }
+            strcat(incomingSIP1List,LinePath);
+
+            if (incomingSIP2[0] != '\0')
+            {
+                strcat(incomingSIP2,",");
+            }
+            strcat(incomingSIP2,directoryNumber);
+
+            if (incomingSIP2List[0] != '\0')
+            {
+                strcat(incomingSIP2List,",");
+            }
+            strcat(incomingSIP2List, LinePath);
+        }
+        zcfgFeJsonObjFree(voipvoicelineObj);
+    }
+
 	json_object_object_add(InSIPJobj, "incomingSIP1", json_object_new_string(incomingSIP1));
 	json_object_object_add(InSIPJobj, "incomingSIP2", json_object_new_string(incomingSIP2));
+    json_object_object_add(InSIPJobj, "incomingSIP1List", json_object_new_string(incomingSIP1List));
+    json_object_object_add(InSIPJobj, "incomingSIP2List", json_object_new_string(incomingSIP2List));
 	while(zcfgFeObjJsonGetNextWithoutUpdate(RDM_OID_VOICE_PHY_INTF, &voipdeviceIid, &voipdeviceObj) == ZCFG_SUCCESS){
 		paramJobj = json_object_new_object();
 		json_object_object_add(paramJobj, "Index", json_object_new_int(count));
-		sprintf(phoneId,"PHONE%d",count);
+		sprintf(phoneId,"PHONE%d", count);
 		json_object_object_add(paramJobj, "PhoneID", json_object_new_string(phoneId));
-		sprintf(internum,"**%d%d",voipdeviceIid.idx[0],voipdeviceIid.idx[1]);
+		sprintf(internum,"**%d%d", voipdeviceIid.idx[0], voipdeviceIid.idx[1]);
 		json_object_object_add(paramJobj, "InterNum", json_object_new_string(internum));
-		sprintf(incomingSIP,"incomingSIP%d",count);
+        sprintf(incomingSIP, "incomingSIP%d", count);
 		json_object_object_add(paramJobj, "IncomingSIP", JSON_OBJ_COPY(json_object_object_get(InSIPJobj, incomingSIP)));
+        sprintf(incomingSIPList, "incomingSIP%dList", count);
+		json_object_object_add(paramJobj, "phoneBoundingList", JSON_OBJ_COPY(json_object_object_get(InSIPJobj, incomingSIPList)));
 		json_object_object_add(paramJobj, "LineSelect", JSON_OBJ_COPY(json_object_object_get(voipdeviceObj, "X_ZYXEL_LineSelect")));
-		count++;
+        json_object_object_add(paramJobj, "DialEnable", JSON_OBJ_COPY(json_object_object_get(voipdeviceObj, "X_ZYXEL_Pound")));
+        json_object_object_add(paramJobj, "NumberList", json_object_new_string(NumberList));
+        json_object_object_add(paramJobj, "LineList", json_object_new_string(LineList));
+
+        count++;
 		json_object_array_add(Jarray, paramJobj);
 		zcfgFeJsonObjFree(voipdeviceObj);
 	}
Index: libzcfg_fe_dal-1.0/voip/phone/zcfg_fe_dal_phone_region.c
===================================================================
--- libzcfg_fe_dal-1.0.orig/voip/phone/zcfg_fe_dal_phone_region.c	2018-02-23 09:44:56.432190424 +0800
+++ libzcfg_fe_dal-1.0/voip/phone/zcfg_fe_dal_phone_region.c	2018-02-23 10:10:28.389610500 +0800
@@ -14,6 +14,7 @@
 dal_param_t VOIP_REGION_param[]={
 	{"Service_Mode",							dalType_string,	0,	0,	NULL,	"Europe_Type|USA_Type",	NULL},
 	{"Region",									dalType_VoipRegion,	0,	0,	NULL,	NULL,	NULL},
+	{"Region_Cap",                              dalType_string,	0,	0,	NULL,	NULL,	NULL},
 	{NULL,										0,				0,	0,	NULL},
 };
 
@@ -149,22 +150,48 @@
 	return ret;
 }
 
+zcfgRet_t zcfgFeDalVoipRegionCapGet(struct json_object *paramJobj)
+{
+    zcfgRet_t ret = ZCFG_SUCCESS;
+    struct json_object *voicecapobj = NULL;
+    objIndex_t voicecapobjIid;
+
+    IID_INIT(voicecapobjIid);
+	voicecapobjIid.level = 1;
+	voicecapobjIid.idx[0] = 1;
+
+    if ((ret = zcfgFeObjJsonGet(RDM_OID_VOICE_CAPB, &voicecapobjIid, &voicecapobj)) == ZCFG_SUCCESS)
+    {
+        if (paramJobj != NULL)
+        {
+            json_object_object_add(paramJobj, "Region_Cap", JSON_OBJ_COPY(json_object_object_get(voicecapobj, "Regions")));
+        }
+        zcfgFeJsonObjFree(voicecapobj);
+    }
+
+    return ret;
+}
+
 zcfgRet_t zcfgFeDalVoipRegionGet(struct json_object *Jobj, struct json_object *Jarray, char *replyMsg)
 {
 	zcfgRet_t ret = ZCFG_SUCCESS;
 	struct json_object *paramJobj = NULL;
 	struct json_object *voiceregionJobj = NULL;
-	objIndex_t voiceregionIid = {0};
-	voiceregionIid.level = 2;
-	voiceregionIid.idx[0] = 1;
-	voiceregionIid.idx[1] = 1;
-	if(zcfgFeObjJsonGetWithoutUpdate(RDM_OID_VOICE_PROF, &voiceregionIid, &voiceregionJobj) == ZCFG_SUCCESS){
-		paramJobj = json_object_new_object();
-		json_object_object_add(paramJobj, "Service_Mode", JSON_OBJ_COPY(json_object_object_get(voiceregionJobj, "X_ZYXEL_FlashUsageStyle")));
-		json_object_object_add(paramJobj, "Region", JSON_OBJ_COPY(json_object_object_get(voiceregionJobj, "Region")));
-		json_object_array_add(Jarray, paramJobj);
-		zcfgFeJsonObjFree(voiceregionJobj);
-	}
+
+    paramJobj = json_object_new_object();
+
+    IID_INIT(Iid);
+    while (zcfgFeObjJsonGetNextWithoutUpdate(RDM_OID_VOICE_PROF, &Iid, &voiceregionJobj) == ZCFG_SUCCESS)
+    {
+        json_object_object_add(paramJobj, "Service_Mode", JSON_OBJ_COPY(json_object_object_get(voiceregionJobj, "X_ZYXEL_FlashUsageStyle")));
+        json_object_object_add(paramJobj, "Region", JSON_OBJ_COPY(json_object_object_get(voiceregionJobj, "Region")));
+        zcfgFeJsonObjFree(voiceregionJobj);
+        break;
+    }
+
+    ret = zcfgFeDalVoipRegionCapGet(paramJobj);
+    json_object_array_add(Jarray, paramJobj);
+
 	return ret;
 }
 
