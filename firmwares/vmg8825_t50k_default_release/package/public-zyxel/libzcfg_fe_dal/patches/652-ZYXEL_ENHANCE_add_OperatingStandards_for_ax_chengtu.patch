Index: libzcfg_fe_dal-1.0/network/wireless/zcfg_fe_dal_wifi_general.c
===================================================================
--- libzcfg_fe_dal-1.0.orig/network/wireless/zcfg_fe_dal_wifi_general.c	2019-01-18 13:21:37.056649948 +0800
+++ libzcfg_fe_dal-1.0/network/wireless/zcfg_fe_dal_wifi_general.c	2019-01-18 21:41:29.697574000 +0800
@@ -39,6 +39,7 @@
 	{"X_ZYXEL_UpperChannels",	dalType_string,		0,	0,	NULL,	NULL,	dalcmd_Forbid},
 	{"X_ZYXEL_LowerChannels",	dalType_string,		0,	0,	NULL,	NULL,	dalcmd_Forbid},
 	{"X_ZYXEL_AC80_Channels",	dalType_string,		0,	0,	NULL,	NULL,	dalcmd_Forbid},
+ 	{"X_ZYXEL_AX160_Channels",	dalType_string,		0,	0,	NULL,	NULL,	dalcmd_Forbid},
 	{"X_ZYXEL_Wireless_Mode",	dalType_string,		0,	0,	NULL,	NULL,	dalcmd_Forbid},
 	{"X_ZYXEL_OBSS_coex",		dalType_boolean,	0,	0,	NULL,	NULL,	dalcmd_Forbid},
 	//WiFi Access Point
@@ -280,9 +281,11 @@
 			json_object_object_add(pramJobj, "channel", JSON_OBJ_COPY(json_object_object_get(obj2, "Channel")));
 			json_object_object_add(pramJobj, "bandwidth", JSON_OBJ_COPY(json_object_object_get(obj2, "OperatingChannelBandwidth")));
 			json_object_object_add(pramJobj, "PossibleChannels", JSON_OBJ_COPY(json_object_object_get(obj2, "PossibleChannels")));
+			json_object_object_add(pramJobj, "SupportedStandards", JSON_OBJ_COPY(json_object_object_get(obj2, "SupportedStandards")));
 			json_object_object_add(pramJobj, "X_ZYXEL_UpperChannels", JSON_OBJ_COPY(json_object_object_get(obj2, "X_ZYXEL_UpperChannels")));
 			json_object_object_add(pramJobj, "X_ZYXEL_LowerChannels", JSON_OBJ_COPY(json_object_object_get(obj2, "X_ZYXEL_LowerChannels")));
 			json_object_object_add(pramJobj, "X_ZYXEL_AC80_Channels", JSON_OBJ_COPY(json_object_object_get(obj2, "X_ZYXEL_AC80_Channels")));
+			json_object_object_add(pramJobj, "X_ZYXEL_AX160_Channels", JSON_OBJ_COPY(json_object_object_get(obj2, "X_ZYXEL_AX160_Channels")));
 			json_object_object_add(pramJobj, "X_ZYXEL_Wireless_Mode", JSON_OBJ_COPY(json_object_object_get(obj2, "X_ZYXEL_Wireless_Mode")));
 			json_object_object_add(pramJobj, "X_ZYXEL_OBSS_coex", JSON_OBJ_COPY(json_object_object_get(obj2, "X_ZYXEL_OBSS_coex")));
 			{
@@ -310,6 +313,7 @@
                 		}
 		                else{ // 5G
 					char *chListAC80 = json_object_get_string(json_object_object_get(obj2, "X_ZYXEL_AC80_Channels"));
+					char *chListAX160 = json_object_get_string(json_object_object_get(obj2, "X_ZYXEL_AX160_Channels"));
 
 		                        if(bw==20 && isChannelInList(ch,chList)){
                                 		json_object_object_add(pramJobj, "extcha", json_object_new_int(0));
@@ -323,6 +327,9 @@
                 		        else if(bw==80 && isChannelInList(ch,chListAC80)){
 		                                json_object_object_add(pramJobj, "extcha", json_object_new_int(0));
                 		        }
+								else if(bw==160 && isChannelInList(ch,chListAX160)){
+		                                json_object_object_add(pramJobj, "extcha", json_object_new_int(0));
+                		        }
                 		}
 			}
 		}
@@ -645,6 +652,8 @@
 			json_object_object_add(wifiRadioObj, "OperatingChannelBandwidth", json_object_new_string("40MHz"));
 		else if (bandwidth == 80)
 			json_object_object_add(wifiRadioObj, "OperatingChannelBandwidth", json_object_new_string("80MHz"));
+		else if (bandwidth == 160)
+			json_object_object_add(wifiRadioObj, "OperatingChannelBandwidth", json_object_new_string("160MHz"));
 		if (bandwidth == 40)
 		{
 			if(extcha == 2)
@@ -1503,6 +1512,7 @@
 	const char *chListUpper;
 	const char *chListLower;
 	const char *chListAC80;	
+	const char *chListAX160;
 
 	// radio: get mainSSID status, X_ZYXEL_Wireless_Mode
 	isMainSSID = json_object_get_boolean(json_object_object_get(wifiSsidObj, "X_ZYXEL_MainSSID"));
@@ -1547,8 +1557,8 @@
 			}
 		}
 		else if(!strcmp(curBand,"5GHz") && (strstr(wl_mode,"n") != NULL) && (strstr(wl_mode,"ac") != NULL)){
-			if(!(bandwidth == 20 || bandwidth == 40 || bandwidth == 80)){
-				printf("In %s %s mode only support \"bandwidth\" = %s.\n",curBand,wl_mode,"20, 40, and 80");
+			if(!(bandwidth == 20 || bandwidth == 40 || bandwidth == 80 || bandwidth == 160)){
+				printf("In %s %s mode only support \"bandwidth\" = %s.\n",curBand,wl_mode,"20, 40, 80 and 160");
 				return ZCFG_INVALID_PARAM_VALUE;
 			}
 		}
@@ -1599,6 +1609,7 @@
 			chListUpper = json_object_get_string(json_object_object_get(wifiRadioObj, "X_ZYXEL_UpperChannels"));
 			chListLower = json_object_get_string(json_object_object_get(wifiRadioObj, "X_ZYXEL_LowerChannels"));
 			chListAC80 = json_object_get_string(json_object_object_get(wifiRadioObj, "X_ZYXEL_AC80_Channels"));
+			chListAX160 = json_object_get_string(json_object_object_get(wifiRadioObj, "X_ZYXEL_AX160_Channels"));
 
 			if((bandwidth == 20) && !isChannelInList(channel,chList)){
 				printf("%s : available channels are %s\n",__FUNCTION__,chList);
@@ -1612,6 +1623,10 @@
 				printf("%s : available channels are %s\n",__FUNCTION__,chListAC80);
 				return ZCFG_INVALID_PARAM_VALUE;
 			}
+			else if((bandwidth == 160) && !isChannelInList(channel,chListAX160)){
+				printf("%s : available channels are %s\n",__FUNCTION__,chListAX160);
+				return ZCFG_INVALID_PARAM_VALUE;
+			}
 			else{
 				// pass
 			}			
@@ -1921,6 +1936,7 @@
 	const char *chListUpper;
 	const char *chListLower;
 	const char *chListAC80;	
+	const char *chListAX160;	
 
 	band = json_object_get_string(json_object_object_get(wifiRadioObj, "OperatingFrequencyBand"));
 
@@ -1997,6 +2013,7 @@
 			chListUpper = json_object_get_string(json_object_object_get(wifiRadioObj, "X_ZYXEL_UpperChannels"));
 			chListLower = json_object_get_string(json_object_object_get(wifiRadioObj, "X_ZYXEL_LowerChannels"));
 			chListAC80 = json_object_get_string(json_object_object_get(wifiRadioObj, "X_ZYXEL_AC80_Channels"));
+			chListAX160 = json_object_get_string(json_object_object_get(wifiRadioObj, "X_ZYXEL_AX160_Channels"));
 			if(bandwidth==20 && isChannelInList(channel,chList)){
 				extcha = 0;
 				json_object_object_add(Jobj, "extcha", json_object_new_int(0));
@@ -2013,6 +2030,10 @@
 				extcha = 0;
 				json_object_object_add(Jobj, "extcha", json_object_new_int(0));
 			}
+			else if(bandwidth==160 && isChannelInList(channel,chListAX160)){
+				extcha = 0;
+				json_object_object_add(Jobj, "extcha", json_object_new_int(0));
+			}
 			else{
 				printf("%s: ERROR!\n",__FUNCTION__);
 			}
Index: libzcfg_fe_dal-1.0/network/wireless/zcfg_fe_dal_wifi_others.c
===================================================================
--- libzcfg_fe_dal-1.0.orig/network/wireless/zcfg_fe_dal_wifi_others.c	2019-01-18 13:21:37.132648992 +0800
+++ libzcfg_fe_dal-1.0/network/wireless/zcfg_fe_dal_wifi_others.c	2019-01-18 21:24:31.106396500 +0800
@@ -185,6 +185,7 @@
 
 	pramJobj = json_object_new_object();
 	json_object_object_add(pramJobj, "Band", JSON_OBJ_COPY(json_object_object_get(RadioObj, "OperatingFrequencyBand")));
+	json_object_object_add(pramJobj, "SupportedStandards", JSON_OBJ_COPY(json_object_object_get(RadioObj, "SupportedStandards")));
 	json_object_object_add(pramJobj, "wlRtsThrshld", JSON_OBJ_COPY(json_object_object_get(RadioObj, "X_ZYXEL_RTS_CTS_Threshold")));
 	json_object_object_add(pramJobj, "wlFrgThrshld", JSON_OBJ_COPY(json_object_object_get(RadioObj, "X_ZYXEL_Fragment_Threshold")));
 	json_object_object_add(pramJobj, "wlBcnIntvl", JSON_OBJ_COPY(json_object_object_get(RadioObj, "X_ZYXEL_Beacon_Interval")));
