Index: libzcfg_fe_dal-1.0/network/homeNetworking/zcfg_fe_dal_lansetup.c
===================================================================
--- libzcfg_fe_dal-1.0.orig/network/homeNetworking/zcfg_fe_dal_lansetup.c	2018-11-13 15:48:32.216095820 +0800
+++ libzcfg_fe_dal-1.0/network/homeNetworking/zcfg_fe_dal_lansetup.c	2018-11-13 18:09:45.000000000 +0800
@@ -590,16 +590,23 @@
 
 	DHCPType = json_object_get_string(json_object_object_get(Jobj, "DHCPType"));
 	if(DHCPType == NULL){
-		if(curRelayDhcp)
-			DHCPType = "DHCPRelay";
-		else
-			DHCPType = "DHCPServer";
+		if(enableDhcp){
+			printf("\nInvalid parameter: DHCPType\n");
+			return ZCFG_INVALID_PARAM_VALUE;
+		}
+		else{
+			if(curRelayDhcp)
+				DHCPType = "DHCPRelay";
+			else
+				DHCPType = "DHCPServer";
+		}
 	}
 
 	if(enableDhcp && !strcmp(DHCPType, "DHCPRelay")){
 		dhcpRelayAddr = json_object_get_string(json_object_object_get(Jobj, "DHCP_RelayAddr"));
 		if(dhcpRelayAddr == NULL){
 			if(curdhcpRelayAddr == NULL || curdhcpRelayAddr[0] == '\0')
+				printf("\nInvalid parameter: DHCP_RelayAddr\n");
 				return ZCFG_INVALID_PARAM_VALUE;
 		}
 
@@ -656,10 +663,16 @@
 				strcat(dnsServer,curDnsServer);
 		}
 		else{
-			if(dhcpMinAdr == NULL || dhcpMaxAdr == NULL || leaseTime == 0 || dnsType == NULL )
+			if(dhcpMinAdr == NULL || dhcpMaxAdr == NULL || leaseTime == 0 || dnsType == NULL ){
+				printf("\nInvalid parameters.\n");
 				return ZCFG_INVALID_PARAM_VALUE;
+			}
 		}
 		if(!strcmp(dnsType,"Static")){
+			if(dnsServer1 == NULL){
+				printf("\nInvalid parameter: DNS_Servers1\n");
+				return ZCFG_INVALID_PARAM_VALUE;
+			}
 			strcat(dnsServer, dnsServer1);
 			if(json_object_object_get(Jobj, "DNS_Servers2")){
 				strcat(dnsServer, ",");
@@ -671,7 +684,7 @@
 		if(curEnableDhcp){
 			if((strcmp(dhcpMinAdr, curDhcpMinAdr)) || (strcmp(dhcpMaxAdr, curDhcpMaxAdr)) ||
 				(leaseTime != curLeaseTime) || (strcmp(dnsType, curDnsType)) ||
-				(strcmp(dnsServer, curDnsServer)) ||
+				(dnsServer != NULL && strcmp(dnsServer, curDnsServer)) ||
 				(dhcpAutoReserve != curDhcpAutoReserve)){
 				setParam = true;
 			}
@@ -1204,9 +1217,19 @@
 	initGlobalLanObjs();
 	getLanInfo(Jobj);
 	json_object_object_add(curIpIfaceObj, "X_ZYXEL_SrvName", json_object_new_string(selbrName));
-	setLanIP(Jobj);
-	setDHCPState(Jobj);
-	setIgmpSnooping(Jobj);
+	ret = setLanIP(Jobj);
+	if(ret != ZCFG_SUCCESS)
+		return ret;
+
+	ret = setDHCPState(Jobj);
+	if(ret != ZCFG_SUCCESS)
+		return ret;
+
+	ret = setIgmpSnooping(Jobj);
+	if(ret != ZCFG_SUCCESS)
+		return ret;
+
+
 	if(json_object_object_get(Jobj, "IPv6_LanEnable"))
 		ipv6LanEnable = json_object_get_boolean(json_object_object_get(Jobj, "IPv6_LanEnable"));
 	else
