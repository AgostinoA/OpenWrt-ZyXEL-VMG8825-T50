Index: libzcfg_fe_dal-1.0/network/wireless/zcfg_fe_dal_wifi_general.c
===================================================================
--- libzcfg_fe_dal-1.0.orig/network/wireless/zcfg_fe_dal_wifi_general.c	2017-05-26 11:02:25.595668412 +0800
+++ libzcfg_fe_dal-1.0/network/wireless/zcfg_fe_dal_wifi_general.c	2017-05-26 11:03:44.995668969 +0800
@@ -35,28 +35,29 @@
 	{"wlGwMode",			dalType_string, 	0,	0,	NULL,		NULL,			dalcmd_Forbid},
 	{"wlEnableGuest",		dalType_boolean, 	0,	0,	NULL,		NULL,			dalcmd_Forbid},
 	//WiFi Access Point Sec
-	{"secMode",				dalType_int,		0,	0,	NULL,		NULL,			dalcmd_Forbid},
-	{"wep",					dalType_string,		0,	0,	NULL,		NULL,			dalcmd_Forbid},
-	{"WEPKey",				dalType_string, 	0,	0,	NULL,		NULL,			dalcmd_Forbid},
-	{"X_ZYXEL_AutoGenWepKey",dalType_boolean,	0,	0,	NULL,		NULL,			dalcmd_Forbid},
-	{"X_ZYXEL_WEPKey2",		dalType_string, 	0,	0,	NULL,		NULL,			dalcmd_Forbid},
-	{"X_ZYXEL_WEPKey3",		dalType_string, 	0,	0,	NULL,		NULL,			dalcmd_Forbid},
-	{"X_ZYXEL_WEPKey4",		dalType_string, 	0,	0,	NULL,		NULL,			dalcmd_Forbid},
-	{"X_ZYXEL_WEP64Key1",	dalType_string, 	0,	0,	NULL,		NULL,			dalcmd_Forbid},
-	{"X_ZYXEL_WEP64Key2",	dalType_string, 	0,	0,	NULL,		NULL,			dalcmd_Forbid},
-	{"X_ZYXEL_WEP64Key3",	dalType_string, 	0,	0,	NULL,		NULL,			dalcmd_Forbid},
-	{"X_ZYXEL_WEP64Key4",	dalType_string, 	0,	0,	NULL,		NULL,			dalcmd_Forbid},
-	{"wepid",				dalType_string,		0,	0,	NULL,		NULL,			dalcmd_Forbid},
-	{"wpaMode",				dalType_string,		0,	0,	NULL,		NULL,			dalcmd_Forbid},
-	{"X_ZYXEL_AutoGenPSK",	dalType_boolean,	0,	0,	NULL,		NULL,			dalcmd_Forbid},
-	{"psk_value",			dalType_string, 	0,	0,	NULL,		NULL,			dalcmd_Forbid},
-	{"RekeyingInterval",	dalType_int,		0,	0,	NULL,		NULL,			dalcmd_Forbid},
+	{"securityLevel",		dalType_string,		0,	0,	NULL,		"NoSecurity|Basic|MoreSecure",	dal_Edit},
+	{"secMode",				dalType_int,		0,	0,	NULL,		"43|149|255",	dalcmd_Forbid},
+	{"wep",					dalType_string,		0,	0,	NULL,		"64bit|128bit",	0},
+	{"WEPKey",				dalType_string, 	0,	0,	NULL,		NULL,			0},
+	{"X_ZYXEL_AutoGenWepKey",dalType_boolean,	0,	0,	NULL,		NULL,			0},
+	{"X_ZYXEL_WEPKey2",		dalType_string, 	0,	0,	NULL,		NULL,			0},
+	{"X_ZYXEL_WEPKey3",		dalType_string, 	0,	0,	NULL,		NULL,			0},
+	{"X_ZYXEL_WEPKey4",		dalType_string, 	0,	0,	NULL,		NULL,			0},
+	{"X_ZYXEL_WEP64Key1",	dalType_string, 	0,	0,	NULL,		NULL,			0},
+	{"X_ZYXEL_WEP64Key2",	dalType_string, 	0,	0,	NULL,		NULL,			0},
+	{"X_ZYXEL_WEP64Key3",	dalType_string, 	0,	0,	NULL,		NULL,			0},
+	{"X_ZYXEL_WEP64Key4",	dalType_string, 	0,	0,	NULL,		NULL,			0},
+	{"wepid",				dalType_string,		0,	0,	NULL,		"key1|key2|key3|key4",			0},
+	{"wpaMode",				dalType_string,		0,	0,	NULL,		"wpapsk|wpa2psk|wpawpa2psk",			0},
+	{"X_ZYXEL_AutoGenPSK",	dalType_boolean,	0,	0,	NULL,		NULL,			0},
+	{"psk_value",			dalType_string, 	0,	0,	NULL,		NULL,			0},
+	{"RekeyingInterval",	dalType_int,		0,	0,	NULL,		NULL,			0},
 	{"RadiusServerIPAddr",	dalType_string, 	0,	0,	NULL,		NULL,			dalcmd_Forbid},
 	{"RadiusServerPort",	dalType_int,		0,	0,	NULL,		NULL,			dalcmd_Forbid},
 	{"RadiusSecret",		dalType_string, 	0,	0,	NULL,		NULL,			dalcmd_Forbid},
-	{"X_ZYXEL_Preauth",		dalType_boolean,	0,	0,	NULL,		NULL,			dalcmd_Forbid},
-	{"X_ZYXEL_ReauthInterval",dalType_int,		0,	0,	NULL,		NULL,			dalcmd_Forbid},
-	{"encryp",				dalType_string, 	0,	0,	NULL,		NULL,			dalcmd_Forbid},
+	{"X_ZYXEL_Preauth",		dalType_boolean,	0,	0,	NULL,		NULL,			0},
+	{"X_ZYXEL_ReauthInterval",dalType_int,		0,	0,	NULL,		NULL,			0},
+	{"encryp",				dalType_string, 	0,	0,	NULL,		"tkip|aes|tkipaes",			0},
 	{"X_ZYXEL_PassphraseType",dalType_int,		0,	0,	NULL,		NULL,			dalcmd_Forbid},
 	//DHCPV4 SRV SUBNET
 	{"div_wifiSubnet",		dalType_boolean,	0,	0,	NULL,		NULL,			dalcmd_Forbid},
@@ -142,6 +143,7 @@
 bool guest5GSsidHide;
 #endif
 //WiFi Access Point Sec
+const char *secLv;
 int secMode;
 const char* wep;
 const char* WEPKey;
@@ -429,6 +431,18 @@
 	wlEnableGuest= json_object_get_boolean(json_object_object_get(Jobj, "wlEnableGuest"));
 	
 	//WiFi Access Point Sec
+	// dalcmd: securityLevel, GUI: secMode
+	if(json_object_object_get(Jobj, "securityLevel")){
+		secLv = json_object_get_string(json_object_object_get(Jobj, "securityLevel"));
+		if(!strcmp(secLv,"NoSecurity"))
+			json_object_object_add(Jobj, "secMode", json_object_new_int(43));
+		else if(!strcmp(secLv,"Basic"))
+			json_object_object_add(Jobj, "secMode", json_object_new_int(149));
+		else if(!strcmp(secLv,"MoreSecure"))
+			json_object_object_add(Jobj, "secMode", json_object_new_int(255));
+		else
+			printf("Security level has wrong value.\n");
+	}
 	secMode = json_object_get_int(json_object_object_get(Jobj, "secMode"));
 	wep = json_object_get_string(json_object_object_get(Jobj, "wep"));
 	X_ZYXEL_AutoGenWepKey = json_object_get_boolean(json_object_object_get(Jobj, "X_ZYXEL_AutoGenWepKey"));
@@ -1229,13 +1243,20 @@
 		}
 	}
 #else
-	iidArray = json_object_object_get(Jobj, "wlSecIid");
-	for(iidIdx=0;iidIdx<6;iidIdx++){
-		wifiSecIid.idx[iidIdx] = json_object_get_int( json_object_array_get_idx(iidArray, iidIdx));
-		if(wifiSecIid.idx[iidIdx] != 0)
-			wifiSecIid.level = iidIdx+1;
+	// Index: from dalcmd, wlSecIid: from GUI
+	if(json_object_object_get(Jobj, "Index")){
+		wifiSecIid.idx[0] = json_object_get_int(json_object_object_get(Jobj, "Index"));
+		if(wifiSecIid.idx[0] != 0)
+			wifiSecIid.level = 1;
+	}
+	else{
+		iidArray = json_object_object_get(Jobj, "wlSecIid");
+		for(iidIdx=0;iidIdx<6;iidIdx++){
+			wifiSecIid.idx[iidIdx] = json_object_get_int( json_object_array_get_idx(iidArray, iidIdx));
+			if(wifiSecIid.idx[iidIdx] != 0)
+				wifiSecIid.level = iidIdx+1;
+		}
 	}
-	
 	if((ret = zcfgFeObjJsonGetWithoutUpdate(RDM_OID_WIFI_ACCESS_POINT_SEC, &wifiSecIid, &wifiSecObj)) != ZCFG_SUCCESS) {
 		return ret;
 	}
@@ -1279,17 +1300,25 @@
 		{
 			if (!strcmp(wep,"128bit"))
 			{
-				json_object_object_add(wifiSecObj, "WEPKey", json_object_new_string(WEPKey));
-				json_object_object_add(wifiSecObj, "X_ZYXEL_WEPKey2", json_object_new_string(X_ZYXEL_WEPKey2));
-				json_object_object_add(wifiSecObj, "X_ZYXEL_WEPKey3", json_object_new_string(X_ZYXEL_WEPKey3));
-				json_object_object_add(wifiSecObj, "X_ZYXEL_WEPKey4", json_object_new_string(X_ZYXEL_WEPKey4));
+				if(WEPKey!=NULL)
+					json_object_object_add(wifiSecObj, "WEPKey", json_object_new_string(WEPKey));
+				if(X_ZYXEL_WEPKey2!=NULL)
+					json_object_object_add(wifiSecObj, "X_ZYXEL_WEPKey2", json_object_new_string(X_ZYXEL_WEPKey2));
+				if(X_ZYXEL_WEPKey3!=NULL)
+					json_object_object_add(wifiSecObj, "X_ZYXEL_WEPKey3", json_object_new_string(X_ZYXEL_WEPKey3));
+				if(X_ZYXEL_WEPKey4!=NULL)
+					json_object_object_add(wifiSecObj, "X_ZYXEL_WEPKey4", json_object_new_string(X_ZYXEL_WEPKey4));
 			}
 			else
 			{
-				json_object_object_add(wifiSecObj, "X_ZYXEL_WEP64Key1", json_object_new_string(X_ZYXEL_WEP64Key1));
-				json_object_object_add(wifiSecObj, "X_ZYXEL_WEP64Key2", json_object_new_string(X_ZYXEL_WEP64Key2));
-				json_object_object_add(wifiSecObj, "X_ZYXEL_WEP64Key3", json_object_new_string(X_ZYXEL_WEP64Key3));
-				json_object_object_add(wifiSecObj, "X_ZYXEL_WEP64Key4", json_object_new_string(X_ZYXEL_WEP64Key4));
+				if(X_ZYXEL_WEP64Key1!=NULL)
+					json_object_object_add(wifiSecObj, "X_ZYXEL_WEP64Key1", json_object_new_string(X_ZYXEL_WEP64Key1));
+				if(X_ZYXEL_WEP64Key2!=NULL)
+					json_object_object_add(wifiSecObj, "X_ZYXEL_WEP64Key2", json_object_new_string(X_ZYXEL_WEP64Key2));
+				if(X_ZYXEL_WEP64Key3!=NULL)
+					json_object_object_add(wifiSecObj, "X_ZYXEL_WEP64Key3", json_object_new_string(X_ZYXEL_WEP64Key3));
+				if(X_ZYXEL_WEP64Key4!=NULL)
+					json_object_object_add(wifiSecObj, "X_ZYXEL_WEP64Key4", json_object_new_string(X_ZYXEL_WEP64Key4));
 			}
 			
 			json_object_object_add(wifiSecObj, "wepid", json_object_new_string(wepid));
@@ -1519,6 +1548,109 @@
 	return ret;
 }
 
+zcfgRet_t dalcmdValidateWifiSecObj(struct json_object *Jobj, char *replyMsg){
+	zcfgRet_t ret = ZCFG_SUCCESS;
+	objIndex_t wifiWPSIid;
+	struct json_object *wifiWPSObj = NULL;
+	int Index;
+
+	// secMode must be set to proper value
+	if(!json_object_object_get(Jobj, "secMode")){
+		return ZCFG_INVALID_PARAM_VALUE;
+	}
+
+	if(secMode == SLIDER_POS_NONE){
+		return ZCFG_SUCCESS;
+	}
+	else if(secMode == SLIDER_POS_BASIC){
+
+		// if WPS is on, return false
+		Index = json_object_get_int(json_object_object_get(Jobj, "Index"));
+		IID_INIT(wifiWPSIid);
+		wifiWPSIid.level = 1;
+		wifiWPSIid.idx[0] = Index;
+		if((ret = zcfgFeObjJsonGetWithoutUpdate(RDM_OID_WIFI_ACCESS_POINT_WPS, &wifiWPSIid, &wifiWPSObj)) == ZCFG_SUCCESS) {
+			if(json_object_get_boolean(json_object_object_get(wifiWPSObj, "Enable"))){
+				printf("WEP security does not support WPS. You should disable WPS first.\n");
+				json_object_put(wifiWPSObj);
+				return ZCFG_INVALID_PARAM_VALUE;
+			}
+			else{
+				json_object_put(wifiWPSObj);
+			}
+		}
+		else{
+			return ZCFG_NO_SUCH_OBJECT;
+		}
+
+		// wep, X_ZYXEL_AutoGenWepKey, wepid must be set to proper values
+		if(!json_object_object_get(Jobj, "wep") || !json_object_object_get(Jobj, "X_ZYXEL_AutoGenWepKey") || !json_object_object_get(Jobj, "wepid")){
+			return ZCFG_INVALID_PARAM_VALUE;
+		}
+		if(strcmp(wep,"128bit") && strcmp(wep,"64bit")){
+			return ZCFG_INVALID_PARAM_VALUE;
+		}
+		if(strcmp(wepid,"key1") && strcmp(wepid,"key2") && strcmp(wepid,"key3") && strcmp(wepid,"key4")){
+			return ZCFG_INVALID_PARAM_VALUE;
+		}
+
+		// if user-defined passwd be set, wepid must match key's order
+		if(X_ZYXEL_AutoGenWepKey == false){
+			if(!strcmp(wep,"128bit") && !strcmp(wepid,"key1") && !json_object_object_get(Jobj, "WEPKey")){
+				return ZCFG_INVALID_PARAM_VALUE;
+			}
+			else if(!strcmp(wep,"128bit") && !strcmp(wepid,"key2") && !json_object_object_get(Jobj, "X_ZYXEL_WEPKey2")){
+				return ZCFG_INVALID_PARAM_VALUE;
+				}
+			else if(!strcmp(wep,"128bit") && !strcmp(wepid,"key3") && !json_object_object_get(Jobj, "X_ZYXEL_WEPKey3")){
+				return ZCFG_INVALID_PARAM_VALUE;
+			}
+			else if(!strcmp(wep,"128bit") && !strcmp(wepid,"key4") && !json_object_object_get(Jobj, "X_ZYXEL_WEPKey4")){
+				return ZCFG_INVALID_PARAM_VALUE;
+			}
+			else if(!strcmp(wep,"64bit") && !strcmp(wepid,"key1") && !json_object_object_get(Jobj, "X_ZYXEL_WEP64Key1")){
+				return ZCFG_INVALID_PARAM_VALUE;
+			}
+			else if(!strcmp(wep,"64bit") && !strcmp(wepid,"key2") && !json_object_object_get(Jobj, "X_ZYXEL_WEP64Key2")){
+				return ZCFG_INVALID_PARAM_VALUE;
+			}
+			else if(!strcmp(wep,"64bit") && !strcmp(wepid,"key3") && !json_object_object_get(Jobj, "X_ZYXEL_WEP64Key3")){
+				return ZCFG_INVALID_PARAM_VALUE;
+			}
+			else if(!strcmp(wep,"64bit") && !strcmp(wepid,"key4") && !json_object_object_get(Jobj, "X_ZYXEL_WEP64Key4")){
+				return ZCFG_INVALID_PARAM_VALUE;
+			}
+			else{
+				return ZCFG_SUCCESS;
+			}
+			
+		}
+		
+	}
+	else if(secMode == SLIDER_POS_MORESECURE){
+
+		// wpaMode must be set
+		if(!json_object_object_get(Jobj, "wpaMode")){
+			return ZCFG_INVALID_PARAM_VALUE;
+		}
+	
+		// wpaMode must be set to a proper value
+		if(strcmp(wpaMode,"wpa2psk") && strcmp(wpaMode,"wpapsk") && strcmp(wpaMode,"wpawpa2psk")){
+			return ZCFG_INVALID_PARAM_VALUE;
+		}
+		// X_ZYXEL_AutoGenPSK, psk_value must be set
+		if(!json_object_object_get(Jobj, "X_ZYXEL_AutoGenPSK") || !json_object_object_get(Jobj, "psk_value")){
+			return ZCFG_INVALID_PARAM_VALUE;
+		}
+
+		return ZCFG_SUCCESS;
+	}
+	else{
+		return ZCFG_INVALID_PARAM_VALUE;
+	}
+	return ZCFG_SUCCESS;
+}
+
 zcfgRet_t dalcmdWifiGeneralEdit(struct json_object *Jobj, char *replyMsg){
 	zcfgRet_t ret = ZCFG_SUCCESS;
 	int Index;
@@ -1558,6 +1690,14 @@
 	if(wifiApObj == NULL)
 		return ZCFG_INTERNAL_ERROR;
 
+	// Get Sec Obj
+	IID_INIT(wifiSecIid);
+	wifiSecIid.level = 1;
+	wifiSecIid.idx[0] = Index;
+	if((ret = zcfgFeObjJsonGetWithoutUpdate(RDM_OID_WIFI_ACCESS_POINT_SEC, &wifiSecIid, &wifiSecObj)) != ZCFG_SUCCESS) {
+		return ZCFG_NO_SUCH_OBJECT;
+	}
+	
 	//wlEnable
 	if((paramObj = json_object_object_get(Jobj, "wlEnable")) != NULL)
 		json_object_object_add(wifiSsidObj, "Enable", JSON_OBJ_COPY(paramObj));
@@ -1600,9 +1740,23 @@
 	if((paramObj = json_object_object_get(Jobj, "MaxAssociatedDevices")) != NULL)
 		json_object_object_add(wifiApObj, "MaxAssociatedDevices", JSON_OBJ_COPY(paramObj));
 
+	// Security related
+	if(dalcmdValidateWifiSecObj(Jobj,NULL) != ZCFG_SUCCESS){
+		json_object_put(wifiSecObj);
+		wifiSecObj = NULL;
+		printf("Security related parameters failed validation..\n");
+	}
+	else{
+		if((ret = editWifiSecObject(Jobj)) != ZCFG_SUCCESS){
+			json_object_put(wifiSecObj);
+			wifiSecObj = NULL;
+			printf("Fail to set security related parameters..\n");
+		}
+	}
+	
 	//if(wifiApWpsObj) zcfgFeObjJsonSetWithoutApply(RDM_OID_WIFI_ACCESS_POINT_WPS, &wifiApWpsIid, wifiApWpsObj, NULL);
 	if(wifiApObj) zcfgFeObjJsonSetWithoutApply(RDM_OID_WIFI_ACCESS_POINT, &wifiApIid, wifiApObj, NULL);
-	//if(wifiSecObj) zcfgFeObjJsonSetWithoutApply(RDM_OID_WIFI_ACCESS_POINT_SEC, &wifiSecIid, wifiSecObj, NULL);
+	if(wifiSecObj!=NULL) zcfgFeObjJsonSetWithoutApply(RDM_OID_WIFI_ACCESS_POINT_SEC, &wifiSecIid, wifiSecObj, NULL);	
 	if(wifiSsidObj)zcfgFeObjJsonSetWithoutApply(RDM_OID_WIFI_SSID, &wifiSsidIid, wifiSsidObj, NULL);
 	if(wifiRadioObj) zcfgFeObjJsonSet(RDM_OID_WIFI_RADIO, &wifiRadioIid, wifiRadioObj, NULL);
 
@@ -1662,7 +1816,6 @@
 	*/
 	sleep(35);
 #else
-
 	//set by dalcmd, temporary solution
 	if(json_object_object_get(Jobj, "Index") != NULL){
 		if((ret = dalcmdWifiGeneralEdit(Jobj, replyMsg)) != ZCFG_SUCCESS)
