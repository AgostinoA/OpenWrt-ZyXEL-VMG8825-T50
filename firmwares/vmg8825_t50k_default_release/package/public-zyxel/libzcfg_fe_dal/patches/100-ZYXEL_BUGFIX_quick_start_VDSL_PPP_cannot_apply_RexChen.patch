Index: libzcfg_fe_dal-1.0/js/zcfg_fe_dal_quickstart.c
===================================================================
--- libzcfg_fe_dal-1.0.orig/js/zcfg_fe_dal_quickstart.c	2017-01-06 09:45:21.416548365 +0800
+++ libzcfg_fe_dal-1.0/js/zcfg_fe_dal_quickstart.c	2017-01-06 09:46:11.026784300 +0800
@@ -68,6 +68,7 @@
 	struct json_object *reqObject = NULL;
 	objIndex_t dnsIid = {0};
 	boolean enable = false;
+	boolean found = true;
 	const char *interface = NULL;
 	const char *dnsserver = NULL;
 	const char *origdnsserver = NULL;
@@ -86,13 +87,22 @@
 				origdnsserver = json_object_get_string(json_object_object_get(dnsObj, "DNSServer")); 
 				if(!strcmp(interface,origInterface) && (strchr(origdnsserver, ':') == NULL)){
 					ret = zcfgFeObjJsonDel(RDM_OID_DNS_CLIENT_SRV, &dnsIid, NULL);
+					ret = zcfgFeObjJsonAdd(RDM_OID_DNS_CLIENT_SRV, &dnsIid, NULL);
+					if(ret == ZCFG_SUCCESS){
+						ret = zcfgFeObjJsonGet(RDM_OID_DNS_CLIENT_SRV, &dnsIid, &dnsObj);
+						found = false;
+						break;
+					}
 				}
 			}
+			if(found){
+				IID_INIT(dnsIid);
 			ret = zcfgFeObjJsonAdd(RDM_OID_DNS_CLIENT_SRV, &dnsIid, NULL);
 			if(ret == ZCFG_SUCCESS){
 				ret = zcfgFeObjJsonGet(RDM_OID_DNS_CLIENT_SRV, &dnsIid, &dnsObj);
 			}
 		}
+		}
 		else if(!strcmp(Action,"PUT")){
 			index = json_object_get_int(json_object_object_get(reqObject, "Index"));
 			dnsIid.idx[0] = index;
@@ -315,27 +325,25 @@
 	struct json_object *reqObject = NULL;
 	objIndex_t qkPPPIid = {0};
 	boolean enable = false;
-	const char *username = NULL;
-	const char *password = NULL;
-	const char *localipaddress = NULL;
 	int index = 0;
 	
 	IID_INIT(qkPPPIid);
 	reqObject = json_object_array_get_idx(Jobj, 2);
 	if(reqObject!=NULL){
 		index = json_object_get_int(json_object_object_get(reqObject, "Index"));
+		if(index != NULL){
 		qkPPPIid.idx[0] = index;
 		qkPPPIid.level = 1;
 		ret = zcfgFeObjJsonGet(RDM_OID_PPP_IFACE, &qkPPPIid, &qkPPPObj);
-		username = json_object_get_string(json_object_object_get(reqObject, "Username"));
-		password = json_object_get_string(json_object_object_get(reqObject, "Password"));
-		localipaddress = json_object_get_string(json_object_object_get(reqObject, "X_ZYXEL_LocalIPAddress"));
-
+		}
+		else{
+			ret = zcfgFeObjJsonAdd(RDM_OID_PPP_IFACE, &qkPPPIid, NULL);
+			if(ret == ZCFG_SUCCESS){
+				ret = zcfgFeObjJsonGet(RDM_OID_PPP_IFACE, &qkPPPIid, &qkPPPObj);
+			}
+		}
 		json_object_object_add(qkPPPObj, "Enable", json_object_new_boolean(enable));
-		json_object_object_add(qkPPPObj, "Username", json_object_new_string(username));
-		json_object_object_add(qkPPPObj, "Password", json_object_new_string(password));
-		json_object_object_add(qkPPPObj, "X_ZYXEL_LocalIPAddress", json_object_new_string(localipaddress));
-		ret = zcfgFeObjJsonSet(RDM_OID_PPP_IFACE, &qkPPPIid, qkPPPObj, NULL);
+		ret = zcfgFeObjJsonBlockedSet(RDM_OID_PPP_IFACE, &qkPPPIid, qkPPPObj, NULL);
 	}
 	zcfgFeJsonObjFree(reqObject);
 	zcfgFeJsonObjFree(qkPPPObj);
@@ -348,17 +356,27 @@
 	struct json_object *reqObject = NULL;
 	objIndex_t qkEnableIid = {0};
 	boolean enable = false;
+	const char *username = NULL;
+	const char *password = NULL;
+	const char *localipaddress = NULL;
 	int index = 0;
 	
 	IID_INIT(qkEnableIid);
+	reqObject = json_object_array_get_idx(Jobj, 3);
 	if(reqObject!=NULL){
-		reqObject = json_object_array_get_idx(Jobj, 3);
+		enable = json_object_get_boolean(json_object_object_get(reqObject, "Enable"));
 		index = json_object_get_int(json_object_object_get(reqObject, "Index"));
 		qkEnableIid.idx[0] = index;
 		qkEnableIid.level = 1;
 		ret = zcfgFeObjJsonGet(RDM_OID_PPP_IFACE, &qkEnableIid, &qkEnableObj);
-		enable = json_object_get_boolean(json_object_object_get(reqObject, "Enable"));
+		
+		username = json_object_get_string(json_object_object_get(reqObject, "Username"));
+		password = json_object_get_string(json_object_object_get(reqObject, "Password"));
+		localipaddress = json_object_get_string(json_object_object_get(reqObject, "X_ZYXEL_LocalIPAddress"));
 		json_object_object_add(qkEnableObj, "Enable", json_object_new_boolean(enable));
+		json_object_object_add(qkEnableObj, "Username", json_object_new_string(username));
+		json_object_object_add(qkEnableObj, "Password", json_object_new_string(password));
+		json_object_object_add(qkEnableObj, "X_ZYXEL_LocalIPAddress", json_object_new_string(localipaddress));
 		ret = zcfgFeObjJsonSet(RDM_OID_PPP_IFACE, &qkEnableIid, qkEnableObj, NULL);
 	}
 	zcfgFeJsonObjFree(reqObject);
@@ -493,21 +511,39 @@
 	}
 }
 
-zcfgRet_t DNSDelete(struct json_object *Jobj){
+zcfgRet_t DNSDelete(struct json_object *Jobj, const char *iptype){
 	zcfgRet_t ret = ZCFG_SUCCESS;
 	struct json_object *dnsdeleteObj = NULL;
 	struct json_object *reqObject = NULL;
+	struct json_object *reqObject1 = NULL;
 	objIndex_t dnsdeleteIid = {0};
+	const char *originterface = NULL;
+	const char *interface = NULL;
+	const char *type = NULL;
 	int index = 0;
 	IID_INIT(dnsdeleteIid);
 	reqObject = json_object_array_get_idx(Jobj, 9);
 	if(reqObject!=NULL){
+		if(!strcmp(iptype,"PPP dynamic")){
+			reqObject1 = json_object_array_get_idx(Jobj, 1);
+			interface = json_object_get_string(json_object_object_get(reqObject1, "Interface"));
+			type = json_object_get_string(json_object_object_get(reqObject1, "X_ZYXEL_Type"));
+			while((ret = zcfgFeObjJsonGetNext(RDM_OID_DNS_CLIENT_SRV, &dnsdeleteIid, &dnsdeleteObj)) == ZCFG_SUCCESS){
+				originterface = json_object_get_string(json_object_object_get(dnsdeleteObj, "Interface"));
+				if(!strcmp(interface,originterface)){
+					ret = zcfgFeObjJsonDel(RDM_OID_DNS_CLIENT_SRV, &dnsdeleteIid, NULL);
+				}
+			}
+		}
+		else{
 		index = json_object_get_int(json_object_object_get(reqObject, "DeleteIdx"));
 		dnsdeleteIid.idx[0] = index;
 		dnsdeleteIid.level = 1;
 		ret = zcfgFeObjJsonGet(RDM_OID_DNS_CLIENT_SRV, &dnsdeleteIid, &dnsdeleteObj);
 		ret = zcfgFeObjJsonDel(RDM_OID_DNS_CLIENT_SRV, &dnsdeleteIid, NULL);
+		}
 		zcfgFeJsonObjFree(reqObject);
+		zcfgFeJsonObjFree(reqObject1);
 		zcfgFeJsonObjFree(dnsdeleteObj);
 		return ret;
 	}
@@ -526,7 +562,7 @@
 		if((!strcmp(protocol,"IPoE")) || (!strcmp(protocol,"IPoA"))){
 			if(!strcmp(iptype,"DHCP to static IP")){
 				DHCPV4ClientDelete(Jobj);
-				DNSDelete(Jobj);
+				DNSDelete(Jobj,iptype);
 				DNS(Jobj,"POST");
 				IPIFACE(Jobj);
 				RoutingFwd(Jobj);
@@ -539,7 +575,7 @@
 				Routing(Jobj);				
 			}
 			else if(!strcmp(iptype, "static IP to DHCP")){
-				DNSDelete(Jobj);
+				DNSDelete(Jobj,iptype);
 				DHCPV4Client(Jobj);
 			}
 		}
@@ -547,14 +583,18 @@
 			if(!strcmp(iptype,"static DNS")){
 				index = json_object_get_int(json_object_object_get(reqObject, "DeleteIdx"));
 				if(index != 0){
-					DNSDelete(Jobj);
+					DNSDelete(Jobj,iptype);
 					DNS(Jobj,"POST");
 				}
 				DNS(Jobj,"PUT");
 			}
 			else if(!strcmp(iptype,"dynamic DNS")){
-				DNSDelete(Jobj);
+				DNSDelete(Jobj,iptype);
 			}
+			if(!strcmp(iptype,"PPP static"))
+				DNS(Jobj,"POST");
+			else if(!strcmp(iptype,"PPP dynamic"))
+				DNSDelete(Jobj,iptype);
 			qkPPP(Jobj);
 			qkEnable(Jobj);
 		}
