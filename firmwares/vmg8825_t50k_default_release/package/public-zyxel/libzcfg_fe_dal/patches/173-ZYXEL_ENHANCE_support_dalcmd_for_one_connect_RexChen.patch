Index: libzcfg_fe_dal-1.0/network/homeConnectivity/zcfg_fe_dal_homeConnectivity.c
===================================================================
--- libzcfg_fe_dal-1.0.orig/network/homeConnectivity/zcfg_fe_dal_homeConnectivity.c	2017-05-10 14:33:11.512625330 +0800
+++ libzcfg_fe_dal-1.0/network/homeConnectivity/zcfg_fe_dal_homeConnectivity.c	2017-05-10 14:34:10.859390100 +0800
@@ -14,16 +14,41 @@
 #include "zcfg_fe_dal_common.h"
 
 dal_param_t HOME_CONNECTIVYITY_param[]={
-	{"one_connect_Enable", dalType_boolean,	0,	0,	NULL},
-	{"WiFi_Enable", dalType_boolean,	0,	0,	NULL},
-	{"WiFi_24G_NormalToBad_Threshold", dalType_int,	0,	0,	NULL},
-	{"WiFi_24G_NormalToGood_Threshold", dalType_int,	0,	0,	NULL},
-	{"WiFi_5G_NormalToBad_Threshold", dalType_int,	0,	0,	NULL},
-	{"WiFi_5G_NormalToGood_Threshold", dalType_int,	0,	0,	NULL},
-	{"WiFi_24G_Upgrade_Threshold", dalType_int,	0,	0,	NULL},
+	{"one_connect_Enable", 			dalType_boolean,	0,	0,	NULL,	NULL,	NULL},
+#ifdef APSTEERING
+	{"AP_STEERING_Enable", 			dalType_boolean,	0,	0,	NULL,	NULL,	NULL},
+	{"2.4G_NormalToBad_Threshold", 	dalType_int,		0,	0,	NULL,	NULL,	NULL},
+	{"2.4G_NormalToGood_Threshold", dalType_int,		0,	0,	NULL,	NULL,	NULL},
+	{"5G_NormalToBad_Threshold", 	dalType_int,		0,	0,	NULL,	NULL,	NULL},
+	{"5G_NormalToGood_Threshold",	dalType_int,		0,	0,	NULL,	NULL,	NULL},
+	{"2.4G_Upgrade_Threshold", 		dalType_int,		0,	0,	NULL,	NULL,	NULL},
+#endif
 	{NULL,					0,	0,	0,	NULL},
 };
 
+void zcfgFeDalShowHomeConnect(struct json_object *Jarray){
+	struct json_object *obj;
+	if(json_object_get_type(Jarray) != json_type_array){
+		printf("wrong Jobj format!\n");
+		return;
+	}
+	obj = json_object_array_get_idx(Jarray, 0);
+	printf("One Connect Setup: \n");
+	printf("%-30s %-10s \n", "One Connect:", json_object_get_string(json_object_object_get(obj, "One_Connect_Enable")));
+#ifdef APSTEERING
+	printf("\nOne Connect Setup: \n");
+	printf("%-30s %-10s \n", "Wifi:", json_object_get_string(json_object_object_get(obj, "AP_Steering_Enable")));
+	printf("\nSNR Thresholds: \n");
+	printf("%-30s %-10s \n", "2.4G_NormalToBad_Threshold(dB):", json_object_get_string(json_object_object_get(obj, "WiFi_24G_NormalToBad_Threshold")));
+	printf("%-30s %-10s \n", "2.4G_NormalToGood_Threshold(dB):", json_object_get_string(json_object_object_get(obj, "WiFi_24G_NormalToGood_Threshold")));
+	printf("%-30s %-10s \n", "5G_NormalToBad_Threshold(dB):", json_object_get_string(json_object_object_get(obj, "WiFi_5G_NormalToBad_Threshold")));
+	printf("%-30s %-10s \n", "5G_NormalToGood_Threshold(dB):", json_object_get_string(json_object_object_get(obj, "WiFi_5G_NormalToGood_Threshold")));
+	printf("%-30s %-10s \n", "2.4G_Upgrade_Threshold(dB):", json_object_get_string(json_object_object_get(obj, "WiFi_24G_Upgrade_Threshold")));
+#endif
+
+}
+
+
 zcfgRet_t zcfgFeDal_Home_Connect_Edit(struct json_object *Jobj, char *replyMsg){
 	zcfgRet_t ret = ZCFG_SUCCESS;
 	struct json_object *oneconnectObj = NULL;
@@ -53,24 +78,56 @@
 	wifi_24G_Upgrade_Threshold = json_object_get_int(json_object_object_get(Jobj, "WiFi_24G_Upgrade_Threshold"));
 #endif
 	if(zcfgFeObjJsonGet(RDM_OID_ZY_ONE_CONNECT, &oneconnectIid, &oneconnectObj) == ZCFG_SUCCESS){	
+		if(json_object_object_get(Jobj, "one_connect_Enable"))
 		json_object_object_add(oneconnectObj, "Enable", json_object_new_boolean(oneconnect_Enable));
 		zcfgFeObjJsonSet(RDM_OID_ZY_ONE_CONNECT, &oneconnectIid, oneconnectObj, NULL);
+		zcfgFeJsonObjFree(oneconnectObj);
 	}
 #ifdef APSTEERING
 	if(zcfgFeObjJsonGet(RDM_OID_WIFI_AP_STEERING, &wifiIid, &wifiObj) == ZCFG_SUCCESS){	
+		if(json_object_object_get(Jobj, "WiFi_Enable"))
 		json_object_object_add(wifiObj, "Enable", json_object_new_boolean(wifi_Enable));
+		if(json_object_object_get(Jobj, "WiFi_24G_NormalToBad_Threshold"))
 		json_object_object_add(wifiObj, "WiFi_24G_NormalToBad_Threshold", json_object_new_int(wifi_24G_NormalToBad_Threshold));
+		if(json_object_object_get(Jobj, "WiFi_24G_NormalToGood_Threshold"))
 		json_object_object_add(wifiObj, "WiFi_24G_NormalToGood_Threshold", json_object_new_int(wifi_24G_NormalToGood_Threshold));
+		if(json_object_object_get(Jobj, "WiFi_5G_NormalToBad_Threshold"))
 		json_object_object_add(wifiObj, "WiFi_24G_Upgrade_Threshold", json_object_new_int(wifi_24G_Upgrade_Threshold));
+		if(json_object_object_get(Jobj, "WiFi_5G_NormalToGood_Threshold"))
 		json_object_object_add(wifiObj, "WiFi_5G_NormalToBad_Threshold", json_object_new_int(wifi_5G_NormalToBad_Threshold));
+		if(json_object_object_get(Jobj, "WiFi_24G_Upgrade_Threshold"))
 		json_object_object_add(wifiObj, "WiFi_5G_NormalToGood_Threshold", json_object_new_int(wifi_5G_NormalToGood_Threshold));
 		zcfgFeObjJsonSet(RDM_OID_WIFI_AP_STEERING, &wifiIid, wifiObj, NULL);
+		zcfgFeJsonObjFree(wifiObj);
 	}
 #endif
+	return ret;
+}
+
+zcfgRet_t zcfgFeDal_Home_Connect_Get(struct json_object *Jarray, char *replyMsg){
+	zcfgRet_t ret = ZCFG_SUCCESS;
+	struct json_object *paramJobj = NULL;
+	struct json_object *oneconnectObj = NULL;
+	struct json_object *apsteeringObj = NULL;
+	objIndex_t oneconnectIid = {0};
+	objIndex_t apsteeringIid = {0};
+	paramJobj = json_object_new_object();
+	if(zcfgFeObjJsonGetWithoutUpdate(RDM_OID_ZY_ONE_CONNECT, &oneconnectIid, &oneconnectObj) == ZCFG_SUCCESS){
+		json_object_object_add(paramJobj, "One_Connect_Enable", JSON_OBJ_COPY(json_object_object_get(oneconnectObj, "Enable")));
 	zcfgFeJsonObjFree(oneconnectObj);
+	}
 #ifdef APSTEERING
-	zcfgFeJsonObjFree(wifiObj);
+	if(zcfgFeObjJsonGetWithoutUpdate(RDM_OID_WIFI_AP_STEERING, &apsteeringIid, &apsteeringObj) == ZCFG_SUCCESS){
+		json_object_object_add(paramJobj, "AP_Steering_Enable", JSON_OBJ_COPY(json_object_object_get(apsteeringObj, "Enable")));
+		json_object_object_add(paramJobj, "WiFi_24G_NormalToBad_Threshold", JSON_OBJ_COPY(json_object_object_get(apsteeringObj, "WiFi_24G_NormalToBad_Threshold")));
+		json_object_object_add(paramJobj, "WiFi_24G_NormalToGood_Threshold", JSON_OBJ_COPY(json_object_object_get(apsteeringObj, "WiFi_24G_NormalToGood_Threshold")));
+		json_object_object_add(paramJobj, "WiFi_5G_NormalToBad_Threshold", JSON_OBJ_COPY(json_object_object_get(apsteeringObj, "WiFi_5G_NormalToBad_Threshold")));
+		json_object_object_add(paramJobj, "WiFi_5G_NormalToGood_Threshold", JSON_OBJ_COPY(json_object_object_get(apsteeringObj, "WiFi_5G_NormalToGood_Threshold")));
+		json_object_object_add(paramJobj, "WiFi_24G_Upgrade_Threshold", JSON_OBJ_COPY(json_object_object_get(apsteeringObj, "WiFi_24G_Upgrade_Threshold")));
+		zcfgFeJsonObjFree(apsteeringObj);
+	}
 #endif
+	json_object_array_add(Jarray, paramJobj);
 	return ret;
 }
 
@@ -81,6 +138,8 @@
 	if(!strcmp(method, "PUT")){
 		ret = zcfgFeDal_Home_Connect_Edit(Jobj, NULL);		
 	}
+	else if(!strcmp(method, "GET"))
+		ret = zcfgFeDal_Home_Connect_Get(Jobj, NULL);	
 	else
 		printf("Unknown method:%s\n", method);
 
Index: libzcfg_fe_dal-1.0/zcfg_fe_dal.c
===================================================================
--- libzcfg_fe_dal-1.0.orig/zcfg_fe_dal.c	2017-05-10 14:33:12.448625334 +0800
+++ libzcfg_fe_dal-1.0/zcfg_fe_dal.c	2017-05-10 14:33:55.476390100 +0800
@@ -175,6 +175,7 @@
 extern void zcfgFeDalShowVlanGroup(struct json_object *Jarray);
 extern void zcfgFeDalShowMACFilter(struct json_object *Jarray);
 extern void zcfgFeDalShowFirewall(struct json_object *Jarray);
+extern void zcfgFeDalShowHomeConnect(struct json_object *Jarray);
 
 dal_handler_t dalHandler[] = {
 {"WAN",				WAN_param,			zcfgFeDalWan,			zcfgFeDalShowWan,			"get",				"Broadband"},
@@ -244,7 +245,7 @@
 {"PAREN_CTL", 		PAREN_CTL_param,	zcfgFeDalParentCtl,		NULL,						"add|edit|delete",	""},//Parental_Control
 {"SCHEDULE", 		SCHEDULE_param,	zcfgFeDalSchedule,			NULL,						"add|edit|delete",	""},//Scheduler_Rule
 {"DEV_SEC_CERT", 	DEV_SEC_CERT_param,	zcfgFeDalDevSecCert, 	NULL,						"add|edit|delete", 	""},//Certificates
-{"HOME_CONNECTIVYITY", HOME_CONNECTIVYITY_param, zcfgFeDalHomeConnectivity,NULL, 			"edit", 			""},//Home_Connectivity
+{"HOME_CONNECTIVYITY", HOME_CONNECTIVYITY_param, zcfgFeDalHomeConnectivity,zcfgFeDalShowHomeConnect, 	"get|edit", 		"Home_Connectivity"},//Home_Connectivity
 {"MGMT_SRV", 		MGMT_SRV_param,	zcfgFeDalMgmtSrv,			zcfgFeDalShowMgmtSrv,		"edit|get",			"Remote_MGMT"},
 {"LOGIN_PRIVILEGE", LOGIN_PRIVILEGE_param,	zcfgFeDalLoginPrivilege,NULL, 					"edit",				""},//root_only
 {"QUICKSTART", 		QUICK_START_param,	zcfgFeDalQuickStart,	NULL,						"edit",				""},//root_only
