Index: libzcfg_fe_dal-1.0/security/schedulerRule/zcfg_fe_dal_schedulerRule.c
===================================================================
--- libzcfg_fe_dal-1.0.orig/security/schedulerRule/zcfg_fe_dal_schedulerRule.c	2018-06-07 19:49:52.860561748 +0800
+++ libzcfg_fe_dal-1.0/security/schedulerRule/zcfg_fe_dal_schedulerRule.c	2018-06-07 19:52:06.233551200 +0800
@@ -143,11 +143,13 @@
 	struct json_object *timeStopHour = NULL;
 	struct json_object *timeStopMin = NULL;
 	char TR181Path[64] = {0};
+	int obj_MaxLength = 0;
 	
 	IID_INIT(objIid);
 	while(zcfgFeObjJsonGetNext(RDM_OID_SCHEDULE, &objIid, &ScheduleJobj) == ZCFG_SUCCESS){
 		index++;
 
+		obj_MaxLength = zcfgFeObjMaxLenGet(RDM_OID_SCHEDULE);
 		sprintf(TR181Path, "X_ZYXEL_Schedule.%u", objIid.idx[0]);
 		//enable = json_object_object_get(ScheduleJobj, "Enable");
 		name = json_object_object_get(ScheduleJobj, "Name");
@@ -173,6 +175,7 @@
 		json_object_object_add(pramJobj, "TimeStartMin", JSON_OBJ_COPY(timeStartMin));
 		json_object_object_add(pramJobj, "TimeStopHour", JSON_OBJ_COPY(timeStopHour));
 		json_object_object_add(pramJobj, "TimeStopMin", JSON_OBJ_COPY(timeStopMin));
+		json_object_object_add(pramJobj, "obj_MaxLength", json_object_new_int(obj_MaxLength));
 		if(json_object_object_get(Jobj, "Index")) {
 			if(index == json_object_get_int(json_object_object_get(Jobj, "Index"))) {
 		json_object_array_add(Jarray, pramJobj);
@@ -371,12 +374,18 @@
 	objIndex_t objIid={0};
 	int objIndex;
 	objIndex = json_object_get_int(json_object_object_get(Jobj, "Index"));
+	json_object_object_add(Jobj, "cmdtype", json_object_new_string("DELETE_INDEX"));
 	ret = convertIndextoIid(objIndex, &objIid, RDM_OID_SCHEDULE, NULL, NULL, replyMsg, json_object_get_string(json_object_object_get(Jobj, "cmdtype")) );
 	if(ret != ZCFG_SUCCESS){
 		printf("Wrong index..\n");
 		return ret;
 	}
 	ret = zcfgFeObjJsonDel(RDM_OID_SCHEDULE, &objIid, NULL);
+	if(ret == ZCFG_DELETE_REJECT){
+		json_object_object_add(Jobj, "__multi_lang_replyMsg", json_object_new_string("zylang.SchedulerRule.delete_pcp_sch_err_msg"));
+		printf("%s %s %d \n",json_object_to_json_string(Jobj),__func__,__LINE__);
+		return ret; 
+	}
 	return ret;
 }
 
@@ -388,13 +397,13 @@
 		return ZCFG_INTERNAL_ERROR;
 
 	if(!strcmp(method, "PUT")) {
-		ret = zcfgFeDalScheduleEdit(Jobj, NULL);
+		ret = zcfgFeDalScheduleEdit(Jobj, replyMsg);
 	}
 	else if(!strcmp(method, "POST")) {
-		ret = zcfgFeDalScheduleAdd(Jobj, Jarray, NULL);
+		ret = zcfgFeDalScheduleAdd(Jobj, Jarray, replyMsg);
 	}
 	else if(!strcmp(method, "DELETE")) {
-		ret = zcfgFeDalScheduleDelete(Jobj, NULL);
+		ret = zcfgFeDalScheduleDelete(Jobj, replyMsg);
 	}
 	else if(!strcmp(method, "GET")) {
 		ret = zcfgFeDalScheduleGet(Jobj, Jarray, NULL);
