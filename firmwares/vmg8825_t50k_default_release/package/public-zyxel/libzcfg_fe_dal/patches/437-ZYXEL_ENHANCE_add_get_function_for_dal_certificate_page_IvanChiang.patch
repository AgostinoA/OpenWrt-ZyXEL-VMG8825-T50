Index: libzcfg_fe_dal-1.0/security/certificate/zcfg_fe_dal_localCertificates.c
===================================================================
--- libzcfg_fe_dal-1.0.orig/security/certificate/zcfg_fe_dal_localCertificates.c	2018-01-26 21:07:43.267036159 +0800
+++ libzcfg_fe_dal-1.0/security/certificate/zcfg_fe_dal_localCertificates.c	2018-01-26 20:58:46.578201300 +0800
@@ -13,6 +13,7 @@
 dal_param_t DEV_SEC_CERT_param[] =
 {
 	//DevSecCert
+	{"Index", 		dalType_int, 		0, 	0, 	NULL},
 	{"Enable",		dalType_boolean,	0,	0,	NULL},
 	{"X_ZYXEL_Name",		dalType_string,	0,	0,	NULL},
 	{"X_ZYXEL_Type",		dalType_string,	0,	0,	NULL},
@@ -115,14 +116,17 @@
 	struct json_object *iidArray = NULL;
 	uint8_t iidIdx =0;
 
-	
-	//IID_INIT(objIid);
-	iidArray = json_object_object_get(Jobj, "Iid");
-	
-	for(iidIdx=0;iidIdx<6;iidIdx++){
-		objIid.idx[iidIdx] = json_object_get_int( json_object_array_get_idx(iidArray, iidIdx));
-		if(objIid.idx[iidIdx] != 0)
-			objIid.level = iidIdx+1;
+	IID_INIT(objIid);
+	if (iidArray = json_object_object_get(Jobj, "Index")) {
+		objIid.level = 1;
+		objIid.idx[0] = json_object_get_int(iidArray);
+		json_object_object_del(Jobj, "Index");
+	}
+	else {
+		if(replyMsg != NULL){
+			strcat(replyMsg, "internal error");
+		}
+		return ZCFG_INTERNAL_ERROR;
 	}
 	
 	zcfgFeObjJsonDel(RDM_OID_DEV_SEC_CERT, &objIid, NULL);
@@ -130,6 +134,33 @@
 	return ret;
 	
 }
+zcfgRet_t zcfgFeDalDevSecCertGet(struct json_object *Jobj, struct json_object *Jarray, char *replyMsg){
+	zcfgRet_t ret = ZCFG_SUCCESS;
+	struct json_object *paramJobj = NULL;
+	struct json_object *DevSecCertJobj = NULL;
+	objIndex_t objIid = {0};
+
+	while(zcfgFeObjJsonGetNextWithoutUpdate(RDM_OID_DEV_SEC_CERT, &objIid, &DevSecCertJobj) == ZCFG_SUCCESS){
+		paramJobj = json_object_new_object();
+		json_object_object_add(paramJobj, "Index", json_object_new_int(objIid.idx[0]));
+		json_object_object_add(paramJobj, "X_ZYXEL_Name", JSON_OBJ_COPY(json_object_object_get(DevSecCertJobj, "X_ZYXEL_Name")));
+		json_object_object_add(paramJobj, "X_ZYXEL_Type", JSON_OBJ_COPY(json_object_object_get(DevSecCertJobj, "X_ZYXEL_Type")));
+		json_object_object_add(paramJobj, "X_ZYXEL_Certificate", JSON_OBJ_COPY(json_object_object_get(DevSecCertJobj, "X_ZYXEL_Certificate")));
+		json_object_object_add(paramJobj, "X_ZYXEL_PrivateKey", JSON_OBJ_COPY(json_object_object_get(DevSecCertJobj, "X_ZYXEL_PrivateKey")));
+		json_object_object_add(paramJobj, "X_ZYXEL_SigningRequest", JSON_OBJ_COPY(json_object_object_get(DevSecCertJobj, "X_ZYXEL_SigningRequest")));
+		json_object_object_add(paramJobj, "Issuer", JSON_OBJ_COPY(json_object_object_get(DevSecCertJobj, "Issuer")));
+		json_object_object_add(paramJobj, "Subject", JSON_OBJ_COPY(json_object_object_get(DevSecCertJobj, "Subject")));
+		json_object_object_add(paramJobj, "NotBefore", JSON_OBJ_COPY(json_object_object_get(DevSecCertJobj, "NotBefore")));
+		json_object_object_add(paramJobj, "NotAfter", JSON_OBJ_COPY(json_object_object_get(DevSecCertJobj, "NotAfter")));
+		json_object_object_add(paramJobj, "X_ZYXEL_Name", JSON_OBJ_COPY(json_object_object_get(DevSecCertJobj, "X_ZYXEL_Name")));
+		json_object_array_add(Jarray, paramJobj);
+		
+		zcfgFeJsonObjFree(DevSecCertJobj);
+	}	
+	
+	return ret;
+}
+
 zcfgRet_t zcfgFeDalDevSecCert(const char *method, struct json_object *Jobj, struct json_object *Jarray, char *replyMsg)
 {
 	zcfgRet_t ret = ZCFG_SUCCESS;
@@ -146,6 +177,9 @@
 	else if(!strcmp(method, "DELETE")) {
 		ret = zcfgFeDalDevSecCertDelete(Jobj, NULL);
 	}
+	else if(!strcmp(method, "GET")) {
+		ret = zcfgFeDalDevSecCertGet(Jobj, Jarray, replyMsg);
+	}
 
 	return ret;
 }
Index: libzcfg_fe_dal-1.0/zcfg_fe_dal.c
===================================================================
--- libzcfg_fe_dal-1.0.orig/zcfg_fe_dal.c	2018-01-26 21:07:44.663036118 +0800
+++ libzcfg_fe_dal-1.0/zcfg_fe_dal.c	2018-01-26 20:59:16.212139900 +0800
@@ -334,7 +334,7 @@
 {"media_server", 	USB_MEDIASERVER_param,	zcfgFeDalUsbMediaserver,	zcfgFeDalShowUsbMediaserver,"edit|get", 	"USB_Service"},
 {"paren_ctl", 		PAREN_CTL_param,	zcfgFeDalParentCtl,		zcfgFeDalShowParentCtl,						"get|add|edit|delete",	"Parental_Control"},//Parental_Control
 {"scheduler",		SCHEDULE_param, 	zcfgFeDalSchedule,		zcfgFeDalShowSchedule,		"get|add|edit|delete",	"Scheduler_Rule"},
-{"DEV_SEC_CERT", 	DEV_SEC_CERT_param,	zcfgFeDalDevSecCert, 	NULL,						"add|edit|delete", 	""},//Certificates
+{"dev_sec_cert", 	DEV_SEC_CERT_param,	zcfgFeDalDevSecCert, 	NULL,						"get|add|edit|delete", 	""},//Certificates
 {"one_connect", 	HOME_CONNECTIVYITY_param, zcfgFeDalHomeConnectivity,zcfgFeDalShowHomeConnect, 	"get|edit", 		"Home_Connectivity"},//Home_Connectivity
 {"mgmt_srv", 		MGMT_SRV_param,	zcfgFeDalMgmtSrv,			zcfgFeDalShowMgmtSrv,		"edit|get",			"Remote_MGMT"},
 {"sp_mgmt_srv", 	SP_MGMT_SRV_param,	zcfgFeDalSPMgmtSrv,		zcfgFeDalShowSPMgmtSrv,		"edit|get",			"SP_Domain"},
