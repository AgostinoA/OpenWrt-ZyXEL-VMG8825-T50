Index: libzcfg_fe_dal-1.0/network/nat/zcfg_fe_dal_nat_addr_mapping.c
===================================================================
--- libzcfg_fe_dal-1.0.orig/network/nat/zcfg_fe_dal_nat_addr_mapping.c	2018-09-20 23:13:23.243473636 +0800
+++ libzcfg_fe_dal-1.0/network/nat/zcfg_fe_dal_nat_addr_mapping.c	2018-09-20 23:17:53.824671800 +0800
@@ -20,7 +20,10 @@
 	{"GlobalStartIP",		dalType_string,	0,	0,	NULL,	NULL,									 dal_Add},
 	{"GlobalEndIP",		dalType_string,	0,	0,	NULL,	NULL,									 0},
 	{"MappingRuleName",	dalType_string,	0,	0,	NULL,	NULL,									 dal_Add},
-	{"Interface",			dalType_RtWanWWan,	0,	0,	NULL,	NULL,									 dal_Add},
+#ifndef ABOG_CUSTOMIZATION
+	{"Interface",			dalType_LanRtWanWWan,	0,	0,	NULL,	NULL,									 dal_Add},
+	{"X_ZYXEL_AutoDetectWanStatus",	dalType_boolean,	0,	0,		NULL,	NULL,				dalcmd_Forbid},
+#endif
 	{NULL,				0,				0,	0,	NULL,	NULL,									 dal_Add}
 };
 
@@ -70,6 +73,7 @@
 	objIndex_t objIid;
 	struct json_object *NatAddrMappingJobj = NULL;
 	int n=0;
+	bool autoDetectWanStatus = false;
 	paraName = (const char *)NAT_ADDR_MAPPING_param[n++].paraName;
 
 	IID_INIT(objIid);
@@ -87,10 +91,21 @@
 			paraName = (const char *)NAT_ADDR_MAPPING_param[n++].paraName;
 			continue;
 		}
+#ifndef ABOG_CUSTOMIZATION
+		if(!strcmp(paraName, "Interface")){
+			const char *Interface = json_object_get_string(paramValue);
+			if(strlen(Interface)== 0){
+				autoDetectWanStatus = true;
+			}
+		}
+#endif
 		json_object_object_add(NatAddrMappingJobj, paraName, JSON_OBJ_COPY(paramValue));
 		paraName = (const char *)NAT_ADDR_MAPPING_param[n++].paraName;
 	}
-
+#ifdef ABOG_CUSTOMIZATION
+		json_object_object_add(NatAddrMappingJobj, "Interface", json_object_new_string(""));
+#endif
+    json_object_object_add(NatAddrMappingJobj, "X_ZYXEL_AutoDetectWanStatus", json_object_new_boolean(autoDetectWanStatus));	
 	if((ret = zcfgFeObjJsonSet(RDM_OID_NAT_ADDR_MAPPING, &objIid, NatAddrMappingJobj, NULL)) == ZCFG_SUCCESS)
 	{
 		sprintf(replyMsg, "[%d,%d,%d,%d,%d,%d]",objIid.idx[0],objIid.idx[1],objIid.idx[2],
@@ -112,6 +127,7 @@
 	struct json_object *iidArray = NULL;
 	uint8_t iidIdx =0;
 	char *ifName;
+	bool autoDetectWanStatus = false;
 	paraName = (const char *)NAT_ADDR_MAPPING_param[n++].paraName;
 	
 	IID_INIT(objIid);
@@ -145,25 +161,19 @@
 			paraName = (const char *)NAT_ADDR_MAPPING_param[n++].paraName;
 			continue;
 		}
-//		if (strcmp("Interface", paraName) == 0 && strstr("IP.Interface.", json_object_get_string(paramValue))) {
-//			ifName = getIPInterfaceTR181Name(json_object_get_string(paramValue));
-//			if (ifName) {
-//				json_object_object_add(NatAddrMappingJobj, "Interface", json_object_new_string(ifName));
-//				paramModified = 1;
-//				paraName = (const char *)NAT_ADDR_MAPPING_param[n++].paraName;
-//				continue;
-//			} else {
-//				if(replyMsg != NULL)
-//					strcat(replyMsg, "Invalid Interface");
-//				zcfgFeJsonObjFree(NatAddrMappingJobj);
-//				return ZCFG_INVALID_PARAM_VALUE;
-//			}
-//		}
+#ifndef ABOG_CUSTOMIZATION
+		if(!strcmp(paraName, "Interface")){
+			const char *Interface = json_object_get_string(paramValue);
+			if(strlen(Interface)== 0){
+				autoDetectWanStatus = true;
+			}
+		}
+#endif
 		json_object_object_add(NatAddrMappingJobj, paraName, JSON_OBJ_COPY(paramValue));
 		paramModified = 1;				
 		paraName = (const char *)NAT_ADDR_MAPPING_param[n++].paraName;
 	}
-
+	json_object_object_add(NatAddrMappingJobj, "X_ZYXEL_AutoDetectWanStatus", json_object_new_boolean(autoDetectWanStatus));
 	if(paramModified) {
 		char *type = json_object_get_string(json_object_object_get(NatAddrMappingJobj, "Type"));
 		if (strcmp("One-to-One", type) == 0) {
@@ -270,7 +280,7 @@
 					strcat(replyMsg, "Global IP range is invalid");
 				zcfgFeJsonObjFree(NatAddrMappingJobj);
 				return ZCFG_INVALID_PARAM_VALUE;
-	}
+			}
 		}
 		else {
 			if(replyMsg != NULL)
@@ -339,12 +349,26 @@
 		printf("wrong Jobj format!\n");
 		return;
 	}
-
+#ifdef ABOG_CUSTOMIZATION
+	printf("%-5s %-15s %-15s %-15s %-15s %-15s %-15s\n",
+		    "Index", "MappingRuleName", "Type", "LocalStartIP", "LocalEndIP", "GlobalStartIP", "GlobalEndIP");
+#else
 	printf("%-5s %-15s %-15s %-15s %-15s %-15s %-15s %-15s\n",
 		    "Index", "MappingRuleName", "Interface", "Type", "LocalStartIP", "LocalEndIP", "GlobalStartIP", "GlobalEndIP");
+#endif
 	len = json_object_array_length(Jarray);
 	for(i=0;i<len;i++){
 		obj = json_object_array_get_idx(Jarray, i);
+#ifdef ABOG_CUSTOMIZATION
+		printf("%-5s %-15s %-15s %-15s %-15s %-15s %-15s\n",
+			json_object_get_string(json_object_object_get(obj, "Index")),
+			json_object_get_string(json_object_object_get(obj, "MappingRuleName")),
+			json_object_get_string(json_object_object_get(obj, "Type")),
+			json_object_get_string(json_object_object_get(obj, "LocalStartIP")),
+			json_object_get_string(json_object_object_get(obj, "LocalEndIP")),
+			json_object_get_string(json_object_object_get(obj, "GlobalStartIP")),
+			json_object_get_string(json_object_object_get(obj, "GlobalEndIP")));
+#else
 		printf("%-5s %-15s %-15s %-15s %-15s %-15s %-15s %-15s\n",
 			json_object_get_string(json_object_object_get(obj, "Index")),
 			json_object_get_string(json_object_object_get(obj, "MappingRuleName")),
@@ -354,6 +378,7 @@
 			json_object_get_string(json_object_object_get(obj, "LocalEndIP")),
 			json_object_get_string(json_object_object_get(obj, "GlobalStartIP")),
 			json_object_get_string(json_object_object_get(obj, "GlobalEndIP")));
+#endif
 	}
 }
 
@@ -385,12 +410,8 @@
 			json_object_object_add(paramJobj, "MappingRuleName", JSON_OBJ_COPY(json_object_object_get(NatAddrMappingJobj, "MappingRuleName")));
 			json_object_object_add(paramJobj, "Description", JSON_OBJ_COPY(json_object_object_get(NatAddrMappingJobj, "Description")));
 			json_object_object_add(paramJobj, "WANIntfName", JSON_OBJ_COPY(json_object_object_get(NatAddrMappingJobj, "WANIntfName")));
-
-//			srvName = getIPInterfaceSrvName(json_object_get_string(json_object_object_get(NatAddrMappingJobj, "Interface")));
-//			if (srvName)
-//				json_object_object_add(paramJobj, "Interface", json_object_new_string(srvName));
-//			else
-				json_object_object_add(paramJobj, "Interface", JSON_OBJ_COPY(json_object_object_get(NatAddrMappingJobj, "Interface")));
+			json_object_object_add(paramJobj, "Interface", JSON_OBJ_COPY(json_object_object_get(NatAddrMappingJobj, "Interface")));
+            json_object_object_add(paramJobj, "X_ZYXEL_AutoDetectWanStatus", JSON_OBJ_COPY(json_object_object_get(NatAddrMappingJobj, "X_ZYXEL_AutoDetectWanStatus")));
 			json_object_object_add(paramJobj, "Index", json_object_new_int(objIid.idx[0]));
 			json_object_array_add(Jarray, paramJobj);
 		}
Index: libzcfg_fe_dal-1.0/network/nat/zcfg_fe_dal_nat_application.c
===================================================================
--- libzcfg_fe_dal-1.0.orig/network/nat/zcfg_fe_dal_nat_application.c	2018-09-20 23:13:24.691473594 +0800
+++ libzcfg_fe_dal-1.0/network/nat/zcfg_fe_dal_nat_application.c	2018-09-20 23:18:39.540778000 +0800
@@ -18,8 +18,11 @@
 	{"InternalPortStart",		dalType_int,	0,	63737,	NULL},
 	{"InternalPortEnd",		dalType_int,	0,	63737,	NULL},
 	{"InternalClient",		dalType_string,	0,	256,	NULL},
-	{"Description",		dalType_string,	0,	256,	NULL},			
+	{"Description",		dalType_string,	0,	256,	NULL},
+#ifndef ABOG_CUSTOMIZATION
 	{"Interface",		dalType_string,	0,	256,	NULL},
+	{"X_ZYXEL_AutoDetectWanStatus",	dalType_boolean, 0,	0,	NULL},
+#endif
 	{"Protocol",		dalType_string,	0,	3,	NULL},	
 	{NULL,		0,	0,	0,	NULL}
 };
@@ -40,7 +43,7 @@
 	const char *description = NULL;
 	const char *interface = NULL;
 	const char *protocol = NULL;
-
+    bool autoDetectWanStatus = false;
 	
 
 	while((reqObject = json_object_array_get_idx(Jobj, reqObjIdx)) !=NULL){
@@ -60,7 +63,14 @@
 			internalportendrange = json_object_get_int(json_object_object_get(reqObject, "InternalPortEnd"));
 			internalclient = json_object_get_string(json_object_object_get(reqObject, "InternalClient"));
 			description = json_object_get_string(json_object_object_get(reqObject, "Description"));
+#ifdef ABOG_CUSTOMIZATION
+			autoDetectWanStatus = true;
+#else
 			interface = json_object_get_string(json_object_object_get(reqObject, "Interface"));
+			if(!strcmp(interface,"")){
+				autoDetectWanStatus = true;
+			}
+#endif
 			protocol = json_object_get_string(json_object_object_get(reqObject, "Protocol"));
 
 			json_object_object_add(NatAppJobj, "Enable", json_object_new_boolean(enable));
@@ -70,7 +80,12 @@
 			json_object_object_add(NatAppJobj, "X_ZYXEL_InternalPortEndRange", json_object_new_int(internalportendrange));
 			json_object_object_add(NatAppJobj, "InternalClient", json_object_new_string(internalclient));
 			json_object_object_add(NatAppJobj, "Description", json_object_new_string(description));
+#ifdef ABOG_CUSTOMIZATION
+			json_object_object_add(NatAppJobj, "Interface", json_object_new_string(""));
+#else
 			json_object_object_add(NatAppJobj, "Interface", json_object_new_string(interface));
+#endif
+			json_object_object_add(NatAppJobj, "X_ZYXEL_AutoDetectWanStatus", json_object_new_boolean(autoDetectWanStatus));
 			json_object_object_add(NatAppJobj, "Protocol", json_object_new_string(protocol));
 	
 			zcfgFeObjJsonSet(RDM_OID_NAT_PORT_MAPPING, &natIid, NatAppJobj, NULL);
@@ -180,6 +195,7 @@
 				paramJobj = json_object_new_object();
 				json_object_object_add(paramJobj, "Interface", JSON_OBJ_COPY(json_object_object_get(obj, "Interface")));
 				json_object_object_add(paramJobj, "InternalClient", JSON_OBJ_COPY(json_object_object_get(obj, "InternalClient")));
+				json_object_object_add(paramJobj, "X_ZYXEL_AutoDetectWanStatus", JSON_OBJ_COPY(json_object_object_get(obj, "X_ZYXEL_AutoDetectWanStatus")));
 				json_object_object_add(paramJobj, "Original_Description", json_object_new_string(description));
 				description = (description + 5);
 				json_object_object_add(paramJobj, "Description", json_object_new_string(description));
Index: libzcfg_fe_dal-1.0/network/nat/zcfg_fe_dal_nat_port_mapping.c
===================================================================
--- libzcfg_fe_dal-1.0.orig/network/nat/zcfg_fe_dal_nat_port_mapping.c	2018-09-20 23:13:23.243473636 +0800
+++ libzcfg_fe_dal-1.0/network/nat/zcfg_fe_dal_nat_port_mapping.c	2018-09-20 23:22:00.198396600 +0800
@@ -15,7 +15,10 @@
 	{"Index",						dalType_int,		0,	0,		NULL,	NULL,				dal_Edit|dal_Delete},
 	{"Description",					dalType_string,		1,	256,	NULL,	NULL,				dal_Add},
 	{"Enable",						dalType_boolean,	0,	0,		NULL,	NULL,				0},
-	{"Interface",					dalType_RtWanWWan,	0,	0,		NULL,	NULL,				dal_Add},
+#ifndef ABOG_CUSTOMIZATION
+	{"Interface",					dalType_LanRtWanWWan,	0,	0,		NULL,	NULL,				dal_Add},
+	{"X_ZYXEL_AutoDetectWanStatus",	dalType_boolean,	0,	0,		NULL,	NULL,				dalcmd_Forbid},
+#endif
 	{"ExternalPortStart",			dalType_int,		1,	65535,	NULL,	NULL,				dal_Add},
 	{"ExternalPortEnd",				dalType_int,		1,	65535,	NULL,	NULL,				dal_Add},
 	{"InternalPortStart",			dalType_int,		1,	65535,	NULL,	NULL,				dal_Add},
@@ -24,7 +27,6 @@
 	//{"X_ZYXEL_SetOriginatingIP",	dalType_boolean, 	0, 0, 		NULL,	NULL,	0},
 	{"SetOriginatingIP",			dalType_boolean, 	0,	0, 		NULL,	NULL,				dal_Add},
 	{"OriginatingIpAddress",		dalType_v4Addr, 	0, 	0, 		NULL,	NULL,				0},
-	{"X_ZYXEL_AutoDetectWanStatus",	dalType_boolean,	0,	0,		NULL,	NULL,				0},
 #ifdef ELISA_NAT_PORTFORWARD_CUSTOMIZATIONN
 	{"WANIP",				dalType_v4Addr,		0,	0,		NULL,	NULL,				0},
 #endif
@@ -42,8 +44,13 @@
 		printf("wrong Jobj format!\n");
 		return;
 	}
+#ifdef ABOG_CUSTOMIZATION
+	printf("%-5s %-15s %-7s %-15s %-17s %-10s %-10s %-25s %-25s %-10s\n",
+		    "Index", "Description", "Enable", "Originating IP", "Server IP Address", "Start Port", "End Port", "Translation Start Port", "Translation End Port", "Protocol");
+#else
 	printf("%-5s %-15s %-7s %-15s %-17s %-15s %-10s %-10s %-25s %-25s %-10s\n",
 		    "Index", "Description", "Enable", "Originating IP", "Server IP Address", "WAN Interface", "Start Port", "End Port", "Translation Start Port", "Translation End Port", "Protocol");
+#endif
 	len = json_object_array_length(Jarray);
 	for(i=0;i<len;i++){
 		obj = json_object_array_get_idx(Jarray, i);
@@ -53,7 +60,20 @@
 		}
 		else
 			origIP = json_object_get_string(json_object_object_get(obj, "OriginatingIpAddress"));			
-		
+#ifdef ABOG_CUSTOMIZATION
+		printf("%-5s %-15s %-7d %-15s %-17s %-10s %-10s %-25s %-25s %-10s\n",
+			json_object_get_string(json_object_object_get(obj, "Index")),
+			json_object_get_string(json_object_object_get(obj, "Description")),
+			json_object_get_boolean(json_object_object_get(obj, "Enable")),
+			origIP,
+			json_object_get_string(json_object_object_get(obj, "InternalClient")),
+			json_object_get_string(json_object_object_get(obj, "ExternalPortStart")),
+			json_object_get_string(json_object_object_get(obj, "ExternalPortEnd")),
+			json_object_get_string(json_object_object_get(obj, "InternalPortStart")),
+			json_object_get_string(json_object_object_get(obj, "InternalPortEnd")),
+			json_object_get_string(json_object_object_get(obj, "Protocol")));
+	
+#else
 		printf("%-5s %-15s %-7d %-15s %-17s %-15s %-10s %-10s %-25s %-25s %-10s\n",
 			json_object_get_string(json_object_object_get(obj, "Index")),
 			json_object_get_string(json_object_object_get(obj, "Description")),
@@ -66,6 +86,7 @@
 			json_object_get_string(json_object_object_get(obj, "InternalPortStart")),
 			json_object_get_string(json_object_object_get(obj, "InternalPortEnd")),
 			json_object_get_string(json_object_object_get(obj, "Protocol")));
+#endif
 	}
 }
 
@@ -119,7 +140,6 @@
 	}
 	if(ret == ZCFG_SUCCESS){
 		enable = json_object_get_boolean(json_object_object_get(Jobj, "Enable"));
-		interface = json_object_get_string(json_object_object_get(Jobj, "Interface"));
 		originatingipaddress = json_object_get_string(json_object_object_get(Jobj, "OriginatingIpAddress"));		
 		externalport = json_object_get_int(json_object_object_get(Jobj, "ExternalPortStart"));
 		externalportendrange = json_object_get_int(json_object_object_get(Jobj, "ExternalPortEnd"));
@@ -129,7 +149,14 @@
 		protocol = json_object_get_string(json_object_object_get(Jobj, "Protocol"));
 		internalclient = json_object_get_string(json_object_object_get(Jobj, "InternalClient"));
 		description = json_object_get_string(json_object_object_get(Jobj, "Description"));
-		autoDetectWanStatus = json_object_get_boolean(json_object_object_get(Jobj, "X_ZYXEL_AutoDetectWanStatus"));
+#ifdef ABOG_CUSTOMIZATION
+		autoDetectWanStatus = true;
+#else
+		interface = json_object_get_string(json_object_object_get(Jobj, "Interface"));
+		if(!strcmp(interface,"")){
+			autoDetectWanStatus = true;
+		}
+#endif
 #ifdef ELISA_NAT_PORTFORWARD_CUSTOMIZATIONN
 		wanip = json_object_get_string(json_object_object_get(Jobj, "WANIP"));
 #endif
@@ -154,8 +181,15 @@
 
 		if(json_object_object_get(Jobj, "Enable") != NULL)
 			json_object_object_add(NatPortMappingJobj, "Enable", json_object_new_boolean(enable));
-		if(json_object_object_get(Jobj, "Interface") != NULL)
+#ifdef ABOG_CUSTOMIZATION
+			json_object_object_add(NatPortMappingJobj, "Interface", json_object_new_string(""));
+			json_object_object_add(NatPortMappingJobj, "X_ZYXEL_AutoDetectWanStatus", json_object_new_boolean(autoDetectWanStatus));
+#else
+		if(json_object_object_get(Jobj, "Interface") != NULL){
 			json_object_object_add(NatPortMappingJobj, "Interface", json_object_new_string(interface));
+			json_object_object_add(NatPortMappingJobj, "X_ZYXEL_AutoDetectWanStatus", json_object_new_boolean(autoDetectWanStatus));
+		}
+#endif
 		if(json_object_object_get(Jobj, "ExternalPortStart") != NULL)
 			json_object_object_add(NatPortMappingJobj, "ExternalPort", json_object_new_int(externalport));
 		if(json_object_object_get(Jobj, "ExternalPortEnd") != NULL)
@@ -175,8 +209,6 @@
 		if(json_object_object_get(Jobj, "Description") != NULL)
 			json_object_object_add(NatPortMappingJobj, "Description", json_object_new_string(description));
 
-		if(json_object_object_get(Jobj, "X_ZYXEL_AutoDetectWanStatus") != NULL)
-			json_object_object_add(NatPortMappingJobj, "X_ZYXEL_AutoDetectWanStatus", json_object_new_boolean(autoDetectWanStatus));
 #ifdef ELISA_NAT_PORTFORWARD_CUSTOMIZATIONN
 		if(json_object_object_get(Jobj, "WANIP") != NULL)
 			json_object_object_add(NatPortMappingJobj, "X_ZYXEL_WANIP", json_object_new_string(wanip));
@@ -260,7 +292,12 @@
 		}
 		
 		enable = json_object_get_boolean(json_object_object_get(Jobj, "Enable"));
+#ifndef ABOG_CUSTOMIZATION
 		interface = json_object_get_string(json_object_object_get(Jobj, "Interface"));
+		if(!strcmp(interface,"")){
+			autoDetectWanStatus = true;
+		}
+#endif
 		originatingipaddress = json_object_get_string(json_object_object_get(Jobj, "OriginatingIpAddress"));		
 		externalport = json_object_get_int(json_object_object_get(Jobj, "ExternalPortStart"));
 		externalportendrange = json_object_get_int(json_object_object_get(Jobj, "ExternalPortEnd"));
@@ -270,14 +307,17 @@
 		protocol = json_object_get_string(json_object_object_get(Jobj, "Protocol"));
 		internalclient = json_object_get_string(json_object_object_get(Jobj, "InternalClient"));
 		description = json_object_get_string(json_object_object_get(Jobj, "Description"));
-		autoDetectWanStatus = json_object_get_boolean(json_object_object_get(Jobj, "X_ZYXEL_AutoDetectWanStatus"));
 #ifdef ELISA_NAT_PORTFORWARD_CUSTOMIZATIONN
 		wanip = json_object_get_string(json_object_object_get(Jobj, "WANIP"));
 #endif
 		if(json_object_object_get(Jobj, "Enable") != NULL)
 			json_object_object_add(NatPortMappingJobj, "Enable", json_object_new_boolean(enable));
-		if(json_object_object_get(Jobj, "Interface") != NULL)
+#ifndef ABOG_CUSTOMIZATION
+		if(json_object_object_get(Jobj, "Interface") != NULL){
 			json_object_object_add(NatPortMappingJobj, "Interface", json_object_new_string(interface));
+			json_object_object_add(NatPortMappingJobj, "X_ZYXEL_AutoDetectWanStatus", json_object_new_boolean(autoDetectWanStatus));
+		}
+#endif
 		if(json_object_object_get(Jobj, "ExternalPortStart") != NULL)
 			json_object_object_add(NatPortMappingJobj, "ExternalPort", json_object_new_int(externalport));
 		if(json_object_object_get(Jobj, "ExternalPortEnd") != NULL)
@@ -296,8 +336,6 @@
 			json_object_object_add(NatPortMappingJobj, "InternalClient", json_object_new_string(internalclient));
 		if(json_object_object_get(Jobj, "Description") != NULL)
 			json_object_object_add(NatPortMappingJobj, "Description", json_object_new_string(description));
-		if(json_object_object_get(Jobj, "X_ZYXEL_AutoDetectWanStatus") != NULL)
-			json_object_object_add(NatPortMappingJobj, "X_ZYXEL_AutoDetectWanStatus", json_object_new_boolean(autoDetectWanStatus));
 		//check prot range
 		externalport = json_object_get_int(json_object_object_get(NatPortMappingJobj, "ExternalPort"));
 		externalportendrange = json_object_get_int(json_object_object_get(NatPortMappingJobj, "ExternalPortEndRange"));
Index: libzcfg_fe_dal-1.0/network/nat/zcfg_fe_dal_nat_port_triggering.c
===================================================================
--- libzcfg_fe_dal-1.0.orig/network/nat/zcfg_fe_dal_nat_port_triggering.c	2018-09-20 23:13:24.743473593 +0800
+++ libzcfg_fe_dal-1.0/network/nat/zcfg_fe_dal_nat_port_triggering.c	2018-09-20 23:23:07.795615900 +0800
@@ -15,7 +15,10 @@
 	{"Index",				dalType_int,			0,	0,		NULL,	NULL,			dal_Edit|dal_Delete},
 	{"Enable",			dalType_boolean,		0,	0,		NULL,	NULL,			dal_Add},
 	{"Description",		dalType_string,		1,	256,		NULL,	NULL,			dal_Add},
-	{"Interface",			dalType_RtWanWWan,	0,	0,		NULL,	NULL,			dal_Add},
+#ifndef ABOG_CUSTOMIZATION
+	{"Interface",			dalType_LanRtWanWWan,	0,	0,		NULL,	NULL,			dal_Add},
+	{"X_ZYXEL_AutoDetectWanStatus",	dalType_boolean,0,	0,		NULL,	NULL,			dalcmd_Forbid},
+#endif
 	{"TriggerPortStart",	dalType_int,			1,	65535,	NULL,	NULL,			dal_Add},
 	{"TriggerPortEnd",		dalType_int,			1,	65535,	NULL,	NULL,			dal_Add},
 	{"OpenPortStart",		dalType_int,			1,	65535,	NULL,	NULL,			dal_Add},
@@ -39,7 +42,8 @@
 	const char *protocol = NULL;
 	const char *triggerprotocol = NULL;
 	const char *description = NULL;
-
+    bool autoDetectWanStatus = false;
+	
 	if (json_object_object_get(Jobj, "Description")) {
 		// check Description is duplicated or not.
 		description = json_object_get_string(json_object_object_get(Jobj, "Description"));
@@ -63,7 +67,14 @@
 	
 	if(ret == ZCFG_SUCCESS){
 		enable = json_object_get_boolean(json_object_object_get(Jobj, "Enable"));
+#ifdef ABOG_CUSTOMIZATION
+		autoDetectWanStatus = true;
+#else
 		interface = json_object_get_string(json_object_object_get(Jobj, "Interface"));
+		if(!strcmp(interface,"")){
+			autoDetectWanStatus = true;
+		}
+#endif
 		triggerport = json_object_get_int(json_object_object_get(Jobj, "TriggerPortStart"));
 		triggerportendrange = json_object_get_int(json_object_object_get(Jobj, "TriggerPortEnd"));
 		openport = json_object_get_int(json_object_object_get(Jobj, "OpenPortStart"));
@@ -79,7 +90,12 @@
 			return ZCFG_INVALID_PARAM_VALUE;
 		}
 		json_object_object_add(NatPortTriggeringJobj, "Enable", json_object_new_boolean(enable));
+#ifdef ABOG_CUSTOMIZATION
+		json_object_object_add(NatPortTriggeringJobj, "Interface", json_object_new_string(""));
+#else
 		json_object_object_add(NatPortTriggeringJobj, "Interface", json_object_new_string(interface));
+#endif
+		json_object_object_add(NatPortTriggeringJobj, "X_ZYXEL_AutoDetectWanStatus", json_object_new_boolean(autoDetectWanStatus));
 		json_object_object_add(NatPortTriggeringJobj, "TriggerPort", json_object_new_int(triggerport));
 		json_object_object_add(NatPortTriggeringJobj, "TriggerPortEndRange", json_object_new_int(triggerportendrange));
 		json_object_object_add(NatPortTriggeringJobj, "OpenPort", json_object_new_int(openport));
@@ -110,6 +126,7 @@
 	const char *triggerprotocol = NULL;
 	const char *description = NULL;
 	int index = 0;
+	bool autoDetectWanStatus = false;
 	
 	if (Jobj && json_object_object_get(Jobj, "idx") != NULL)
 	{
@@ -153,10 +170,16 @@
 		enable = json_object_get_boolean(json_object_object_get(Jobj, "Enable"));
 		json_object_object_add(NatPortTriggeringJobj, "Enable", json_object_new_boolean(enable));
 	}
+#ifndef ABOG_CUSTOMIZATION
 	if (json_object_object_get(Jobj, "Interface")) {
 		interface = json_object_get_string(json_object_object_get(Jobj, "Interface"));
+		if(!strcmp(interface,"")){
+			autoDetectWanStatus = true;
+		}
+		json_object_object_add(NatPortTriggeringJobj, "X_ZYXEL_AutoDetectWanStatus", json_object_new_boolean(autoDetectWanStatus));
 		json_object_object_add(NatPortTriggeringJobj, "Interface", json_object_new_string(interface));
 	}
+#endif
 	if (json_object_object_get(Jobj, "TriggerPortStart")) {
 		triggerport = json_object_get_int(json_object_object_get(Jobj, "TriggerPortStart"));
 		json_object_object_add(NatPortTriggeringJobj, "TriggerPort", json_object_new_int(triggerport));
@@ -254,6 +277,7 @@
 			paramJobj = json_object_new_object();
 			json_object_object_add(paramJobj, "Enable", JSON_OBJ_COPY(json_object_object_get(NatPortTriggeringJobj, "Enable")));
 			json_object_object_add(paramJobj, "Interface", JSON_OBJ_COPY(json_object_object_get(NatPortTriggeringJobj, "Interface")));
+			json_object_object_add(paramJobj, "X_ZYXEL_AutoDetectWanStatus", JSON_OBJ_COPY(json_object_object_get(NatPortTriggeringJobj, "X_ZYXEL_AutoDetectWanStatus")));
 			json_object_object_add(paramJobj, "TriggerPort", JSON_OBJ_COPY(json_object_object_get(NatPortTriggeringJobj, "TriggerPort")));
 			json_object_object_add(paramJobj, "TriggerPortEndRange", JSON_OBJ_COPY(json_object_object_get(NatPortTriggeringJobj, "TriggerPortEndRange")));
 			json_object_object_add(paramJobj, "OpenPort", JSON_OBJ_COPY(json_object_object_get(NatPortTriggeringJobj, "OpenPort")));
@@ -280,12 +304,28 @@
 		printf("wrong Jobj format!\n");
 		return;
 	}
-
+#ifdef ABOG_CUSTOMIZATION
+	printf("%-5s %-15s %-7s %-17s %-15s %-15s %-15s %-15s %-13s\n",
+		    "Index", "Description", "Enable", "TriggerPortStart", "TriggerPortEnd", "TriggerProto.", "OpenPortStart", "OpenPortEnd", "OpenProtocol");
+#else
 	printf("%-5s %-15s %-7s %-15s %-17s %-15s %-15s %-15s %-15s %-13s\n",
 		    "Index", "Description", "Enable", "WAN Interface", "TriggerPortStart", "TriggerPortEnd", "TriggerProto.", "OpenPortStart", "OpenPortEnd", "OpenProtocol");
+#endif
 	len = json_object_array_length(Jarray);
 	for(i=0;i<len;i++){
 		obj = json_object_array_get_idx(Jarray, i);
+#ifdef ABOG_CUSTOMIZATION
+		printf("%-5s %-15s %-7d %-17s %-15s %-15s %-15s %-15s %-13s\n",
+			json_object_get_string(json_object_object_get(obj, "Index")),
+			json_object_get_string(json_object_object_get(obj, "Description")),
+			json_object_get_boolean(json_object_object_get(obj, "Enable")),
+			json_object_get_string(json_object_object_get(obj, "TriggerPort")),
+			json_object_get_string(json_object_object_get(obj, "TriggerPortEndRange")),
+			json_object_get_string(json_object_object_get(obj, "TriggerProtocol")),
+			json_object_get_string(json_object_object_get(obj, "OpenPort")),
+			json_object_get_string(json_object_object_get(obj, "OpenPortEndRange")),
+			json_object_get_string(json_object_object_get(obj, "Protocol")));
+#else
 		printf("%-5s %-15s %-7d %-15s %-17s %-15s %-15s %-15s %-15s %-13s\n",
 			json_object_get_string(json_object_object_get(obj, "Index")),
 			json_object_get_string(json_object_object_get(obj, "Description")),
@@ -297,6 +337,7 @@
 			json_object_get_string(json_object_object_get(obj, "OpenPort")),
 			json_object_get_string(json_object_object_get(obj, "OpenPortEndRange")),
 			json_object_get_string(json_object_object_get(obj, "Protocol")));
+#endif
 	}
 }
 
Index: libzcfg_fe_dal-1.0/zcfg_fe_dal.c
===================================================================
--- libzcfg_fe_dal-1.0.orig/zcfg_fe_dal.c	2018-09-20 23:13:24.879473589 +0800
+++ libzcfg_fe_dal-1.0/zcfg_fe_dal.c	2018-09-20 23:16:43.454755800 +0800
@@ -2577,7 +2577,7 @@
 		return false;
 }
 
-bool parseValidateParameter(struct json_object *Jobj, char *method, dal_param_t *paramList, char *invalidParm){
+bool parseValidateParameter(struct json_object *Jobj, char *method, char *handler_name, dal_param_t *paramList, char *invalidParm){
 	int i, j, k;
 	struct json_object *pramJobj = NULL;
 	struct json_object *WanLanListJarray = NULL, *WanLanObj = NULL, *RouteIntfJarray = NULL, *intfObj = NULL, *LanPortListJarray = NULL, *QueueListJarray = NULL, *VoipList = NULL, *certListJarray = NULL;
@@ -3183,10 +3183,22 @@
 							}
 							if(!strcmp(Name, stringPtr)){
 								foundIntf = true;
-								if(paramList[j].type == dalType_LanName)
+								if(paramList[j].type == dalType_LanName){
 									json_object_object_add(Jobj, paramList[i].paraName, json_object_new_string(stringPtr));
-								else
-									json_object_object_add(Jobj, paramList[i].paraName, json_object_new_string(IpIfacePath));
+								}
+								else{
+									if(strstr(handler_name,"nat")!= NULL){
+										if(!strcmp(stringPtr, "Default")){
+											json_object_object_add(Jobj, paramList[i].paraName, json_object_new_string(""));
+										}
+										else{
+											json_object_object_add(Jobj, paramList[i].paraName, json_object_new_string(IpIfacePath));
+										}
+									}
+									else{
+										json_object_object_add(Jobj, paramList[i].paraName, json_object_new_string(IpIfacePath));
+									}
+								}
 							}
 						}
 						json_object_put(WanLanListJarray);
@@ -3822,7 +3834,7 @@
 		printf("Unknown handlerName:%s\n", handlerName);
 		return ret;
 	}
-	if(parseValidateParameter(Jobj, method, dalHandler[i].parameter, replyMsg) == false){
+	if(parseValidateParameter(Jobj, method, dalHandler[i].name, dalHandler[i].parameter,replyMsg) == false){
 		return ZCFG_INVALID_PARAM_VALUE;
 	}
 
