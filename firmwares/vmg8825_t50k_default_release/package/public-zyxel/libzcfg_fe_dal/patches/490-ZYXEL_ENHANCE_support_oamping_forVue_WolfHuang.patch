Index: libzcfg_fe_dal-1.0/maintenance/diagnostic/zcfg_fe_dal_oam_ping.c
===================================================================
--- libzcfg_fe_dal-1.0.orig/maintenance/diagnostic/zcfg_fe_dal_oam_ping.c	2018-03-02 00:42:58.571527301 +0800
+++ libzcfg_fe_dal-1.0/maintenance/diagnostic/zcfg_fe_dal_oam_ping.c	2018-03-02 00:51:37.627763347 +0800
@@ -9,6 +9,7 @@
 #include "zcfg_debug.h"
 #include "zcfg_msg.h"
 #include "zcfg_fe_dal_common.h"
+#include "zlog_api.h"
 
 #define ATM_DIAG_F4_LO 4
 #define ATM_DIAG_F5_LO 5
@@ -68,7 +69,9 @@
 }
 
 void getOamPingType(struct json_object *Jobj){
-	LoopbackType = json_object_get_int(json_object_object_get(Jobj, "LoopbackType"));
+	if( NULL != json_object_object_get(Jobj, "LoopbackType") ){
+		LoopbackType = json_object_get_int(json_object_object_get(Jobj, "LoopbackType"));
+	}
 	return;
 }
 
@@ -76,12 +79,12 @@
 zcfgRet_t zcfgFeDalOamPingF4LookbackEdit(struct json_object *Jobj){
 	struct json_object *setJson = NULL;
 	zcfgRet_t ret = ZCFG_SUCCESS;
-	printf("%s(): Enter ..\n", __FUNCTION__);
+	ZLOG_INFO(" Enter ..\n");
 	getOamPingF4BasicInfo(Jobj);
 
 	IID_INIT(F4objIid);
 	if((ret = zcfgFeObjJsonGet(RDM_OID_ATM_DIAG_F4_LO, &F4objIid, &atmF4Obj)) != ZCFG_SUCCESS){
-		printf("%s():(ERROR) zcfgFeObjJsonGet get atmF4Loopback fail~ \n ",__FUNCTION__);
+		ZLOG_INFO("(ERROR) zcfgFeObjJsonGet get atmF4Loopback fail~ \n ");
 		return ZCFG_INTERNAL_ERROR;
 	}
 
@@ -92,7 +95,7 @@
 		json_object_object_add(atmF4Obj, "SegmentLoopback", json_object_new_boolean(SegmentLoopback));
 
 		if((ret = zcfgFeObjJsonSet(RDM_OID_ATM_DIAG_F4_LO, &F4objIid, atmF4Obj, NULL)) != ZCFG_SUCCESS){
-			printf("%s():(ERROR) fail to set object %d\n", __FUNCTION__, RDM_OID_ATM_DIAG_F4_LO);
+			ZLOG_INFO("(ERROR) fail to set object %d\n", RDM_OID_ATM_DIAG_F4_LO);
 			return ZCFG_INTERNAL_ERROR;
 		}
 	}
@@ -103,13 +106,13 @@
 zcfgRet_t zcfgFeDalOamPingF5LookbackEdit(struct json_object *Jobj){
 	struct json_object *setJson = NULL;
 	zcfgRet_t ret = ZCFG_SUCCESS;
-	printf("%s(): Enter ..\n", __FUNCTION__);
+	ZLOG_INFO("Enter ..\n");
 	getOamPingF5BasicInfo(Jobj);
 
 
 	IID_INIT(F5objIid);
 	if((ret = zcfgFeObjJsonGet(RDM_OID_ATM_DIAG_F5_LO, &F5objIid, &atmF5Obj)) != ZCFG_SUCCESS){
-		printf("%s():(ERROR) zcfgFeObjJsonGet get atmF5Loopback fail~ \n ",__FUNCTION__);
+		ZLOG_INFO("(ERROR) zcfgFeObjJsonGet get atmF5Loopback fail~ \n ");
 		return ZCFG_INTERNAL_ERROR;
 	}
 
@@ -120,7 +123,7 @@
 		json_object_object_add(atmF5Obj, "X_ZYXEL_SegmentLoopback", json_object_new_boolean(X_ZYXEL_SegmentLoopback));
 
 		if((ret = zcfgFeObjJsonSet(RDM_OID_ATM_DIAG_F5_LO, &F5objIid, atmF5Obj, NULL)) != ZCFG_SUCCESS){
-			printf("%s():(ERROR) fail to set object %d\n", __FUNCTION__, RDM_OID_ATM_DIAG_F5_LO);
+			ZLOG_INFO("(ERROR) fail to set object %d\n", RDM_OID_ATM_DIAG_F5_LO);
 			return ZCFG_INTERNAL_ERROR;
 		}
 
@@ -131,18 +134,18 @@
 
 zcfgRet_t zcfgFeDalOamPingEdit(struct json_object *Jobj, char *replyMsg){
 	zcfgRet_t ret = ZCFG_SUCCESS;
-	printf("%s(): input --- %s \n ",__FUNCTION__,json_object_to_json_string(Jobj));
+	ZLOG_INFO(" input --- %s \n ",json_object_to_json_string(Jobj));
 	initOamPingGlobalObjects();
 	getOamPingType(Jobj);
 
 	if(LoopbackType == ATM_DIAG_F4_LO){
 		if((ret = zcfgFeDalOamPingF4LookbackEdit(Jobj)) != ZCFG_SUCCESS){
-			printf("%s():(ERROR) Oam Ping F4 Lookback fail\n", __FUNCTION__);
+			ZLOG_INFO("(ERROR) Oam Ping F4 Lookback fail\n");
 			goto exit;
 		}
 	}else if(LoopbackType == ATM_DIAG_F5_LO){
 		if((ret = zcfgFeDalOamPingF5LookbackEdit(Jobj)) != ZCFG_SUCCESS){
-			printf("%s():(ERROR) Oam Ping F5 Lookback fail\n", __FUNCTION__);
+			ZLOG_INFO("(ERROR) Oam Ping F5 Lookback fail\n");
 			goto exit;
 		}
 	}
@@ -152,6 +155,33 @@
 	return ret;
 }
 
+zcfgRet_t zcfgFeDalOamPingGet(struct json_object *Jobj, struct json_object *Jarray, char *replyMsg){
+	zcfgRet_t ret = ZCFG_SUCCESS;
+	objIndex_t objIid;
+	struct json_object *obj = NULL;
+	initOamPingGlobalObjects();
+	getOamPingType(Jobj);
+	if( ATM_DIAG_F4_LO == LoopbackType){
+		IID_INIT(F4objIid);
+		if((ret = zcfgFeObjJsonGet(RDM_OID_ATM_DIAG_F4_LO, &F4objIid, &atmF4Obj)) != ZCFG_SUCCESS){
+			ZLOG_INFO("(ERROR) zcfgFeObjJsonGet get atmF4Loopback fail~ \n ");
+			return ZCFG_INTERNAL_ERROR;
+		}
+		json_object_array_add(Jarray, JSON_OBJ_COPY(atmF4Obj));
+	}else if( ATM_DIAG_F5_LO == LoopbackType){
+		IID_INIT(F5objIid);
+		if((ret = zcfgFeObjJsonGet(RDM_OID_ATM_DIAG_F5_LO, &F5objIid, &atmF5Obj)) != ZCFG_SUCCESS){
+			ZLOG_INFO("(ERROR) zcfgFeObjJsonGet get atmF5Loopback fail~ \n ");
+			return ZCFG_INTERNAL_ERROR;
+		}
+		json_object_array_add(Jarray, JSON_OBJ_COPY(atmF5Obj));
+	}
+
+exit:
+	freeAllOamPingObjects();
+	return ret;
+}
+
 zcfgRet_t zcfgFeOamPing(const char *method, struct json_object *Jobj, struct json_object *Jarray, char *replyMsg)
 {
 	zcfgRet_t ret = ZCFG_SUCCESS;
@@ -162,6 +192,9 @@
 	if(!strcmp(method, "PUT")) {
 		ret = zcfgFeDalOamPingEdit(Jobj, NULL);
 	}
+	if(!strcmp(method, "GET")) {
+		ret =zcfgFeDalOamPingGet(Jobj, Jarray, NULL);
+	}
 
 	return ret;
 }
