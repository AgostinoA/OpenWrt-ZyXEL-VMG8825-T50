Index: libzcfg_fe_dal-1.0/network/broadband/zcfg_fe_dal_broadband.c
===================================================================
--- libzcfg_fe_dal-1.0.orig/network/broadband/zcfg_fe_dal_broadband.c	2018-07-18 17:29:38.433100448 +0800
+++ libzcfg_fe_dal-1.0/network/broadband/zcfg_fe_dal_broadband.c	2018-07-18 17:34:27.630124602 +0800
@@ -4034,6 +4034,7 @@
 	json_object_object_add(pramJobj, "ConcurrentWan", JSON_OBJ_COPY(json_object_object_get(ipIfaceObj, "X_ZYXEL_ConcurrentWan")));
 	json_object_object_add(pramJobj, "Enable_6RD",json_object_new_boolean(false));
 	
+#if 0
 	if(!strcmp(CurrEncapsulation, "PPPoE") || !strcmp(CurrEncapsulation, "PPPoA")){
 		if(!strcmp(CurrIpMode, "IPv4")){
 			enable_6RD = json_object_get_boolean(json_object_object_get(ipIfaceObj, "X_ZYXEL_Enable_6RD"));
@@ -4047,25 +4048,28 @@
 			json_object_object_add(pramJobj, "BorderRelayIPv4Addresses", JSON_OBJ_COPY(json_object_object_get(ipIfaceObj, "X_ZYXEL_BorderRelayIPv4Addresses")));
 		}
 	}
+#endif
 
 	getSpecificObj(RDM_OID_DHCPV4_CLIENT, "Interface", json_type_string, ipIfacePath, &v4ClientIid, &v4ClientObj);
 	if(v4ClientObj){
 		getDhcpv4ClientOpt(&v4ClientIid);
-		if(!strcmp(CurrIpMode, "IPv4")){
-			enable_6RD = json_object_get_boolean(json_object_object_get(ipIfaceObj, "X_ZYXEL_Enable_6RD"));
-			json_object_object_add(pramJobj, "Enable_6RD",json_object_new_boolean(enable_6RD));
-		}
-		if(enable_6RD){
-			strcpy(v6RD_Type, json_object_get_string(json_object_object_get(ipIfaceObj, "X_ZYXEL_6RD_Type")));
-			json_object_object_add(pramJobj, "v6RD_Type", json_object_new_string(v6RD_Type));
-			if(!strcmp(v6RD_Type, "static")){
-				json_object_object_add(pramJobj, "SPIPv6Prefix", JSON_OBJ_COPY(json_object_object_get(ipIfaceObj, "X_ZYXEL_SPIPv6Prefix")));
-				json_object_object_add(pramJobj, "IPv4MaskLength", JSON_OBJ_COPY(json_object_object_get(ipIfaceObj, "X_ZYXEL_IPv4MaskLength")));
-				json_object_object_add(pramJobj, "BorderRelayIPv4Addresses", JSON_OBJ_COPY(json_object_object_get(ipIfaceObj, "X_ZYXEL_BorderRelayIPv4Addresses")));
-			}
+	}
+	
+	if(!strcmp(CurrIpMode, "IPv4")){
+		enable_6RD = json_object_get_boolean(json_object_object_get(ipIfaceObj, "X_ZYXEL_Enable_6RD"));
+		json_object_object_add(pramJobj, "Enable_6RD",json_object_new_boolean(enable_6RD));
+	}
+	if(enable_6RD){
+		strcpy(v6RD_Type, json_object_get_string(json_object_object_get(ipIfaceObj, "X_ZYXEL_6RD_Type")));
+		json_object_object_add(pramJobj, "v6RD_Type", json_object_new_string(v6RD_Type));
+		if(!strcmp(v6RD_Type, "static")){
+			json_object_object_add(pramJobj, "SPIPv6Prefix", JSON_OBJ_COPY(json_object_object_get(ipIfaceObj, "X_ZYXEL_SPIPv6Prefix")));
+			json_object_object_add(pramJobj, "IPv4MaskLength", JSON_OBJ_COPY(json_object_object_get(ipIfaceObj, "X_ZYXEL_IPv4MaskLength")));
+			json_object_object_add(pramJobj, "BorderRelayIPv4Addresses", JSON_OBJ_COPY(json_object_object_get(ipIfaceObj, "X_ZYXEL_BorderRelayIPv4Addresses")));
 		}
 	}
 	
+	
 	if(!strcmp(CurrIpMode, "IPv6")){
 		json_object_object_add(pramJobj, "DSLiteEnable",JSON_OBJ_COPY(json_object_object_get(ipIfaceObj, "X_ZYXEL_Enable_DSLite")));
 		json_object_object_add(pramJobj, "DSLiteType",JSON_OBJ_COPY(json_object_object_get(ipIfaceObj, "X_ZYXEL_DSLite_Type")));
