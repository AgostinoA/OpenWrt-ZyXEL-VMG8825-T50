Index: libzcfg_fe_dal-1.0/network/interfaceGrouping/zcfg_fe_dal_intfGrp.c
===================================================================
--- libzcfg_fe_dal-1.0.orig/network/interfaceGrouping/zcfg_fe_dal_intfGrp.c	2017-06-15 13:34:12.964476838 +0800
+++ libzcfg_fe_dal-1.0/network/interfaceGrouping/zcfg_fe_dal_intfGrp.c	2017-06-15 13:46:14.971646700 +0800
@@ -80,15 +80,18 @@
 	{"mac_value",			dalType_string, 0, 0, NULL,NULL,	0},
 	{"op60_value",			dalType_string, 0, 0, NULL,NULL,	0},
 	{"op61_value",			dalType_string, 0, 0, NULL,NULL,	0},
-	{"op125_value",			dalType_string, 0, 0, NULL,NULL,	0},
+	{"op125_value",			dalType_string, 0, 0, NULL,NULL,	0},	//need delete and add "Enterprise_Number, OUI, SN, Class"
+	{"Enterprise_Number",	dalType_int,	0,	65535	,NULL,	NULL,	0},
+	{"OUI",					dalType_string,	0,	0,	NULL,	NULL,	0},
+	{"SN",					dalType_string,	0,	0,	NULL,	NULL,	0},	
+	{"Class",				dalType_string,	0,	0,	NULL,	NULL,	0},
 	{"vlangroup",			dalType_string, 0, 0, NULL,NULL,	0},
 	{"wildcardEnable",		dalType_boolean,0, 0, NULL,NULL,	0},
-	//{"org_type",			dalType_string, 0, 0, NULL,NULL,	0},
-	//{"critInfo",			dalType_string, 0, 0, NULL,	NULL,	0},
-	//{"__modify", 			dalType_string, 0, 0, NULL,	NULL,	0},
-	//{"org", 				dalType_string, 0, 0, NULL,	NULL,	0},
-	//{"critInfoDelLen",		dalType_int, 	0, 0, NULL,	NULL,	0},
-	//{"critInfoDel",			dalType_string, 0, 0, NULL,	NULL,	0},	
+	{"critInfo",			dalType_string, 0, 0, NULL,	NULL,	dalcmd_Forbid},
+	{"__modify", 			dalType_string, 0, 0, NULL,	NULL,	dalcmd_Forbid},
+	{"org", 				dalType_string, 0, 0, NULL,	NULL,	dalcmd_Forbid},
+	{"critInfoDelLen",		dalType_int, 	0, 0, NULL,	NULL,	dalcmd_Forbid},
+	{"critInfoDel",			dalType_string, 0, 0, NULL,	NULL,	dalcmd_Forbid},	
 	{NULL,		0,	0,	0,	NULL}
 };
 
@@ -1442,6 +1445,7 @@
 	s_VlanCritInfo vlanCrit;
 	s_IntfGrp IntfGrp_info;
 	int IP_idx;
+	int count = 1;
 	char IPAddress_str1[60] = {0};
 	char IPAddress_str2[30] = {0};
 	char tmp[10] = {0};
@@ -1459,7 +1463,11 @@
 	const char *macvalue = NULL;
 	const char *op60value = NULL;
 	const char *op61value = NULL;
-	const char *op125value = NULL;
+	int EN = NULL;
+	const char *OUI = NULL;
+	const char *SN = NULL;
+	const char *Class = NULL;
+	char op125value[256] = {0};
 	const char *vlanvalue = NULL;
 	const char *wildcardenable = NULL;
 	const char *optionstr = NULL;
@@ -1525,10 +1533,6 @@
 		op61value = json_object_get_string(json_object_object_get(Jobj, "op61_value"));
 	else
 		op61value = "";
-	if(json_object_get_string(json_object_object_get(Jobj, "op125_value")))
-		op125value = json_object_get_string(json_object_object_get(Jobj, "op125_value"));
-	else
-		op125value = "";
 	if(json_object_get_string(json_object_object_get(Jobj, "vlangroup")))
 		vlanvalue = json_object_get_string(json_object_object_get(Jobj, "vlangroup"));
 	else
@@ -1539,86 +1543,39 @@
 	else
 		optionstr = "";
 	if(!strcmp(type,"op125")){
-		if(strcmp(op125value,"")){
-			char *OUI = NULL;
-			char *SN = NULL;
-			char *CLASS = NULL;
-			char buf[64] = {0};
+		char en[64] = {0};
 			char oui[64] = {0};
 			char sn[64] = {0};
 			char class[64] = {0};
-			char oui1[64] = {0};
-			char sn1[64] = {0};
-			char class1[64] = {0};
-			char sourcemac[128] = {0};
-									
-			char *p, *p1, *p2, *p3;			
-			if(op125value != NULL){
-				strcpy(sourcemac,op125value);
-				p = strstr(sourcemac, ",");
-				if(p != NULL) 
-					*p = '\0';
-			}
-			OUI = strstr(op125value, ",OUI=");
-			if(OUI)
-				OUI = OUI+5;		
-			SN = strstr(op125value, ",SN=");
-			if(SN)
-				SN = SN+4;
-									
-			CLASS = strstr(op125value, ",Class=");
-			if(CLASS)
-				CLASS = CLASS+7;
-			if(OUI){
-				if(strcmp(OUI,"")){
-					strcpy(oui,OUI);
-					p1 = strstr(oui, ",");
-					if(p1 != NULL) 
-						*p1 = '\0';
-					strcat(oui1, oui);
-				}
-			}
-			if(SN){
-				if(strcmp(SN,"")){
-					strcpy(sn,SN);
-					p2 = strstr(sn, ",");
-					if(p2 != NULL) 
-						*p2 = '\0';
-					strcat(sn1, sn);
-				}
-			}
-			if(CLASS){
-				if(strcmp(CLASS,"")){
-					strcpy(class,CLASS);
-					p3 = strstr(class, ",");
-					if(p3 != NULL) 
-						*p3 = '\0';
-					strcat(class1, class);
-				}
-			}
-			strcat(op125tmp,sourcemac);		
-			if(OUI){
-				if(strcmp(OUI,"")){
-					sprintf(oui,"\%\%\%\%1=%s",oui1);
+		if(json_object_object_get(Jobj, "Enterprise_Number")){
+			EN = json_object_get_int(json_object_object_get(Jobj, "Enterprise_Number"));
+			sprintf(en,"enterprise=%d",EN);
+			strcat(op125tmp,en);
+		}
+		if(json_object_object_get(Jobj, "OUI")){
+			OUI = json_object_get_string(json_object_object_get(Jobj, "OUI"));
+			sprintf(oui,"\%\%\%\%%d=%s",count,OUI);
 					strcat(op125tmp, oui);
+			count++;
 				}
-			}
-			if(SN){
-				if(strcmp(SN,"")){
-					sprintf(sn,"\%\%\%\%2=%s",sn1);	
+		if(json_object_object_get(Jobj, "SN")){
+			SN = json_object_get_string(json_object_object_get(Jobj, "SN"));
+			sprintf(sn,"\%\%\%\%%d=%s",count,SN);
 					strcat(op125tmp, sn);
+			count++;
 				}
-			}
-			if(CLASS){
-				if(strcmp(CLASS,"")){
-					sprintf(class,"\%\%\%\%3=%s",class1);
+		if(json_object_object_get(Jobj, "Class")){
+			Class = json_object_get_string(json_object_object_get(Jobj, "Class"));
+			sprintf(class,"\%\%\%\%%d=%s",count,Class);
 					strcat(op125tmp, class);
+			count++;
 				}
+		if(count == 1 && !json_object_object_get(Jobj, "Enterprise_Number")){
+			if(replyMsg != NULL)
+				strcat(replyMsg, "The DHCP option 125 is selected, but one or more than one value is invalid.");
+			return ZCFG_INVALID_PARAM_VALUE;
 			}
 		}
-	}
-
-	
 
 	//GET RDM_OID_IP_IFACE_V4_ADDR
 	/*======================================================================*/
@@ -1894,13 +1851,18 @@
 	objIndex_t BridgeFilterIid = {0};
 	objIndex_t VlanIid = {0};
 	objIndex_t EthLinkIid = {0};
-	int index = 0, critinfolen = 0, ethidx = 0;
-	const char *name = NULL, *wanintf = NULL, *lanintf = NULL, *type = NULL, *macvalue = NULL, *op60value = NULL, *op61value = NULL, *op125value = NULL, *vlanvalue = NULL, *optionstr = NULL;
+	int index = 0, critinfolen = 0, ethidx = 0, EN = 0, count = 1;
+	const char *name = NULL, *wanintf = NULL, *lanintf = NULL, *type = NULL, *macvalue = NULL, *op60value = NULL, *op61value = NULL, *OUI = NULL, *SN = NULL, *Class = NULL, *vlanvalue = NULL, *optionstr = NULL;
 	char brPathName[32] = {0}, lanIntf_tmp[512] = {0}, brPath[32] = {0}, *op125tmp[128] = {0}, ifname[8] = {0};
 	char *single_lanIntf = NULL, *rest_str = NULL;
 	bool wildcardeb = false;
 	
 	index = json_object_get_int(json_object_object_get(Jobj, "Index"));
+	if(index == 1){
+		if(replyMsg != NULL)
+			strcat(replyMsg, "Default rule cannot modify.");
+		return ZCFG_INVALID_PARAM_VALUE;
+	}
 	name = json_object_get_string(json_object_object_get(Jobj, "Name"));
 	wanintf = json_object_get_string(json_object_object_get(Jobj, "wanIntf"));
 	lanintf = json_object_get_string(json_object_object_get(Jobj, "lanIntf"));
@@ -1918,10 +1880,6 @@
 		op61value = json_object_get_string(json_object_object_get(Jobj, "op61_value"));
 	else
 		op61value = "";
-	if(json_object_get_string(json_object_object_get(Jobj, "op125_value")))
-		op125value = json_object_get_string(json_object_object_get(Jobj, "op125_value"));
-	else
-		op125value = "";
 	if(json_object_get_string(json_object_object_get(Jobj, "vlangroup")))
 		vlanvalue = json_object_get_string(json_object_object_get(Jobj, "vlangroup"));
 	else
@@ -1932,82 +1890,37 @@
 	else
 		optionstr = "";
 	if(!strcmp(type,"op125")){
-		if(strcmp(op125value,"")){
-			char *OUI = NULL;
-			char *SN = NULL;
-			char *CLASS = NULL;
-			char buf[64] = {0};
+		char en[64] = {0};
 			char oui[64] = {0};
 			char sn[64] = {0};
 			char class[64] = {0};
-			char oui1[64] = {0};
-			char sn1[64] = {0};
-			char class1[64] = {0};
-			char sourcemac[128] = {0};
-									
-			char *p, *p1, *p2, *p3;			
-			if(op125value != NULL){
-				strcpy(sourcemac,op125value);
-				p = strstr(sourcemac, ",");
-				if(p != NULL) 
-					*p = '\0';
-			}
-			OUI = strstr(op125value, ",OUI=");
-			if(OUI)
-				OUI = OUI+5;		
-			SN = strstr(op125value, ",SN=");
-			if(SN)
-				SN = SN+4;
-									
-			CLASS = strstr(op125value, ",Class=");
-			if(CLASS)
-				CLASS = CLASS+7;
-			if(OUI){
-				if(strcmp(OUI,"")){
-					strcpy(oui,OUI);
-					p1 = strstr(oui, ",");
-					if(p1 != NULL) 
-						*p1 = '\0';
-					strcat(oui1, oui);
-				}
-			}
-			if(SN){
-				if(strcmp(SN,"")){
-					strcpy(sn,SN);
-					p2 = strstr(sn, ",");
-					if(p2 != NULL) 
-						*p2 = '\0';
-					strcat(sn1, sn);
-				}
-			}
-			if(CLASS){
-				if(strcmp(CLASS,"")){
-					strcpy(class,CLASS);
-					p3 = strstr(class, ",");
-					if(p3 != NULL) 
-						*p3 = '\0';
-					strcat(class1, class);
-				}
-			}
-			strcat(op125tmp,sourcemac);		
-			if(OUI){
-				if(strcmp(OUI,"")){
-					sprintf(oui,"\%\%\%\%1=%s",oui1);
+		if(json_object_object_get(Jobj, "Enterprise_Number")){
+			EN = json_object_get_int(json_object_object_get(Jobj, "Enterprise_Number"));
+			sprintf(en,"enterprise=%d",EN);
+			strcat(op125tmp,en);
+		}
+		if(json_object_object_get(Jobj, "OUI")){
+			OUI = json_object_get_string(json_object_object_get(Jobj, "OUI"));
+			sprintf(oui,"\%\%\%\%%d=%s",count,OUI);
 					strcat(op125tmp, oui);
+			count++;
 				}
-			}
-			if(SN){
-				if(strcmp(SN,"")){
-					sprintf(sn,"\%\%\%\%2=%s",sn1);	
+		if(json_object_object_get(Jobj, "SN")){
+			SN = json_object_get_string(json_object_object_get(Jobj, "SN"));
+			sprintf(sn,"\%\%\%\%%d=%s",count,SN);
 					strcat(op125tmp, sn);
+			count++;
 				}
-			}
-			if(CLASS){
-				if(strcmp(CLASS,"")){
-					sprintf(class,"\%\%\%\%3=%s",class1);
+		if(json_object_object_get(Jobj, "Class")){
+			Class = json_object_get_string(json_object_object_get(Jobj, "Class"));
+			sprintf(class,"\%\%\%\%%d=%s",count,Class);
 					strcat(op125tmp, class);
+			count++;
 				}
-			}
+		if(count == 1 && !json_object_object_get(Jobj, "Enterprise_Number")){
+			if(replyMsg != NULL)
+				strcat(replyMsg, "The DHCP option 125 is selected, but one or more than one value is invalid.");
+			return ZCFG_INVALID_PARAM_VALUE;
 		}
 	}
 
@@ -2238,13 +2151,13 @@
 	
 	if(!strcmp(method, "POST")) {
 		if(type)
-			ret = dalcmdIntrGrpAdd(Jobj, NULL);
+			ret = dalcmdIntrGrpAdd(Jobj, replyMsg);
 		else
 		ret = zcfgFeDalIntrGrpAdd(Jobj, NULL);
 	}
 	else if(!strcmp(method, "PUT")) {
 		if(type)
-			ret = dalcmdIntrGrpEdit(Jobj, NULL);
+			ret = dalcmdIntrGrpEdit(Jobj, replyMsg);
 		else
 		ret = zcfgFeDalIntrGrpEdit(Jobj, NULL);
 	}
Index: libzcfg_fe_dal-1.0/network/nat/zcfg_fe_dal_nat_port_mapping.c
===================================================================
--- libzcfg_fe_dal-1.0.orig/network/nat/zcfg_fe_dal_nat_port_mapping.c	2017-06-15 13:34:12.904476839 +0800
+++ libzcfg_fe_dal-1.0/network/nat/zcfg_fe_dal_nat_port_mapping.c	2017-06-15 13:43:55.874646700 +0800
@@ -22,15 +22,15 @@
 	//{"X_ZYXEL_InternalPortEndRange",dalType_int,		1,	63737,	NULL,	NULL,	0},
 	{"InternalPortEnd",				dalType_int,		1,	65535,	NULL,	NULL,				dal_Add},
 	//{"X_ZYXEL_SetOriginatingIP",	dalType_boolean, 	0, 0, 		NULL,	NULL,	0},
-	{"SetOriginatingIP",			dalType_boolean, 	0,	0, 		NULL,	NULL,				0},
+	{"SetOriginatingIP",			dalType_boolean, 	0,	0, 		NULL,	NULL,				dal_Add},
 	{"OriginatingIpAddress",		dalType_v4Addr, 	0, 	0, 		NULL,	NULL,				0},
 #ifdef ELISA_NAT_PORTFORWARD_CUSTOMIZATIONN
 	{"X_ZYXEL_AutoDetectWanStatus",	dalType_boolean,	0,	0,		NULL,	NULL,				0},
 	{"X_ZYXEL_WANIP",				dalType_v4Addr,		0,	0,		NULL,	NULL,				0},
 #endif
-	{"Protocol",					dalType_string,		0,	0,		NULL,	"TCP|UDP|ALL",		0},
+	{"Protocol",					dalType_string,		0,	0,		NULL,	"TCP|UDP|ALL",		dal_Add},
 	{"InternalClient",				dalType_v4Addr,		0,	256,	NULL,	NULL,				dal_Add},
-	{NULL,							0,					0,	0,		NULL,	NULL,				dal_Add}
+	{NULL,							0,					0,	0,		NULL,	NULL,				NULL}
 };
 void zcfgFeDalShowPortFwd(struct json_object *Jarray){
 	int i, len = 0;
Index: libzcfg_fe_dal-1.0/network/routing/zcfg_fe_dal_policy_route.c
===================================================================
--- libzcfg_fe_dal-1.0.orig/network/routing/zcfg_fe_dal_policy_route.c	2017-06-15 13:34:12.964476838 +0800
+++ libzcfg_fe_dal-1.0/network/routing/zcfg_fe_dal_policy_route.c	2017-06-15 13:44:58.545646700 +0800
@@ -15,8 +15,8 @@
 	{"RouteName",						dalType_string,	0,	0,	NULL,	NULL,	dal_Add},
 	{"SourceIpAddress",					dalType_v4Addr,	0,	0,	NULL,	NULL,	dal_Add},
 	{"SourceSubnetMask",				dalType_v4Mask,	0,	0,	NULL,	NULL,	dal_Add},
-	{"Protocol",						dalType_string,	0,	0,	NULL	,"TCP|UDP",	dal_Add},
-	{"SourcePort",						dalType_int,	0,	0,	NULL,	NULL,	dal_Add},
+	{"Protocol",						dalType_string,	0,	0,	NULL	,"TCP|UDP|ALL",	dal_Add},
+	{"SourcePort",						dalType_int,	0,	0,	NULL,	NULL,	NULL},
 	{"SourceMacAddress",				dalType_string,	0,	0,	NULL,	NULL,	dal_Add},
 	{"SourceIfName",					dalType_LanPortListBr0NoWiFi,	0,	0,	NULL,	NULL,	dal_Add},	
 	{"WANInterface",					dalType_RtWanWWan,	0,	0,	NULL,	NULL,	dal_Add},
@@ -75,7 +75,7 @@
 	return;
 }
 
-void getPolicyRouteBasicInfo(struct json_object *Jobj){
+void getPolicyRouteBasicInfo(struct json_object *Jobj, char *replyMsg){
 	const char *protocol = NULL;
 	//X_ZYXEL_PolicyRoute = json_object_get_boolean(json_object_object_get(Jobj, "X_ZYXEL_PolicyRoute"));
 	Enable = json_object_get_boolean(json_object_object_get(Jobj, "Enable"));
@@ -91,6 +91,13 @@
 			X_ZYXEL_Protocol = 6;
 		else if(!strcmp(protocol, "UDP"))
 			X_ZYXEL_Protocol = 17;
+		else if(!strcmp(protocol, "ALL"))
+			X_ZYXEL_Protocol = -1;
+		if(X_ZYXEL_Protocol == -1 && json_object_object_get(Jobj, "SourcePort")){
+			if(replyMsg != NULL)
+				strcpy(replyMsg, "You should select the protocol.");
+			return ZCFG_INVALID_PARAM_VALUE;		
+		}
 }
 	Interface = json_object_get_string(json_object_object_get(Jobj, "WANInterface"));
 
@@ -139,7 +146,7 @@
 	Jarray = json_object_new_array();
 	zcfgFeDalPolicyRouteGet(Jarray, NULL);
 	initPolicyRouteGlobalObjects();
-	getPolicyRouteBasicInfo(Jobj);
+	getPolicyRouteBasicInfo(Jobj, replyMsg);
 	oid = RDM_OID_ROUTING_ROUTER_V4_FWD;
 	index = json_object_get_int(json_object_object_get(Jobj, "Index"));
 	ret = convertIndextoIid(index, &policyRtIid, oid, "X_ZYXEL_PolicyRoute", true, replyMsg);
@@ -175,7 +182,7 @@
 	zcfg_offset_t oid;
 	//printf("%s():--- Add Policy Route Input Json Object --- \n%s \n ",__FUNCTION__,json_object_to_json_string(Jobj));
 	initPolicyRouteGlobalObjects();
-	getPolicyRouteBasicInfo(Jobj);
+	getPolicyRouteBasicInfo(Jobj, replyMsg);
 	oid = RDM_OID_ROUTING_ROUTER_V4_FWD;
 	ret = dalcmdParamCheck(NULL, X_ZYXEL_PolicyRouteName, oid, "X_ZYXEL_PolicyRouteName", "RouteName",  replyMsg);
 	if(ret != ZCFG_SUCCESS)
@@ -204,9 +211,8 @@
 
 zcfgRet_t zcfgFeDalPolicyRouteDelete(struct json_object *Jobj, char *replyMsg){
 	zcfgRet_t ret = ZCFG_SUCCESS;
-	struct json_object *policyRtObj = NULL;
 	objIndex_t policyRtIid = {0};
-	int index = 0, count = 1;
+	int index = 0;
 	zcfg_offset_t oid;
 
 	oid = RDM_OID_ROUTING_ROUTER_V4_FWD;
Index: libzcfg_fe_dal-1.0/voip/callRule/zcfg_fe_dal_call_rule_speed_dial.c
===================================================================
--- libzcfg_fe_dal-1.0.orig/voip/callRule/zcfg_fe_dal_call_rule_speed_dial.c	2017-06-15 13:34:12.768476841 +0800
+++ libzcfg_fe_dal-1.0/voip/callRule/zcfg_fe_dal_call_rule_speed_dial.c	2017-06-15 13:38:39.631646700 +0800
@@ -148,7 +148,7 @@
 	zcfgRet_t ret = ZCFG_SUCCESS;
 	json_object *speedDialObj = NULL;
 	int idx = 0;
-	char speernum[8] = {0};
+	char speednum[8] = {0};
 	objIndex_t speedDialLid = {0};
 	const char *number = NULL;
 	const char *name = NULL;
@@ -186,11 +186,11 @@
 	else if(json_object_object_get(Jobj, "Index")){	// for dalcmd
 		idx = json_object_get_int(json_object_object_get(Jobj, "Index"));
 		if(idx < 10)
-			sprintf(speernum,"\#0%d",idx);
+			sprintf(speednum,"\#0%d",idx);
 		else
-			sprintf(speernum,"\#%d",idx);
+			sprintf(speednum,"\#%d",idx);
 		while(zcfgFeObjJsonGetNextWithoutUpdate(RDM_OID_SPEED_DIAL_BOOK_LIST, &speedDialLid, &speedDialObj) == ZCFG_SUCCESS){
-			if(!strcmp(json_object_get_string(json_object_object_get(speedDialObj, "SpeedNumber")),speernum)){
+			if(!strcmp(json_object_get_string(json_object_object_get(speedDialObj, "SpeedNumber")),speednum)){
 				number = json_object_get_string(json_object_object_get(Jobj, "Number"));
 				name = json_object_get_string(json_object_object_get(Jobj, "Name"));
 				if(json_object_object_get(Jobj, "Number"))
@@ -208,6 +208,28 @@
 	
 }
 
+zcfgRet_t zcfgFeDalVoipCallRuleDelete(struct json_object *Jobj, char *replyMsg){
+	zcfgRet_t ret = ZCFG_SUCCESS;
+	struct json_object *speedDialObj = NULL;
+	objIndex_t speedDialLid = {0};
+	char speednum[8] = {0};
+	int idx = 0;
+
+	idx = json_object_get_int(json_object_object_get(Jobj, "Index"));
+	speedDialLid.level = 2;
+	speedDialLid.idx[0] = 1;
+	speedDialLid.idx[1] = idx;
+	if(zcfgFeObjJsonGetWithoutUpdate(RDM_OID_SPEED_DIAL_BOOK_LIST, &speedDialLid, &speedDialObj) == ZCFG_SUCCESS){
+		json_object_object_add(speedDialObj, "OrigNumber", json_object_new_string(""));
+		json_object_object_add(speedDialObj, "Name", json_object_new_string(""));
+		zcfgFeObjJsonSet(RDM_OID_SPEED_DIAL_BOOK_LIST, &speedDialLid, speedDialObj, NULL);
+		zcfgFeJsonObjFree(speedDialObj);
+	}
+	
+	return ret;
+}
+
+
 zcfgRet_t zcfgFeDalVoipCallRuleGet(struct json_object *Jarray, char *replyMsg){
 	zcfgRet_t ret = ZCFG_SUCCESS;
 	struct json_object *paramJobj = NULL;
@@ -237,6 +259,8 @@
 	if(!strcmp(method, "PUT")) {
 		ret = zcfgFeDalVoipCallRuleEdit(Jobj, NULL);
 	}
+	else if(!strcmp(method, "DELETE"))
+		ret = zcfgFeDalVoipCallRuleDelete(Jobj, NULL);
 	else if(!strcmp(method, "GET"))
 		ret = zcfgFeDalVoipCallRuleGet(Jobj, NULL);
 
Index: libzcfg_fe_dal-1.0/voip/sip/zcfg_fe_dal_sip_provider.c
===================================================================
--- libzcfg_fe_dal-1.0.orig/voip/sip/zcfg_fe_dal_sip_provider.c	2017-06-15 13:34:13.032476837 +0800
+++ libzcfg_fe_dal-1.0/voip/sip/zcfg_fe_dal_sip_provider.c	2017-06-15 13:43:29.260646700 +0800
@@ -15,41 +15,48 @@
 
 dal_param_t VOIP_PROFILE_param[]={
 	{"Index",									dalType_int   , 0,	0,	NULL, NULL, dal_Edit|dal_Delete},
-	{"ProfName",								dalType_string,	0,	0,	NULL},
 	{"ProfleEnable",							dalType_string,0,	0,	NULL, "Enabled|Disabled"},
-	{"BoundIfName",								dalType_string,	0,	0,	NULL, "Any_WAN|Multi_WAN"},
-	{"BoundIfList",								dalType_MultiRtWanWWan,	0,	0,	NULL},
-	{"DTMFMethodG711",							dalType_string,	0,	0,	NULL, "RFC2833|InBand|SIPInfo"},
-	{"DTMFMethod",								dalType_string,	0,	0,	NULL, "RFC2833|InBand|SIPInfo"},
-	{"DigitMapEnable",							dalType_boolean,0,	0,	NULL},
-	{"VoipIOPFlags",							dalType_int,	0,	0,	NULL},
-	{"FaxMode",									dalType_string,	0,	0,	NULL, "G711PassThrough|T38Relay"},
-	{"FAXPassThrough",							dalType_string,	0,	0,	NULL, "Auto|Disable"},
-	{"ModemPassThrough",						dalType_string,	0,	0,	NULL, "Auto|Disable"},
-	{"IgnoreDirectIP",							dalType_boolean,0,	0,	NULL},
+	{"ProfName",								dalType_string,	0,	0,	NULL},
 	{"UserAgentPort",							dalType_int,	1025,	65535,	NULL},
 	{"ProxyServer",								dalType_string,	0,	0,	NULL},
 	{"ProxyServerPort",							dalType_int,	1025,	65535,	NULL},
-	{"ProxyServerTransport",					dalType_string,	0,	0,	NULL, "TCP|UDP"},
 	{"RegistrarServer",							dalType_string,	0,	0,	NULL},
 	{"RegistrarServerPort",						dalType_int,	1025,	65535,	NULL},
-	{"RegistrarServerTransport",				dalType_string,	0,	0,	NULL, "TCP|UDP"},
 	{"UserAgentDomain",							dalType_string,	0,	0,	NULL},
-	{"UserAgentTransport",						dalType_string,	0,	0,	NULL, "TCP|UDP"},
+	{"Rfc3262Support",							dalType_boolean,0,	0,	NULL},
+	{"VoipIOPFlags",							dalType_int,	0,	0,	NULL,	NULL,	dalcmd_Forbid},	// need modify, change two parameter of GUI, type: bool //close
+	{"ReplaceDialDigit",						dalType_boolean,0,	0,	NULL},	// new parameter for VoipIOPFlag
+	{"RemoveRouteHeader",						dalType_boolean,0,	0,	NULL},	// new parameter for VoipIOPFlag
+	{"BoundIfName",								dalType_string,	0,	0,	NULL, "Any_WAN|Multi_WAN"},
+	{"BoundIfList",								dalType_MultiRtWanWWan,	0,	0,	NULL},
 	{"OutboundProxy",							dalType_string,	0,	0,	NULL},
 	{"OutboundProxyPort",						dalType_int,	1025,	65535,	NULL},
 	{"Option120Use",							dalType_boolean,0,	0,	NULL},
+	{"LocalPort",								dalType_int,	1026,	65482,	NULL},	// need change parameter name -> LocalPort
+	//{"LocalPortMin",							dalType_int,	0,	0,	NULL},	// need change parameter name -> LocalPort
+	//{"LocalPortMax",							dalType_int,	0,	0,	NULL},	// need delete and this parameter = LocalPort + 18
+	{"SRTPEnable",								dalType_boolean,0,	0,	NULL},
+	{"Crypto_Suite_Name",						dalType_string,	0,	0,	NULL, "AES_CM_128_HMAC_SHA1_80|AES_CM_128_HMAC_SHA1_32|AES_CM_128_NULL|NULL_CIPHER_HMAC_SHA1_80"},
+	{"DTMFMode",								dalType_string,	0,	0,	NULL, "RFC2833|InBand|SIPInfo"},	// need change parameter name -> DTMFMode
+	//{"DTMFMethod",								dalType_string,	0,	0,	NULL, "RFC2833|InBand|SIPInfo"},	// need change parameter name -> DTMFMode
+	//{"DTMFMethodG711",							dalType_string,	0,	0,	NULL, "RFC2833|InBand|SIPInfo"},	// value equal as DTMFMethod, delete this parameter and deal in DAL
+	{"TransportType",							dalType_string,	0,	0,	NULL, "TCP|UDP"},	// need change parameter name -> TransportType
+	//{"RegistrarServerTransport",				dalType_string,	0,	0,	NULL, "TCP|UDP"},	// need change parameter name -> TransportType
+	//{"UserAgentTransport",						dalType_string,	0,	0,	NULL, "TCP|UDP"},	// delete and copy value from RegistrarServerTransport
+	//{"ProxyServerTransport",					dalType_string,	0,	0,	NULL, "TCP|UDP"},	// delete and copy value from RegistrarServerTransport
+	{"IgnoreDirectIP",							dalType_boolean,0,	0,	NULL},
+	{"FaxMode",									dalType_string,	0,	0,	NULL, "G711PassThrough|T38Relay"},
+	{"DSCPMark",								dalType_int,	0,	63,	NULL},
+	{"RTPDSCPMark",								dalType_int,	0,	63,	NULL},
 	{"RegisterExpires",							dalType_int,	20,	65535,	NULL},
 	{"RegisterRetryInterval",					dalType_int,	30,	65535,	NULL},
 	{"InviteExpires",							dalType_int,	100, 3600,	NULL},
 	{"MinSE",									dalType_int,	90,	 1800,	NULL},
-	{"Rfc3263Support",							dalType_boolean,0,	0,	NULL},
-	{"Rfc3262Support",							dalType_boolean,0,	0,	NULL},
-	{"LocalPortMin",							dalType_int,	0,	0,	NULL},
-	{"LocalPortMax",							dalType_int,	0,	0,	NULL},
-	{"SRTPEnable",								dalType_boolean,0,	0,	NULL},
-	{"Crypto_Suite_Name",						dalType_string,	0,	0,	NULL, "AES_CM_128_HMAC_SHA1_80|AES_CM_128_HMAC_SHA1_32|AES_CM_128_NULL|NULL_CIPHER_HMAC_SHA1_80"},
 	{"InterDigitTimerStd",						dalType_int,	0,	0,	NULL},
+	//{"Rfc3263Support",							dalType_boolean,0,	0,	NULL},	//not support CLI yet
+	{"DNSSrvEnable",							dalType_boolean,0,	0,	NULL},	
+	{"FAXPassThrough",							dalType_string,	0,	0,	NULL, "Auto"},	// set in DAL = Auto
+	{"ModemPassThrough",						dalType_string,	0,	0,	NULL, "Auto"},	// set in DAL = Auto
 	{"CALL_RETURN",								dalType_string,	0,	0,	NULL, NULL, dalcmd_Forbid},
 	{"CLIR_DEACTIVATE",							dalType_string,	0,	0,	NULL, NULL, dalcmd_Forbid},
 	{"CLIR_DEACTIVATE",							dalType_string,	0,	0,	NULL, NULL, dalcmd_Forbid},
@@ -82,11 +89,14 @@
 const char* ProfleEnable;
 const char* X_ZYXEL_BoundIfName;
 const char* X_ZYXEL_BoundIfList;
-const char* DTMFMethodG711;
+const char* DTMFMode;
 const char* DTMFMethod;
+const char* DTMFMethodG711;
 bool DigitMapEnable;
 const char* DigitMap;
 unsigned int X_ZYXEL_VoipIOPFlags;
+bool ReplaceDialDigit;
+bool RemoveRouteHeader;
 const char* X_ZYXEL_FaxMode;
 const char* FAXPassThrough;
 const char* ModemPassThrough;
@@ -94,12 +104,13 @@
 unsigned int UserAgentPort;
 const char* ProxyServer;
 unsigned int ProxyServerPort;
-const char* ProxyServerTransport;
+unsigned int ProxyServerTransport;
+unsigned int RegistrarServerTransport;
+unsigned int UserAgentTransport;
 const char* RegistrarServer;
 unsigned int RegistrarServerPort;
-const char* RegistrarServerTransport;
+const char* TransportType;
 const char* UserAgentDomain;
-const char* UserAgentTransport;
 const char* OutboundProxy;
 unsigned int OutboundProxyPort;
 bool X_ZYXEL_Option120Use;
@@ -212,30 +223,58 @@
 }
 
 void getProfBasicInfo(struct json_object *Jobj){
+	struct json_object *obj = NULL;
+	objIndex_t Iid = {0};
+	int index = 0, origVoipIOPFlags = 0;
+
+	index = json_object_get_int(json_object_object_get(Jobj, "Index"));
+	Iid.level = 2;
+	Iid.idx[0] = 1;
+	Iid.idx[1] = index;
+	if(zcfgFeObjJsonGetWithoutUpdate(RDM_OID_VOICE_PROF, &Iid, &obj) == ZCFG_SUCCESS){
+		origVoipIOPFlags = json_object_get_int(json_object_object_get(obj, "X_ZYXEL_VoipIOPFlags"));
+		zcfgFeJsonObjFree(obj);
+	}
+	
 	ProfName = json_object_get_string(json_object_object_get(Jobj, "ProfName"));
 	ProfleEnable = json_object_get_string(json_object_object_get(Jobj, "ProfleEnable"));
 	X_ZYXEL_BoundIfName = json_object_get_string(json_object_object_get(Jobj, "BoundIfName"));
 	X_ZYXEL_BoundIfList = json_object_get_string(json_object_object_get(Jobj, "BoundIfList"));
-	DTMFMethodG711 = json_object_get_string(json_object_object_get(Jobj, "DTMFMethodG711"));
-	DTMFMethod = json_object_get_string(json_object_object_get(Jobj, "DTMFMethod"));
+	DTMFMode = json_object_get_string(json_object_object_get(Jobj, "DTMFMode"));
 	if(SHOW_NOT_USE_OFTEN_VOIP_SETTING&flag1){
 		DigitMapEnable = json_object_get_boolean(json_object_object_get(Jobj, "DigitMapEnable"));
 		DigitMap = json_object_get_string(json_object_object_get(Jobj, "DigitMap"));
 	}
+	if(json_object_object_get(Jobj, "VoipIOPFlags"))
 	X_ZYXEL_VoipIOPFlags = json_object_get_int(json_object_object_get(Jobj, "VoipIOPFlags"));
+	else if(json_object_object_get(Jobj, "ReplaceDialDigit") && json_object_object_get(Jobj, "RemoveRouteHeader")){		
+		ReplaceDialDigit = json_object_get_boolean(json_object_object_get(Jobj, "ReplaceDialDigit"));
+		RemoveRouteHeader = json_object_get_boolean(json_object_object_get(Jobj, "RemoveRouteHeader"));
+		if(ReplaceDialDigit)
+			origVoipIOPFlags |= (1<<0);
+		else
+			origVoipIOPFlags &= ~(1<<0);
+		if(RemoveRouteHeader)
+			origVoipIOPFlags |= (1<<2);
+		else
+			origVoipIOPFlags &= ~(1<<2);
+		X_ZYXEL_VoipIOPFlags = origVoipIOPFlags;
+	}
+	
+	
 	X_ZYXEL_FaxMode = json_object_get_string(json_object_object_get(Jobj, "FaxMode"));
-	FAXPassThrough = json_object_get_string(json_object_object_get(Jobj, "FAXPassThrough"));
-	ModemPassThrough = json_object_get_string(json_object_object_get(Jobj, "ModemPassThrough"));
+	//FAXPassThrough = json_object_get_string(json_object_object_get(Jobj, "FAXPassThrough"));
+	FAXPassThrough = "Auto";
+	//ModemPassThrough = json_object_get_string(json_object_object_get(Jobj, "ModemPassThrough"));
+	ModemPassThrough = "Auto";
 	X_ZYXEL_IgnoreDirectIP = json_object_get_boolean(json_object_object_get(Jobj, "IgnoreDirectIP"));
 	UserAgentPort = json_object_get_int(json_object_object_get(Jobj, "UserAgentPort"));
 	ProxyServer = json_object_get_string(json_object_object_get(Jobj, "ProxyServer"));
 	ProxyServerPort = json_object_get_int(json_object_object_get(Jobj, "ProxyServerPort"));
-	ProxyServerTransport = json_object_get_string(json_object_object_get(Jobj, "ProxyServerTransport"));
 	RegistrarServer = json_object_get_string(json_object_object_get(Jobj, "RegistrarServer"));
 	RegistrarServerPort = json_object_get_int(json_object_object_get(Jobj, "RegistrarServerPort"));
-	RegistrarServerTransport = json_object_get_string(json_object_object_get(Jobj, "RegistrarServerTransport"));
+	TransportType = json_object_get_string(json_object_object_get(Jobj, "TransportType"));
 	UserAgentDomain = json_object_get_string(json_object_object_get(Jobj, "UserAgentDomain"));
-	UserAgentTransport = json_object_get_string(json_object_object_get(Jobj, "UserAgentTransport"));
 	OutboundProxy = json_object_get_string(json_object_object_get(Jobj, "OutboundProxy"));
 	OutboundProxyPort = json_object_get_int(json_object_object_get(Jobj, "OutboundProxyPort"));
 	X_ZYXEL_Option120Use = json_object_get_boolean(json_object_object_get(Jobj, "Option120Use"));
@@ -244,10 +283,10 @@
 	InviteExpires = json_object_get_int(json_object_object_get(Jobj, "InviteExpires"));
 	X_ZYXEL_MinSE = json_object_get_int(json_object_object_get(Jobj, "MinSE"));
 	DSCPMark = json_object_get_int(json_object_object_get(Jobj, "DSCPMark"));
-	X_ZYXEL_Rfc3263Support = json_object_get_boolean(json_object_object_get(Jobj, "Rfc3263Support"));
+	X_ZYXEL_Rfc3263Support = json_object_get_boolean(json_object_object_get(Jobj, "DNSSrvEnable"));
 	X_ZYXEL_Rfc3262Support = json_object_get_boolean(json_object_object_get(Jobj, "Rfc3262Support"));
-	LocalPortMin = json_object_get_int(json_object_object_get(Jobj, "LocalPortMin"));
-	LocalPortMax = json_object_get_int(json_object_object_get(Jobj, "LocalPortMax"));
+	LocalPortMin = json_object_get_int(json_object_object_get(Jobj, "LocalPort"));
+	LocalPortMax = LocalPortMin + 18;
 	RTPDSCPMark = json_object_get_int(json_object_object_get(Jobj, "RTPDSCPMark"));
 	if(!(HIDE_VOICE_SRTP&flag1)){
 		SRTPEnable = json_object_get_boolean(json_object_object_get(Jobj, "SRTPEnable"));
@@ -428,23 +467,19 @@
 			json_object_object_add(profObj, "X_ZYXEL_BoundIfName", json_object_new_string(X_ZYXEL_BoundIfName));
 		if(json_object_object_get(Jobj, "BoundIfList") != NULL)
 			json_object_object_add(profObj, "X_ZYXEL_BoundIfList", json_object_new_string(X_ZYXEL_BoundIfList));
-		if(json_object_object_get(Jobj, "DTMFMethodG711") != NULL)
-			json_object_object_add(profObj, "DTMFMethodG711", json_object_new_string(DTMFMethodG711));
-		if(json_object_object_get(Jobj, "DTMFMethod") != NULL)
-			json_object_object_add(profObj, "DTMFMethod", json_object_new_string(DTMFMethod));
+		if(json_object_object_get(Jobj, "DTMFMode") != NULL)
+			json_object_object_add(profObj, "DTMFMode", json_object_new_string(DTMFMode));
 		if(SHOW_NOT_USE_OFTEN_VOIP_SETTING&flag1){
 			if(json_object_object_get(Jobj, "DigitMapEnable") != NULL)
 				json_object_object_add(profObj, "DigitMapEnable", json_object_new_boolean(DigitMapEnable));
 			if(json_object_object_get(Jobj, "DigitMap") != NULL)
 				json_object_object_add(profObj, "DigitMap", json_object_new_string(DigitMap));
 		}
-		if(json_object_object_get(Jobj, "VoipIOPFlags") != NULL)
+		if(json_object_object_get(Jobj, "VoipIOPFlags") != NULL || (json_object_object_get(Jobj, "ReplaceDialDigit") && json_object_object_get(Jobj, "RemoveRouteHeader")))
 			json_object_object_add(profObj, "X_ZYXEL_VoipIOPFlags", json_object_new_int(X_ZYXEL_VoipIOPFlags));
 		if(json_object_object_get(Jobj, "FaxMode") != NULL)
 			json_object_object_add(profObj, "X_ZYXEL_FaxMode", json_object_new_string(X_ZYXEL_FaxMode));
-		if(json_object_object_get(Jobj, "FAXPassThrough") != NULL)
 			json_object_object_add(profObj, "FAXPassThrough", json_object_new_string(FAXPassThrough));
-		if(json_object_object_get(Jobj, "ModemPassThrough") != NULL)
 			json_object_object_add(profObj, "ModemPassThrough", json_object_new_string(ModemPassThrough));
 		if(json_object_object_get(Jobj, "IgnoreDirectIP") != NULL)
 			json_object_object_add(profObj, "X_ZYXEL_IgnoreDirectIP", json_object_new_boolean(X_ZYXEL_IgnoreDirectIP));
@@ -480,18 +515,14 @@
 			json_object_object_add(profSipObj, "ProxyServer", json_object_new_string(ProxyServer));
 		if(json_object_object_get(Jobj, "ProxyServerPort") != NULL)
 			json_object_object_add(profSipObj, "ProxyServerPort", json_object_new_int(ProxyServerPort));
-		if(json_object_object_get(Jobj, "ProxyServerTransport") != NULL)
-			json_object_object_add(profSipObj, "ProxyServerTransport", json_object_new_string(ProxyServerTransport));
 		if(json_object_object_get(Jobj, "RegistrarServer") != NULL)
 			json_object_object_add(profSipObj, "RegistrarServer", json_object_new_string(RegistrarServer));
 		if(json_object_object_get(Jobj, "RegistrarServerPort") != NULL)
 			json_object_object_add(profSipObj, "RegistrarServerPort", json_object_new_int(RegistrarServerPort));
-		if(json_object_object_get(Jobj, "RegistrarServerTransport") != NULL)
-			json_object_object_add(profSipObj, "RegistrarServerTransport", json_object_new_string(RegistrarServerTransport));
+		if(json_object_object_get(Jobj, "TransportType") != NULL)
+			json_object_object_add(profSipObj, "TransportType", json_object_new_string(TransportType));
 		if(json_object_object_get(Jobj, "UserAgentDomain") != NULL)
 			json_object_object_add(profSipObj, "UserAgentDomain", json_object_new_string(UserAgentDomain));
-		if(json_object_object_get(Jobj, "UserAgentTransport") != NULL)
-			json_object_object_add(profSipObj, "UserAgentTransport", json_object_new_string(UserAgentTransport));
 		if(json_object_object_get(Jobj, "OutboundProxy") != NULL)
 			json_object_object_add(profSipObj, "OutboundProxy", json_object_new_string(OutboundProxy));
 		if(json_object_object_get(Jobj, "OutboundProxyPort") != NULL)
@@ -508,7 +539,7 @@
 			json_object_object_add(profSipObj, "X_ZYXEL_MinSE", json_object_new_int(X_ZYXEL_MinSE));
 		if(json_object_object_get(Jobj, "DSCPMark") != NULL)
 			json_object_object_add(profSipObj, "DSCPMark", json_object_new_int(DSCPMark));
-		if(json_object_object_get(Jobj, "Rfc3263Support") != NULL)
+		if(json_object_object_get(Jobj, "DNSSrvEnable") != NULL)
 			json_object_object_add(profSipObj, "X_ZYXEL_Rfc3263Support", json_object_new_boolean(X_ZYXEL_Rfc3263Support));
 		if(json_object_object_get(Jobj, "Rfc3262Support") != NULL)
 			json_object_object_add(profSipObj, "X_ZYXEL_Rfc3262Support", json_object_new_boolean(X_ZYXEL_Rfc3262Support));
@@ -545,10 +576,10 @@
 
 
 	if(profRtpObj != NULL){
-		if(json_object_object_get(Jobj, "LocalPortMin") != NULL)
+		if(json_object_object_get(Jobj, "LocalPort") != NULL){
 			json_object_object_add(profRtpObj, "LocalPortMin", json_object_new_int(LocalPortMin));
-		if(json_object_object_get(Jobj, "LocalPortMax") != NULL)
 			json_object_object_add(profRtpObj, "LocalPortMax", json_object_new_int(LocalPortMax));
+		}
 		if(json_object_object_get(Jobj, "DSCPMark") != NULL)
 			json_object_object_add(profRtpObj, "DSCPMark", json_object_new_int(RTPDSCPMark));
 
Index: libzcfg_fe_dal-1.0/zcfg_fe_dal.c
===================================================================
--- libzcfg_fe_dal-1.0.orig/zcfg_fe_dal.c	2017-06-15 13:34:13.152476834 +0800
+++ libzcfg_fe_dal-1.0/zcfg_fe_dal.c	2017-06-15 13:35:56.025646700 +0800
@@ -259,7 +259,7 @@
 {"region",			VOIP_REGION_param,	zcfgFeDalVoipPhoneRegion,zcfgFeDalShowVoipRegion,	"get|edit",				"Phone"},//Phone
 {"phone",		VOIP_PHONEDEVICE_param,	zcfgFeDalVoipPhoneDevice,zcfgFeDalShowVoipPhoneDevice,					"get|edit",			"Phone"},//Phone
 {"PHONEDECT",		VOIP_PHONEDECT_param,zcfgFeDalVoipPhoneDECT,NULL,						"edit",				""},//Phone
-{"speeddial",		VOIP_CALLRULE_param,zcfgFeDalVoipCallRule,	zcfgFeDalShowVoipCallRule,	"get|edit",			"Call_Rule"},//Call_Rule
+{"speeddial",		VOIP_CALLRULE_param,zcfgFeDalVoipCallRule,	zcfgFeDalShowVoipCallRule,	"get|edit|delete",	"Call_Rule"},//Call_Rule
 {"CALLBLOCK",		VOIP_CALLBLOCK_param,zcfgFeDalVoipCallBlock,NULL,						"edit",				""},//Call_Rule
 #endif
 {"EMAIL",			MAIL_NOTIFICATION_param,zcfgFeDalMailNotification,NULL,					"add|delete", 		""},//Email_Notify
@@ -767,6 +767,60 @@
 	return ZCFG_SUCCESS;
 }
 
+zcfgRet_t getVoipMultiObj(struct json_object **VoipMultiObj){
+	objIndex_t voipIid;
+	struct json_object *voipObj = NULL, *obj = NULL;
+	char voipline[64] = {0}, sipnumber[64] = {0}, sip[8] = {0}, boundList[64] = {0};
+	int count = 1;
+	const char *directoryNumber = NULL;
+
+	*VoipMultiObj = json_object_new_array();
+	
+	IID_INIT(voipIid);
+	while(zcfgFeObjJsonGetNextWithoutUpdate(RDM_OID_VOICE_LINE, &voipIid, &voipObj) == ZCFG_SUCCESS){
+		obj = json_object_new_object();
+		directoryNumber = json_object_get_string(json_object_object_get(voipObj, "DirectoryNumber"));
+		sprintf(sip,"SIP%d",count);
+		//sprintf(voipline,"VoiceProfile.%d.Line.%d",voipIid.idx[1],voipIid.idx[2]);
+		//sprintf(boundList,"Device.Services.VoiceService.1.VoiceProfile.%d.Line.%d",voipIid.idx[1],voipIid.idx[2]);
+		sprintf(voipline,"Device.Services.VoiceService.1.VoiceProfile.%d.Line.%d",voipIid.idx[1],voipIid.idx[2]);
+		sprintf(boundList,"VoiceProfile.%d.Line.%d",voipIid.idx[1],voipIid.idx[2]);
+		sprintf(sipnumber,"%d.SIP%d",count,count);
+		//sprintf(sipnumber,"SIP%d",count);
+		json_object_object_add(obj, "SIP", json_object_new_string(sip));
+		json_object_object_add(obj, "VoipLine", json_object_new_string(voipline));
+		json_object_object_add(obj, "BoundList", json_object_new_string(boundList));
+		json_object_object_add(obj, "SIPNumber", json_object_new_string(sipnumber));
+		json_object_object_add(obj, "DirectoryNumber", JSON_OBJ_COPY(json_object_object_get(voipObj, "DirectoryNumber")));
+		json_object_object_add(obj, "PhyReferenceFXSList", JSON_OBJ_COPY(json_object_object_get(voipObj, "X_ZYXEL_PhyReferenceFXSList")));
+		json_object_array_add(*VoipMultiObj, obj);
+		json_object_put(voipObj);
+		count++;
+	}
+	return ZCFG_SUCCESS;
+}
+
+zcfgRet_t getVoipProviderObj(struct json_object **VoipProviderObj){
+	objIndex_t voipProviderIid;
+	struct json_object *voipProviderObj = NULL, *obj = NULL;
+	const char *name = NULL;
+	char voipspname[64] = {0};
+	int count = 1;
+
+	*VoipProviderObj = json_object_new_array();
+	IID_INIT(voipProviderIid);
+	while(zcfgFeObjJsonGetNextWithoutUpdate(RDM_OID_VOICE_PROF, &voipProviderIid, &voipProviderObj) == ZCFG_SUCCESS){
+		obj = json_object_new_object();
+		name = json_object_get_string(json_object_object_get(voipProviderObj, "Name"));
+		sprintf(voipspname,"%d.%s",count,name);
+		json_object_object_add(obj, "VoipServiceProvider", json_object_new_string(voipspname));
+		//json_object_object_add(obj, "VoipServiceProvider", json_object_new_string(name));
+		json_object_array_add(*VoipProviderObj, obj);
+		json_object_put(voipProviderObj);
+		count++;
+	}
+	return ZCFG_SUCCESS;
+}
 
 bool findInList(char *list, char *target, char *separator){
 	char *buf, *ptr, *tmp_ptr = NULL;
