Index: libzcfg_fe_dal-1.0/network/qos/zcfg_fe_QosPolicer.c
===================================================================
--- libzcfg_fe_dal-1.0.orig/network/qos/zcfg_fe_QosPolicer.c	2018-03-05 17:00:07.240747244 +0800
+++ libzcfg_fe_dal-1.0/network/qos/zcfg_fe_QosPolicer.c	2018-03-05 17:32:38.356602774 +0800
@@ -370,11 +370,24 @@
 		while(zcfgFeObjJsonGetNext(RDM_OID_QOS_POLICER, &policerIid , &policerObj) == ZCFG_SUCCESS){
 			sprintf(number, "%d", policerIid.idx[0]);
 			pramJobj = json_object_new_object();
+			commitrate = (json_object_get_int(json_object_object_get(policerObj, "CommittedRate")))/1000;
+			commitburst = (json_object_get_int(json_object_object_get(policerObj, "CommittedBurstSize")))/1000;
+			peakrate = (json_object_get_int(json_object_object_get(policerObj, "PeakRate")))/1000;
+			peakburst = (json_object_get_int(json_object_object_get(policerObj, "PeakBurstSize")))/1000;
+			excess = (json_object_get_int(json_object_object_get(policerObj, "ExcessBurstSize")))/1000;
 			json_object_object_add(pramJobj, "Index", json_object_new_int(count));	
 			json_object_object_add(pramJobj, "Enable",  JSON_OBJ_COPY(json_object_object_get(policerObj, "Enable")));
 			json_object_object_add(pramJobj, "Name",  JSON_OBJ_COPY(json_object_object_get(policerObj, "X_ZYXEL_Name")));
 			json_object_object_add(pramJobj, "Class", json_object_new_string(number));			
 			json_object_object_add(pramJobj, "MeterType",JSON_OBJ_COPY(json_object_object_get(policerObj, "MeterType")));	
+			json_object_object_add(pramJobj, "CommittedRate",  json_object_new_int(commitrate));
+			json_object_object_add(pramJobj, "CommittedBurstSize",  json_object_new_int(commitburst));	
+			json_object_object_add(pramJobj, "ExcessBurstSize",  json_object_new_int(excess));	
+			json_object_object_add(pramJobj, "PeakRate",  json_object_new_int(peakrate));	
+			json_object_object_add(pramJobj, "PeakBurstSize",  json_object_new_int(peakburst));	
+			json_object_object_add(pramJobj, "ConformingAction", JSON_OBJ_COPY(json_object_object_get(policerObj, "ConformingAction")));	
+			json_object_object_add(pramJobj, "NonConformingAction",  JSON_OBJ_COPY(json_object_object_get(policerObj, "NonConformingAction")));	
+			json_object_object_add(pramJobj, "PartialConformingAction",  JSON_OBJ_COPY(json_object_object_get(policerObj, "PartialConformingAction")));	
 			json_object_array_add(Jarray, pramJobj);		
 			count++;				
 			zcfgFeJsonObjFree(policerObj);	
