Index: libzcfg_fe_dal-1.0/network/nat/zcfg_fe_dal_nat_application.c
===================================================================
--- libzcfg_fe_dal-1.0.orig/network/nat/zcfg_fe_dal_nat_application.c	2016-12-14 01:13:07.581205725 +0800
+++ libzcfg_fe_dal-1.0/network/nat/zcfg_fe_dal_nat_application.c	2016-12-14 01:14:36.147411500 +0800
@@ -13,154 +13,131 @@
 dal_param_t NAT_Application_param[] =
 {
 	{"Enable",		dalType_boolean,	0,	0,	NULL},
-	{"Status",		dalType_string,	0,	19,	NULL},
-	{"Alias",		dalType_string,	0,	64,	NULL},
-	{"Interface",		dalType_string,	0,	256,	NULL},
-	{"X_ZYXEL_WANIP",		dalType_string,	0,	45,	NULL},
-	{"OriginatingIpAddress",	dalType_string, 0, 45, NULL},
-	{"AllInterfaces",		dalType_boolean,	0,	0,	NULL},
-	{"LeaseDuration",		dalType_int,	0,	63737,	NULL},
-	{"RemoteHost",		dalType_string,	0,	45,	NULL},
 	{"ExternalPort",		dalType_int,	0,	63737,	NULL},
 	{"ExternalPortEndRange",		dalType_int,	0,	63737,	NULL},
 	{"InternalPort",		dalType_int,	0,	63737,	NULL},
 	{"X_ZYXEL_InternalPortEndRange",		dalType_int,	0,	63737,	NULL},
-	{"X_ZYXEL_StartTime",		dalType_string,	0,	31,	NULL},
-	{"X_ZYXEL_StopTime",		dalType_string,	0,	31,	NULL},
-	{"X_ZYXEL_AutoDetectWanStatus",		dalType_boolean,	0,	0,	NULL},
-	{"X_ZYXEL_SetOriginatingIP",	dalType_boolean, 0, 0, NULL},
-	{"Protocol",		dalType_string,	0,	3,	NULL},
 	{"InternalClient",		dalType_string,	0,	256,	NULL},
 	{"Description",		dalType_string,	0,	256,	NULL},			
+	{"Interface",		dalType_string,	0,	256,	NULL},
+	{"Protocol",		dalType_string,	0,	3,	NULL},	
 	{NULL,		0,	0,	0,	NULL}
 };
-static struct json_object *allIpIfaceObj = NULL;
 
 zcfgRet_t zcfgFeDalNatApplicationAdd(struct json_object *Jobj, char *replyMsg)
 {
 	zcfgRet_t ret = ZCFG_SUCCESS;
-	const char *paraName, *applicaion = NULL, *new_application = NULL;
-	objIndex_t objIid;
-	struct json_object *NatPortMappingJobj = NULL;
-	int n=0;
-	paraName = (const char *)NAT_Application_param[n++].paraName;
-
-	IID_INIT(objIid);
-	zcfgFeObjJsonAdd(RDM_OID_NAT_PORT_MAPPING, &objIid, NULL);
-	if((ret = zcfgFeObjJsonGet(RDM_OID_NAT_PORT_MAPPING, &objIid, &NatPortMappingJobj)) != ZCFG_SUCCESS) {
-		printf("%s: Object retrieve fail\n", __FUNCTION__);
-		return ret;
-	}	
-	while(paraName){
-		struct json_object *paramValue = json_object_object_get(Jobj, paraName);
-		printf("%s: Object retrieve fail\n %s", __FUNCTION__,paraName);
-		if(!paramValue) {
-			printf("function:%s, Line =%d\n", __FUNCTION__,__LINE__);
-			paraName = (const char *)NAT_Application_param[n++].paraName;
-			continue;
-		}
-		json_object_object_add(NatPortMappingJobj, paraName, JSON_OBJ_COPY(paramValue));
-		paraName = (const char *)NAT_Application_param[n++].paraName;
-	}
+	struct json_object *NatAppJobj = NULL;
+	struct json_object *reqObject = NULL;
+	objIndex_t natIid = {0};
+	int reqObjIdx = 0;
+	bool enable = false;
+	int externalport = 0;
+	int externalportendrange = 0;
+	int internalport = 0;
+	int internalportendrange = 0;
+	const char *internalclient = NULL;
+	const char *description = NULL;
+	const char *interface = NULL;
+	const char *protocol = NULL;
 
-	if((ret = zcfgFeObjJsonSet(RDM_OID_NAT_PORT_MAPPING, &objIid, NatPortMappingJobj, NULL)) == ZCFG_SUCCESS)
-	{
-		sprintf(replyMsg, "[%d,%d,%d,%d,%d,%d]",objIid.idx[0],objIid.idx[1],objIid.idx[2],
-				objIid.idx[3],objIid.idx[4],objIid.idx[5]);
-		//printf("reply msg %s\n",replyMsg);		
-	}
 	
-	json_object_put(NatPortMappingJobj);
-	return ret;
-}
-zcfgRet_t zcfgFeDalNatApplicationEdit(struct json_object *Jobj, char *replyMsg)
-{
 
-	zcfgRet_t ret = ZCFG_SUCCESS;
-	const char *paraName;
-	objIndex_t objIid;
-	struct json_object *NatPortMappingJobj = NULL;
-	int paramModified = 0, n = 0;
-	struct json_object *iidArray = NULL;
-	uint8_t iidIdx =0;
-	paraName = (const char *)NAT_Application_param[n++].paraName;
+	while((reqObject = json_object_array_get_idx(Jobj, reqObjIdx)) !=NULL){
+		IID_INIT(natIid);
+		reqObjIdx++;
+		ret = zcfgFeObjJsonAdd(RDM_OID_NAT_PORT_MAPPING, &natIid, NULL);
+			if(ret == ZCFG_SUCCESS){
+				ret = zcfgFeObjJsonGet(RDM_OID_NAT_PORT_MAPPING, &natIid, &NatAppJobj);
+			}
+		
+		//set Param
+		if(ret == ZCFG_SUCCESS){
+			enable = json_object_get_boolean(json_object_object_get(reqObject, "Enable"));
+			externalport = json_object_get_int(json_object_object_get(reqObject, "ExternalPort"));
+			externalportendrange = json_object_get_int(json_object_object_get(reqObject, "ExternalPortEndRange"));
+			internalport = json_object_get_int(json_object_object_get(reqObject, "InternalPort"));
+			internalportendrange = json_object_get_int(json_object_object_get(reqObject, "X_ZYXEL_InternalPortEndRange"));
+			internalclient = json_object_get_string(json_object_object_get(reqObject, "InternalClient"));
+			description = json_object_get_string(json_object_object_get(reqObject, "Description"));
+			interface = json_object_get_string(json_object_object_get(reqObject, "Interface"));
+			protocol = json_object_get_string(json_object_object_get(reqObject, "Protocol"));
+
+			json_object_object_add(NatAppJobj, "Enable", json_object_new_boolean(enable));
+			json_object_object_add(NatAppJobj, "ExternalPort", json_object_new_int(externalport));
+			json_object_object_add(NatAppJobj, "ExternalPortEndRange", json_object_new_int(externalportendrange));
+			json_object_object_add(NatAppJobj, "InternalPort", json_object_new_int(internalport));
+			json_object_object_add(NatAppJobj, "X_ZYXEL_InternalPortEndRange", json_object_new_int(internalportendrange));
+			json_object_object_add(NatAppJobj, "InternalClient", json_object_new_string(internalclient));
+			json_object_object_add(NatAppJobj, "Description", json_object_new_string(description));
+			json_object_object_add(NatAppJobj, "Interface", json_object_new_string(interface));
+			json_object_object_add(NatAppJobj, "Protocol", json_object_new_string(protocol));
 	
-	//IID_INIT(objIid);
-	iidArray = json_object_object_get(Jobj, "iid");
-	for(iidIdx=0;iidIdx<6;iidIdx++){
-		objIid.idx[iidIdx] = json_object_get_int( json_object_array_get_idx(iidArray, iidIdx));
-		if(objIid.idx[iidIdx] != 0)
-			objIid.level = iidIdx+1;
+			zcfgFeObjJsonSet(RDM_OID_NAT_PORT_MAPPING, &natIid, NatAppJobj, NULL);
+		}
 	}
-	if((ret = zcfgFeObjJsonGet(RDM_OID_NAT_PORT_MAPPING, &objIid, &NatPortMappingJobj)) != ZCFG_SUCCESS) {
+	zcfgFeJsonObjFree(NatAppJobj);
 		return ret;
-	}
-	while(paraName){
-		struct json_object *paramValue = json_object_object_get(Jobj, paraName);
-		if(!paramValue) {
-			paraName = (const char *)NAT_Application_param[n++].paraName;
-			continue;
-		}
-		json_object_object_add(NatPortMappingJobj, paraName, JSON_OBJ_COPY(paramValue));
-		paramModified = 1;				
-		paraName = (const char *)NAT_Application_param[n++].paraName;
+	
 	}
 
-	if(paramModified) {
-		if((ret = zcfgFeObjJsonSet(RDM_OID_NAT_PORT_MAPPING, &objIid, NatPortMappingJobj, NULL)) != ZCFG_SUCCESS);
-	}
-	json_object_put(NatPortMappingJobj);
-	return ret;
-}
 zcfgRet_t zcfgFeDalNatApplicationDelete(struct json_object *Jobj, char *replyMsg)
 {
 
 	zcfgRet_t ret = ZCFG_SUCCESS;
-	objIndex_t objIid;
+	struct json_object *NatAppJobj = NULL;
 	struct json_object *iidArray = NULL;
-	uint8_t iidIdx =0;
-
-	
-	//IID_INIT(objIid);
+	objIndex_t natIid = {0};
+	int index = 0;
+	int i=0;
 	iidArray = json_object_object_get(Jobj, "iid");
-	
-	for(iidIdx=0;iidIdx<6;iidIdx++){
-		objIid.idx[iidIdx] = json_object_get_int( json_object_array_get_idx(iidArray, iidIdx));
-		if(objIid.idx[iidIdx] != 0)
-			objIid.level = iidIdx+1;
+	for(i=0;i<10;i++){
+		index = json_object_get_int( json_object_array_get_idx(iidArray, i));
+		if(index == 0)
+			break;
+		natIid.idx[0] = index;
+		natIid.level = 1;
+		zcfgFeObjJsonDel(RDM_OID_NAT_PORT_MAPPING, &natIid, NULL);
 	}
-	
-	zcfgFeObjJsonDel(RDM_OID_NAT_PORT_MAPPING, &objIid, NULL);
-	
+	zcfgFeJsonObjFree(NatAppJobj);
 	return ret;
 	
 }
 zcfgRet_t zcfgFeDalNatApplicationCheck(struct json_object *Jobj, char *replyMsg){	
 	zcfgRet_t ret = ZCFG_SUCCESS;
-	struct json_object *obj = NULL;
-	objIndex_t iid = {0};
-	const char *application = NULL, *new_application = NULL, *ExternalPort = NULL, *new_ExternalPort = NULL;
-	const char *ExternalPortEndRange = NULL, *new_ExternalPortEndRange = NULL, *Protocol = NULL, *new_Protocol = NULL;
-	new_application = json_object_get_string(json_object_object_get(Jobj, "Description"));
-	new_ExternalPort = json_object_get_int(json_object_object_get(Jobj, "ExternalPort"));
-	new_ExternalPortEndRange = json_object_get_int(json_object_object_get(Jobj, "ExternalPortEndRange"));
-	new_Protocol = json_object_get_string(json_object_object_get(Jobj, "Protocol"));
-	
-	IID_INIT(iid);
-
-	while(zcfgFeObjJsonGetNext(RDM_OID_NAT_PORT_MAPPING, &iid, &obj) == ZCFG_SUCCESS) { 
-		application = json_object_get_string(json_object_object_get(obj, "Description"));
-		ExternalPort = json_object_get_int(json_object_object_get(obj, "ExternalPort"));
-		ExternalPortEndRange = json_object_get_int(json_object_object_get(obj, "ExternalPortEndRange"));
-		Protocol = json_object_get_string(json_object_object_get(obj, "Protocol"));
+	struct json_object *NatAppJobj = NULL;
+	struct json_object *reqObject = NULL;
+	objIndex_t natIid = {0};
+	int reqObjIdx = 0;
+	int externalport = 0;
+	int externalport_datamodel = 0;
+	int externalportendrange = 0;
+	int externalportendrange_datamodel = 0;
+	const char *description = NULL;
+	const char *description_datamodel = NULL;
+	const char *protocol = NULL;
+	const char *protocol_datamodel = NULL;
+	while((reqObject = json_object_array_get_idx(Jobj, reqObjIdx)) !=NULL){
+		printf("reqObject = %d\n",reqObjIdx);
+		IID_INIT(natIid);
+		reqObjIdx++;
+		externalport = json_object_get_int(json_object_object_get(reqObject, "ExternalPort"));
+		externalportendrange = json_object_get_int(json_object_object_get(reqObject, "ExternalPortEndRange"));
+		description = json_object_get_string(json_object_object_get(reqObject, "Description"));
+		protocol = json_object_get_string(json_object_object_get(reqObject, "Protocol"));
+		while(zcfgFeObjJsonGetNext(RDM_OID_NAT_PORT_MAPPING, &natIid, &NatAppJobj) == ZCFG_SUCCESS) { 
+			externalport_datamodel = json_object_get_int(json_object_object_get(NatAppJobj, "ExternalPort"));
+			externalportendrange_datamodel = json_object_get_int(json_object_object_get(NatAppJobj, "ExternalPortEndRange"));
+			description_datamodel = json_object_get_string(json_object_object_get(NatAppJobj, "Description"));
+			protocol_datamodel = json_object_get_string(json_object_object_get(NatAppJobj, "Protocol"));				
+			if(!strcmp(description,description_datamodel) && !strcmp(protocol,protocol_datamodel) 
+				&& externalport-externalport_datamodel == 0 && externalportendrange-externalportendrange_datamodel == 0){
+				zcfgFeObjJsonDel(RDM_OID_NAT_PORT_MAPPING, &natIid, NULL);
+			}
 			
-			
-		if(!strcmp(application,new_application) && !strcmp(Protocol,new_Protocol) && new_ExternalPort-ExternalPort == 0 && new_ExternalPortEndRange-ExternalPortEndRange == 0){
-			zcfgFeObjJsonDel(RDM_OID_NAT_PORT_MAPPING, &iid, NULL);
 		}
-		zcfgFeJsonObjFree(obj);
 	}	
-	
+	zcfgFeJsonObjFree(NatAppJobj);
 	return ret;
 }
 
@@ -171,14 +148,9 @@
 	if(!method || !Jobj)
 		return ZCFG_INTERNAL_ERROR;
 
-	if(!strcmp(method, "PUT")) {
-		ret = zcfgFeDalNatApplicationEdit(Jobj, NULL);
-		printf("====testH %s: nat true! break;PUT\n", __FUNCTION__);
-	}
-	else if(!strcmp(method, "POST")) {
+	if(!strcmp(method, "POST")) {
 		ret = zcfgFeDalNatApplicationCheck(Jobj, NULL);
 		ret = zcfgFeDalNatApplicationAdd(Jobj, replyMsg);
-		printf("====testH %s: nat true! break;POST\n", __FUNCTION__);
 	}
 	else if(!strcmp(method, "DELETE")) {
 		ret = zcfgFeDalNatApplicationDelete(Jobj, NULL);
