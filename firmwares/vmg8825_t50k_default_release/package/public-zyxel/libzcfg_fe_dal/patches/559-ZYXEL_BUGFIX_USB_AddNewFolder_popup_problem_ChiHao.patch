Index: libzcfg_fe_dal-1.0/network/usbService/zcfg_fe_dal_usb_samba.c
===================================================================
--- libzcfg_fe_dal-1.0.orig/network/usbService/zcfg_fe_dal_usb_samba.c	2018-05-23 14:24:45.600834456 +0800
+++ libzcfg_fe_dal-1.0/network/usbService/zcfg_fe_dal_usb_samba.c	2018-05-23 14:28:32.185903719 +0800
@@ -104,12 +104,21 @@
 	char RootPath[64] = {0};
  	char buff[128] = {0};
 	char *tmp = NULL;
+	char msg[30]={0};
+	
 	
 	HostName = json_object_get_string(json_object_object_get(Jobj, "HostName"));
 	FolderName = json_object_get_string(json_object_object_get(Jobj, "FolderName"));
 	Description = json_object_get_string(json_object_object_get(Jobj, "Description"));
 	//Browseable = json_object_get_boolean(json_object_object_get(Jobj, "Browseable"));	 //not necessary parameter
 	Public = json_object_get_boolean(json_object_object_get(Jobj, "Public"));
+
+	ret = dalcmdParamCheck(NULL,FolderName, RDM_OID_ZY_SAMBA_DIR, "X_ZYXEL_FolderName", "X_ZYXEL_FolderName", msg);
+		if(ret != ZCFG_SUCCESS){
+			printf("msg: %s\n",msg);
+			json_object_object_add(Jobj, "__multi_lang_replyMsg", json_object_new_string("zylang.USB.Error.same_sharepath_err"));
+			return ret; 		
+		}
 	
 	if(json_object_object_get(Jobj, "ValidUsers_GUI")){
 		Validuser_gui = json_object_get_string(json_object_object_get(Jobj, "ValidUsers_GUI"));
@@ -162,8 +171,11 @@
 			ret = zcfgFeObjJsonSet(RDM_OID_ZY_SAMBA_DIR, &sambadirIid, sambadirObj, NULL);
 			zcfgFeJsonObjFree(sambadirObj);
 		}
-	}	
+	}
+	
 	return ret;
+	
+	
 }
 
 zcfgRet_t zcfgFeDalUsbSambaEdit(struct json_object *Jobj, char *replyMsg){
