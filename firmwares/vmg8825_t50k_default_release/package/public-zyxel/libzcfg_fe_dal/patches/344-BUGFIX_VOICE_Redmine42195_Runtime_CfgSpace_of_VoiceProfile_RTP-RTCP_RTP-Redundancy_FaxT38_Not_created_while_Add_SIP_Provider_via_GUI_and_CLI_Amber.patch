Index: libzcfg_fe_dal-1.0/voip/sip/zcfg_fe_dal_sip_provider.c
===================================================================
--- libzcfg_fe_dal-1.0.orig/voip/sip/zcfg_fe_dal_sip_provider.c	2017-09-14 16:51:26.384145463 +0800
+++ libzcfg_fe_dal-1.0/voip/sip/zcfg_fe_dal_sip_provider.c	2017-09-14 17:11:37.908118130 +0800
@@ -159,9 +159,12 @@
 struct json_object *profObj;
 struct json_object *profSipObj;
 struct json_object *profRtpObj;
+struct json_object *profRtpRtcpObj; //Amber.20170914: Add for Content of  RTP-RTCP, RTP-REDUNDANCY, FAX_T38 won’t be created in config while adding new SIP provider via GUI/CLI
 struct json_object *profRtpSrtpObj;
+struct json_object *profRtpRedundancyObj; //Amber.20170914: Add for Content of  RTP-RTCP, RTP-REDUNDANCY, FAX_T38 won’t be created in config while adding new SIP provider via GUI/CLI
 struct json_object *profNumPlanpObj;
 struct json_object *profNumPlanpInfoObj;
+struct json_object *profFaxT38Obj; //Amber.20170914: Add for Content of  RTP-RTCP, RTP-REDUNDANCY, FAX_T38 won’t be created in config while adding new SIP provider via GUI/CLI
 struct json_object *singleProObj;
 
 unsigned int flag1;
@@ -279,10 +282,13 @@
 	if(guiCustObj) json_object_put(guiCustObj);
 	if(profObj) json_object_put(profObj);
 	if(profSipObj) json_object_put(profSipObj);
-	if(profRtpSrtpObj) json_object_put(profRtpSrtpObj);
 	if(profRtpObj) json_object_put(profRtpObj);
+	if(profRtpRtcpObj) json_object_put(profRtpRtcpObj); //Amber.20170914: Add for Content of  RTP-RTCP, RTP-REDUNDANCY, FAX_T38 won’t be created in config while adding new SIP provider via GUI/CLI
+	if(profRtpSrtpObj) json_object_put(profRtpSrtpObj);
+	if(profRtpRedundancyObj) json_object_put(profRtpRedundancyObj); //Amber.20170914: Add for Content of  RTP-RTCP, RTP-REDUNDANCY, FAX_T38 won’t be created in config while adding new SIP provider via GUI/CLI
 	if(profNumPlanpObj) json_object_put(profNumPlanpObj);
 	if(profNumPlanpInfoObj) json_object_put(profNumPlanpInfoObj);
+	if(profFaxT38Obj) json_object_put(profFaxT38Obj); //Amber.20170914: Add for Content of  RTP-RTCP, RTP-REDUNDANCY, FAX_T38 won’t be created in config while adding new SIP provider via GUI/CLI
 	if(singleProObj) json_object_put(singleProObj);
 
 	return;
@@ -437,9 +443,12 @@
 	profObj = NULL;
 	profSipObj = NULL;
 	profRtpObj = NULL;
+	profRtpRtcpObj = NULL; //Amber.20170914: Add for Content of  RTP-RTCP, RTP-REDUNDANCY, FAX_T38 won’t be created in config while adding new SIP provider via GUI/CLI
 	profRtpSrtpObj = NULL;
+	profRtpRedundancyObj = NULL; //Amber.20170914: Add for Content of  RTP-RTCP, RTP-REDUNDANCY, FAX_T38 won’t be created in config while adding new SIP provider via GUI/CLI
 	profNumPlanpObj = NULL;
 	profNumPlanpInfoObj = NULL;
+	profFaxT38Obj = NULL; //Amber.20170914: Add for Content of  RTP-RTCP, RTP-REDUNDANCY, FAX_T38 won’t be created in config while adding new SIP provider via GUI/CLI
 	singleProObj = NULL;
 	return;
 }
@@ -628,6 +637,29 @@
 	return ret;
 }
 
+//Amber.20170914.B: Add for Content of  RTP-RTCP, RTP-REDUNDANCY, FAX_T38 won’t be created in config while adding new SIP provider via GUI/CLI
+zcfgRet_t zcfgFeDalProfFaxT38ObjAdd(struct json_object *Jobj){
+	zcfgRet_t ret = ZCFG_SUCCESS;
+	struct json_object *setJson = NULL;
+
+	if((ret = zcfgFeObjJsonGetWithoutUpdate(RDM_OID_VOICE_PROF_FAX_T38, &profIid, &profFaxT38Obj)) != ZCFG_SUCCESS){
+		printf("%s():(ERROR) zcfgFeObjJsonGetWithoutUpdate get prof fax T38 obj fail~ \n ", __FUNCTION__);
+		return ZCFG_INTERNAL_ERROR;
+	}
+
+	if(profFaxT38Obj != NULL){
+		if((setJson = zcfgFeJsonMultiObjAppend(RDM_OID_VOICE_PROF_FAX_T38, &profIid, multiJobj, profFaxT38Obj)) == NULL){
+			printf("%s:(ERROR) fail to append object oid(%d)\n", __FUNCTION__, RDM_OID_VOICE_PROF_FAX_T38);
+			zcfgFeJsonObjFree(profFaxT38Obj);
+			return ZCFG_INTERNAL_ERROR;
+		}
+	}
+	zcfgFeJsonObjFree(profFaxT38Obj);
+
+	return ret;
+}
+//Amber.20170914.E: Add for Content of  RTP-RTCP, RTP-REDUNDANCY, FAX_T38 won’t be created in config while adding new SIP provider via GUI/CLI
+
 zcfgRet_t zcfgFeDalProfFaxT38ObjEdit(struct json_object *Jobj){
 	zcfgRet_t ret = ZCFG_SUCCESS;
 
@@ -667,6 +699,29 @@
 	return ret;
 }
 
+//Amber.20170914.B: Add for Content of  RTP-RTCP, RTP-REDUNDANCY, FAX_T38 won’t be created in config while adding new SIP provider via GUI/CLI
+zcfgRet_t zcfgFeDalProfRTPRTCPObjAdd(struct json_object *Jobj){
+	zcfgRet_t ret = ZCFG_SUCCESS;
+	struct json_object *setJson = NULL;
+
+	if((ret = zcfgFeObjJsonGetWithoutUpdate(RDM_OID_VOICE_PROF_RTP_RTCP, &profIid, &profRtpRtcpObj)) != ZCFG_SUCCESS){
+		printf("%s():(ERROR) zcfgFeObjJsonGetWithoutUpdate get prof RTP-RTCP obj fail~ \n ",__FUNCTION__);
+		return ZCFG_INTERNAL_ERROR;
+	}
+	
+	if(profRtpRtcpObj != NULL){
+		if((setJson = zcfgFeJsonMultiObjAppend(RDM_OID_VOICE_PROF_RTP_RTCP, &profIid, multiJobj, profRtpRtcpObj)) == NULL){
+			printf("%s:(ERROR) fail to append object oid(%d)\n", __FUNCTION__, RDM_OID_VOICE_PROF_RTP_RTCP);
+			zcfgFeJsonObjFree(profRtpRtcpObj);
+			return ZCFG_INTERNAL_ERROR;
+		}
+		zcfgFeJsonObjFree(profRtpRtcpObj);
+	}
+
+	return ret;
+}
+//Amber.20170914.E: Add for Content of  RTP-RTCP, RTP-REDUNDANCY, FAX_T38 won’t be created in config while adding new SIP provider via GUI/CLI
+
 zcfgRet_t zcfgFeDalProfRTPSRTPObjEdit(struct json_object *Jobj){
 	zcfgRet_t ret = ZCFG_SUCCESS;
 	struct json_object *setJson = NULL;
@@ -698,6 +753,29 @@
 	return ret;
 }
 
+//Amber.20170914.B: Add for Content of  RTP-RTCP, RTP-REDUNDANCY, FAX_T38 won’t be created in config while adding new SIP provider via GUI/CLI
+zcfgRet_t zcfgFeDalProfRTPRedundancyObjAdd(struct json_object *Jobj){
+	zcfgRet_t ret = ZCFG_SUCCESS;
+	struct json_object *setJson = NULL;
+
+	if((ret = zcfgFeObjJsonGetWithoutUpdate(RDM_OID_VOICE_PROF_RTP_REDUNDANCY, &profIid, &profRtpRedundancyObj)) != ZCFG_SUCCESS){
+		printf("%s():(ERROR) zcfgFeObjJsonGetWithoutUpdate get prof RTP-RTCP obj fail~ \n ",__FUNCTION__);
+		return ZCFG_INTERNAL_ERROR;
+	}
+	
+	if(profRtpRedundancyObj != NULL){
+		if((setJson = zcfgFeJsonMultiObjAppend(RDM_OID_VOICE_PROF_RTP_REDUNDANCY, &profIid, multiJobj, profRtpRedundancyObj)) == NULL){
+			printf("%s:(ERROR) fail to append object oid(%d)\n", __FUNCTION__, RDM_OID_VOICE_PROF_RTP_REDUNDANCY);
+			zcfgFeJsonObjFree(profRtpRedundancyObj);
+			return ZCFG_INTERNAL_ERROR;
+		}
+		zcfgFeJsonObjFree(profRtpRedundancyObj);
+	}
+
+	return ret;
+}
+//Amber.20170914.E: Add for Content of  RTP-RTCP, RTP-REDUNDANCY, FAX_T38 won’t be created in config while adding new SIP provider via GUI/CLI
+
 zcfgRet_t zcfgFeDalProfNumberingPlanObjEdit(struct json_object *Jobj){
 	zcfgRet_t ret = ZCFG_SUCCESS;
 	struct json_object *setJson = NULL;
@@ -1016,17 +1094,17 @@
 		goto exit;
 	}
 
-/*
-	if((ret = zcfgFeDalProfFaxT38ObjEdit(Jobj)) != ZCFG_SUCCESS){
-		printf("%s: Edit prof FaxT38 obj fail \n", __FUNCTION__);
-		goto exit;
-	}
-*/
 	if((ret = zcfgFeDalProfRTPObjEdit(Jobj)) != ZCFG_SUCCESS){
 		printf("%s: Edit prof rtp fail obj \n", __FUNCTION__);
 		goto exit;
 	}
 
+	//Amber.20170914: Add for Content of  RTP-RTCP, RTP-REDUNDANCY, FAX_T38 won’t be created in config while adding new SIP provider via GUI/CLI
+	if((ret = zcfgFeDalProfRTPRTCPObjAdd(Jobj)) != ZCFG_SUCCESS){
+		printf("%s: Edit prof rtp-rtcp fail obj \n", __FUNCTION__);
+		goto exit;
+	}
+
 	if(!(HIDE_VOICE_SRTP&flag1)){
 		if((ret = zcfgFeDalProfRTPSRTPObjEdit(Jobj)) != ZCFG_SUCCESS){
 			printf("%s: Edit prof rtp-srtp obj fail \n", __FUNCTION__);
@@ -1034,6 +1112,12 @@
 		}
 	}
 
+	//Amber.20170914: Add for Content of  RTP-RTCP, RTP-REDUNDANCY, FAX_T38 won’t be created in config while adding new SIP provider via GUI/CLI
+	if((ret = zcfgFeDalProfRTPRedundancyObjAdd(Jobj)) != ZCFG_SUCCESS){
+		printf("%s: Edit prof rtp-redundancy fail obj \n", __FUNCTION__);
+		goto exit;
+	}
+
 	if((ret = zcfgFeDalProfNumberingPlanObjEdit(Jobj)) != ZCFG_SUCCESS){
 		printf("%s: Edit prof NumPaln obj fail \n", __FUNCTION__);
 		goto exit;
@@ -1045,6 +1129,19 @@
 			goto exit;
 		}
 	}
+
+	//Amber.20170914: Add for Content of  RTP-RTCP, RTP-REDUNDANCY, FAX_T38 won’t be created in config while adding new SIP provider via GUI/CLI
+	if((ret = zcfgFeDalProfFaxT38ObjAdd(Jobj)) != ZCFG_SUCCESS){
+		printf("%s: Edit prof FaxT38 obj fail \n", __FUNCTION__);
+		goto exit;
+	}
+
+/*
+	if((ret = zcfgFeDalProfFaxT38ObjEdit(Jobj)) != ZCFG_SUCCESS){
+		printf("%s: Edit prof FaxT38 obj fail \n", __FUNCTION__);
+		goto exit;
+	}
+*/
 	
 	sprintf(path,"VoiceProfile.%d",profIid.idx[1]);
 	json_object_object_add(Jobj, "AddPath", json_object_new_string(path));
