Index: libzcfg_fe_dal-1.0/security/schedulerRule/zcfg_fe_dal_schedulerRule.c
===================================================================
--- libzcfg_fe_dal-1.0.orig/security/schedulerRule/zcfg_fe_dal_schedulerRule.c	2018-11-27 16:11:18.827707374 +0800
+++ libzcfg_fe_dal-1.0/security/schedulerRule/zcfg_fe_dal_schedulerRule.c	2018-11-27 16:24:25.983509655 +0800
@@ -130,6 +130,7 @@
 	zcfgRet_t ret = ZCFG_SUCCESS;
 	objIndex_t objIid;
 	struct json_object *ScheduleJobj = NULL;
+	struct json_object *pcpJobj = NULL;
 	struct json_object *pramJobj = NULL;
 
 	int index = 0;
@@ -144,8 +145,26 @@
 	struct json_object *timeStopMin = NULL;
 	char TR181Path[64] = {0};
 	int obj_MaxLength = 0;
+	int listIndex = 0, listSize = 0;
+	int allScheduleRuleList[64];
+	char tmp[128], *strTmp, *strTmp2;
+	uint32_t schIid;
+	bool isPcpRule = false;
 	
 	IID_INIT(objIid);
+	while( zcfgFeObjJsonGetNext(RDM_OID_PAREN_CTL_PROF, &objIid, &pcpJobj) == ZCFG_SUCCESS){
+		strcpy(tmp, json_object_get_string(json_object_object_get(pcpJobj,"ScheduleRuleList")) );
+			strTmp2 = NULL;
+			strTmp = strtok_r(tmp, ",", &strTmp2);
+			while(strTmp != NULL){
+				sscanf(strTmp, "X_ZYXEL_Schedule.%u", &schIid);
+				allScheduleRuleList[listIndex] = schIid;
+				listIndex++;
+				strTmp = strtok_r(NULL, ",", &strTmp2);
+			}
+	}
+	listSize =listIndex;
+	IID_INIT(objIid);
 	while(zcfgFeObjJsonGetNext(RDM_OID_SCHEDULE, &objIid, &ScheduleJobj) == ZCFG_SUCCESS){
 		index++;
 
@@ -163,8 +182,18 @@
 		timeStartMin = json_object_object_get(ScheduleJobj, "TimeStartMin");
 		timeStopHour = json_object_object_get(ScheduleJobj, "TimeStopHour");
 		timeStopMin = json_object_object_get(ScheduleJobj, "TimeStopMin");
+		isPcpRule = false;
 
 		pramJobj = json_object_new_object();
+
+		listIndex = 0;
+		for(listIndex=0;listIndex < listSize;listIndex++){
+			if(objIid.idx[0] == allScheduleRuleList[listIndex]){
+				isPcpRule = true;
+				break;
+			}
+		}
+		json_object_object_add(pramJobj, "isPcpRule", json_object_new_boolean(isPcpRule));
 		json_object_object_add(pramJobj, "Index", json_object_new_int(index));
 		json_object_object_add(pramJobj, "TR181Path", json_object_new_string(TR181Path));
 		//json_object_object_add(pramJobj, "Enable", JSON_OBJ_COPY(enable));
