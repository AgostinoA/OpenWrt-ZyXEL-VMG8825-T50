Index: libzcfg_fe_dal-1.0/security/macFilter/zcfg_fe_dal_mac_filter.c
===================================================================
--- libzcfg_fe_dal-1.0.orig/security/macFilter/zcfg_fe_dal_mac_filter.c	2018-04-17 18:25:22.209419354 +0800
+++ libzcfg_fe_dal-1.0/security/macFilter/zcfg_fe_dal_mac_filter.c	2018-04-17 18:14:20.512380700 +0800
@@ -187,6 +187,10 @@
 		IID_INIT(whiteListIid);
 		index = json_object_get_int(json_object_object_get(reqObject, "Index"));
 		action = json_object_get_string(json_object_object_get(reqObject, "Action"));
+		listEnable = json_object_get_boolean(json_object_object_get(reqObject, "List_Enable"));
+		hostName = json_object_get_string(json_object_object_get(reqObject, "HostName"));
+		MACAddress = json_object_get_string(json_object_object_get(reqObject, "MACAddress"));
+		oid = RDM_OID_ZY_MAC_FILTER_WHITE_LIST;
 		reqObjIdx++;
 		
 		if(!strcmp(action, "DELE")){
@@ -195,11 +199,47 @@
 			ret = zcfgFeObjJsonDel(RDM_OID_ZY_MAC_FILTER_WHITE_LIST, &whiteListIid, NULL);
 			continue;
 		}else if(!strcmp(action, "ADD")){
+			if(json_object_object_get(reqObject, "HostName")){	
+				ret = dalcmdParamCheck(&whiteListIid, hostName, oid, "HostName", "HostName", replyMsg);
+				if(ret != ZCFG_SUCCESS){
+					printf("%s\n",replyMsg);
+					json_object_object_add(reqObject, "__multi_lang_replyMsg", json_object_new_string("zylang.Common.duplicate_name"));
+					json_object_array_add(Jobj, reqObject);
+					return ret;
+				}
+			}
+			if(json_object_object_get(reqObject, "MACAddress")){
+				ret = dalcmdParamCheck(&whiteListIid, MACAddress, oid, "MACAddress", "MACAddress", replyMsg);
+				if(ret != ZCFG_SUCCESS){
+					printf("%s\n",replyMsg);
+					json_object_object_add(reqObject, "__multi_lang_replyMsg", json_object_new_string("zylang.Common.duplicate_mac"));
+					json_object_array_add(Jobj, reqObject);
+					return ret;
+				}				
+			}
 			ret = zcfgFeObjJsonAdd(RDM_OID_ZY_MAC_FILTER_WHITE_LIST, &whiteListIid, NULL);
 			if(ret == ZCFG_SUCCESS){
 				ret = zcfgFeObjJsonGet(RDM_OID_ZY_MAC_FILTER_WHITE_LIST, &whiteListIid, &whiteListObj);
 			}
 		}else if(!strcmp(action, "EDIT")){
+			if(json_object_object_get(reqObject, "HostName")){	
+				ret = dalcmdParamCheck(&whiteListIid, hostName, oid, "HostName", "HostName", replyMsg);
+				if(ret != ZCFG_SUCCESS){
+					printf("%s\n",replyMsg);
+					json_object_object_add(reqObject, "__multi_lang_replyMsg", json_object_new_string("zylang.Common.duplicate_name"));
+					json_object_array_add(Jobj, reqObject);
+					return ret;
+				}
+			}
+			if(json_object_object_get(reqObject, "MACAddress")){
+				ret = dalcmdParamCheck(&whiteListIid, MACAddress, oid, "MACAddress", "MACAddress", replyMsg);
+				if(ret != ZCFG_SUCCESS){
+					printf("%s\n",replyMsg);
+					json_object_object_add(reqObject, "__multi_lang_replyMsg", json_object_new_string("zylang.Common.duplicate_mac"));
+					json_object_array_add(Jobj, reqObject);
+					return ret;
+				}				
+			}
 			whiteListIid.idx[0] = index;
 			whiteListIid.level = 1;
 			ret = zcfgFeObjJsonGetWithoutUpdate(RDM_OID_ZY_MAC_FILTER_WHITE_LIST, &whiteListIid, &whiteListObj);
@@ -210,13 +250,12 @@
 
 		//set Param
 		if(ret == ZCFG_SUCCESS){
-			listEnable = json_object_get_boolean(json_object_object_get(reqObject, "List_Enable"));
-			hostName = json_object_get_string(json_object_object_get(reqObject, "HostName"));
-			MACAddress = json_object_get_string(json_object_object_get(reqObject, "MACAddress"));
-
-			json_object_object_add(whiteListObj, "Enable", json_object_new_boolean(listEnable));
-			json_object_object_add(whiteListObj, "HostName", json_object_new_string(hostName));
-			json_object_object_add(whiteListObj, "MACAddress", json_object_new_string(MACAddress));
+			if(json_object_object_get(reqObject, "List_Enable"))
+				json_object_object_add(whiteListObj, "Enable", json_object_new_boolean(listEnable));
+			if(json_object_object_get(reqObject, "MACAddress"))
+				json_object_object_add(whiteListObj, "MACAddress", json_object_new_string(MACAddress));
+			if(json_object_object_get(reqObject, "HostName"))
+				json_object_object_add(whiteListObj, "HostName", json_object_new_string(hostName));
 			zcfgFeObjJsonSet(RDM_OID_ZY_MAC_FILTER_WHITE_LIST, &whiteListIid, whiteListObj, NULL);
 		}
 		zcfgFeJsonObjFree(whiteListObj);
