Index: libzcfg_fe_dal-1.0/Makefile
===================================================================
--- libzcfg_fe_dal-1.0.orig/Makefile	2019-05-20 14:02:28.476306800 +0800
+++ libzcfg_fe_dal-1.0/Makefile	2019-05-23 14:43:09.101568289 +0800
@@ -144,6 +144,10 @@
 CFLAGS += -DZYXEL_ZyXEL_WEB_GUI_SHOW_PON
 endif
 
+ifeq ($(CONFIG_ZYXEL_SUPPORT_8021X),y)
+CFLAGS += -DZYXEL_SUPPORT_8021X
+endif
+
 ifeq ($(CONFIG_ZYXEL_WEB_GUI_ECONET_QoS_STYLE),y)
 CFLAGS += -DZYXEL_WEB_GUI_ECONET_QoS_STYLE
 endif
Index: libzcfg_fe_dal-1.0/network/wireless/zcfg_fe_dal_wifi_general.c
===================================================================
--- libzcfg_fe_dal-1.0.orig/network/wireless/zcfg_fe_dal_wifi_general.c	2019-05-20 14:02:28.436306800 +0800
+++ libzcfg_fe_dal-1.0/network/wireless/zcfg_fe_dal_wifi_general.c	2019-05-23 16:29:25.949404000 +0800
@@ -71,9 +71,9 @@
 	{"WEP64Key4",	dalType_string, 	0,	0,	NULL,		NULL,			0},
 	{"wepid",				dalType_string,		0,	0,	NULL,		"key1|key2|key3|key4",			0},
 #ifdef ZYXEL_WIFI_SUPPORT_WPA_MIX_MODE
-	{"wpaMode",				dalType_string,		0,	0,	NULL,		"wpawpa2psk|wpa2psk|wpawpa2",	0},
+	{"wpaMode",				dalType_string,		0,	0,	NULL,		"wpawpa2psk|wpa2psk|wpawpa2|wpa|wpawpa2|wpa2",	0},
 #else
-	{"wpaMode",				dalType_string,		0,	0,	NULL,		"wpa2psk|wpa2",			0},
+	{"wpaMode",				dalType_string,		0,	0,	NULL,		"wpa2psk|wpa2|wpa|wpawpa2",			0},
 #endif
 	// {"X_ZYXEL_AutoGenPSK",	dalType_boolean,	0,	0,	NULL,		NULL,			0},
 	{"AutoGenPSK",	dalType_boolean,	0,	0,	NULL,		NULL,			0},
@@ -82,6 +82,11 @@
 	{"RadiusServerIPAddr",	dalType_string, 	0,	0,	NULL,		NULL,			dalcmd_Forbid},
 	{"RadiusServerPort",	dalType_int,		0,	0,	NULL,		NULL,			dalcmd_Forbid},
 	{"RadiusSecret",		dalType_string, 	0,	0,	NULL,		NULL,			dalcmd_Forbid},
+#ifdef ZYXEL_SUPPORT_8021X
+	{"SecondaryRadiusServerIPAddr",	dalType_string, 	0,	0,	NULL,		NULL,			dalcmd_Forbid},
+	{"SecondaryRadiusServerPort",	dalType_int,		0,	0,	NULL,		NULL,			dalcmd_Forbid},
+	{"SecondaryRadiusSecret",		dalType_string, 	0,	0,	NULL,		NULL,			dalcmd_Forbid},
+#endif
 	{"X_ZYXEL_Preauth",		dalType_boolean,	0,	0,	NULL,		NULL,			dalcmd_Forbid},
 	{"X_ZYXEL_ReauthInterval",dalType_int,		0,	0,	NULL,		NULL,			0},
 #ifdef ZYXEL_WIFI_SUPPORT_WPA_MIX_MODE
@@ -181,6 +186,11 @@
 const char* RadiusServerIPAddr;
 unsigned int RadiusServerPort;
 const char* RadiusSecret;
+#ifdef ZYXEL_SUPPORT_8021X
+const char* SecondaryRadiusServerIPAddr;
+unsigned int SecondaryRadiusServerPort;
+const char* SecondaryRadiusSecret;
+#endif
 bool X_ZYXEL_Preauth;
 unsigned int X_ZYXEL_ReauthInterval;
 const char* encryp;
@@ -576,6 +586,11 @@
 	RadiusServerIPAddr = json_object_get_string(json_object_object_get(Jobj, "RadiusServerIPAddr"));
 	RadiusServerPort = json_object_get_int(json_object_object_get(Jobj, "RadiusServerPort"));
 	RadiusSecret = json_object_get_string(json_object_object_get(Jobj, "RadiusSecret"));
+#ifdef ZYXEL_SUPPORT_8021X
+	SecondaryRadiusServerIPAddr = json_object_get_string(json_object_object_get(Jobj, "RadiusServerIPAddr"));
+	SecondaryRadiusServerPort = json_object_get_int(json_object_object_get(Jobj, "RadiusServerPort"));
+	SecondaryRadiusSecret = json_object_get_string(json_object_object_get(Jobj, "RadiusSecret"));
+#endif
 	X_ZYXEL_Preauth = json_object_get_boolean(json_object_object_get(Jobj, "X_ZYXEL_Preauth"));
 	X_ZYXEL_ReauthInterval = json_object_get_int(json_object_object_get(Jobj, "X_ZYXEL_ReauthInterval"));
 	encryp = json_object_get_string(json_object_object_get(Jobj, "encryp"));
@@ -1002,6 +1017,11 @@
 			json_object_object_add(wifiSecObj, "RadiusServerIPAddr", json_object_new_string(RadiusServerIPAddr));
 			json_object_object_add(wifiSecObj, "RadiusServerPort", json_object_new_int(RadiusServerPort));
 			json_object_object_add(wifiSecObj, "RadiusSecret", json_object_new_string(RadiusSecret));
+#ifdef ZYXEL_SUPPORT_8021X
+			json_object_object_add(wifiSecObj, "SecondaryRadiusServerIPAddr", json_object_new_string(SecondaryRadiusServerIPAddr));
+			json_object_object_add(wifiSecObj, "SecondaryRadiusServerPort", json_object_new_int(SecondaryRadiusServerPort));
+			json_object_object_add(wifiSecObj, "SecondaryRadiusSecret", json_object_new_string(SecondaryRadiusSecret));
+#endif
 		}
 
 		if(json_object_object_get(Jobj, "encryp")){
@@ -1865,6 +1885,16 @@
 		}
 	}
 	else if(secMode == SLIDER_POS_MORESECURE){
+#ifdef ZYXEL_SUPPORT_8021X
+		// if WPS is on, return false
+		if(!strcmp(wpaMode,"wpa2"))
+		{
+			if(wpsEnabled){
+				printf("WPA/WPA2 security does not support WPS. You should disable WPS first.\n");
+				return ZCFG_REQUEST_REJECT;
+			}
+		}
+#endif
 
 		// wpaMode must be set
 		if(!json_object_object_get(Jobj, "wpaMode")){
@@ -1872,6 +1902,7 @@
 			return ZCFG_INVALID_PARAM_VALUE;
 		}
 	
+#ifndef ZYXEL_SUPPORT_8021X
 		// wpaMode must be set to a proper value
 #ifdef ZYXEL_WIFI_SUPPORT_WPA_MIX_MODE
 		if(strcmp(wpaMode,"wpa2psk")&& strcmp(wpaMode,"wpawpa2psk") ){
@@ -1884,6 +1915,7 @@
                        return ZCFG_INVALID_PARAM_VALUE;
                }
 #endif
+#endif
 
 		// AutoGenPSK is optional
 		if(!json_object_object_get(Jobj, "AutoGenPSK")){
