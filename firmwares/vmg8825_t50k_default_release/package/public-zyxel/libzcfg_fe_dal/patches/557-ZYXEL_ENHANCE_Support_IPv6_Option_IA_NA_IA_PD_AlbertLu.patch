Index: libzcfg_fe_dal-1.0/network/broadband/zcfg_fe_dal_broadband.c
===================================================================
--- libzcfg_fe_dal-1.0.orig/network/broadband/zcfg_fe_dal_broadband.c	2018-05-21 18:54:24.795951891 +0800
+++ libzcfg_fe_dal-1.0/network/broadband/zcfg_fe_dal_broadband.c	2018-05-21 18:56:25.892092193 +0800
@@ -82,6 +82,9 @@
 	{"ip6Static",			dalType_boolean,	0,	0,	NULL},
 	{"IP6Address",			dalType_v6AddrPrefix,	0,	0,	NULL},
 	{"NextHop",				dalType_v6Addr,	0,	0,	NULL},
+     /* __ZyXEL__, Albert, 20180209,Support IPv6 option IA_NA and IA_PD  */
+	{"IPv6Manual_IANA",		dalType_boolean,	0,	0,	NULL},
+	{"IPv6Manual_IAPD",		dalType_boolean,	0,	0,	NULL},	
 	//DHCP
 	{"option42Enable",		dalType_boolean,	0,	0,	NULL},
 	{"option43Enable",		dalType_boolean,	0,	0,	NULL},
@@ -120,7 +123,7 @@
 #ifdef ZYXEL_WAN_MAC
 const char *WanMacType, *WanMacAddr, *WanMacIP;
 #endif
-bool ipStatic, ip6Static, Enable_6RD, ip6DnsStatic;
+bool ipStatic, ip6Static, Enable_6RD, ip6DnsStatic, IPv6Manual_IANA, IPv6Manual_IAPD;
 
 char CurrType[16] = {0};
 char CurrMode[16] = {0};
@@ -2494,10 +2497,16 @@
 		replaceParam(ipIfaceObj, "X_ZYXEL_Enable_DSLite", Jobj, "DSLiteEnable");
 		replaceParam(ipIfaceObj, "X_ZYXEL_DSLite_Type", Jobj, "DSLiteType");
 		replaceParam(ipIfaceObj, "X_ZYXEL_DSLiteRelayIPv6Addresses", Jobj, "DSLiteRelayIPv6Addresses");
+         /* __ZyXEL__, Albert, 20180209,Support IPv6 option IA_NA and IA_PD  */
+        replaceParam(ipIfaceObj, "X_ZYXEL_AdvManagedFlag_Manual", Jobj, "IPv6Manual_IANA");
+        replaceParam(ipIfaceObj, "X_ZYXEL_AdvOtherConfigFlag_Manual", Jobj, "IPv6Manual_IAPD");       
 	}
 	else if(!strcmp(ipMode, "DualStack")){
 		json_object_object_add(ipIfaceObj, "IPv4Enable", json_object_new_boolean(true));
 		json_object_object_add(ipIfaceObj, "IPv6Enable", json_object_new_boolean(true));
+        /* __ZyXEL__, Albert, 20180209,Support IPv6 option IA_NA and IA_PD  */
+        replaceParam(ipIfaceObj, "X_ZYXEL_AdvManagedFlag_Manual", Jobj, "IPv6Manual_IANA");
+        replaceParam(ipIfaceObj, "X_ZYXEL_AdvOtherConfigFlag_Manual", Jobj, "IPv6Manual_IAPD");
 	}
 
 	json_object_object_add(ipIfaceObj, "X_ZYXEL_AccessDescription", json_object_new_string("AddSetIpIface"));
@@ -2595,12 +2604,19 @@
 		replaceParam(ipIfaceObj, "X_ZYXEL_DSLite_Type", Jobj, "DSLiteType");
 		replaceParam(ipIfaceObj, "X_ZYXEL_DSLiteRelayIPv6Addresses", Jobj, "DSLiteRelayIPv6Addresses");
 		json_object_object_add(ipIfaceObj, "X_ZYXEL_Enable_6RD", json_object_new_boolean(false));
+        /* __ZyXEL__, Albert, 20180209,Support IPv6 option IA_NA and IA_PD  */
+        replaceParam(ipIfaceObj, "X_ZYXEL_AdvManagedFlag_Manual", Jobj, "IPv6Manual_IANA");
+        replaceParam(ipIfaceObj, "X_ZYXEL_AdvOtherConfigFlag_Manual", Jobj, "IPv6Manual_IAPD");
+
 	}
 	else if(!strcmp(ipMode, "DualStack")){
 		json_object_object_add(ipIfaceObj, "IPv4Enable", json_object_new_boolean(true));
 		json_object_object_add(ipIfaceObj, "IPv6Enable", json_object_new_boolean(true));
 		json_object_object_add(ipIfaceObj, "X_ZYXEL_Enable_6RD", json_object_new_boolean(false));
 		json_object_object_add(ipIfaceObj, "X_ZYXEL_Enable_DSLite", json_object_new_boolean(false));
+        /* __ZyXEL__, Albert, 20180209,Support IPv6 option IA_NA and IA_PD  */
+        replaceParam(ipIfaceObj, "X_ZYXEL_AdvManagedFlag_Manual", Jobj, "IPv6Manual_IANA");
+        replaceParam(ipIfaceObj, "X_ZYXEL_AdvOtherConfigFlag_Manual", Jobj, "IPv6Manual_IAPD");      
 	}
 
 	if(!strcmp(Encapsulation, "PPPoE") || !strcmp(Encapsulation, "PPPoA")){
@@ -3082,6 +3098,10 @@
 		v6enable = json_object_get_boolean(json_object_object_get(ipIfaceObj, "IPv6CPEnable"));
 	}
 
+    /* __ZyXEL__, Albert, 20180209,Support IPv6 option IA_NA and IA_PD  */
+    IPv6Manual_IANA = json_object_get_boolean(json_object_object_get(ipIfaceObj, "IPv6Manual_IANA"));
+    IPv6Manual_IAPD = json_object_get_boolean(json_object_object_get(ipIfaceObj, "IPv6Manual_IAPD"));
+
 	if(v4enable && v6enable)
 		strcpy(CurrIpMode, "DualStack");
 	else if(v4enable)
@@ -3942,6 +3962,10 @@
 		json_object_object_add(pramJobj, "VLANPriority", json_object_new_int(-1));
 	}
 
+    /* __ZyXEL__, Albert, 20180209,Support IPv6 option IA_NA and IA_PD  */
+	json_object_object_add(pramJobj, "IPv6Manual_IANA", json_object_object_get(ipIfaceObj, "X_ZYXEL_AdvManagedFlag_Manual"));
+	json_object_object_add(pramJobj, "IPv6Manual_IAPD", json_object_object_get(ipIfaceObj, "X_ZYXEL_AdvOtherConfigFlag_Manual"));
+
 	if(!strcmp(CurrType, "ATM")){
 		json_object_object_add(pramJobj, "vpivci", JSON_OBJ_COPY(json_object_object_get(atmLinkObj, "DestinationAddress")));
 		json_object_object_add(pramJobj, "AtmEncapsulation", JSON_OBJ_COPY(json_object_object_get(atmLinkObj, "Encapsulation")));
