Index: libzcfg_fe_dal-1.0/network/interfaceGrouping/zcfg_fe_dal_intfGrp.c
===================================================================
--- libzcfg_fe_dal-1.0.orig/network/interfaceGrouping/zcfg_fe_dal_intfGrp.c	2017-06-01 13:23:03.538150460 +0800
+++ libzcfg_fe_dal-1.0/network/interfaceGrouping/zcfg_fe_dal_intfGrp.c	2017-06-01 13:34:13.552185700 +0800
@@ -1248,20 +1248,20 @@
 	struct json_object *bridgeportObj = NULL;
 	struct json_object *vlanObj = NULL;
 	struct json_object *bridgefilterObj = NULL;
+	struct json_object *obj = NULL;
+	struct json_object *brobj = NULL;
 	objIndex_t bridgeIid = {0};
 	objIndex_t ipifaceIid = {0};
 	objIndex_t bridgeportIid = {0};
 	objIndex_t vlanIid = {0};
 	objIndex_t bridgefilterIid = {0};
 	const char *Group_Name = NULL;
-	const char *Server_Name = NULL;
+	const char *Bridge_Name = NULL;
 	const char *WAN_IpIface = NULL;
 	const char *LAN_IpIface = NULL;
-	char tmp[256] = {0};
-	char criinfo[128] = {0};
 	int str_length = 0;
 	int vlanID = 0;
-	char LAN[256] = {0};
+	char brname[8] = {0};
 	char *op125tmp1 = NULL;
 	char *str_ptr = NULL;
 	const char *VlanName = NULL;
@@ -1271,22 +1271,22 @@
 	const char *SourceMACFromVendorClassIDFilter = NULL;
 	const char *SourceMACAddressFilterList = NULL;
 	bool enable_criteria = false;
-	int count = 0;
+	int len = 0, i;
+	getWanLanList(&obj);
 	while(zcfgFeObjJsonGetNextWithoutUpdate(RDM_OID_BRIDGING_BR, &bridgeIid, &bridgeJobj) == ZCFG_SUCCESS){
 		paramJobj = json_object_new_object();
 		Group_Name = json_object_get_string(json_object_object_get(bridgeJobj, "X_ZYXEL_BridgeName"));
 		json_object_object_add(paramJobj, "Index", json_object_new_int(bridgeIid.idx[0]));	
 		json_object_object_add(paramJobj, "Group_Name", json_object_new_string(Group_Name));
 		IID_INIT(ipifaceIid);
-		if(!strcmp(Group_Name,"Default"))
-			json_object_object_add(paramJobj, "wanIntf", json_object_new_string("Any WAN"));
-		while(zcfgFeObjJsonGetNextWithoutUpdate(RDM_OID_IP_IFACE, &ipifaceIid, &ipifaceObj) == ZCFG_SUCCESS){
-			Server_Name = json_object_get_string(json_object_object_get(ipifaceObj, "X_ZYXEL_SrvName"));
-			if(!strcmp(Group_Name, Server_Name)){
-				WAN_IpIface = json_object_get_string(json_object_object_get(ipifaceObj, "X_ZYXEL_Group_WAN_IpIface"));
-				json_object_object_add(paramJobj, "wanIntf", json_object_new_string(WAN_IpIface));
+		/*if(!strcmp(Group_Name,"Default"))
+			json_object_object_add(paramJobj, "wanIntf", json_object_new_string("Any WAN"));*/
+		len = json_object_array_length(obj);
+		for(i=0;i<len;i++){
+			brobj = json_object_array_get_idx(obj, i);
+			if(!strcmp(Group_Name,json_object_get_string(json_object_object_get(brobj, "Name")))){
+				json_object_object_add(paramJobj, "wanIntf", JSON_OBJ_COPY(json_object_object_get(brobj, "Group_WAN_IpIface")));
 			}
-			zcfgFeJsonObjFree(ipifaceObj);
 		}
 		IID_INIT(bridgeportIid);
 		bridgeportIid.idx[0] = bridgeIid.idx[0];
@@ -1539,87 +1539,87 @@
 	else
 		optionstr = "";
 	if(!strcmp(type,"op125")){
-		
-	}
-
-	if(strcmp(op125value,"")){
-		char *OUI = NULL;
-		char *SN = NULL;
-		char *CLASS = NULL;
-		char buf[64] = {0};
-		char oui[64] = {0};
-		char sn[64] = {0};
-		char class[64] = {0};
-		char oui1[64] = {0};
-		char sn1[64] = {0};
-		char class1[64] = {0};
-		char sourcemac[128] = {0};
-								
-		char *p, *p1, *p2, *p3;			
-		if(op125value != NULL){
-			strcpy(sourcemac,op125value);
-			p = strstr(sourcemac, ",");
-			if(p != NULL) 
-				*p = '\0';
-		}
-		OUI = strstr(op125value, ",OUI=");
-		if(OUI)
-			OUI = OUI+5;		
-		SN = strstr(op125value, ",SN=");
-		if(SN)
-			SN = SN+4;
-								
-		CLASS = strstr(op125value, ",Class=");
-		if(CLASS)
-			CLASS = CLASS+7;
-		if(OUI){
-			if(strcmp(OUI,"")){
-				strcpy(oui,OUI);
-				p1 = strstr(oui, ",");
-				if(p1 != NULL) 
-					*p1 = '\0';
-				strcat(oui1, oui);
-			}
-		}
-		if(SN){
-			if(strcmp(SN,"")){
-				strcpy(sn,SN);
-				p2 = strstr(sn, ",");
-				if(p2 != NULL) 
-					*p2 = '\0';
-				strcat(sn1, sn);
-			}
-		}
-		if(CLASS){
-			if(strcmp(CLASS,"")){
-				strcpy(class,CLASS);
-				p3 = strstr(class, ",");
-				if(p3 != NULL) 
-					*p3 = '\0';
-				strcat(class1, class);
-			}
-		}
-		strcat(op125tmp,sourcemac);		
-		if(OUI){
-			if(strcmp(OUI,"")){
-				sprintf(oui,"\%\%\%\%1=%s",oui1);
-				strcat(op125tmp, oui);
-			}
-		}
-		if(SN){
-			if(strcmp(SN,"")){
-				sprintf(sn,"\%\%\%\%2=%s",sn1);	
-				strcat(op125tmp, sn);
-			}
-		}
-		if(CLASS){
-			if(strcmp(CLASS,"")){
-				sprintf(class,"\%\%\%\%3=%s",class1);
-				strcat(op125tmp, class);
+		if(strcmp(op125value,"")){
+			char *OUI = NULL;
+			char *SN = NULL;
+			char *CLASS = NULL;
+			char buf[64] = {0};
+			char oui[64] = {0};
+			char sn[64] = {0};
+			char class[64] = {0};
+			char oui1[64] = {0};
+			char sn1[64] = {0};
+			char class1[64] = {0};
+			char sourcemac[128] = {0};
+									
+			char *p, *p1, *p2, *p3;			
+			if(op125value != NULL){
+				strcpy(sourcemac,op125value);
+				p = strstr(sourcemac, ",");
+				if(p != NULL) 
+					*p = '\0';
+			}
+			OUI = strstr(op125value, ",OUI=");
+			if(OUI)
+				OUI = OUI+5;		
+			SN = strstr(op125value, ",SN=");
+			if(SN)
+				SN = SN+4;
+									
+			CLASS = strstr(op125value, ",Class=");
+			if(CLASS)
+				CLASS = CLASS+7;
+			if(OUI){
+				if(strcmp(OUI,"")){
+					strcpy(oui,OUI);
+					p1 = strstr(oui, ",");
+					if(p1 != NULL) 
+						*p1 = '\0';
+					strcat(oui1, oui);
+				}
+			}
+			if(SN){
+				if(strcmp(SN,"")){
+					strcpy(sn,SN);
+					p2 = strstr(sn, ",");
+					if(p2 != NULL) 
+						*p2 = '\0';
+					strcat(sn1, sn);
+				}
+			}
+			if(CLASS){
+				if(strcmp(CLASS,"")){
+					strcpy(class,CLASS);
+					p3 = strstr(class, ",");
+					if(p3 != NULL) 
+						*p3 = '\0';
+					strcat(class1, class);
+				}
+			}
+			strcat(op125tmp,sourcemac);		
+			if(OUI){
+				if(strcmp(OUI,"")){
+					sprintf(oui,"\%\%\%\%1=%s",oui1);
+					strcat(op125tmp, oui);
+				}
+			}
+			if(SN){
+				if(strcmp(SN,"")){
+					sprintf(sn,"\%\%\%\%2=%s",sn1);	
+					strcat(op125tmp, sn);
+				}
+			}
+			if(CLASS){
+				if(strcmp(CLASS,"")){
+					sprintf(class,"\%\%\%\%3=%s",class1);
+					strcat(op125tmp, class);
+				}
 			}
 		}
 	}
 
+	
+
 	//GET RDM_OID_IP_IFACE_V4_ADDR
 	/*======================================================================*/
 
@@ -1896,7 +1896,7 @@
 	objIndex_t EthLinkIid = {0};
 	int index = 0, critinfolen = 0, ethidx = 0;
 	const char *name = NULL, *wanintf = NULL, *lanintf = NULL, *type = NULL, *macvalue = NULL, *op60value = NULL, *op61value = NULL, *op125value = NULL, *vlanvalue = NULL, *optionstr = NULL;
-	char brPathName[32] = {0}, lanIntf_tmp[512] = {0}, brPath[32] = {0}, *op125tmp[128] = {0};
+	char brPathName[32] = {0}, lanIntf_tmp[512] = {0}, brPath[32] = {0}, *op125tmp[128] = {0}, ifname[8] = {0};
 	char *single_lanIntf = NULL, *rest_str = NULL;
 	bool wildcardeb = false;
 	
@@ -1932,87 +1932,86 @@
 	else
 		optionstr = "";
 	if(!strcmp(type,"op125")){
-		
-	}
-
-	if(strcmp(op125value,"")){
-		char *OUI = NULL;
-		char *SN = NULL;
-		char *CLASS = NULL;
-		char buf[64] = {0};
-		char oui[64] = {0};
-		char sn[64] = {0};
-		char class[64] = {0};
-		char oui1[64] = {0};
-		char sn1[64] = {0};
-		char class1[64] = {0};
-		char sourcemac[128] = {0};
-								
-		char *p, *p1, *p2, *p3;			
-		if(op125value != NULL){
-			strcpy(sourcemac,op125value);
-			p = strstr(sourcemac, ",");
-			if(p != NULL) 
-				*p = '\0';
-		}
-		OUI = strstr(op125value, ",OUI=");
-		if(OUI)
-			OUI = OUI+5;		
-		SN = strstr(op125value, ",SN=");
-		if(SN)
-			SN = SN+4;
-								
-		CLASS = strstr(op125value, ",Class=");
-		if(CLASS)
-			CLASS = CLASS+7;
-		if(OUI){
-			if(strcmp(OUI,"")){
-				strcpy(oui,OUI);
-				p1 = strstr(oui, ",");
-				if(p1 != NULL) 
-					*p1 = '\0';
-				strcat(oui1, oui);
-			}
-		}
-		if(SN){
-			if(strcmp(SN,"")){
-				strcpy(sn,SN);
-				p2 = strstr(sn, ",");
-				if(p2 != NULL) 
-					*p2 = '\0';
-				strcat(sn1, sn);
-			}
-		}
-		if(CLASS){
-			if(strcmp(CLASS,"")){
-				strcpy(class,CLASS);
-				p3 = strstr(class, ",");
-				if(p3 != NULL) 
-					*p3 = '\0';
-				strcat(class1, class);
-			}
-		}
-		strcat(op125tmp,sourcemac);		
-		if(OUI){
-			if(strcmp(OUI,"")){
-				sprintf(oui,"\%\%\%\%1=%s",oui1);
-				strcat(op125tmp, oui);
-			}
-		}
-		if(SN){
-			if(strcmp(SN,"")){
-				sprintf(sn,"\%\%\%\%2=%s",sn1);	
-				strcat(op125tmp, sn);
-			}
-		}
-		if(CLASS){
-			if(strcmp(CLASS,"")){
-				sprintf(class,"\%\%\%\%3=%s",class1);
-				strcat(op125tmp, class);
+		if(strcmp(op125value,"")){
+			char *OUI = NULL;
+			char *SN = NULL;
+			char *CLASS = NULL;
+			char buf[64] = {0};
+			char oui[64] = {0};
+			char sn[64] = {0};
+			char class[64] = {0};
+			char oui1[64] = {0};
+			char sn1[64] = {0};
+			char class1[64] = {0};
+			char sourcemac[128] = {0};
+									
+			char *p, *p1, *p2, *p3;			
+			if(op125value != NULL){
+				strcpy(sourcemac,op125value);
+				p = strstr(sourcemac, ",");
+				if(p != NULL) 
+					*p = '\0';
+			}
+			OUI = strstr(op125value, ",OUI=");
+			if(OUI)
+				OUI = OUI+5;		
+			SN = strstr(op125value, ",SN=");
+			if(SN)
+				SN = SN+4;
+									
+			CLASS = strstr(op125value, ",Class=");
+			if(CLASS)
+				CLASS = CLASS+7;
+			if(OUI){
+				if(strcmp(OUI,"")){
+					strcpy(oui,OUI);
+					p1 = strstr(oui, ",");
+					if(p1 != NULL) 
+						*p1 = '\0';
+					strcat(oui1, oui);
+				}
+			}
+			if(SN){
+				if(strcmp(SN,"")){
+					strcpy(sn,SN);
+					p2 = strstr(sn, ",");
+					if(p2 != NULL) 
+						*p2 = '\0';
+					strcat(sn1, sn);
+				}
+			}
+			if(CLASS){
+				if(strcmp(CLASS,"")){
+					strcpy(class,CLASS);
+					p3 = strstr(class, ",");
+					if(p3 != NULL) 
+						*p3 = '\0';
+					strcat(class1, class);
+				}
+			}
+			strcat(op125tmp,sourcemac);		
+			if(OUI){
+				if(strcmp(OUI,"")){
+					sprintf(oui,"\%\%\%\%1=%s",oui1);
+					strcat(op125tmp, oui);
+				}
+			}
+			if(SN){
+				if(strcmp(SN,"")){
+					sprintf(sn,"\%\%\%\%2=%s",sn1);	
+					strcat(op125tmp, sn);
+				}
+			}
+			if(CLASS){
+				if(strcmp(CLASS,"")){
+					sprintf(class,"\%\%\%\%3=%s",class1);
+					strcat(op125tmp, class);
+				}
 			}
 		}
 	}
 
+	sprintf(ifname,"br%d",index-1);
 	sprintf(brPath,"Bridging.Bridge.%d",index);
 	sprintf(brPathName,"Bridging.Bridge.%d.Port.1",index);
 	if(name != NULL || wanintf != NULL){
@@ -2033,13 +2032,17 @@
 			}
 			zcfgFeJsonObjFree(EthLinkObj);
 		}
-		if(zcfgFeObjJsonGetWithoutUpdate(RDM_OID_IP_IFACE, &IpIfaceIid, &IpIfaceObj) == ZCFG_SUCCESS){
+		while(zcfgFeObjJsonGetNextWithoutUpdate(RDM_OID_IP_IFACE, &IpIfaceIid, &IpIfaceObj) == ZCFG_SUCCESS){
+			if(!strcmp(ifname,json_object_get_string(json_object_object_get(IpIfaceObj, "X_ZYXEL_IfName")))){
 			if(wanintf != NULL)
 				json_object_object_add(IpIfaceObj, "X_ZYXEL_Group_WAN_IpIface", json_object_new_string(wanintf));
 			if(name != NULL)
 				json_object_object_add(IpIfaceObj, "X_ZYXEL_SrvName", json_object_new_string(name));
 			zcfgFeObjJsonSet(RDM_OID_IP_IFACE, &IpIfaceIid, IpIfaceObj, NULL);
 			zcfgFeJsonObjFree(IpIfaceObj);
+				break;
+			}
+			zcfgFeJsonObjFree(IpIfaceObj);
 		}
 	}
 
@@ -2202,28 +2205,27 @@
 		obj = json_object_array_get_idx(Jarray, i);
 		const char *criteria = NULL;
 		const char *LanInterface = NULL;
+		const char *wanInterface = NULL;
 		criteria = json_object_get_string(json_object_object_get(obj, "Criteria"));
 		LanInterface = json_object_get_string(json_object_object_get(obj, "lanIntf"));
-		if(!strcmp(LanInterface,"")){
+		wanInterface = json_object_get_string(json_object_object_get(obj, "wanIntf"));
+		if(!strcmp(LanInterface,""))
 			LanInterface = "N/A";
-		}else
-			LanInterface = LanInterface;
-		if(!strcmp(criteria,"")){
+
+		if(!strcmp(criteria,""))
 			criteria = "N/A";
-		}else
-			criteria = criteria;
+
+		if(!strcmp(wanInterface,""))
+			wanInterface = "Any WAN";
 		
 		ipver = json_object_get_string(json_object_object_get(obj, "ipver"));
 			printf("%-6s %-12s %-35s %-55s %-35s \n",
 					json_object_get_string(json_object_object_get(obj, "Index")),
 				    json_object_get_string(json_object_object_get(obj, "Group_Name")),
-				    json_object_get_string(json_object_object_get(obj, "wanIntf")),
+				    wanInterface,
 				    LanInterface,
 				    criteria);
-	
-		
 	}
-	
 }
 
 
Index: libzcfg_fe_dal-1.0/network/routing/zcfg_fe_dal_dns_route.c
===================================================================
--- libzcfg_fe_dal-1.0.orig/network/routing/zcfg_fe_dal_dns_route.c	2017-06-01 13:23:03.598150459 +0800
+++ libzcfg_fe_dal-1.0/network/routing/zcfg_fe_dal_dns_route.c	2017-06-01 13:36:08.592938900 +0800
@@ -123,9 +123,11 @@
 	ret = convertIndextoIid(index, &dnsRtIid, oid, NULL, NULL, replyMsg);
 	if(ret != ZCFG_SUCCESS)
 		return ret;	
-	ret = dalcmdParamCheck(&dnsRtIid, DomainName, oid, "DomainName", "DomainName",  replyMsg);
-	if(ret != ZCFG_SUCCESS)
-		return ret;
+	if(json_object_object_get(Jobj, "DomainName")){
+		ret = dalcmdParamCheck(&dnsRtIid, DomainName, oid, "DomainName", "DomainName",  replyMsg);
+		if(ret != ZCFG_SUCCESS)
+			return ret;
+	}
 	if((ret = zcfgFeDalDnsRouteObjEdit(Jobj)) != ZCFG_SUCCESS){
 		printf("%s:(ERROR) fail to edit Dns Route \n", __FUNCTION__);
 		goto exit;
Index: libzcfg_fe_dal-1.0/network/routing/zcfg_fe_dal_policy_route.c
===================================================================
--- libzcfg_fe_dal-1.0.orig/network/routing/zcfg_fe_dal_policy_route.c	2017-06-01 13:23:03.570150459 +0800
+++ libzcfg_fe_dal-1.0/network/routing/zcfg_fe_dal_policy_route.c	2017-06-01 13:35:46.102185700 +0800
@@ -145,9 +145,12 @@
 	ret = convertIndextoIid(index, &policyRtIid, oid, "X_ZYXEL_PolicyRoute", true, replyMsg);
 	if(ret != ZCFG_SUCCESS)
 		return ret;
-	ret = dalcmdParamCheck(&policyRtIid, X_ZYXEL_PolicyRouteName, oid, "X_ZYXEL_PolicyRouteName", "RouteName", replyMsg);
-	if(ret != ZCFG_SUCCESS)
-		return ret;
+	if(json_object_object_get(Jobj, "RouteName")){
+		ret = dalcmdParamCheck(&policyRtIid, X_ZYXEL_PolicyRouteName, oid, "X_ZYXEL_PolicyRouteName", "RouteName", replyMsg);
+		if(ret != ZCFG_SUCCESS)
+			return ret;
+	}
+	
 	if((ret = zcfgFeDalPolicyRouteObjEdit(Jobj, &policyRtIid)) != ZCFG_SUCCESS){
 		printf("%s:(ERROR) fail to edit Policy Route \n", __FUNCTION__);
 		goto exit;
Index: libzcfg_fe_dal-1.0/security/firewall/zcfg_fe_dal_firewall_acl.c
===================================================================
--- libzcfg_fe_dal-1.0.orig/security/firewall/zcfg_fe_dal_firewall_acl.c	2017-06-01 13:23:03.154150467 +0800
+++ libzcfg_fe_dal-1.0/security/firewall/zcfg_fe_dal_firewall_acl.c	2017-06-01 13:28:40.851185700 +0800
@@ -17,7 +17,7 @@
 {
 	{"Index", 				dalType_int, 	 0, 	0,		NULL,	NULL, 							dal_Edit|dal_Delete},
 	{"Enable", 				dalType_boolean, 0, 	0,		NULL,	NULL, 							0},
-	{"Description", 		dalType_string,  1, 	128,	NULL,	NULL, 							dal_Add},
+	{"Name",		 		dalType_string,  1, 	128,	NULL,	NULL, 							dal_Add},
 	{"Order", 				dalType_int, 	 0, 	0, 		NULL,	NULL, 							dal_Add},
 	{"Target", 				dalType_string,  0, 	0, 		NULL,	"Accept|Drop|Reject", 			0},
 	{"SourceIPExclude", 	dalType_string,	 0,		0,		NULL,	NULL, 							dalcmd_Forbid},
@@ -29,10 +29,10 @@
 	/*src des ip*/
 	{"SourceIP", 			dalType_v4v6Addr,  0, 	0, 		NULL,	"AnyIP", 						dal_Add},
 	{"SourceMask", 			dalType_string,  0, 	0, 		NULL,	NULL, 							dalcmd_Forbid},
-	{"SourceMaskLen", 		dalType_int,  	 0, 	0, 		NULL,	NULL, 							dal_Add}, //same parameter to SourceMask, for dalcmd
+	{"SourceMaskLen", 		dalType_int,  	 0, 	0, 		NULL,	NULL, 							0}, //same parameter to SourceMask, for dalcmd
 	{"DestIP", 				dalType_v4v6Addr,  0, 	0, 		NULL,	"AnyIP", 						dal_Add},
 	{"DestMask", 			dalType_string,  0, 	0, 		NULL,	NULL, 							dalcmd_Forbid},
-	{"DestMaskLen", 		dalType_int,  	 0, 	0, 		NULL,	NULL, 							dal_Add}, //same parameter to DestMask, for dalcmd
+	{"DestMaskLen", 		dalType_int,  	 0, 	0, 		NULL,	NULL, 							0}, //same parameter to DestMask, for dalcmd
 	/*Port*/
 	{"DestPortExclude", 	dalType_int, 	 0, 	0, 		NULL,	NULL, 							dalcmd_Forbid},
 	{"DestPort", 			dalType_int, 	-1, 	65535, 	NULL,	NULL, 							dal_Add},
@@ -65,7 +65,7 @@
 	}
 	
 	printf("%-6s %-6s %-13s %-41s %-41s %-40s %-12s\n",
-		    "Index", "Order", "Description", "Source IP", "Destination IP", "Service", "Action");
+		    "Index", "Order", "Name", "Source IP", "Destination IP", "Service", "Action");
 
 	len = json_object_array_length(Jarray);
 	for(i=0;i<len;i++){
@@ -166,12 +166,19 @@
 	struct json_object *paramObj = NULL;
  	objIndex_t aclIid = {0};
 	objIndex_t chainIid = {0};
+	zcfg_offset_t oid;
 	const char *charVal = NULL;
 	const char *protocol = NULL;
+	const char *name = NULL;
 	int intVal = 0;
 	char buf[32] = {0};
 
 	IID_INIT(aclIid);
+	oid = RDM_OID_FIREWALL_CHAIN_RULE;
+	name = json_object_get_string(json_object_object_get(Jobj, "Name"));
+	ret = dalcmdParamCheck(NULL, name, oid, "Description", "Name",  replyMsg);
+	if(ret != ZCFG_SUCCESS)
+		return ret;
 	if(getChainRuleIid(&chainIid)){
 		ret = zcfgFeObjJsonBlockedAdd(RDM_OID_FIREWALL_CHAIN_RULE, &chainIid, NULL);
 		if(ret == ZCFG_SUCCESS){
@@ -227,12 +234,16 @@
 				json_object_object_add(aclObj, "SourceMask", json_object_new_string(buf));
 				json_object_object_del(aclObj, "SourceMaskLen");
 			}
+			else
+				json_object_object_add(aclObj, "SourceMask", json_object_new_string("32"));
 			if((paramObj = json_object_object_get(Jobj, "DestMaskLen")) != NULL){
 				intVal = json_object_get_int(paramObj);
 				sprintf(buf, "%d", intVal);				
 				json_object_object_add(aclObj, "DestMask", json_object_new_string(buf));
 				json_object_object_del(aclObj, "DestMaskLen");
 			}
+			else
+				json_object_object_add(aclObj, "DestMask", json_object_new_string("32"));
 			if((paramObj = json_object_object_get(Jobj, "Direction")) != NULL){
 				json_object_object_add(aclObj, "X_ZYXEL_Direction", JSON_OBJ_COPY(paramObj));
 				json_object_object_del(aclObj, "Direction");
@@ -261,6 +272,8 @@
 				json_object_object_add(aclObj, "X_ZYXEL_LimitRateUnit", JSON_OBJ_COPY(paramObj));
 				json_object_object_del(aclObj, "LimitRateUnit");
 			}
+			if(json_object_object_get(Jobj, "Name"))
+				json_object_object_add(aclObj, "Description", json_object_new_string(name));
 			ret = zcfgFeObjJsonBlockedSet(RDM_OID_FIREWALL_CHAIN_RULE, &aclIid, aclObj, NULL);
 		}
 	}
@@ -278,8 +291,10 @@
 	struct json_object *paramObj = NULL;
 	const char *charVal = NULL;
 	const char *protocol = NULL;
+	const char *name = NULL;
 	int intVal = 0;
 	char buf[32] = {0};
+	name = json_object_get_string(json_object_object_get(Jobj, "Name"));
 	
 	if(getChainRuleIid(&aclIid)){
 		aclIid.level = 2;
@@ -365,6 +380,8 @@
 				json_object_object_add(aclObj, "X_ZYXEL_LimitRateUnit", JSON_OBJ_COPY(paramObj));
 				json_object_object_del(aclObj, "LimitRateUnit");
 			}
+			if(json_object_object_get(Jobj, "Name"))
+				json_object_object_add(aclObj, "Description", json_object_new_string(name));
 			ret = zcfgFeObjJsonBlockedSet(RDM_OID_FIREWALL_CHAIN_RULE, &aclIid, aclObj, NULL);
 			zcfgFeJsonObjFree(aclObj);
 		}
@@ -401,11 +418,15 @@
 	int Protocol = 0;
 	const char *SourceIP = NULL;
 	const char *DestIP = NULL;
-	char buf[64] = {0};
+	char buf[64] = {0}, srcport[32] = {0}, dstport[32] = {0};
 	const char *SourceMask = 0;
 	const char *DestMask = 0;
+	char *sourceportchar = NULL;
+	char *destportchar = NULL;
 	int SourcePort = NULL;
+	int SourcePortRange = NULL;
 	int DestPort = NULL;
+	int DestPortRange = NULL;
 	int icmptype = 0;
 	int icmptypecode = 0;
 	const char *tmp = NULL;
@@ -421,14 +442,29 @@
 			case 6:	 //TPC
 			case 17: //UDP
 				SourcePort = json_object_get_int(json_object_object_get(FiremallACLJobj, "SourcePort"));
+				SourcePortRange = json_object_get_int(json_object_object_get(FiremallACLJobj, "SourcePortRangeMax"));
 				DestPort = json_object_get_int(json_object_object_get(FiremallACLJobj, "DestPort"));
+				DestPortRange = json_object_get_int(json_object_object_get(FiremallACLJobj, "DestPortRangeMax"));
+
+				if(SourcePortRange != -1)
+					sprintf(srcport,"%d:%d",SourcePort,SourcePortRange);
+				else if(SourcePort != -1)
+					sprintf(srcport,"%d",SourcePort);
+				else
+					strcpy(srcport,"Any");
+				if(DestPortRange != -1)
+					sprintf(dstport,"%d:%d",DestPort,DestPortRange);
+				else if(DestPort != -1)
+					sprintf(dstport,"%d",DestPort);
+				else
+					strcpy(dstport,"Any");
 				
 				if(Protocol == -2)
-					sprintf(buf, "TCP/UDP:%d-->%d", SourcePort,DestPort);
+					sprintf(buf, "TCP/UDP:%s-->%s",srcport,dstport);
 				else if(Protocol == 6)
-					sprintf(buf, "TCP:%d-->%d", SourcePort,DestPort);
+					sprintf(buf, "TCP:%s-->%s",srcport,dstport);
 				else if(Protocol == 17)
-					sprintf(buf, "UDP:%d-->%d", SourcePort,DestPort);
+					sprintf(buf, "UDP:%s-->%s",srcport,dstport);
 					
 				json_object_object_add(paramJobj, "Protocol", json_object_new_string(buf));
 				break;
@@ -451,7 +487,6 @@
 				break;
 		}
 		
-		
 		json_object_object_add(paramJobj, "Order", JSON_OBJ_COPY(json_object_object_get(FiremallACLJobj, "Order")));
 		json_object_object_add(paramJobj, "Description", JSON_OBJ_COPY(json_object_object_get(FiremallACLJobj, "Description")));
 		
@@ -493,9 +528,9 @@
 		return ZCFG_INTERNAL_ERROR;
 
 	if(!strcmp(method, "PUT")) {
-		ret = zcfgFeDal_Firewall_ACL_Edit(Jobj, NULL);
+		ret = zcfgFeDal_Firewall_ACL_Edit(Jobj, replyMsg);
 	}else if(!strcmp(method, "POST")) {
-		ret = zcfgFeDal_Firewall_ACL_Add(Jobj, NULL);
+		ret = zcfgFeDal_Firewall_ACL_Add(Jobj, replyMsg);
 	}else if(!strcmp(method, "DELETE")) {
 		ret = zcfgFeDal_Firewall_ACL_Delete(Jobj, NULL);
 	}else if(!strcmp(method, "GET")){
Index: libzcfg_fe_dal-1.0/security/firewall/zcfg_fe_dal_firewall_protocol.c
===================================================================
--- libzcfg_fe_dal-1.0.orig/security/firewall/zcfg_fe_dal_firewall_protocol.c	2017-06-01 13:23:03.406150462 +0800
+++ libzcfg_fe_dal-1.0/security/firewall/zcfg_fe_dal_firewall_protocol.c	2017-06-01 13:29:32.068185700 +0800
@@ -62,6 +62,7 @@
 	zcfgRet_t ret = ZCFG_SUCCESS;
 	struct json_object *protocolObj = NULL;
 	objIndex_t protocolIid = {0};
+	zcfg_offset_t oid;
 	const char *name = NULL;
 	const char *description = NULL;
 	int sourceport = -1;
@@ -74,12 +75,11 @@
 	int protocolNum = 0;
 
 	IID_INIT(protocolIid);
-	ret = zcfgFeObjJsonAdd(RDM_OID_NETWORK_SRV_GP, &protocolIid, NULL);
-	if(ret == ZCFG_SUCCESS){
-		ret = zcfgFeObjJsonGet(RDM_OID_NETWORK_SRV_GP, &protocolIid, &protocolObj);
-	}
-
-	if(ret == ZCFG_SUCCESS){
+	name = json_object_get_string(json_object_object_get(Jobj, "Name"));
+	oid = RDM_OID_NETWORK_SRV_GP;
+	ret = dalcmdParamCheck(NULL, name, oid, "Name", "Name",  replyMsg);
+	if(ret != ZCFG_SUCCESS)
+		return ret;
 		if(json_object_object_get(Jobj, "SourcePort"))
 		sourceport = json_object_get_int(json_object_object_get(Jobj, "SourcePort"));
 		else
@@ -116,10 +116,15 @@
 				return ZCFG_INVALID_PARAM_VALUE;
 			}
 		}
+	ret = zcfgFeObjJsonAdd(RDM_OID_NETWORK_SRV_GP, &protocolIid, NULL);
+	if(ret == ZCFG_SUCCESS){
+		ret = zcfgFeObjJsonGet(RDM_OID_NETWORK_SRV_GP, &protocolIid, &protocolObj);
+	}
 		
+	if(ret == ZCFG_SUCCESS){		
 		ICMPType = json_object_get_int(json_object_object_get(Jobj, "ICMPType"));
 		ICMPTypeCode = json_object_get_int(json_object_object_get(Jobj, "ICMPTypeCode"));
-		name = json_object_get_string(json_object_object_get(Jobj, "Name"));
+		
 		description = json_object_get_string(json_object_object_get(Jobj, "Description"));
 
 		json_object_object_add(protocolObj, "SourcePort", json_object_new_int(sourceport));
@@ -157,9 +162,15 @@
 	zcfg_offset_t oid;
 	oid = RDM_OID_NETWORK_SRV_GP;
 	index = json_object_get_int(json_object_object_get(Jobj, "Index"));
+	name = json_object_get_string(json_object_object_get(Jobj, "Name"));
 	ret = convertIndextoIid(index, &protocolIid, oid, NULL, NULL, replyMsg);
 	if(ret != ZCFG_SUCCESS)
 		return ret;
+	if(json_object_object_get(Jobj, "Name")){
+		ret = dalcmdParamCheck(&protocolIid, name, oid, "Name", "Name", replyMsg);
+		if(ret != ZCFG_SUCCESS)
+			return ret;
+	}
 	if(zcfgFeObjJsonGetWithoutUpdate(oid, &protocolIid, &protocolObj) == ZCFG_SUCCESS){
 		sourceport = json_object_get_int(json_object_object_get(Jobj, "SourcePort"));
 		sourcePortRangeMax = json_object_get_int(json_object_object_get(Jobj, "SourcePortEnd"));
@@ -313,9 +324,9 @@
 		return ZCFG_INTERNAL_ERROR;
 
 	if(!strcmp(method, "PUT")) {
-		ret = zcfgFeDal_Firewall_Protocol_Edit(Jobj, NULL);
+		ret = zcfgFeDal_Firewall_Protocol_Edit(Jobj, replyMsg);
 	}else if(!strcmp(method, "POST")) {
-		ret = zcfgFeDal_Firewall_Protocol_Add(Jobj, NULL);
+		ret = zcfgFeDal_Firewall_Protocol_Add(Jobj, replyMsg);
 	}else if(!strcmp(method, "DELETE")) {
 		ret = zcfgFeDal_Firewall_Protocol_Delete(Jobj, NULL);
 	}else if(!strcmp(method, "GET"))
Index: libzcfg_fe_dal-1.0/voip/phone/zcfg_fe_dal_phone_region.c
===================================================================
--- libzcfg_fe_dal-1.0.orig/voip/phone/zcfg_fe_dal_phone_region.c	2017-06-01 13:23:03.454150461 +0800
+++ libzcfg_fe_dal-1.0/voip/phone/zcfg_fe_dal_phone_region.c	2017-06-01 13:24:12.471304500 +0800
@@ -74,7 +74,9 @@
 
 	IID_INIT(Iid);
 	while(zcfgFeObjJsonGetNextWithoutUpdate(RDM_OID_VOICE_PROF, &Iid, &profObj) == ZCFG_SUCCESS){
+		if(json_object_object_get(Jobj, "Service_Mode"))
 		json_object_object_add(profObj, "X_ZYXEL_FlashUsageStyle", json_object_new_string(X_ZYXEL_FlashUsageStyle));
+		if(json_object_object_get(Jobj, "Region"))
 		json_object_object_add(profObj, "Region", json_object_new_string(Region));
 
 		if((setJson = zcfgFeJsonMultiObjAppend(RDM_OID_VOICE_PROF, &Iid, multiJobj, profObj)) == NULL){
@@ -98,6 +100,7 @@
 	if(!json_object_object_get(Jobj, "type")){
 		callservice = json_object_get_string(json_object_object_get(Jobj, "Service_Mode"));
 		region = json_object_get_string(json_object_object_get(Jobj, "Region"));
+		if(json_object_object_get(Jobj, "Service_Mode")){
 		if(!strcmp(callservice, "Europe_Type")){
 			json_object_object_del(Jobj, "Service_Mode");
 			json_object_object_add(Jobj, "Service_Mode", json_object_new_string("EUROP_Flash_Style"));
@@ -105,6 +108,7 @@
 		else if(!strcmp(callservice, "USA_Type")){
 			json_object_object_del(Jobj, "Service_Mode");
 			json_object_object_add(Jobj, "Service_Mode", json_object_new_string("USA_Flash_Style"));
+			}
 		}
 	}
 	initRegionGlobalObjects();
Index: libzcfg_fe_dal-1.0/voip/sip/zcfg_fe_dal_sip_account.c
===================================================================
--- libzcfg_fe_dal-1.0.orig/voip/sip/zcfg_fe_dal_sip_account.c	2017-06-01 13:23:03.530150460 +0800
+++ libzcfg_fe_dal-1.0/voip/sip/zcfg_fe_dal_sip_account.c	2017-06-01 13:25:27.209185700 +0800
@@ -20,20 +20,20 @@
 	{"ServiceProviderName",					dalType_VoipProvider,	0,	0,	NULL,	NULL,		dal_Add},	// add new type for service provider
 	{"EditPath",							dalType_string,	0,	0,	NULL,	NULL,		dalcmd_Forbid},	//	need to deal
 	{"AddPath",								dalType_string,	0,	0,	NULL,	NULL,		dalcmd_Forbid},	//	need to deal
-	{"Enable",								dalType_boolean,0,	0,	NULL,	NULL,		dal_Add},
-	{"SIP_Account_Number",					dalType_string,	0,	0,	NULL,	NULL,		dal_Add},
+	{"Enable",								dalType_boolean,0,	0,	NULL,	NULL,		NULL},
+	{"SIP_Account_Number",					dalType_string,	0,	0,	NULL,	NULL,		NULL},
 	//{"DirectoryNumber",						dalType_string,	0,	0,	NULL},
 	{"PhyReferenceList",					dalType_string,	0,	0,	NULL,	NULL,		dalcmd_Forbid},	// no support 20170524 Rex
-	{"AuthUserName",						dalType_string,	0,	0,	NULL,	NULL,		dal_Add},
-	{"AuthPassword",						dalType_string,	0,	0,	NULL,	NULL,		dal_Add},
-	{"Url_Type",							dalType_string,	0,	0,	NULL,	"SIP|TEL",	dal_Add},
-	{"primaryCodec",						dalType_string,	0,	0,	NULL,	"G711MuLaw|G711ALaw|G729|G726_24|G726_32|G722",		dal_Add},
-	{"secondarydCodec",						dalType_string,	0,	0,	NULL,	"G711MuLaw|G711ALaw|G729|G726_24|G726_32|G722|None",	dal_Add},
-	{"thirdCodec",							dalType_string,	0,	0,	NULL,	"G711MuLaw|G711ALaw|G729|G726_24|G726_32|G722|None",	dal_Add},
-	{"TransmitGain",						dalType_string,	0,	0,	NULL,	"Minimum|Middle|Maximum",	dal_Add},
-	{"ReceiveGain",							dalType_string,	0,	0,	NULL,	"Minimum|Middle|Maximum",	dal_Add},
-	{"EchoCancellationEnable",				dalType_boolean,0,	0,	NULL,	NULL,		dal_Add},
-	{"SilenceSuppression",					dalType_boolean,0,	0,	NULL,	NULL,		dal_Add},
+	{"AuthUserName",						dalType_string,	0,	0,	NULL,	NULL,		NULL},
+	{"AuthPassword",						dalType_string,	0,	0,	NULL,	NULL,		NULL},
+	{"Url_Type",							dalType_string,	0,	0,	NULL,	"SIP|TEL",	NULL},
+	{"primaryCodec",						dalType_string,	0,	0,	NULL,	"G711MuLaw|G711ALaw|G729|G726_24|G726_32|G722",		NULL},
+	{"secondarydCodec",						dalType_string,	0,	0,	NULL,	"G711MuLaw|G711ALaw|G729|G726_24|G726_32|G722|None",	NULL},
+	{"thirdCodec",							dalType_string,	0,	0,	NULL,	"G711MuLaw|G711ALaw|G729|G726_24|G726_32|G722|None",	NULL},
+	{"TransmitGain",						dalType_string,	0,	0,	NULL,	"Minimum|Middle|Maximum",	NULL},
+	{"ReceiveGain",							dalType_string,	0,	0,	NULL,	"Minimum|Middle|Maximum",	NULL},
+	{"EchoCancellationEnable",				dalType_boolean,0,	0,	NULL,	NULL,		NULL},
+	{"SilenceSuppression",					dalType_boolean,0,	0,	NULL,	NULL,		NULL},
 	
 	{"AnonymousCallEnable",					dalType_boolean,0,	0,	NULL,	NULL,		dalcmd_Forbid},
 	{"CallTransferEnable",					dalType_boolean,0,	0,	NULL,	NULL,		dalcmd_Forbid},
@@ -376,22 +376,41 @@
 		}
 	}
 	voicelineEnable = json_object_get_boolean(json_object_object_get(Jobj, "Enable"));
+
+	if(json_object_object_get(Jobj, "Enable")){
 	if(voicelineEnable)
 		enable = "Enabled";
 	else 
 		enable = "Disabled";
+	}
+	else{
+		enable = "Enabled";
+		json_object_object_add(Jobj, "Enable", json_object_new_string(enable));
+		}
+	if(json_object_object_get(Jobj, "SIP_Account_Number"))
 	DirectoryNumber = json_object_get_string(json_object_object_get(Jobj, "SIP_Account_Number"));
+	else
+		DirectoryNumber = "ChangeMe";
+	
 	if(VOIP_SIP_PHONE_MAPPING_BY_STD_PHY_REFERENCE_LIST&flag1){
 		PhyReferenceList = json_object_get_string(json_object_object_get(Jobj, "PhyReferenceList"));
 	}
+	if(json_object_object_get(Jobj, "AuthUserName"))
 	AuthUserName = json_object_get_string(json_object_object_get(Jobj, "AuthUserName"));
+	else
+		AuthUserName = "ChangeMe";
+	if(json_object_object_get(Jobj, "AuthPassword"))
 	AuthPassword = json_object_get_string(json_object_object_get(Jobj, "AuthPassword"));
+	else
+		AuthPassword = "ChangeMe";
 	if(json_object_object_get(Jobj, "Url_Type")){
 		if(!strcmp(json_object_get_string(json_object_object_get(Jobj, "Url_Type")),"SIP"))
 			X_ZYXEL_Url_Type = "URL_Sip";
 		else if(!strcmp(json_object_get_string(json_object_object_get(Jobj, "Url_Type")),"TEL"))
 			X_ZYXEL_Url_Type = "URL_Tel";
 	}
+	else
+		X_ZYXEL_Url_Type = "URL_Sip";
 #ifndef	WIND_ITALY_CUSTOMIZATION
 	if(json_object_object_get(Jobj, "CallTransferEnable"))
 		CallTransferEnable= json_object_get_boolean(json_object_object_get(Jobj, "CallTransferEnable"));
@@ -822,7 +841,10 @@
 	if(SHOW_NOT_USE_OFTEN_VOIP_SETTING&flag1){
 		X_ZYXEL_CCBSEnable = json_object_get_boolean(json_object_object_get(Jobj, "X_ZYXEL_CCBSEnable"));
 	}
+	if(json_object_object_get(Jobj, "EchoCancellationEnable"))
 	EchoCancellationEnable = json_object_get_boolean(json_object_object_get(Jobj, "EchoCancellationEnable"));
+	else
+		EchoCancellationEnable = true;
 	if(json_object_object_get(Jobj, "TransmitGain")){
 		if(!strcmp(json_object_get_string(json_object_object_get(Jobj, "TransmitGain")),"Minimum"))
 			TransmitGain = -3;
@@ -831,6 +853,8 @@
 		else if(!strcmp(json_object_get_string(json_object_object_get(Jobj, "TransmitGain")),"Maximum"))
 			TransmitGain = 6;
 	}
+	else
+		TransmitGain = 0;
 	if(json_object_object_get(Jobj, "ReceiveGain")){
 		if(!strcmp(json_object_get_string(json_object_object_get(Jobj, "ReceiveGain")),"Minimum"))
 			ReceiveGain = -3;
@@ -839,6 +863,8 @@
 		else if(!strcmp(json_object_get_string(json_object_object_get(Jobj, "ReceiveGain")),"Maximum"))
 			ReceiveGain = 6;
 	}
+	else
+		ReceiveGain = 0;
 	
 	if(json_object_object_get(Jobj, "primaryCodec")){
 		if(!strcmp(json_object_get_string(json_object_object_get(Jobj, "primaryCodec")),"G711MuLaw"))
@@ -1330,8 +1356,8 @@
 	initLineGlobalObjects();
 	ret = getLineBasicInfo_Add(Jobj, replyMsg);
 	if(json_object_get_int(json_object_object_get(Jobj, "Index"))){
+		if(replyMsg)
 		strcat(replyMsg, "Add function doesn't need Index.");
-		return ZCFG_INVALID_PARAM_VALUE;
 	}
 	multiJobj = zcfgFeJsonObjNew();
 	if(prepareMultiJobj != NULL){
Index: libzcfg_fe_dal-1.0/zcfg_fe_dal.c
===================================================================
--- libzcfg_fe_dal-1.0.orig/zcfg_fe_dal.c	2017-06-01 13:23:03.598150459 +0800
+++ libzcfg_fe_dal-1.0/zcfg_fe_dal.c	2017-06-01 13:30:36.372185700 +0800
@@ -225,7 +225,7 @@
 {"STATICDHCP",		STATIC_DHCP_param,	zcfgFeDalStaticDHCP,	zcfgFeDalShowStaticDHCP,	"get|add|edit|delete",	"Home_Networking"},//Home_Networking
 {"VLANGRP", 		VLANGRP_param,		zcfgFeDalVlanGroup,		zcfgFeDalShowVlanGroup,		"get|add|edit|delete",	"Vlan Group"},//Vlan_Group
 {"IGMPMLD", 		IGMPMLD_param,		zcfgFeDalIGMPMLD,		zcfgFeDalShowIGMPMLD,		"get|edit",			"IGMP/MLD"},//IGMP_MLD
-{"firewall",		FIREWALL_param, 	zcfgFeDalFirewall,		zcfgFeDalShowFirewall,		"get|add|edit",			"Firewall"}, //Firewall
+{"firewall",		FIREWALL_param, 	zcfgFeDalFirewall,		zcfgFeDalShowFirewall,		"get|edit",			"Firewall"}, //Firewall
 {"dos", 			FIREWALL_DOS_param, zcfgFeDalFirewallDos,	NULL,						"edit",				""},//Firewall
 {"firewall_proto",	FIREWALL_PROTOCOL_param, zcfgFeDalFirewallProtocol,zcfgFeDalShowFirewallProtocol,	"get|add|edit|delete", 	"Firewall"},//Firewall
 {"firewall_acl", 	FIREWALL_ACL_param, zcfgFeDalFirewallACL,	zcfgFeDalShowFirewallACL,	"add|edit|delete|get",	"Firewall"},
