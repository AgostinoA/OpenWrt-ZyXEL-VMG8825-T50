Index: libzcfg_fe_dal-1.0/security/firewall/zcfg_fe_dal_firewall_generic.c
===================================================================
--- libzcfg_fe_dal-1.0.orig/security/firewall/zcfg_fe_dal_firewall_generic.c	2017-05-04 15:48:20.570141597 +0800
+++ libzcfg_fe_dal-1.0/security/firewall/zcfg_fe_dal_firewall_generic.c	2017-05-04 15:51:01.901816100 +0800
@@ -17,24 +17,62 @@
 
 dal_param_t FIREWALL_param[] =
 {
-	{"initFirewall", 	dalType_boolean, 	0, 	0, 	NULL},
-	{"Firewall_Enable", 	dalType_boolean, 	0, 	0, 	NULL},
-	{"IPv4_Enable", 		dalType_boolean, 	0, 	0, 	NULL},
-	{"IPv6_Enable", 		dalType_boolean, 	0, 	0, 	NULL},
-	{"AdvancedLevel", 		dalType_string, 	0, 	0, 	NULL},
-	{"Level", 				dalType_string, 	0, 	0, 	NULL},
-	{"Config", 				dalType_string, 	0, 	0, 	NULL},
-	{"Level_Name", 			dalType_string, 	0, 	0, 	NULL},
-	{"Description", 		dalType_string, 	0, 	0, 	NULL},
-	{"Order", 				dalType_string, 	0, 	0, 	NULL},
-	{"X_ZYXEL_Enable_Firewall", dalType_boolean, 	0, 	0, 	NULL},
-	{"RSA_Telkom", 			dalType_boolean, 	0, 	0, 	NULL},
-	{"Chain_Enable", 		dalType_boolean, 	0, 	0, 	NULL},
-	{"Chain_Name", 			dalType_boolean, 	0, 	0, 	NULL},
-	{"initChain", 			dalType_boolean, 	0, 	0, 	NULL},
+	{"initFirewall", 		dalType_boolean, 	0, 	0, 	NULL,	NULL,	dalcmd_Forbid},
+	{"Firewall_Enable", 	dalType_boolean, 	0, 	0, 	NULL,	NULL,	dalcmd_Forbid},
+	{"IPv4_Enable", 		dalType_boolean, 	0, 	0, 	NULL,	NULL,	NULL},
+	{"IPv6_Enable", 		dalType_boolean, 	0, 	0, 	NULL,	NULL,	NULL},
+	{"AdvancedLevel", 		dalType_string, 	0, 	0, 	NULL,	NULL,	dalcmd_Forbid},
+	{"Level_GUI",			dalType_string, 	0, 	0, 	NULL,	NULL,	dalcmd_Forbid},
+	{"Level",				dalType_string, 	0, 	0, 	NULL,	"Low|Medium|High",	NULL},
+	{"Config", 				dalType_string, 	0, 	0, 	NULL,	NULL,	dalcmd_Forbid},
+	{"Level_Name", 			dalType_string, 	0, 	0, 	NULL,	NULL,	dalcmd_Forbid},
+	{"Description", 		dalType_string, 	0, 	0, 	NULL,	NULL,	dalcmd_Forbid},
+	{"Order", 				dalType_string, 	0, 	0, 	NULL,	NULL,	dalcmd_Forbid},
+	{"X_ZYXEL_Enable_Firewall", dalType_boolean, 	0, 	0, 	NULL,	NULL,	dalcmd_Forbid},
+	{"RSA_Telkom", 			dalType_boolean, 	0, 	0, 	NULL,	NULL,	dalcmd_Forbid},
+	{"Chain_Enable", 		dalType_boolean, 	0, 	0, 	NULL,	NULL,	dalcmd_Forbid},
+	{"Chain_Name", 			dalType_boolean, 	0, 	0, 	NULL,	NULL,	dalcmd_Forbid},
+	{"initChain", 			dalType_boolean, 	0, 	0, 	NULL,	NULL,	dalcmd_Forbid},
 	{NULL, 			0, 					0, 	0, 	NULL}
 };
 
+zcfgRet_t zcfgFeDalShowFirewall(struct json_object *Jarray, char *replyMsg){
+	struct json_object *obj = NULL;
+	const char *filewalllevel = NULL;
+	const char *level = NULL;
+	const char *wantolan = NULL;
+	const char *lantowan = NULL;
+	if(json_object_get_type(Jarray) != json_type_array){
+		printf("wrong Jobj format!\n");
+		return;
+	}
+	obj = json_object_array_get_idx(Jarray, 0);
+	filewalllevel = json_object_get_string(json_object_object_get(obj, "X_ZYXEL_DefaultConfig"));
+	if(!strcmp(filewalllevel, "Off")){
+		level = "Low";
+		wantolan = "YES";
+		lantowan = "YES";
+	}
+	else if(!strcmp(filewalllevel, "Low")){
+		level = "Medium(Recommended)";
+		wantolan = "NO";
+		lantowan = "YES";
+	}
+	else if(!strcmp(filewalllevel, "High")){
+		level = "High";
+		wantolan = "NO";
+		lantowan = "NO";
+	}
+
+	printf("%-20s  %-10s \n", "IPv4 Firewall:", json_object_get_string(json_object_object_get(obj, "IPv4_Enable")));
+	printf("%-20s  %-10s \n", "IPv6 Firewall:", json_object_get_string(json_object_object_get(obj, "IPv6_Enable")));
+	printf("\n%-20s  %-10s \n", "Firewall Level:", level);
+	printf("%-20s  %-10s \n", "Lan to WAN:", lantowan);
+	printf("%-20s  %-10s \n", "Wan to LAN:", wantolan);
+	
+}
+
+
 zcfgRet_t zcfgFeDal_Firewall_Add(struct json_object *Jobj, char *replyMsg){
 	zcfgRet_t ret = ZCFG_SUCCESS;
 	struct json_object *levelObj = NULL;
@@ -52,7 +90,7 @@
 
 	if(ret == ZCFG_SUCCESS){
 		name = json_object_get_string(json_object_object_get(Jobj, "Level_Name"));
-		level = json_object_get_string(json_object_object_get(Jobj, "Level"));
+		level = json_object_get_string(json_object_object_get(Jobj, "Level_GUI"));
 		description = json_object_get_string(json_object_object_get(Jobj, "Description"));
 		order = json_object_get_int(json_object_object_get(Jobj, "Order"));
 		
@@ -73,8 +111,8 @@
 	zcfgRet_t ret = ZCFG_SUCCESS;
 	struct json_object *firewallObj = NULL;
 	objIndex_t firewallIid = {0};
-	bool v4Enable = false;
-	bool v6Enable = false;
+	bool v4Enable = false, origv4Enable = false;
+	bool v6Enable = false, origv6Enable = false;
 	bool firewallEnable = false;
 	bool initFirewall = false;
 	const char *config = NULL;
@@ -94,13 +132,28 @@
 			json_object_object_add(firewallObj, "AdvancedLevel", json_object_new_string(advancedLevel));
 		}else{
 			v4Enable = json_object_get_boolean(json_object_object_get(Jobj, "IPv4_Enable"));
+			origv4Enable = json_object_get_boolean(json_object_object_get(firewallObj, "IPv4_Enable"));
 			v6Enable = json_object_get_boolean(json_object_object_get(Jobj, "IPv6_Enable"));
+			origv6Enable = json_object_get_boolean(json_object_object_get(firewallObj, "IPv6_Enable"));
 			firewallEnable = json_object_get_boolean(json_object_object_get(Jobj, "Firewall_Enable"));
+
+			if(json_object_object_get(Jobj, "IPv4_Enable") && !json_object_object_get(Jobj, "IPv6_Enable"))
+				v6Enable = origv6Enable;
+			else if(!json_object_object_get(Jobj, "IPv4_Enable") && json_object_object_get(Jobj, "IPv6_Enable"))
+				v4Enable = origv4Enable;
+			else if(!json_object_object_get(Jobj, "IPv4_Enable") && !json_object_object_get(Jobj, "IPv6_Enable")){
+				v4Enable = origv4Enable;
+				v6Enable = origv6Enable;
+			}
+			if(!v4Enable && !v6Enable)
+				firewallEnable = false;
+			else 
+				firewallEnable = true;
+
 			json_object_object_add(firewallObj, "IPv4_Enable", json_object_new_boolean(v4Enable));
 			json_object_object_add(firewallObj, "IPv6_Enable", json_object_new_boolean(v6Enable));
 			json_object_object_add(firewallObj, "Enable", json_object_new_boolean(firewallEnable));
 		}
-		
 		ret = zcfgFeObjJsonSet(RDM_OID_FIREWALL, &firewallIid, firewallObj, NULL);
 	}
 
@@ -116,6 +169,7 @@
 	struct json_object *intfObj = NULL;
 	objIndex_t intfIid = {0};
 	const char *level = NULL;
+	const char *clilevel = NULL;
 	const char *name = NULL;
 	const char *Ifname = NULL;
 	bool zyxelFirewallEnable = false;
@@ -138,7 +192,6 @@
 		}
 		zcfgFeJsonObjFree(intfObj);
 	}
-	
 	IID_INIT(levelIid);
 	while(zcfgFeObjJsonGetNext(RDM_OID_FIREWALL_LEVEL, &levelIid, &levelObj) == ZCFG_SUCCESS) {
 		name = json_object_get_string(json_object_object_get(levelObj, "Name"));
@@ -147,9 +200,19 @@
 			break;
 		}
 	}
+	if(json_object_object_get(Jobj, "Level_GUI"))
+		level = json_object_get_string(json_object_object_get(Jobj, "Level_GUI"));
+	else if(json_object_object_get(Jobj, "Level")){
+		clilevel = json_object_get_string(json_object_object_get(Jobj, "Level"));
+		if(!strcmp(clilevel, "Low"))
+			level = "Off";
+		else if(!strcmp(clilevel, "Medium"))
+			level = "Low";
+		else if(!strcmp(clilevel, "High"))
+			level = "High";
+	}
+	if(found && level){
 
-	if(found){
-		level = json_object_get_string(json_object_object_get(Jobj, "Level"));
 		json_object_object_add(levelObj, "X_ZYXEL_DefaultConfig", json_object_new_string(level));
 		ret = zcfgFeObjJsonSet(RDM_OID_FIREWALL_LEVEL, &levelIid, levelObj, NULL);
 	}
@@ -219,6 +282,32 @@
 	return ret;
 }
 
+zcfgRet_t zcfgFeDal_Firewall_Get(struct json_object *Jarray, char *replyMsg){
+	zcfgRet_t ret = ZCFG_SUCCESS;
+	struct json_object *paramJobj = NULL;
+	struct json_object *firewallObj = NULL;
+	struct json_object *levelObj = NULL;
+	objIndex_t firewallIid = {0};
+	objIndex_t levelIid = {0};
+	paramJobj = json_object_new_object();
+	if(zcfgFeObjJsonGetWithoutUpdate(RDM_OID_FIREWALL, &firewallIid, &firewallObj) == ZCFG_SUCCESS){
+		json_object_object_add(paramJobj, "IPv4_Enable", JSON_OBJ_COPY(json_object_object_get(firewallObj, "IPv4_Enable")));
+		json_object_object_add(paramJobj, "IPv6_Enable", JSON_OBJ_COPY(json_object_object_get(firewallObj, "IPv6_Enable")));
+		
+		zcfgFeJsonObjFree(firewallObj);
+	}
+	while(zcfgFeObjJsonGetNextWithoutUpdate(RDM_OID_FIREWALL_LEVEL, &levelIid, &levelObj) == ZCFG_SUCCESS){
+		json_object_object_add(paramJobj, "X_ZYXEL_DefaultConfig", JSON_OBJ_COPY(json_object_object_get(levelObj, "X_ZYXEL_DefaultConfig")));
+
+		zcfgFeJsonObjFree(levelObj);
+	}
+	json_object_array_add(Jarray, paramJobj);
+
+	
+	return ret;
+}
+
+
 zcfgRet_t zcfgFeDalFirewall(const char *method, struct json_object *Jobj, char *replyMsg){
 	zcfgRet_t ret = ZCFG_SUCCESS;
 
@@ -229,7 +318,9 @@
 		ret = zcfgFeDal_Firewall_Edit(Jobj, NULL);
 	}else if(!strcmp(method, "POST")) {
 		ret = zcfgFeDal_Firewall_Add(Jobj, NULL);
-	}else
+	}else if(!strcmp(method, "GET"))
+		ret = zcfgFeDal_Firewall_Get(Jobj, NULL);
+	else
 		printf("Unknown method:%s\n", method);
 
 	return ret;
Index: libzcfg_fe_dal-1.0/zcfg_fe_dal.c
===================================================================
--- libzcfg_fe_dal-1.0.orig/zcfg_fe_dal.c	2017-05-04 15:48:22.158141604 +0800
+++ libzcfg_fe_dal-1.0/zcfg_fe_dal.c	2017-05-04 15:49:50.524816100 +0800
@@ -174,6 +174,7 @@
 extern void zcfgFeDalShowUsbSamba(struct json_object *Jarray);
 extern void zcfgFeDalShowVlanGroup(struct json_object *Jarray);
 extern void zcfgFeDalShowMACFilter(struct json_object *Jarray);
+extern void zcfgFeDalShowFirewall(struct json_object *Jarray);
 
 dal_handler_t dalHandler[] = {
 {"WAN",				WAN_param,			zcfgFeDalWan,			zcfgFeDalShowWan,			"get",				"Broadband"},
@@ -202,7 +203,7 @@
 {"STATICDHCP",		STATIC_DHCP_param,	zcfgFeDalStaticDHCP,	zcfgFeDalShowStaticDHCP,	"get|add|edit|delete",	"Home_Networking"},//Home_Networking
 {"VLANGRP", 		VLANGRP_param,		zcfgFeDalVlanGroup,		zcfgFeDalShowVlanGroup,		"get|add|edit|delete",	"Vlan Group"},//Vlan_Group
 {"IGMPMLD", 		IGMPMLD_param,		zcfgFeDalIGMPMLD,		zcfgFeDalShowIGMPMLD,		"get|edit",			"IGMP/MLD"},//IGMP_MLD
-{"FIREWALL",		FIREWALL_param, 	zcfgFeDalFirewall,		NULL,						"add|edit",			""}, //Firewall
+{"FIREWALL",		FIREWALL_param, 	zcfgFeDalFirewall,		zcfgFeDalShowFirewall,		"get|add|edit",			"Firewall"}, //Firewall
 {"DOS", 			FIREWALL_DOS_param, zcfgFeDalFirewallDos,	NULL,						"edit",				""},//Firewall
 {"PROTOCOL",		FIREWALL_PROTOCOL_param, zcfgFeDalFirewallProtocol,NULL,				"add|edit|delete", 	""},//Firewall
 {"FirewallAcl", 	FIREWALL_ACL_param, zcfgFeDalFirewallACL,	zcfgFeDalShowFirewallACL,	"add|edit|delete|get",	"Firewall"},
