Index: libzcfg_fe_dal-1.0/network/wireless/zcfg_fe_dal_wifi_general.c
===================================================================
--- libzcfg_fe_dal-1.0.orig/network/wireless/zcfg_fe_dal_wifi_general.c	2017-08-29 16:04:48.393559014 +0800
+++ libzcfg_fe_dal-1.0/network/wireless/zcfg_fe_dal_wifi_general.c	2017-08-29 16:04:48.493558225 +0800
@@ -17,6 +17,9 @@
 //#define JSON_OBJ_COPY(json_object) json_tokener_parse(json_object_to_json_string(json_object))
 
 dal_param_t WIFI_GENERAL_param[]={
+#ifdef ZYXEL_ONESSID
+	{"oneSsidEnable",		dalType_boolean,	0,	0,	NULL,		NULL,			0},
+#endif
 	//WiFi SSID
 	{"Index",				dalType_int,		0,	0,	NULL,		NULL,			dal_Edit},
 	{"wlEnable",			dalType_boolean,	0,	0,	NULL,		NULL,			0},
@@ -98,6 +101,11 @@
 struct json_object *guest5GSecTmpObj = NULL;
 #endif
 
+#ifdef ZYXEL_ONESSID
+struct json_object *wifiOneSsidObj = NULL;
+objIndex_t wifiOneSsidIid = {0};
+#endif
+
 objIndex_t wifiRadioIid = {0};
 objIndex_t wifiSsidIid = {0};
 objIndex_t wifiApWpsIid = {0};
@@ -132,6 +140,11 @@
 const char* X_ZYXEL_Auto_WepKey26;
 const char* X_ZYXEL_Auto_WepKey10;
 const char* X_ZYXEL_Auto_PSK;
+
+#ifdef ZYXEL_ONESSID
+bool oneSsidEnable;
+#endif
+
 //WiFi SSID
 bool wlEnable;
 const char* SSID;
@@ -230,6 +243,15 @@
 	objIndex_t radioIid;
 	struct json_object *pramJobj = NULL;
 	char *modeEn;
+#ifdef ZYXEL_ONESSID
+	struct json_object *OneSsidObj = NULL;
+
+	OneSsidObj = json_object_new_object();
+	IID_INIT(iid);
+	if(zcfgFeObjJsonGetWithoutUpdate(RDM_OID_WIFI_ONE_SSID, &iid, &obj) == ZCFG_SUCCESS) {
+		json_object_object_add(OneSsidObj, "oneSsidEnable", JSON_OBJ_COPY(json_object_object_get(obj, "Enable")));
+	}
+#endif
 
 	RadioMultiObj = json_object_new_object();
 	IID_INIT(iid);
@@ -297,6 +319,9 @@
 		zcfgFeJsonObjFree(obj);
 	}
 
+#ifdef ZYXEL_ONESSID
+	zcfgFeJsonObjFree(OneSsidObj);
+#endif
 	zcfgFeJsonObjFree(RadioMultiObj);
 	zcfgFeJsonObjFree(AccessPointMultiObj);
 	
@@ -405,6 +430,11 @@
 		if(wifiSubnetObj) zcfgFeObjJsonSet(RDM_OID_DHCPV4_SRV_SUBNET, &wifiSubnetIid, wifiSubnetObj, NULL);
 	}
 #else
+
+#ifdef ZYXEL_ONESSID
+	if(wifiOneSsidObj) zcfgFeObjJsonSetWithoutApply(RDM_OID_WIFI_ONE_SSID, &wifiOneSsidIid, wifiOneSsidObj, NULL);
+#endif
+
 	if(wifiApObj) zcfgFeObjJsonSetWithoutApply(RDM_OID_WIFI_ACCESS_POINT, &wifiApIid, wifiApObj, NULL);
 	if(wifiSecObj) zcfgFeObjJsonSetWithoutApply(RDM_OID_WIFI_ACCESS_POINT_SEC, &wifiSecIid, wifiSecObj, NULL);
 #ifdef WIFI_ONESSID_SECURITY_SYNC
@@ -419,7 +449,11 @@
 
 zcfgRet_t freeAllWlObjects(){
 	zcfgRet_t ret = ZCFG_SUCCESS;
-	
+
+#ifdef ZYXEL_ONESSID
+	if(wifiOneSsidObj) json_object_put(wifiOneSsidObj);
+#endif
+
 	if(wifiRadioObj) json_object_put(wifiRadioObj); 
 	if(wifiSsidObj) json_object_put(wifiSsidObj);
 	if(wifiApWpsObj) json_object_put(wifiApWpsObj);
@@ -461,7 +495,11 @@
 		guestCountdownTime = json_object_get_int(json_object_object_get(Jobj, "cbtGuestWifiTimes")); // countdown Time
 	}
 #endif
-	
+
+#ifdef ZYXEL_ONESSID
+	oneSsidEnable = json_object_get_boolean(json_object_object_get(Jobj, "oneSsidEnable"));
+#endif
+
 	wlEnable = json_object_get_boolean(json_object_object_get(Jobj, "wlEnable"));
 	SSID = json_object_get_string(json_object_object_get(Jobj, "SSID"));
 	X_ZYXEL_Multicast_Fwd = json_object_get_boolean(json_object_object_get(Jobj, "X_ZYXEL_Multicast_Fwd"));
@@ -530,7 +568,7 @@
 }
 
 void initGlobalWlObjects(){
-	
+
 	wifiRadioObj = NULL;
 	wifiSsidObj = NULL;
 	wifiApWpsObj = NULL;
@@ -552,6 +590,12 @@
 	guest5GSecTmpObj = NULL;
 #endif
 	
+#ifdef ZYXEL_ONESSID
+	wifiOneSsidObj = NULL;
+
+	IID_INIT(wifiOneSsidIid);
+#endif
+
 	IID_INIT(wifiRadioIid);
 	IID_INIT(wifiSsidIid);
 	IID_INIT(wifiApWpsIid);
@@ -768,7 +812,12 @@
 		bSyncSameSSID = false;
 	}
 	
-#endif //WIFI_ONESSID_SECURITY_SYNC	
+#endif //WIFI_ONESSID_SECURITY_SYNC
+
+#ifdef ZYXEL_ONESSID
+	json_object_object_add(wifiOneSsidObj, "Enable", json_object_new_boolean(oneSsidEnable));
+#endif
+
 	json_object_object_add(wifiSsidObj, "Enable", json_object_new_boolean(wlEnable));
 	json_object_object_add(wifiSsidObj, "X_ZYXEL_Multicast_Fwd", json_object_new_boolean(X_ZYXEL_Multicast_Fwd));
 	json_object_object_add(wifiSsidObj, "SSID", json_object_new_string(SSID));
@@ -1675,6 +1724,14 @@
 		return ZCFG_NO_SUCH_PARAMETER;
 	}
 
+#ifdef ZYXEL_ONESSID
+	IID_INIT(wifiOneSsidIid);
+	if(zcfgFeObjJsonGetWithoutUpdate(RDM_OID_WIFI_ONE_SSID, &wifiOneSsidIid, &wifiOneSsidObj) != ZCFG_SUCCESS){
+		printf("%s : Get RDM_OID_WIFI_ONE_SSID object failed.\n",__FUNCTION__);
+		return ZCFG_NO_SUCH_OBJECT;
+	}
+#endif
+
 	// get index
 	ssidIndex = json_object_get_int(json_object_object_get(Jobj,"Index"));
 
@@ -2123,6 +2180,11 @@
 }
 
 void prepareWlObj(struct json_object *Jobj){
+#ifdef ZYXEL_ONESSID
+	if(!json_object_object_get(Jobj, "oneSsidEnable")){
+		oneSsidEnable = json_object_get_boolean(json_object_object_get(wifiOneSsidObj, "Enable"));
+	}
+#endif
 
 	// ssid obj
 	if(!json_object_object_get(Jobj, "wlEnable")){
@@ -2389,192 +2451,6 @@
 	return;
 }
 
-void zcfgDalWlanGetMainSsidIndex(int *main2gFound, int *main5gFound)
-{
-	char *str;
-	struct json_object *obj = NULL;
-	objIndex_t iid;
-
-	IID_INIT(iid);
-	while(zcfgFeObjJsonGetNextWithoutUpdate(RDM_OID_WIFI_SSID, &iid, &obj) == ZCFG_SUCCESS) {
-		if (json_object_get_int(json_object_object_get(obj, "X_ZYXEL_MainSSID")) == true) {
-			str = (char*)json_object_get_string(json_object_object_get(obj, "LowerLayers"));
-			if (strncmp(str, "WiFi.Radio.1", strlen("WiFi.Radio.1")) == 0) {
-				*main2gFound = iid.idx[0];
-			}
-			else if (strncmp(str, "WiFi.Radio.2", strlen("WiFi.Radio.2")) == 0) {
-				*main5gFound = iid.idx[0];
-			}
-		}
-		json_object_put(obj);
-		obj = NULL;
-	}
-	return;
-}
-
-static int needCopy(int main2gIndex, int main5gIndex, objIndex_t *iid)
-{
-#ifdef BUILD_SONIQ
-	struct json_object *soniqObj = NULL;
-	objIndex_t soniqIid = {0};
-	bool soniqEnabled = false;
-
-	IID_INIT(soniqIid);
-
-	if (zcfgFeObjJsonGet(RDM_OID_WIFI_QSTEER, &soniqIid, &soniqObj) == ZCFG_SUCCESS) {
-		soniqEnabled = json_object_get_int(json_object_object_get(soniqObj, "Enable"));
-		zcfgFeJsonObjFree(soniqObj);
-		if (soniqEnabled == false) {
-			return false;
-		}
-	}
-	else {
-		return false;
-	}
-	if (iid->idx[0] == main2gIndex) { //2g main
-		return true;
-	}
-	else if (iid->idx[0] == (main2gIndex + 1)) { //2g guest1
-		return true;
-	}
-#endif
-	return false;
-}
-
-zcfgRet_t zcfgDalWlanCopy2gto5g(struct json_object *Jobj)
-{
-	struct json_object *ssidObj = NULL, *ssidObj5g = NULL, *apObj = NULL, *apObj5g = NULL, *apSecObj = NULL, *apSecObj5g = NULL;
-	objIndex_t ssidObjIid = {0}, ssidObj5gIid = {0}, apObjIid = {0}, apObj5gIid = {0}, apSecObjIid = {0}, apSecObj5gIid = {0};
-	zcfgRet_t ret = ZCFG_SUCCESS;
-	int main2gFound = 0, main5gFound = 0;
-	char *str2g, *str5g;
-
-	zcfgDalWlanGetMainSsidIndex(&main2gFound, &main5gFound);
-
-	/* ssidObj */
-	IID_INIT(ssidObjIid);
-	zcfgDalGetIid(Jobj, "wlSsidIid", &ssidObjIid);
-
-	if (needCopy(main2gFound, main5gFound, &ssidObjIid) == true) {
-		if ((ret = zcfgFeObjJsonGetWithoutUpdate(RDM_OID_WIFI_SSID, &ssidObjIid, &ssidObj)) != ZCFG_SUCCESS) {
-			goto error;
-		}
-		IID_INIT(ssidObj5gIid);
-		ssidObj5gIid.idx[0] = ssidObjIid.idx[0] - main2gFound + main5gFound;
-		ssidObj5gIid.level = 1;
-		if ((ret = zcfgFeObjJsonGetWithoutUpdate(RDM_OID_WIFI_SSID, &ssidObj5gIid, &ssidObj5g)) != ZCFG_SUCCESS) {
-			goto error;
-		}
-
-		replaceParam(ssidObj5g, "SSID", ssidObj, "SSID");
-
-		zcfgFeObjJsonSetWithoutApply(RDM_OID_WIFI_SSID, &ssidObj5gIid, ssidObj5g, NULL);
-		json_object_put(ssidObj);
-		ssidObj = NULL;
-		json_object_put(ssidObj5g);
-		ssidObj5g = NULL;
-	}
-
-	/* apObj */
-	IID_INIT(apObjIid);
-	zcfgDalGetIid(Jobj, "wlApIid", &apObjIid);
-
-	if (needCopy(main2gFound, main5gFound, &apObjIid) == true) {
-		if ((ret = zcfgFeObjJsonGetWithoutUpdate(RDM_OID_WIFI_ACCESS_POINT, &apObjIid, &apObj)) != ZCFG_SUCCESS) {
-			goto error;
-		}
-		IID_INIT(apObj5gIid);
-		apObj5gIid.idx[0] = apObjIid.idx[0] - main2gFound + main5gFound;
-		apObj5gIid.level = 1;
-		if ((ret = zcfgFeObjJsonGetWithoutUpdate(RDM_OID_WIFI_ACCESS_POINT, &apObj5gIid, &apObj5g)) != ZCFG_SUCCESS) {
-			goto error;
-		}
-
-		replaceParam(apObj5g, "SSIDAdvertisementEnabled", apObj, "SSIDAdvertisementEnabled");
-		replaceParam(apObj5g, "IsolationEnable", apObj, "IsolationEnable");
-		replaceParam(apObj5g, "X_ZYXEL_BssIdIsolation", apObj, "X_ZYXEL_BssIdIsolation");
-
-		zcfgFeObjJsonSetWithoutApply(RDM_OID_WIFI_ACCESS_POINT, &apObj5gIid, apObj5g, NULL);
-		json_object_put(apObj);
-		apObj = NULL;
-		json_object_put(apObj5g);
-		apObj5g = NULL;
-	}
-
-	/* apSecObj */
-	IID_INIT(apSecObjIid);
-	zcfgDalGetIid(Jobj, "wlSecIid", &apSecObjIid);
-
-	if (needCopy(main2gFound, main5gFound, &apSecObjIid) == true) {
-		if ((ret = zcfgFeObjJsonGetWithoutUpdate(RDM_OID_WIFI_ACCESS_POINT_SEC, &apSecObjIid, &apSecObj)) != ZCFG_SUCCESS) {
-			goto error;
-		}
-		IID_INIT(apSecObj5gIid);
-		apSecObj5gIid.idx[0] = apSecObjIid.idx[0] - main2gFound + main5gFound;
-		apSecObj5gIid.level = 1;
-		if ((ret = zcfgFeObjJsonGetWithoutUpdate(RDM_OID_WIFI_ACCESS_POINT_SEC, &apSecObj5gIid, &apSecObj5g)) != ZCFG_SUCCESS) {
-			goto error;
-		}
-
-		/*
- 		*  special case: 2.4G security mode does not support on 5G
-		*  		"ModesSupported": "None,WPA-Personal,WPA2-Personal,WPA-WPA2-Personal,"
-		*  		"ModeEnabled": "WEP-128"
- 		*/
-		str2g = (char*)json_object_get_string(json_object_object_get(apSecObj, "ModeEnabled"));
-		str5g = (char*)json_object_get_string(json_object_object_get(apSecObj5g, "ModesSupported"));
-		if (strstr(str5g, str2g) != NULL) {
-			replaceParam(apSecObj5g, "ModeEnabled", apSecObj, "ModeEnabled");
-			replaceParam(apSecObj5g, "WEPKey", apSecObj, "WEPKey");
-			replaceParam(apSecObj5g, "X_ZYXEL_WEPKey2", apSecObj, "X_ZYXEL_WEPKey2");
-			replaceParam(apSecObj5g, "X_ZYXEL_WEPKey3", apSecObj, "X_ZYXEL_WEPKey3");
-			replaceParam(apSecObj5g, "X_ZYXEL_WEPKey4", apSecObj, "X_ZYXEL_WEPKey4");
-			replaceParam(apSecObj5g, "X_ZYXEL_WEP64Key1", apSecObj, "X_ZYXEL_WEP64Key1");
-			replaceParam(apSecObj5g, "X_ZYXEL_WEP64Key2", apSecObj, "X_ZYXEL_WEP64Key2");
-			replaceParam(apSecObj5g, "X_ZYXEL_WEP64Key3", apSecObj, "X_ZYXEL_WEP64Key3");
-			replaceParam(apSecObj5g, "X_ZYXEL_WEP64Key4", apSecObj, "X_ZYXEL_WEP64Key4");
-			replaceParam(apSecObj5g, "X_ZYXEL_DefaultKeyID", apSecObj, "X_ZYXEL_DefaultKeyID");
-			replaceParam(apSecObj5g, "X_ZYXEL_WepModeSelect", apSecObj, "X_ZYXEL_WepModeSelect");
-			replaceParam(apSecObj5g, "PreSharedKey", apSecObj, "PreSharedKey");
-			replaceParam(apSecObj5g, "KeyPassphrase", apSecObj, "KeyPassphrase");
-			replaceParam(apSecObj5g, "RekeyingInterval", apSecObj, "RekeyingInterval");
-			replaceParam(apSecObj5g, "X_ZYXEL_AutoGenPSK", apSecObj, "X_ZYXEL_AutoGenPSK");
-			replaceParam(apSecObj5g, "X_ZYXEL_Auto_PSK", apSecObj, "X_ZYXEL_Auto_PSK");
-			replaceParam(apSecObj5g, "X_ZYXEL_Auto_PSK_Length", apSecObj, "X_ZYXEL_Auto_PSK_Length");
-			replaceParam(apSecObj5g, "X_ZYXEL_AutoGenPSK_algorithm", apSecObj, "X_ZYXEL_AutoGenPSK_algorithm");
-			replaceParam(apSecObj5g, "X_ZYXEL_AutoGenWepKey", apSecObj, "X_ZYXEL_AutoGenWepKey");
-			replaceParam(apSecObj5g, "X_ZYXEL_Auto_WepKey26", apSecObj, "X_ZYXEL_Auto_WepKey26");
-			replaceParam(apSecObj5g, "X_ZYXEL_Auto_WepKey10", apSecObj, "X_ZYXEL_Auto_WepKey10");
-			replaceParam(apSecObj5g, "X_ZYXEL_PassphraseType", apSecObj, "X_ZYXEL_PassphraseType");
-			replaceParam(apSecObj5g, "X_ZYXEL_WEPAuthentication", apSecObj, "X_ZYXEL_WEPAuthentication");
-			replaceParam(apSecObj5g, "X_ZYXEL_WEPEncryption", apSecObj, "X_ZYXEL_WEPEncryption");
-			replaceParam(apSecObj5g, "X_ZYXEL_WPAAuthentication", apSecObj, "X_ZYXEL_WPAAuthentication");
-			replaceParam(apSecObj5g, "X_ZYXEL_11iAuthentication", apSecObj, "X_ZYXEL_11iAuthentication");
-			replaceParam(apSecObj5g, "X_ZYXEL_Encryption", apSecObj, "X_ZYXEL_Encryption");
-			replaceParam(apSecObj5g, "X_ZYXEL_WPAEncryption", apSecObj, "X_ZYXEL_WPAEncryption");
-			replaceParam(apSecObj5g, "X_ZYXEL_11iEncryption", apSecObj, "X_ZYXEL_11iEncryption");
-			replaceParam(apSecObj5g, "X_ZYXEL_Preauth", apSecObj, "X_ZYXEL_Preauth");
-			replaceParam(apSecObj5g, "X_ZYXEL_ReauthInterval", apSecObj, "X_ZYXEL_ReauthInterval");
-
-			zcfgFeObjJsonBlockedSet(RDM_OID_WIFI_ACCESS_POINT_SEC, &apSecObj5gIid, apSecObj5g, NULL);
-		}
-		json_object_put(apSecObj);
-		apSecObj = NULL;
-		json_object_put(apSecObj5g);
-		apSecObj5g = NULL;
-	}
-
-error:
-	json_object_put(ssidObj);
-	json_object_put(ssidObj5g);
-	json_object_put(apObj);
-	json_object_put(apObj5g);
-	json_object_put(apSecObj);
-	json_object_put(apSecObj5g);
-
-	return ret;
-}
-
 zcfgRet_t zcfgFeDalWifiGeneral(const char *method, struct json_object *Jobj, struct json_object *Jarray, char *replyMsg){
 	zcfgRet_t ret = ZCFG_SUCCESS;
 	
@@ -2582,8 +2458,8 @@
 		//ret = zcfgFeDalWifiGeneralAdd(Jobj, NULL);
 	if(!strcmp(method, "PUT")) {
 		ret = zcfgFeDalWifiGeneralEdit(Jobj, NULL);
-#ifdef BUILD_SONIQ
-		zcfgDalWlanCopy2gto5g(Jobj);
+#if defined(ZYXEL_ONESSID)
+		zcfgDalWlanCopy2gto5g();
 #endif
 	}
 	else if(!strcmp(method, "GET"))
Index: libzcfg_fe_dal-1.0/Makefile
===================================================================
--- libzcfg_fe_dal-1.0.orig/Makefile	2017-08-29 16:04:48.317559615 +0800
+++ libzcfg_fe_dal-1.0/Makefile	2017-08-29 16:04:48.493558225 +0800
@@ -120,6 +120,10 @@
     CFLAGS += -DBUILD_SONIQ
 endif
 
+ifeq ($(CONFIG_ZYXEL_ONESSID),y)
+    CFLAGS += -DZYXEL_ONESSID
+endif
+
 #WIND_ITALY_CUSTOMIZATION
 ifeq ($(CONFIG_WIND_ITALY_CUSTOMIZATION),y)
 CFLAGS += -DWIND_ITALY_CUSTOMIZATION
Index: libzcfg_fe_dal-1.0/network/wireless/zcfg_fe_dal_wifi_common.c
===================================================================
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ libzcfg_fe_dal-1.0/network/wireless/zcfg_fe_dal_wifi_common.c	2017-08-29 16:10:22.138907130 +0800
@@ -0,0 +1,214 @@
+#include <json/json.h>
+
+#include "zcfg_common.h"
+#include "zcfg_rdm_oid.h"
+#include "zcfg_rdm_obj.h"
+#include "zcfg_debug.h"
+#include "zcfg_fe_rdm_string.h"
+#include "zcfg_fe_dal_common.h"
+
+
+#ifdef ZYXEL_ONESSID
+void zcfgDalWlanGetMainSsidIndex(int *main2gFound, int *main5gFound)
+{
+ 	char *str;
+ 	struct json_object *obj = NULL;
+ 	objIndex_t iid;
+
+	IID_INIT(iid);
+	while(zcfgFeObjJsonGetNextWithoutUpdate(RDM_OID_WIFI_SSID, &iid, &obj) == ZCFG_SUCCESS) {
+		if (json_object_get_int(json_object_object_get(obj, "X_ZYXEL_MainSSID")) == true) {
+			str = (char*)json_object_get_string(json_object_object_get(obj, "LowerLayers"));
+			if (strncmp(str, "WiFi.Radio.1", strlen("WiFi.Radio.1")) == 0) {
+				*main2gFound = iid.idx[0];
+			}
+			else if (strncmp(str, "WiFi.Radio.2", strlen("WiFi.Radio.2")) == 0) {
+				*main5gFound = iid.idx[0];
+			}
+		}
+		json_object_put(obj);
+		obj = NULL;
+	}
+	return;
+}
+
+static int oneSsidEnabled()
+{
+	struct json_object *oneSsidObj = NULL;
+	objIndex_t oneSsidIid = {0};
+	bool oneSsidEnabled = false;
+
+	IID_INIT(oneSsidIid);
+
+	if (zcfgFeObjJsonGet(RDM_OID_WIFI_ONE_SSID, &oneSsidIid, &oneSsidObj) == ZCFG_SUCCESS) {
+		oneSsidEnabled = json_object_get_int(json_object_object_get(oneSsidObj, "Enable"));
+		zcfgFeJsonObjFree(oneSsidObj);
+		return (oneSsidEnabled) ? (true) : (false);
+	}
+	return false;
+}
+
+#define SSID_COPY_START	1
+#define SSID_COPY_END	2
+zcfgRet_t zcfgDalWlanCopy2gto5g()
+{
+	struct json_object *ssidObj = NULL, *ssidObj5g = NULL, *apObj = NULL, *apObj5g = NULL, *apSecObj = NULL, *apSecObj5g = NULL;
+	objIndex_t ssidObjIid = {0}, ssidObj5gIid = {0}, apObjIid = {0}, apObj5gIid = {0}, apSecObjIid = {0}, apSecObj5gIid = {0};
+	zcfgRet_t ret = ZCFG_SUCCESS;
+	int main2gFound = 0, main5gFound = 0, i;
+	char *str2g, *str5g;
+
+	if (oneSsidEnabled() == false) {
+		return ret;
+	}
+	zcfgDalWlanGetMainSsidIndex(&main2gFound, &main5gFound);
+
+	for (i = SSID_COPY_START ; i <= SSID_COPY_END ; i++) {
+		/* ssidObj */
+		IID_INIT(ssidObjIid);
+		ssidObjIid.level = 1;
+		ssidObjIid.idx[0] = i;
+
+		if ((ret = zcfgFeObjJsonGetWithoutUpdate(RDM_OID_WIFI_SSID, &ssidObjIid, &ssidObj)) != ZCFG_SUCCESS) {
+			goto error;
+		}
+		IID_INIT(ssidObj5gIid);
+		ssidObj5gIid.idx[0] = ssidObjIid.idx[0] - main2gFound + main5gFound;
+		ssidObj5gIid.level = 1;
+		if ((ret = zcfgFeObjJsonGetWithoutUpdate(RDM_OID_WIFI_SSID, &ssidObj5gIid, &ssidObj5g)) != ZCFG_SUCCESS) {
+			goto error;
+		}
+
+		replaceParam(ssidObj5g, "SSID", ssidObj, "SSID");
+
+		zcfgFeObjJsonSetWithoutApply(RDM_OID_WIFI_SSID, &ssidObj5gIid, ssidObj5g, NULL);
+		json_object_put(ssidObj);
+		ssidObj = NULL;
+		json_object_put(ssidObj5g);
+		ssidObj5g = NULL;
+
+
+		/* apObj */
+		IID_INIT(apObjIid);
+		apObjIid.level = 1;
+		apObjIid.idx[0] = i;
+
+		if ((ret = zcfgFeObjJsonGetWithoutUpdate(RDM_OID_WIFI_ACCESS_POINT, &apObjIid, &apObj)) != ZCFG_SUCCESS) {
+			goto error;
+		}
+		IID_INIT(apObj5gIid);
+		apObj5gIid.idx[0] = apObjIid.idx[0] - main2gFound + main5gFound;
+		apObj5gIid.level = 1;
+		if ((ret = zcfgFeObjJsonGetWithoutUpdate(RDM_OID_WIFI_ACCESS_POINT, &apObj5gIid, &apObj5g)) != ZCFG_SUCCESS) {
+			goto error;
+		}
+
+		replaceParam(apObj5g, "SSIDAdvertisementEnabled", apObj, "SSIDAdvertisementEnabled");
+		replaceParam(apObj5g, "IsolationEnable", apObj, "IsolationEnable");
+		replaceParam(apObj5g, "X_ZYXEL_BssIdIsolation", apObj, "X_ZYXEL_BssIdIsolation");
+		zcfgFeObjJsonSetWithoutApply(RDM_OID_WIFI_ACCESS_POINT, &apObj5gIid, apObj5g, NULL);
+		json_object_put(apObj);
+		apObj = NULL;
+		json_object_put(apObj5g);
+		apObj5g = NULL;
+
+
+		/* apSecObj */
+		IID_INIT(apSecObjIid);
+		apSecObjIid.level = 1;
+		apSecObjIid.idx[0] = i;
+
+		if ((ret = zcfgFeObjJsonGetWithoutUpdate(RDM_OID_WIFI_ACCESS_POINT_SEC, &apSecObjIid, &apSecObj)) != ZCFG_SUCCESS) {
+			goto error;
+		}
+		IID_INIT(apSecObj5gIid);
+		apSecObj5gIid.idx[0] = apSecObjIid.idx[0] - main2gFound + main5gFound;
+		apSecObj5gIid.level = 1;
+		if ((ret = zcfgFeObjJsonGetWithoutUpdate(RDM_OID_WIFI_ACCESS_POINT_SEC, &apSecObj5gIid, &apSecObj5g)) != ZCFG_SUCCESS) {
+			goto error;
+		}
+
+		/*
+		*  special case: 2.4G security mode does not support on 5G
+		*       "ModesSupported": "None,WPA-Personal,WPA2-Personal,WPA-WPA2-Personal,"
+		*       "ModeEnabled": "WEP-128"
+		*/
+		str2g = (char*)json_object_get_string(json_object_object_get(apSecObj, "ModeEnabled"));
+		str5g = (char*)json_object_get_string(json_object_object_get(apSecObj5g, "ModesSupported"));
+		if (strstr(str5g, str2g) != NULL) {
+			replaceParam(apSecObj5g, "ModeEnabled", apSecObj, "ModeEnabled");
+			replaceParam(apSecObj5g, "WEPKey", apSecObj, "WEPKey");
+			replaceParam(apSecObj5g, "X_ZYXEL_WEPKey2", apSecObj, "X_ZYXEL_WEPKey2");
+			replaceParam(apSecObj5g, "X_ZYXEL_WEPKey3", apSecObj, "X_ZYXEL_WEPKey3");
+			replaceParam(apSecObj5g, "X_ZYXEL_WEPKey4", apSecObj, "X_ZYXEL_WEPKey4");
+			replaceParam(apSecObj5g, "X_ZYXEL_WEP64Key1", apSecObj, "X_ZYXEL_WEP64Key1");
+			replaceParam(apSecObj5g, "X_ZYXEL_WEP64Key2", apSecObj, "X_ZYXEL_WEP64Key2");
+			replaceParam(apSecObj5g, "X_ZYXEL_WEP64Key3", apSecObj, "X_ZYXEL_WEP64Key3");
+			replaceParam(apSecObj5g, "X_ZYXEL_WEP64Key4", apSecObj, "X_ZYXEL_WEP64Key4");
+			replaceParam(apSecObj5g, "X_ZYXEL_DefaultKeyID", apSecObj, "X_ZYXEL_DefaultKeyID");
+			replaceParam(apSecObj5g, "X_ZYXEL_WepModeSelect", apSecObj, "X_ZYXEL_WepModeSelect");
+			replaceParam(apSecObj5g, "PreSharedKey", apSecObj, "PreSharedKey");
+			replaceParam(apSecObj5g, "KeyPassphrase", apSecObj, "KeyPassphrase");
+			replaceParam(apSecObj5g, "RekeyingInterval", apSecObj, "RekeyingInterval");
+			replaceParam(apSecObj5g, "X_ZYXEL_AutoGenPSK", apSecObj, "X_ZYXEL_AutoGenPSK");
+			replaceParam(apSecObj5g, "X_ZYXEL_Auto_PSK", apSecObj, "X_ZYXEL_Auto_PSK");
+			replaceParam(apSecObj5g, "X_ZYXEL_Auto_PSK_Length", apSecObj, "X_ZYXEL_Auto_PSK_Length");
+			replaceParam(apSecObj5g, "X_ZYXEL_AutoGenPSK_algorithm", apSecObj, "X_ZYXEL_AutoGenPSK_algorithm");
+			replaceParam(apSecObj5g, "X_ZYXEL_AutoGenWepKey", apSecObj, "X_ZYXEL_AutoGenWepKey");
+			replaceParam(apSecObj5g, "X_ZYXEL_Auto_WepKey26", apSecObj, "X_ZYXEL_Auto_WepKey26");
+			replaceParam(apSecObj5g, "X_ZYXEL_Auto_WepKey10", apSecObj, "X_ZYXEL_Auto_WepKey10");
+			replaceParam(apSecObj5g, "X_ZYXEL_PassphraseType", apSecObj, "X_ZYXEL_PassphraseType");
+			replaceParam(apSecObj5g, "X_ZYXEL_WEPAuthentication", apSecObj, "X_ZYXEL_WEPAuthentication");
+			replaceParam(apSecObj5g, "X_ZYXEL_WEPEncryption", apSecObj, "X_ZYXEL_WEPEncryption");
+			replaceParam(apSecObj5g, "X_ZYXEL_WPAAuthentication", apSecObj, "X_ZYXEL_WPAAuthentication");
+			replaceParam(apSecObj5g, "X_ZYXEL_11iAuthentication", apSecObj, "X_ZYXEL_11iAuthentication");
+			replaceParam(apSecObj5g, "X_ZYXEL_Encryption", apSecObj, "X_ZYXEL_Encryption");
+			replaceParam(apSecObj5g, "X_ZYXEL_WPAEncryption", apSecObj, "X_ZYXEL_WPAEncryption");
+			replaceParam(apSecObj5g, "X_ZYXEL_11iEncryption", apSecObj, "X_ZYXEL_11iEncryption");
+			replaceParam(apSecObj5g, "X_ZYXEL_Preauth", apSecObj, "X_ZYXEL_Preauth");
+			replaceParam(apSecObj5g, "X_ZYXEL_ReauthInterval", apSecObj, "X_ZYXEL_ReauthInterval");
+
+			if (i == SSID_COPY_END) {
+				zcfgFeObjJsonBlockedSet(RDM_OID_WIFI_ACCESS_POINT_SEC, &apSecObj5gIid, apSecObj5g, NULL);
+			}
+			else {
+				zcfgFeObjJsonSetWithoutApply(RDM_OID_WIFI_ACCESS_POINT_SEC, &apSecObj5gIid, apSecObj5g, NULL);
+			}
+		}
+		json_object_put(apSecObj);
+		apSecObj = NULL;
+		json_object_put(apSecObj5g);
+		apSecObj5g = NULL;
+	}
+
+error:
+    json_object_put(ssidObj);
+    json_object_put(ssidObj5g);
+    json_object_put(apObj);
+    json_object_put(apObj5g);
+    json_object_put(apSecObj);
+    json_object_put(apSecObj5g);
+
+    return ret;
+}
+
+int enableOneSsid()
+{
+    struct json_object *oneSsidObj = NULL;
+    objIndex_t oneSsidIid = {0};
+    bool oneSsidEnabled = true;
+	zcfgRet_t ret = ZCFG_SUCCESS;
+
+    IID_INIT(oneSsidIid);
+
+    if (zcfgFeObjJsonGet(RDM_OID_WIFI_ONE_SSID, &oneSsidIid, &oneSsidObj) == ZCFG_SUCCESS) {
+		json_object_object_add(oneSsidObj, "Enable", json_object_new_boolean(oneSsidEnabled));
+		zcfgFeObjJsonBlockedSet(RDM_OID_WIFI_ONE_SSID, &oneSsidIid, oneSsidObj, NULL);
+        zcfgFeJsonObjFree(oneSsidObj);
+		ret = ZCFG_INTERNAL_ERROR;
+    }
+	return ret;
+}
+
+#endif
+
Index: libzcfg_fe_dal-1.0/network/wireless/zcfg_fe_dal_wifi_mesh.c
===================================================================
--- libzcfg_fe_dal-1.0.orig/network/wireless/zcfg_fe_dal_wifi_mesh.c	2017-08-29 16:04:47.185568558 +0800
+++ libzcfg_fe_dal-1.0/network/wireless/zcfg_fe_dal_wifi_mesh.c	2017-08-29 16:04:48.493558225 +0800
@@ -47,10 +47,14 @@
 
 	if(!strcmp(method, "PUT")) {
 		ret = zcfgFeDalWifiSoniqEdit(Jobj, NULL);
+#if defined(ZYXEL_ONESSID)
+		enableOneSsid();
+		zcfgDalWlanCopy2gto5g();
+#endif
 	}
 	else
 		printf("Unknown method:%s\n", method);
 	
 	return ret;
 }
-#endif
\ No newline at end of file
+#endif
