Index: libzcfg_fe_tr98-1.0/devInfo.c
===================================================================
--- libzcfg_fe_tr98-1.0.orig/devInfo.c	2014-02-20 14:49:41.000000000 +0800
+++ libzcfg_fe_tr98-1.0/devInfo.c	2014-03-18 18:18:55.494988968 +0800
@@ -19,6 +19,7 @@
 {
 	zcfgRet_t ret;
 	char tr181Obj[128] = {0};
+	char mapObj[128] = {0};
 	uint32_t  devInfoOid = 0;
 	objIndex_t devInfoIid;
 	struct json_object *devInfoObj = NULL;
@@ -27,12 +28,13 @@
 
 	zcfgLog(ZCFG_LOG_DEBUG, "Enter %s\n", __FUNCTION__);
 
-	if(zcfgFe98To181MappingNameGet(tr98FullPathName, tr181Obj) != ZCFG_SUCCESS) {
+	if(zcfgFe98To181MappingNameGet(tr98FullPathName, mapObj) != ZCFG_SUCCESS) {
 		return ZCFG_INVALID_OBJECT;
 	}
 	
 
 	IID_INIT(devInfoIid);
+	snprintf(tr181Obj, sizeof(tr181Obj),"Device.%s", mapObj);
 	devInfoOid = zcfgFeObjNameToObjId(tr181Obj, &devInfoIid);
 
 	if((ret = zcfgFeObjJsonGet(devInfoOid, &devInfoIid, &devInfoObj)) != ZCFG_SUCCESS)
@@ -69,6 +71,7 @@
 {
 	zcfgRet_t ret;
 	char tr181Obj[128] = {0};
+	char mapObj[128] = {0};
 	uint32_t  devInfoOid = 0;
 	objIndex_t devInfoIid;
 	struct json_object *devInfoObj = NULL;
@@ -78,12 +81,13 @@
 	tr98Parameter_t *paramList = NULL;
 
 	zcfgLog(ZCFG_LOG_DEBUG, "Enter %s\n", __FUNCTION__);
-	if(zcfgFe98To181MappingNameGet(tr98FullPathName, tr181Obj) != ZCFG_SUCCESS) {
+	if(zcfgFe98To181MappingNameGet(tr98FullPathName, mapObj) != ZCFG_SUCCESS) {
 		return ZCFG_INVALID_OBJECT;
 	}
 	
 
 	IID_INIT(devInfoIid);
+	snprintf(tr181Obj, sizeof(tr181Obj),"Device.%s", mapObj);
 	devInfoOid = zcfgFeObjNameToObjId(tr181Obj, &devInfoIid);
 	if((ret = zcfgFeObjJsonGet(devInfoOid, &devInfoIid, &devInfoObj)) != ZCFG_SUCCESS)
 		return ret;
@@ -207,6 +211,7 @@
 int devInfoObjAttrGet(char *tr98FullPathName, int handler, char *paramName)
 {
 	char tr181Obj[128] = {0};
+	char mapObj[128] = {0};
 	uint32_t  devInfoOid = 0;
 	objIndex_t devInfoIid;
 	int attrValue = ZCFG_NO_SUCH_PARAMETER;
@@ -214,12 +219,13 @@
 
 	zcfgLog(ZCFG_LOG_DEBUG, "Enter %s\n", __FUNCTION__);
 
-	if(zcfgFe98To181MappingNameGet(tr98FullPathName, tr181Obj) != ZCFG_SUCCESS) {
+	if(zcfgFe98To181MappingNameGet(tr98FullPathName, mapObj) != ZCFG_SUCCESS) {
 		return ZCFG_INVALID_OBJECT;
 	}
 	
 
 	IID_INIT(devInfoIid);
+	snprintf(tr181Obj, sizeof(tr181Obj),"Device.%s", mapObj);
 	devInfoOid = zcfgFeObjNameToObjId(tr181Obj, &devInfoIid);
 		
 
@@ -255,18 +261,20 @@
 {
 	zcfgRet_t ret;
 	char tr181Obj[128] = {0};
+	char mapObj[128] = {0};
 	uint32_t  devInfoOid = 0;
 	objIndex_t devInfoIid;
 	int attrValue = 0;
 	tr98Parameter_t *paramList = NULL;
 
 	zcfgLog(ZCFG_LOG_DEBUG, "Enter %s\n", __FUNCTION__);
-	if(zcfgFe98To181MappingNameGet(tr98FullPathName, tr181Obj) != ZCFG_SUCCESS) {
+	if(zcfgFe98To181MappingNameGet(tr98FullPathName, mapObj) != ZCFG_SUCCESS) {
 		return ZCFG_INVALID_OBJECT;
 	}
 	
 
 	IID_INIT(devInfoIid);
+	snprintf(tr181Obj, sizeof(tr181Obj),"Device.%s", mapObj);
 	devInfoOid = zcfgFeObjNameToObjId(tr181Obj, &devInfoIid);
 
 	paramList = tr98Obj[handler].parameter;
Index: libzcfg_fe_tr98-1.0/devTime.c
===================================================================
--- libzcfg_fe_tr98-1.0.orig/devTime.c	2014-01-03 16:07:24.000000000 +0800
+++ libzcfg_fe_tr98-1.0/devTime.c	2014-03-18 18:19:48.980916955 +0800
@@ -23,6 +23,7 @@
 {
 	zcfgRet_t ret;
 	char timeObjName[128] = {0};
+	char mapObj[128] = {0};
 	uint32_t  timeOid = 0;
 	objIndex_t timeIid;
 	struct json_object *timeObj = NULL;
@@ -31,10 +32,11 @@
 
 	zcfgLog(ZCFG_LOG_DEBUG, "Enter %s\n", __FUNCTION__);
 	
-	if((ret = zcfgFe98To181MappingNameGet(tr98FullPathName, timeObjName)) != ZCFG_SUCCESS) {
+	if((ret = zcfgFe98To181MappingNameGet(tr98FullPathName, mapObj)) != ZCFG_SUCCESS) {
 		return ret;
 	}
 	IID_INIT(timeIid);
+	snprintf(timeObjName, sizeof(timeObjName),"Device.%s", mapObj);
 	timeOid = zcfgFeObjNameToObjId(timeObjName, &timeIid);
 
 	if((ret = zcfgFeObjJsonGet(timeOid, &timeIid, &timeObj)) != ZCFG_SUCCESS)
@@ -91,6 +93,7 @@
 {
 	zcfgRet_t ret;
 	char timeObjName[128] = {0};
+	char mapObj[128] = {0};
 	uint32_t  timeOid = 0;
 	objIndex_t timeIid;
 	tr98Parameter_t *paramList = NULL;
@@ -101,11 +104,12 @@
 
 	zcfgLog(ZCFG_LOG_DEBUG, "Enter %s\n", __FUNCTION__);
 
-	if((ret = zcfgFe98To181MappingNameGet(tr98FullPathName, timeObjName)) != ZCFG_SUCCESS) {
+	if((ret = zcfgFe98To181MappingNameGet(tr98FullPathName, mapObj)) != ZCFG_SUCCESS) {
 		return ret;
 	}
 
 	IID_INIT(timeIid);
+	snprintf(timeObjName, sizeof(timeObjName),"Device.%s", mapObj);
 	timeOid = zcfgFeObjNameToObjId(timeObjName, &timeIid);
 	if((ret = zcfgFeObjJsonGet(timeOid, &timeIid, &timeObj)) != ZCFG_SUCCESS)
 		return ret;
Index: libzcfg_fe_tr98-1.0/firewall.c
===================================================================
--- libzcfg_fe_tr98-1.0.orig/firewall.c	2014-03-18 18:16:06.368660936 +0800
+++ libzcfg_fe_tr98-1.0/firewall.c	2014-03-18 18:21:33.830835672 +0800
@@ -19,6 +19,7 @@
 {
 	zcfgRet_t ret;
 	char tr181Obj[128] = {0};
+	char mapObj[128] = {0};
 	uint32_t  firewallOid = 0;
 	objIndex_t firewallIid;
 	struct json_object *firewallObj = NULL;
@@ -28,9 +29,10 @@
 	zcfgLog(ZCFG_LOG_DEBUG, "Enter %s\n", __FUNCTION__);
 
 	IID_INIT(firewallIid);
-	if(zcfgFe98To181MappingNameGet(tr98FullPathName, tr181Obj) != ZCFG_SUCCESS) {
+	if(zcfgFe98To181MappingNameGet(tr98FullPathName, mapObj) != ZCFG_SUCCESS) {
 		return ZCFG_INVALID_OBJECT;
 	}
+	snprintf(tr181Obj, sizeof(tr181Obj),"Device.%s", mapObj);
 	firewallOid = zcfgFeObjNameToObjId(tr181Obj, &firewallIid);
 
 	if((ret = zcfgFeObjJsonGet(firewallOid, &firewallIid, &firewallObj)) != ZCFG_SUCCESS)
@@ -60,6 +62,7 @@
 {
 	zcfgRet_t ret;
 	char tr181Obj[128] = {0};
+	char mapObj[128] = {0};
 	uint32_t  firewallOid = 0;
 	objIndex_t firewallIid;
 	struct json_object *firewallObj = NULL;
@@ -71,10 +74,11 @@
 	zcfgLog(ZCFG_LOG_DEBUG, "Enter %s\n", __FUNCTION__);
 
 	IID_INIT(firewallIid);
-	if(zcfgFe98To181MappingNameGet(tr98FullPathName, tr181Obj) != ZCFG_SUCCESS) {
+	if(zcfgFe98To181MappingNameGet(tr98FullPathName, mapObj) != ZCFG_SUCCESS) {
 		return ZCFG_INVALID_OBJECT;
 	}
 	
+	snprintf(tr181Obj, sizeof(tr181Obj),"Device.%s", mapObj);
 	firewallOid = zcfgFeObjNameToObjId(tr181Obj, &firewallIid);
 	if((ret = zcfgFeObjJsonGet(firewallOid, &firewallIid, &firewallObj)) != ZCFG_SUCCESS)
 		return ret;
@@ -146,6 +150,7 @@
 int firewallObjAttrGet(char *tr98FullPathName, int handler, char *paramName)
 {
 	char tr181Obj[128] = {0};
+	char mapObj[128] = {0};
 	uint32_t  devInfoOid = 0;
 	objIndex_t devInfoIid;
 	int attrValue = ZCFG_NO_SUCH_PARAMETER;
@@ -153,12 +158,13 @@
 
 	zcfgLog(ZCFG_LOG_DEBUG, "Enter %s\n", __FUNCTION__);
 
-	if(zcfgFe98To181MappingNameGet(tr98FullPathName, tr181Obj) != ZCFG_SUCCESS) {
+	if(zcfgFe98To181MappingNameGet(tr98FullPathName, mapObj) != ZCFG_SUCCESS) {
 		return ZCFG_INVALID_OBJECT;
 	}
 	
 
 	IID_INIT(devInfoIid);
+	snprintf(tr181Obj, sizeof(tr181Obj),"Device.%s", mapObj);
 	devInfoOid = zcfgFeObjNameToObjId(tr181Obj, &devInfoIid);
 		
 
@@ -186,18 +192,20 @@
 {
 	zcfgRet_t ret;
 	char tr181Obj[128] = {0};
+	char mapObj[128] = {0};
 	uint32_t  devInfoOid = 0;
 	objIndex_t devInfoIid;
 	int attrValue = 0;
 	tr98Parameter_t *paramList = NULL;
 
 	zcfgLog(ZCFG_LOG_DEBUG, "Enter %s\n", __FUNCTION__);
-	if(zcfgFe98To181MappingNameGet(tr98FullPathName, tr181Obj) != ZCFG_SUCCESS) {
+	if(zcfgFe98To181MappingNameGet(tr98FullPathName, mapObj) != ZCFG_SUCCESS) {
 		return ZCFG_INVALID_OBJECT;
 	}
 	
 
 	IID_INIT(devInfoIid);
+	snprintf(tr181Obj, sizeof(tr181Obj),"Device.%s", mapObj);
 	devInfoOid = zcfgFeObjNameToObjId(tr181Obj, &devInfoIid);
 
 	paramList = tr98Obj[handler].parameter;
@@ -401,6 +409,7 @@
 int firewallLevelObjAttrGet(char *tr98FullPathName, int handler, char *paramName)
 {
 	char tr181Obj[128] = {0};
+	char mapObj[128] = {0};
 	uint32_t  devInfoOid = 0;
 	objIndex_t devInfoIid;
 	int attrValue = ZCFG_NO_SUCH_PARAMETER;
@@ -408,12 +417,13 @@
 
 	zcfgLog(ZCFG_LOG_DEBUG, "Enter %s\n", __FUNCTION__);
 
-	if(zcfgFe98To181MappingNameGet(tr98FullPathName, tr181Obj) != ZCFG_SUCCESS) {
+	if(zcfgFe98To181MappingNameGet(tr98FullPathName, mapObj) != ZCFG_SUCCESS) {
 		return ZCFG_INVALID_OBJECT;
 	}
 	
 
 	IID_INIT(devInfoIid);
+	snprintf(tr181Obj, sizeof(tr181Obj),"Device.%s", mapObj);
 	devInfoOid = zcfgFeObjNameToObjId(tr181Obj, &devInfoIid);
 		
 
@@ -441,18 +451,20 @@
 {
 	zcfgRet_t ret;
 	char tr181Obj[128] = {0};
+	char mapObj[128] = {0};
 	uint32_t  devInfoOid = 0;
 	objIndex_t devInfoIid;
 	int attrValue = 0;
 	tr98Parameter_t *paramList = NULL;
 
 	zcfgLog(ZCFG_LOG_DEBUG, "Enter %s\n", __FUNCTION__);
-	if(zcfgFe98To181MappingNameGet(tr98FullPathName, tr181Obj) != ZCFG_SUCCESS) {
+	if(zcfgFe98To181MappingNameGet(tr98FullPathName, mapObj) != ZCFG_SUCCESS) {
 		return ZCFG_INVALID_OBJECT;
 	}
 	
 
 	IID_INIT(devInfoIid);
+	snprintf(tr181Obj, sizeof(tr181Obj),"Device.%s", mapObj);
 	devInfoOid = zcfgFeObjNameToObjId(tr181Obj, &devInfoIid);
 
 	paramList = tr98Obj[handler].parameter;
@@ -659,6 +671,7 @@
 int firewallChainObjAttrGet(char *tr98FullPathName, int handler, char *paramName)
 {
 	char tr181Obj[128] = {0};
+	char mapObj[128] = {0};
 	uint32_t  devInfoOid = 0;
 	objIndex_t devInfoIid;
 	int attrValue = ZCFG_NO_SUCH_PARAMETER;
@@ -666,12 +679,13 @@
 
 	zcfgLog(ZCFG_LOG_DEBUG, "Enter %s\n", __FUNCTION__);
 
-	if(zcfgFe98To181MappingNameGet(tr98FullPathName, tr181Obj) != ZCFG_SUCCESS) {
+	if(zcfgFe98To181MappingNameGet(tr98FullPathName, mapObj) != ZCFG_SUCCESS) {
 		return ZCFG_INVALID_OBJECT;
 	}
 	
 
 	IID_INIT(devInfoIid);
+	snprintf(tr181Obj, sizeof(tr181Obj),"Device.%s", mapObj);
 	devInfoOid = zcfgFeObjNameToObjId(tr181Obj, &devInfoIid);
 		
 
@@ -699,18 +713,20 @@
 {
 	zcfgRet_t ret;
 	char tr181Obj[128] = {0};
+	char mapObj[128] = {0};
 	uint32_t  devInfoOid = 0;
 	objIndex_t devInfoIid;
 	int attrValue = 0;
 	tr98Parameter_t *paramList = NULL;
 
 	zcfgLog(ZCFG_LOG_DEBUG, "Enter %s\n", __FUNCTION__);
-	if(zcfgFe98To181MappingNameGet(tr98FullPathName, tr181Obj) != ZCFG_SUCCESS) {
+	if(zcfgFe98To181MappingNameGet(tr98FullPathName, mapObj) != ZCFG_SUCCESS) {
 		return ZCFG_INVALID_OBJECT;
 	}
 	
 
 	IID_INIT(devInfoIid);
+	snprintf(tr181Obj, sizeof(tr181Obj),"Device.%s", mapObj);
 	devInfoOid = zcfgFeObjNameToObjId(tr181Obj, &devInfoIid);
 
 	paramList = tr98Obj[handler].parameter;
@@ -919,6 +935,7 @@
 int firewallRuleObjAttrGet(char *tr98FullPathName, int handler, char *paramName)
 {
 	char tr181Obj[128] = {0};
+	char mapObj[128] = {0};
 	uint32_t  devInfoOid = 0;
 	objIndex_t devInfoIid;
 	int attrValue = ZCFG_NO_SUCH_PARAMETER;
@@ -926,12 +943,13 @@
 
 	zcfgLog(ZCFG_LOG_DEBUG, "Enter %s\n", __FUNCTION__);
 
-	if(zcfgFe98To181MappingNameGet(tr98FullPathName, tr181Obj) != ZCFG_SUCCESS) {
+	if(zcfgFe98To181MappingNameGet(tr98FullPathName, mapObj) != ZCFG_SUCCESS) {
 		return ZCFG_INVALID_OBJECT;
 	}
 	
 
 	IID_INIT(devInfoIid);
+	snprintf(tr181Obj, sizeof(tr181Obj),"Device.%s", mapObj);
 	devInfoOid = zcfgFeObjNameToObjId(tr181Obj, &devInfoIid);
 		
 
@@ -959,18 +977,20 @@
 {
 	zcfgRet_t ret;
 	char tr181Obj[128] = {0};
+	char mapObj[128] = {0};
 	uint32_t  devInfoOid = 0;
 	objIndex_t devInfoIid;
 	int attrValue = 0;
 	tr98Parameter_t *paramList = NULL;
 
 	zcfgLog(ZCFG_LOG_DEBUG, "Enter %s\n", __FUNCTION__);
-	if(zcfgFe98To181MappingNameGet(tr98FullPathName, tr181Obj) != ZCFG_SUCCESS) {
+	if(zcfgFe98To181MappingNameGet(tr98FullPathName, mapObj) != ZCFG_SUCCESS) {
 		return ZCFG_INVALID_OBJECT;
 	}
 	
 
 	IID_INIT(devInfoIid);
+	snprintf(tr181Obj, sizeof(tr181Obj),"Device.%s", mapObj);
 	devInfoOid = zcfgFeObjNameToObjId(tr181Obj, &devInfoIid);
 
 	paramList = tr98Obj[handler].parameter;
Index: libzcfg_fe_tr98-1.0/l2bridge.c
===================================================================
--- libzcfg_fe_tr98-1.0.orig/l2bridge.c	2014-03-18 18:16:06.372660936 +0800
+++ libzcfg_fe_tr98-1.0/l2bridge.c	2014-03-18 18:23:11.049347788 +0800
@@ -128,6 +128,7 @@
 int l2BridingObjAttrGet(char *tr98FullPathName, int handler, char *paramName)
 {
 	char tr181Obj[128] = {0};
+	char mapObj[128] = {0};
 	uint32_t  devInfoOid = 0;
 	objIndex_t devInfoIid;
 	int attrValue = ZCFG_NO_SUCH_PARAMETER;
@@ -135,12 +136,13 @@
 
 	zcfgLog(ZCFG_LOG_DEBUG, "Enter %s\n", __FUNCTION__);
 
-	if(zcfgFe98To181MappingNameGet(tr98FullPathName, tr181Obj) != ZCFG_SUCCESS) {
+	if(zcfgFe98To181MappingNameGet(tr98FullPathName, mapObj) != ZCFG_SUCCESS) {
 		return ZCFG_INVALID_OBJECT;
 	}
 	
 
 	IID_INIT(devInfoIid);
+	snprintf(tr181Obj, sizeof(tr181Obj),"Device.%s", mapObj);
 	devInfoOid = zcfgFeObjNameToObjId(tr181Obj, &devInfoIid);
 		
 
@@ -176,18 +178,20 @@
 {
 	zcfgRet_t ret;
 	char tr181Obj[128] = {0};
+	char mapObj[128] = {0};
 	uint32_t  devInfoOid = 0;
 	objIndex_t devInfoIid;
 	int attrValue = 0;
 	tr98Parameter_t *paramList = NULL;
 
 	zcfgLog(ZCFG_LOG_DEBUG, "Enter %s\n", __FUNCTION__);
-	if(zcfgFe98To181MappingNameGet(tr98FullPathName, tr181Obj) != ZCFG_SUCCESS) {
+	if(zcfgFe98To181MappingNameGet(tr98FullPathName, mapObj) != ZCFG_SUCCESS) {
 		return ZCFG_INVALID_OBJECT;
 	}
 	
 
 	IID_INIT(devInfoIid);
+	snprintf(tr181Obj, sizeof(tr181Obj),"Device.%s", mapObj);
 	devInfoOid = zcfgFeObjNameToObjId(tr181Obj, &devInfoIid);
 
 	paramList = tr98Obj[handler].parameter;
@@ -573,6 +577,7 @@
 int l2BrObjAttrGet(char *tr98FullPathName, int handler, char *paramName)
 {
 	char tr181Obj[128] = {0};
+	char mapObj[128] = {0};
 	uint32_t  devInfoOid = 0;
 	objIndex_t devInfoIid;
 	int attrValue = ZCFG_NO_SUCH_PARAMETER;
@@ -580,12 +585,13 @@
 
 	zcfgLog(ZCFG_LOG_DEBUG, "Enter %s\n", __FUNCTION__);
 
-	if(zcfgFe98To181MappingNameGet(tr98FullPathName, tr181Obj) != ZCFG_SUCCESS) {
+	if(zcfgFe98To181MappingNameGet(tr98FullPathName, mapObj) != ZCFG_SUCCESS) {
 		return ZCFG_INVALID_OBJECT;
 	}
 	
 
 	IID_INIT(devInfoIid);
+	snprintf(tr181Obj, sizeof(tr181Obj),"Device.%s", mapObj);
 	devInfoOid = zcfgFeObjNameToObjId(tr181Obj, &devInfoIid);
 		
 
@@ -625,18 +631,20 @@
 {
 	zcfgRet_t ret;
 	char tr181Obj[128] = {0};
+	char mapObj[128] = {0};
 	uint32_t  devInfoOid = 0;
 	objIndex_t devInfoIid;
 	int attrValue = 0;
 	tr98Parameter_t *paramList = NULL;
 
 	zcfgLog(ZCFG_LOG_DEBUG, "Enter %s\n", __FUNCTION__);
-	if(zcfgFe98To181MappingNameGet(tr98FullPathName, tr181Obj) != ZCFG_SUCCESS) {
+	if(zcfgFe98To181MappingNameGet(tr98FullPathName, mapObj) != ZCFG_SUCCESS) {
 		return ZCFG_INVALID_OBJECT;
 	}
 	
 
 	IID_INIT(devInfoIid);
+	snprintf(tr181Obj, sizeof(tr181Obj),"Device.%s", mapObj);
 	devInfoOid = zcfgFeObjNameToObjId(tr181Obj, &devInfoIid);
 
 	paramList = tr98Obj[handler].parameter;
@@ -1049,6 +1057,7 @@
 int l2BrFilterObjAttrGet(char *tr98FullPathName, int handler, char *paramName)
 {
 	char tr181Obj[128] = {0};
+	char mapObj[128] = {0};
 	uint32_t  devInfoOid = 0;
 	objIndex_t devInfoIid;
 	int attrValue = ZCFG_NO_SUCH_PARAMETER;
@@ -1056,12 +1065,13 @@
 
 	zcfgLog(ZCFG_LOG_DEBUG, "Enter %s\n", __FUNCTION__);
 
-	if(zcfgFe98To181MappingNameGet(tr98FullPathName, tr181Obj) != ZCFG_SUCCESS) {
+	if(zcfgFe98To181MappingNameGet(tr98FullPathName, mapObj) != ZCFG_SUCCESS) {
 		return ZCFG_INVALID_OBJECT;
 	}
 	
 
 	IID_INIT(devInfoIid);
+	snprintf(tr181Obj, sizeof(tr181Obj),"Device.%s", mapObj);
 	devInfoOid = zcfgFeObjNameToObjId(tr181Obj, &devInfoIid);
 		
 
@@ -1099,18 +1109,20 @@
 {
 	zcfgRet_t ret;
 	char tr181Obj[128] = {0};
+	char mapObj[128] = {0};
 	uint32_t  devInfoOid = 0;
 	objIndex_t devInfoIid;
 	int attrValue = 0;
 	tr98Parameter_t *paramList = NULL;
 
 	zcfgLog(ZCFG_LOG_DEBUG, "Enter %s\n", __FUNCTION__);
-	if(zcfgFe98To181MappingNameGet(tr98FullPathName, tr181Obj) != ZCFG_SUCCESS) {
+	if(zcfgFe98To181MappingNameGet(tr98FullPathName, mapObj) != ZCFG_SUCCESS) {
 		return ZCFG_INVALID_OBJECT;
 	}
 	
 
 	IID_INIT(devInfoIid);
+	snprintf(tr181Obj, sizeof(tr181Obj),"Device.%s", mapObj);
 	devInfoOid = zcfgFeObjNameToObjId(tr181Obj, &devInfoIid);
 
 	paramList = tr98Obj[handler].parameter;
@@ -1279,6 +1291,7 @@
 int l2BrAvailableIntfObjAttrGet(char *tr98FullPathName, int handler, char *paramName)
 {
 	char tr181Obj[128] = {0};
+	char mapObj[128] = {0};
 	uint32_t  devInfoOid = 0;
 	objIndex_t devInfoIid;
 	int attrValue = ZCFG_NO_SUCH_PARAMETER;
@@ -1286,12 +1299,13 @@
 
 	zcfgLog(ZCFG_LOG_DEBUG, "Enter %s\n", __FUNCTION__);
 
-	if(zcfgFe98To181MappingNameGet(tr98FullPathName, tr181Obj) != ZCFG_SUCCESS) {
+	if(zcfgFe98To181MappingNameGet(tr98FullPathName, mapObj) != ZCFG_SUCCESS) {
 		return ZCFG_INVALID_OBJECT;
 	}
 	
 
 	IID_INIT(devInfoIid);
+	snprintf(tr181Obj, sizeof(tr181Obj),"Device.%s", mapObj);
 	devInfoOid = zcfgFeObjNameToObjId(tr181Obj, &devInfoIid);
 		
 
@@ -1327,18 +1341,20 @@
 {
 	zcfgRet_t ret;
 	char tr181Obj[128] = {0};
+	char mapObj[128] = {0};
 	uint32_t  devInfoOid = 0;
 	objIndex_t devInfoIid;
 	int attrValue = 0;
 	tr98Parameter_t *paramList = NULL;
 
 	zcfgLog(ZCFG_LOG_DEBUG, "Enter %s\n", __FUNCTION__);
-	if(zcfgFe98To181MappingNameGet(tr98FullPathName, tr181Obj) != ZCFG_SUCCESS) {
+	if(zcfgFe98To181MappingNameGet(tr98FullPathName, mapObj) != ZCFG_SUCCESS) {
 		return ZCFG_INVALID_OBJECT;
 	}
 	
 
 	IID_INIT(devInfoIid);
+	snprintf(tr181Obj, sizeof(tr181Obj),"Device.%s", mapObj);
 	devInfoOid = zcfgFeObjNameToObjId(tr181Obj, &devInfoIid);
 
 	paramList = tr98Obj[handler].parameter;
@@ -1612,6 +1628,7 @@
 int l2BrVlanObjAttrGet(char *tr98FullPathName, int handler, char *paramName)
 {
 	char tr181Obj[128] = {0};
+	char mapObj[128] = {0};
 	uint32_t  devInfoOid = 0;
 	objIndex_t devInfoIid;
 	int attrValue = ZCFG_NO_SUCH_PARAMETER;
@@ -1619,12 +1636,13 @@
 
 	zcfgLog(ZCFG_LOG_DEBUG, "Enter %s\n", __FUNCTION__);
 
-	if(zcfgFe98To181MappingNameGet(tr98FullPathName, tr181Obj) != ZCFG_SUCCESS) {
+	if(zcfgFe98To181MappingNameGet(tr98FullPathName, mapObj) != ZCFG_SUCCESS) {
 		return ZCFG_INVALID_OBJECT;
 	}
 	
 
 	IID_INIT(devInfoIid);
+	snprintf(tr181Obj, sizeof(tr181Obj),"Device.%s", mapObj);
 	devInfoOid = zcfgFeObjNameToObjId(tr181Obj, &devInfoIid);
 		
 
@@ -1658,18 +1676,20 @@
 {
 	zcfgRet_t ret;
 	char tr181Obj[128] = {0};
+	char mapObj[128] = {0};
 	uint32_t  devInfoOid = 0;
 	objIndex_t devInfoIid;
 	int attrValue = 0;
 	tr98Parameter_t *paramList = NULL;
 
 	zcfgLog(ZCFG_LOG_DEBUG, "Enter %s\n", __FUNCTION__);
-	if(zcfgFe98To181MappingNameGet(tr98FullPathName, tr181Obj) != ZCFG_SUCCESS) {
+	if(zcfgFe98To181MappingNameGet(tr98FullPathName, mapObj) != ZCFG_SUCCESS) {
 		return ZCFG_INVALID_OBJECT;
 	}
 	
 
 	IID_INIT(devInfoIid);
+	snprintf(tr181Obj, sizeof(tr181Obj),"Device.%s", mapObj);
 	devInfoOid = zcfgFeObjNameToObjId(tr181Obj, &devInfoIid);
 
 	paramList = tr98Obj[handler].parameter;
Index: libzcfg_fe_tr98-1.0/lanConfSec.c
===================================================================
--- libzcfg_fe_tr98-1.0.orig/lanConfSec.c	2014-03-18 18:16:06.372660936 +0800
+++ libzcfg_fe_tr98-1.0/lanConfSec.c	2014-03-18 18:23:59.052447461 +0800
@@ -144,6 +144,7 @@
 int lanConfSecObjAttrGet(char *tr98FullPathName, int handler, char *paramName)
 {
 	char tr181Obj[128] = {0};
+	char mapObj[128] = {0};
 	uint32_t  devInfoOid = 0;
 	objIndex_t devInfoIid;
 	int attrValue = ZCFG_NO_SUCH_PARAMETER;
@@ -151,12 +152,13 @@
 
 	zcfgLog(ZCFG_LOG_DEBUG, "Enter %s\n", __FUNCTION__);
 
-	if(zcfgFe98To181MappingNameGet(tr98FullPathName, tr181Obj) != ZCFG_SUCCESS) {
+	if(zcfgFe98To181MappingNameGet(tr98FullPathName, mapObj) != ZCFG_SUCCESS) {
 		return ZCFG_INVALID_OBJECT;
 	}
 	
 
 	IID_INIT(devInfoIid);
+	snprintf(tr181Obj, sizeof(tr181Obj),"Device.%s", mapObj);
 	devInfoOid = zcfgFeObjNameToObjId(tr181Obj, &devInfoIid);
 		
 
@@ -185,18 +187,20 @@
 {
 	zcfgRet_t ret;
 	char tr181Obj[128] = {0};
+	char mapObj[128] = {0};
 	uint32_t  devInfoOid = 0;
 	objIndex_t devInfoIid;
 	int attrValue = 0;
 	tr98Parameter_t *paramList = NULL;
 
 	zcfgLog(ZCFG_LOG_DEBUG, "Enter %s\n", __FUNCTION__);
-	if(zcfgFe98To181MappingNameGet(tr98FullPathName, tr181Obj) != ZCFG_SUCCESS) {
+	if(zcfgFe98To181MappingNameGet(tr98FullPathName, mapObj) != ZCFG_SUCCESS) {
 		return ZCFG_INVALID_OBJECT;
 	}
 	
 
 	IID_INIT(devInfoIid);
+	snprintf(tr181Obj, sizeof(tr181Obj),"Device.%s", mapObj);
 	devInfoOid = zcfgFeObjNameToObjId(tr181Obj, &devInfoIid);
 
 	paramList = tr98Obj[handler].parameter;
Index: libzcfg_fe_tr98-1.0/lanDev.c
===================================================================
--- libzcfg_fe_tr98-1.0.orig/lanDev.c	2014-03-18 18:16:06.372660936 +0800
+++ libzcfg_fe_tr98-1.0/lanDev.c	2014-03-18 18:24:41.771774689 +0800
@@ -293,7 +293,7 @@
 	IID_INIT(ipIntfIid);
 	IID_INIT(dhcpServPoolIid);
 	while(zcfgFeObjStructGetNext(RDM_OID_DHCPV4_SRV_POOL, &objIid, (void **)&dhcpServPoolObj) == ZCFG_SUCCESS){
-		sprintf(tr181Obj, "%s", dhcpServPoolObj->Interface);
+		sprintf(tr181Obj, "Device.%s", dhcpServPoolObj->Interface);
 		ipIntfOid = zcfgFeObjNameToObjId(tr181Obj, &ipIntfIid);
 		if((ret = zcfgFeObjStructGet(RDM_OID_IP_IFACE, &ipIntfIid, (void **)&ipIntfObj)) == ZCFG_SUCCESS) {
 			if(strcmp(ipIntfObj->LowerLayers, mappingPathName)==0){
@@ -1195,6 +1195,7 @@
 int lanDhcpStaticAddrObjAttrGet(char *tr98FullPathName, int handler, char *paramName)
 {
 	char tr181Obj[128] = {0};
+	char mapObj[128] = {0};
 	uint32_t  devInfoOid = 0;
 	objIndex_t devInfoIid;
 	int attrValue = ZCFG_NO_SUCH_PARAMETER;
@@ -1202,12 +1203,13 @@
 
 	zcfgLog(ZCFG_LOG_DEBUG, "Enter %s\n", __FUNCTION__);
 
-	if(zcfgFe98To181MappingNameGet(tr98FullPathName, tr181Obj) != ZCFG_SUCCESS) {
+	if(zcfgFe98To181MappingNameGet(tr98FullPathName, mapObj) != ZCFG_SUCCESS) {
 		return ZCFG_INVALID_OBJECT;
 	}
 	
 
 	IID_INIT(devInfoIid);
+	snprintf(tr181Obj, sizeof(tr181Obj),"Device.%s", mapObj);
 	devInfoOid = zcfgFeObjNameToObjId(tr181Obj, &devInfoIid);
 		
 
@@ -1236,18 +1238,20 @@
 {
 	zcfgRet_t ret;
 	char tr181Obj[128] = {0};
+	char mapObj[128] = {0};
 	uint32_t  devInfoOid = 0;
 	objIndex_t devInfoIid;
 	int attrValue = 0;
 	tr98Parameter_t *paramList = NULL;
 
 	zcfgLog(ZCFG_LOG_DEBUG, "Enter %s\n", __FUNCTION__);
-	if(zcfgFe98To181MappingNameGet(tr98FullPathName, tr181Obj) != ZCFG_SUCCESS) {
+	if(zcfgFe98To181MappingNameGet(tr98FullPathName, mapObj) != ZCFG_SUCCESS) {
 		return ZCFG_INVALID_OBJECT;
 	}
 	
 
 	IID_INIT(devInfoIid);
+	snprintf(tr181Obj, sizeof(tr181Obj),"Device.%s", mapObj);
 	devInfoOid = zcfgFeObjNameToObjId(tr181Obj, &devInfoIid);
 
 	paramList = tr98Obj[handler].parameter;
@@ -1516,6 +1520,7 @@
 int lanDhcpOptObjAttrGet(char *tr98FullPathName, int handler, char *paramName)
 {
 	char tr181Obj[128] = {0};
+	char mapObj[128] = {0};
 	uint32_t  devInfoOid = 0;
 	objIndex_t devInfoIid;
 	int attrValue = ZCFG_NO_SUCH_PARAMETER;
@@ -1523,12 +1528,13 @@
 
 	zcfgLog(ZCFG_LOG_DEBUG, "Enter %s\n", __FUNCTION__);
 
-	if(zcfgFe98To181MappingNameGet(tr98FullPathName, tr181Obj) != ZCFG_SUCCESS) {
+	if(zcfgFe98To181MappingNameGet(tr98FullPathName, mapObj) != ZCFG_SUCCESS) {
 		return ZCFG_INVALID_OBJECT;
 	}
 	
 
 	IID_INIT(devInfoIid);
+	snprintf(tr181Obj, sizeof(tr181Obj),"Device.%s", mapObj);
 	devInfoOid = zcfgFeObjNameToObjId(tr181Obj, &devInfoIid);
 		
 
@@ -1557,18 +1563,20 @@
 {
 	zcfgRet_t ret;
 	char tr181Obj[128] = {0};
+	char mapObj[128] = {0};
 	uint32_t  devInfoOid = 0;
 	objIndex_t devInfoIid;
 	int attrValue = 0;
 	tr98Parameter_t *paramList = NULL;
 
 	zcfgLog(ZCFG_LOG_DEBUG, "Enter %s\n", __FUNCTION__);
-	if(zcfgFe98To181MappingNameGet(tr98FullPathName, tr181Obj) != ZCFG_SUCCESS) {
+	if(zcfgFe98To181MappingNameGet(tr98FullPathName, mapObj) != ZCFG_SUCCESS) {
 		return ZCFG_INVALID_OBJECT;
 	}
 	
 
 	IID_INIT(devInfoIid);
+	snprintf(tr181Obj, sizeof(tr181Obj),"Device.%s", mapObj);
 	devInfoOid = zcfgFeObjNameToObjId(tr181Obj, &devInfoIid);
 
 	paramList = tr98Obj[handler].parameter;
@@ -1947,6 +1955,7 @@
 int lanEthIntfConfObjAttrGet(char *tr98FullPathName, int handler, char *paramName)
 {
 	char tr181Obj[128] = {0};
+	char mapObj[128] = {0};
 	uint32_t  devInfoOid = 0;
 	objIndex_t devInfoIid;
 	int attrValue = ZCFG_NO_SUCH_PARAMETER;
@@ -1954,12 +1963,13 @@
 
 	zcfgLog(ZCFG_LOG_DEBUG, "Enter %s\n", __FUNCTION__);
 
-	if(zcfgFe98To181MappingNameGet(tr98FullPathName, tr181Obj) != ZCFG_SUCCESS) {
+	if(zcfgFe98To181MappingNameGet(tr98FullPathName, mapObj) != ZCFG_SUCCESS) {
 		return ZCFG_INVALID_OBJECT;
 	}
 	
 
 	IID_INIT(devInfoIid);
+	snprintf(tr181Obj, sizeof(tr181Obj),"Device.%s", mapObj);
 	devInfoOid = zcfgFeObjNameToObjId(tr181Obj, &devInfoIid);
 		
 
@@ -1988,18 +1998,20 @@
 {
 	zcfgRet_t ret;
 	char tr181Obj[128] = {0};
+	char mapObj[128] = {0};
 	uint32_t  devInfoOid = 0;
 	objIndex_t devInfoIid;
 	int attrValue = 0;
 	tr98Parameter_t *paramList = NULL;
 
 	zcfgLog(ZCFG_LOG_DEBUG, "Enter %s\n", __FUNCTION__);
-	if(zcfgFe98To181MappingNameGet(tr98FullPathName, tr181Obj) != ZCFG_SUCCESS) {
+	if(zcfgFe98To181MappingNameGet(tr98FullPathName, mapObj) != ZCFG_SUCCESS) {
 		return ZCFG_INVALID_OBJECT;
 	}
 	
 
 	IID_INIT(devInfoIid);
+	snprintf(tr181Obj, sizeof(tr181Obj),"Device.%s", mapObj);
 	devInfoOid = zcfgFeObjNameToObjId(tr181Obj, &devInfoIid);
 
 	paramList = tr98Obj[handler].parameter;
Index: libzcfg_fe_tr98-1.0/mgmtSrv.c
===================================================================
--- libzcfg_fe_tr98-1.0.orig/mgmtSrv.c	2014-02-20 14:51:12.000000000 +0800
+++ libzcfg_fe_tr98-1.0/mgmtSrv.c	2014-03-18 18:20:19.068440255 +0800
@@ -19,6 +19,7 @@
 {
 	zcfgRet_t ret;
 	char tr181Obj[128] = {0};
+	char mapObj[128] = {0};
 	uint32_t  mgmtSrvOid = 0;
 	objIndex_t mgmtSrvIid;
 	struct json_object *mgmtSrvObj = NULL;
@@ -26,11 +27,12 @@
 	tr98Parameter_t *paramList = NULL;
 
 	zcfgLog(ZCFG_LOG_DEBUG, "Enter %s\n", __FUNCTION__);	
-	if(zcfgFe98To181MappingNameGet(tr98FullPathName, tr181Obj) != ZCFG_SUCCESS) {
+	if(zcfgFe98To181MappingNameGet(tr98FullPathName, mapObj) != ZCFG_SUCCESS) {
 		return ZCFG_INVALID_OBJECT;
 	}
 	
 	IID_INIT(mgmtSrvIid);
+	snprintf(tr181Obj, sizeof(tr181Obj),"Device.%s", mapObj);
 	mgmtSrvOid = zcfgFeObjNameToObjId(tr181Obj, &mgmtSrvIid);
 
 	if((ret = zcfgFeObjJsonGet(mgmtSrvOid, &mgmtSrvIid, &mgmtSrvObj)) != ZCFG_SUCCESS)
@@ -62,6 +64,7 @@
 
 	zcfgRet_t ret;
 	char tr181Obj[128] = {0};
+	char mapObj[128] = {0};
 	uint32_t  mgmtSrvOid = 0;
 	objIndex_t mgmtSrvIid;
 	tr98Parameter_t *paramList = NULL;
@@ -71,12 +74,13 @@
 	struct json_object *tmpObj = NULL;
 
 	zcfgLog(ZCFG_LOG_DEBUG, "Enter %s\n", __FUNCTION__);
-	if(zcfgFe98To181MappingNameGet(tr98FullPathName, tr181Obj) != ZCFG_SUCCESS) {
+	if(zcfgFe98To181MappingNameGet(tr98FullPathName, mapObj) != ZCFG_SUCCESS) {
 		return ZCFG_INVALID_OBJECT;
 	}
 	
 
 	IID_INIT(mgmtSrvIid);
+	snprintf(tr181Obj, sizeof(tr181Obj),"Device.%s", mapObj);
 	mgmtSrvOid = zcfgFeObjNameToObjId(tr181Obj, &mgmtSrvIid);
 	if((ret = zcfgFeObjJsonGet(mgmtSrvOid, &mgmtSrvIid, &mgmtSrvObj)) != ZCFG_SUCCESS)
 		return ret;
@@ -200,6 +204,7 @@
 int mgmtSrvObjAttrGet(char *tr98FullPathName, int handler, char *paramName)
 {
 	char tr181Obj[128] = {0};
+	char mapObj[128] = {0};
 	uint32_t  mgmtSrvOid = 0;
 	objIndex_t mgmtSrvIid;
 	int attrValue = ZCFG_NO_SUCH_PARAMETER;
@@ -207,12 +212,13 @@
 
 	zcfgLog(ZCFG_LOG_DEBUG, "Enter %s\n", __FUNCTION__);
 
-	if(zcfgFe98To181MappingNameGet(tr98FullPathName, tr181Obj) != ZCFG_SUCCESS) {
+	if(zcfgFe98To181MappingNameGet(tr98FullPathName, mapObj) != ZCFG_SUCCESS) {
 		return ZCFG_INVALID_OBJECT;
 	}
 	
 
 	IID_INIT(mgmtSrvIid);
+	snprintf(tr181Obj, sizeof(tr181Obj),"Device.%s", mapObj);
 	mgmtSrvOid = zcfgFeObjNameToObjId(tr181Obj, &mgmtSrvIid);
 		
 
@@ -247,18 +253,20 @@
 {
 	zcfgRet_t ret;
 	char tr181Obj[128] = {0};
+	char mapObj[128] = {0};
 	uint32_t  mgmtSrvOid = 0;
 	objIndex_t mgmtSrvIid;
 	int attrValue = 0;
 	tr98Parameter_t *paramList = NULL;
 
 	zcfgLog(ZCFG_LOG_DEBUG, "Enter %s\n", __FUNCTION__);
-	if(zcfgFe98To181MappingNameGet(tr98FullPathName, tr181Obj) != ZCFG_SUCCESS) {
+	if(zcfgFe98To181MappingNameGet(tr98FullPathName, mapObj) != ZCFG_SUCCESS) {
 		return ZCFG_INVALID_OBJECT;
 	}
 	
 
 	IID_INIT(mgmtSrvIid);
+	snprintf(tr181Obj, sizeof(tr181Obj),"Device.%s", mapObj);
 	mgmtSrvOid = zcfgFeObjNameToObjId(tr181Obj, &mgmtSrvIid);
 
 
Index: libzcfg_fe_tr98-1.0/qos.c
===================================================================
--- libzcfg_fe_tr98-1.0.orig/qos.c	2014-03-18 18:16:06.372660936 +0800
+++ libzcfg_fe_tr98-1.0/qos.c	2014-03-18 18:28:04.279290320 +0800
@@ -234,6 +234,7 @@
 int qMgmtAttrGet(char *tr98FullPathName, int handler, char *paramName)
 {
 	char tr181Obj[128] = {0};
+	char mapObj[128] = {0};
 	uint32_t  devInfoOid = 0;
 	objIndex_t devInfoIid;
 	int attrValue = ZCFG_NO_SUCH_PARAMETER;
@@ -241,12 +242,13 @@
 
 	zcfgLog(ZCFG_LOG_DEBUG, "Enter %s\n", __FUNCTION__);
 
-	if(zcfgFe98To181MappingNameGet(tr98FullPathName, tr181Obj) != ZCFG_SUCCESS) {
+	if(zcfgFe98To181MappingNameGet(tr98FullPathName, mapObj) != ZCFG_SUCCESS) {
 		return ZCFG_INVALID_OBJECT;
 	}
 	
 
 	IID_INIT(devInfoIid);
+	snprintf(tr181Obj, sizeof(tr181Obj),"Device.%s", mapObj);
 	devInfoOid = zcfgFeObjNameToObjId(tr181Obj, &devInfoIid);
 		
 
@@ -282,18 +284,20 @@
 {
 	zcfgRet_t ret;
 	char tr181Obj[128] = {0};
+	char mapObj[128] = {0};
 	uint32_t  devInfoOid = 0;
 	objIndex_t devInfoIid;
 	int attrValue = 0;
 	tr98Parameter_t *paramList = NULL;
 
 	zcfgLog(ZCFG_LOG_DEBUG, "Enter %s\n", __FUNCTION__);
-	if(zcfgFe98To181MappingNameGet(tr98FullPathName, tr181Obj) != ZCFG_SUCCESS) {
+	if(zcfgFe98To181MappingNameGet(tr98FullPathName, mapObj) != ZCFG_SUCCESS) {
 		return ZCFG_INVALID_OBJECT;
 	}
 	
 
 	IID_INIT(devInfoIid);
+	snprintf(tr181Obj, sizeof(tr181Obj),"Device.%s", mapObj);
 	devInfoOid = zcfgFeObjNameToObjId(tr181Obj, &devInfoIid);
 
 	paramList = tr98Obj[handler].parameter;
@@ -636,6 +640,7 @@
 int qMgmtQueAttrGet(char *tr98FullPathName, int handler, char *paramName)
 {
 	char tr181Obj[128] = {0};
+	char mapObj[128] = {0};
 	uint32_t  devInfoOid = 0;
 	objIndex_t devInfoIid;
 	int attrValue = ZCFG_NO_SUCH_PARAMETER;
@@ -643,12 +648,13 @@
 
 	zcfgLog(ZCFG_LOG_DEBUG, "Enter %s\n", __FUNCTION__);
 
-	if(zcfgFe98To181MappingNameGet(tr98FullPathName, tr181Obj) != ZCFG_SUCCESS) {
+	if(zcfgFe98To181MappingNameGet(tr98FullPathName, mapObj) != ZCFG_SUCCESS) {
 		return ZCFG_INVALID_OBJECT;
 	}
 	
 
 	IID_INIT(devInfoIid);
+	snprintf(tr181Obj, sizeof(tr181Obj),"Device.%s", mapObj);
 	devInfoOid = zcfgFeObjNameToObjId(tr181Obj, &devInfoIid);
 		
 
@@ -690,18 +696,20 @@
 {
 	zcfgRet_t ret;
 	char tr181Obj[128] = {0};
+	char mapObj[128] = {0};
 	uint32_t  devInfoOid = 0;
 	objIndex_t devInfoIid;
 	int attrValue = 0;
 	tr98Parameter_t *paramList = NULL;
 
 	zcfgLog(ZCFG_LOG_DEBUG, "Enter %s\n", __FUNCTION__);
-	if(zcfgFe98To181MappingNameGet(tr98FullPathName, tr181Obj) != ZCFG_SUCCESS) {
+	if(zcfgFe98To181MappingNameGet(tr98FullPathName, mapObj) != ZCFG_SUCCESS) {
 		return ZCFG_INVALID_OBJECT;
 	}
 	
 
 	IID_INIT(devInfoIid);
+	snprintf(tr181Obj, sizeof(tr181Obj),"Device.%s", mapObj);
 	devInfoOid = zcfgFeObjNameToObjId(tr181Obj, &devInfoIid);
 
 	paramList = tr98Obj[handler].parameter;
@@ -1104,6 +1112,7 @@
 int qMgmtClsAttrGet(char *tr98FullPathName, int handler, char *paramName)
 {
 	char tr181Obj[128] = {0};
+	char mapObj[128] = {0};
 	uint32_t  devInfoOid = 0;
 	objIndex_t devInfoIid;
 	int attrValue = ZCFG_NO_SUCH_PARAMETER;
@@ -1111,12 +1120,13 @@
 
 	zcfgLog(ZCFG_LOG_DEBUG, "Enter %s\n", __FUNCTION__);
 
-	if(zcfgFe98To181MappingNameGet(tr98FullPathName, tr181Obj) != ZCFG_SUCCESS) {
+	if(zcfgFe98To181MappingNameGet(tr98FullPathName, mapObj) != ZCFG_SUCCESS) {
 		return ZCFG_INVALID_OBJECT;
 	}
 	
 
 	IID_INIT(devInfoIid);
+	snprintf(tr181Obj, sizeof(tr181Obj),"Device.%s", mapObj);
 	devInfoOid = zcfgFeObjNameToObjId(tr181Obj, &devInfoIid);
 		
 
@@ -1158,18 +1168,20 @@
 {
 	zcfgRet_t ret;
 	char tr181Obj[128] = {0};
+	char mapObj[128] = {0};
 	uint32_t  devInfoOid = 0;
 	objIndex_t devInfoIid;
 	int attrValue = 0;
 	tr98Parameter_t *paramList = NULL;
 
 	zcfgLog(ZCFG_LOG_DEBUG, "Enter %s\n", __FUNCTION__);
-	if(zcfgFe98To181MappingNameGet(tr98FullPathName, tr181Obj) != ZCFG_SUCCESS) {
+	if(zcfgFe98To181MappingNameGet(tr98FullPathName, mapObj) != ZCFG_SUCCESS) {
 		return ZCFG_INVALID_OBJECT;
 	}
 	
 
 	IID_INIT(devInfoIid);
+	snprintf(tr181Obj, sizeof(tr181Obj),"Device.%s", mapObj);
 	devInfoOid = zcfgFeObjNameToObjId(tr181Obj, &devInfoIid);
 
 	paramList = tr98Obj[handler].parameter;
@@ -1421,6 +1433,7 @@
 int qMgmtShaperAttrGet(char *tr98FullPathName, int handler, char *paramName)
 {
 	char tr181Obj[128] = {0};
+	char mapObj[128] = {0};
 	uint32_t  devInfoOid = 0;
 	objIndex_t devInfoIid;
 	int attrValue = ZCFG_NO_SUCH_PARAMETER;
@@ -1428,12 +1441,13 @@
 
 	zcfgLog(ZCFG_LOG_DEBUG, "Enter %s\n", __FUNCTION__);
 
-	if(zcfgFe98To181MappingNameGet(tr98FullPathName, tr181Obj) != ZCFG_SUCCESS) {
+	if(zcfgFe98To181MappingNameGet(tr98FullPathName, mapObj) != ZCFG_SUCCESS) {
 		return ZCFG_INVALID_OBJECT;
 	}
 	
 
 	IID_INIT(devInfoIid);
+	snprintf(tr181Obj, sizeof(tr181Obj),"Device.%s", mapObj);
 	devInfoOid = zcfgFeObjNameToObjId(tr181Obj, &devInfoIid);
 		
 
@@ -1462,18 +1476,20 @@
 {
 	zcfgRet_t ret;
 	char tr181Obj[128] = {0};
+	char mapObj[128] = {0};
 	uint32_t  devInfoOid = 0;
 	objIndex_t devInfoIid;
 	int attrValue = 0;
 	tr98Parameter_t *paramList = NULL;
 
 	zcfgLog(ZCFG_LOG_DEBUG, "Enter %s\n", __FUNCTION__);
-	if(zcfgFe98To181MappingNameGet(tr98FullPathName, tr181Obj) != ZCFG_SUCCESS) {
+	if(zcfgFe98To181MappingNameGet(tr98FullPathName, mapObj) != ZCFG_SUCCESS) {
 		return ZCFG_INVALID_OBJECT;
 	}
 	
 
 	IID_INIT(devInfoIid);
+	snprintf(tr181Obj, sizeof(tr181Obj),"Device.%s", mapObj);
 	devInfoOid = zcfgFeObjNameToObjId(tr181Obj, &devInfoIid);
 
 	paramList = tr98Obj[handler].parameter;
Index: libzcfg_fe_tr98-1.0/schedule.c
===================================================================
--- libzcfg_fe_tr98-1.0.orig/schedule.c	2014-03-18 18:16:06.372660936 +0800
+++ libzcfg_fe_tr98-1.0/schedule.c	2014-03-18 18:28:48.741148103 +0800
@@ -187,6 +187,7 @@
 int scheduleObjAttrGet(char *tr98FullPathName, int handler, char *paramName)
 {
 	char tr181Obj[128] = {0};
+	char mapObj[128] = {0};
 	uint32_t  devInfoOid = 0;
 	objIndex_t devInfoIid;
 	int attrValue = ZCFG_NO_SUCH_PARAMETER;
@@ -194,12 +195,13 @@
 
 	zcfgLog(ZCFG_LOG_DEBUG, "Enter %s\n", __FUNCTION__);
 
-	if(zcfgFe98To181MappingNameGet(tr98FullPathName, tr181Obj) != ZCFG_SUCCESS) {
+	if(zcfgFe98To181MappingNameGet(tr98FullPathName, mapObj) != ZCFG_SUCCESS) {
 		return ZCFG_INVALID_OBJECT;
 	}
 	
 
 	IID_INIT(devInfoIid);
+	snprintf(tr181Obj, sizeof(tr181Obj),"Device.%s", mapObj);
 	devInfoOid = zcfgFeObjNameToObjId(tr181Obj, &devInfoIid);
 		
 
@@ -227,18 +229,20 @@
 {
 	zcfgRet_t ret;
 	char tr181Obj[128] = {0};
+	char mapObj[128] = {0};
 	uint32_t  devInfoOid = 0;
 	objIndex_t devInfoIid;
 	int attrValue = 0;
 	tr98Parameter_t *paramList = NULL;
 
 	zcfgLog(ZCFG_LOG_DEBUG, "Enter %s\n", __FUNCTION__);
-	if(zcfgFe98To181MappingNameGet(tr98FullPathName, tr181Obj) != ZCFG_SUCCESS) {
+	if(zcfgFe98To181MappingNameGet(tr98FullPathName, mapObj) != ZCFG_SUCCESS) {
 		return ZCFG_INVALID_OBJECT;
 	}
 	
 
 	IID_INIT(devInfoIid);
+	snprintf(tr181Obj, sizeof(tr181Obj),"Device.%s", mapObj);
 	devInfoOid = zcfgFeObjNameToObjId(tr181Obj, &devInfoIid);
 
 	paramList = tr98Obj[handler].parameter;
Index: libzcfg_fe_tr98-1.0/wanDev.c
===================================================================
--- libzcfg_fe_tr98-1.0.orig/wanDev.c	2014-03-18 18:16:06.376660936 +0800
+++ libzcfg_fe_tr98-1.0/wanDev.c	2014-03-18 18:29:05.972802428 +0800
@@ -3621,6 +3621,7 @@
 int WANPortMappingAttrGet(char *tr98FullPathName, int handler, char *paramName)
 {
 	char tr181Obj[128] = {0};
+	char mapObj[128] = {0};
 	uint32_t  devInfoOid = 0;
 	objIndex_t devInfoIid;
 	int attrValue = ZCFG_NO_SUCH_PARAMETER;
@@ -3628,12 +3629,13 @@
 
 	zcfgLog(ZCFG_LOG_DEBUG, "Enter %s\n", __FUNCTION__);
 
-	if(zcfgFe98To181MappingNameGet(tr98FullPathName, tr181Obj) != ZCFG_SUCCESS) {
+	if(zcfgFe98To181MappingNameGet(tr98FullPathName, mapObj) != ZCFG_SUCCESS) {
 		return ZCFG_INVALID_OBJECT;
 	}
 	
 
 	IID_INIT(devInfoIid);
+	snprintf(tr181Obj, sizeof(tr181Obj),"Device.%s", mapObj);
 	devInfoOid = zcfgFeObjNameToObjId(tr181Obj, &devInfoIid);
 		
 
@@ -3671,18 +3673,20 @@
 {
 	zcfgRet_t ret;
 	char tr181Obj[128] = {0};
+	char mapObj[128] = {0};
 	uint32_t  devInfoOid = 0;
 	objIndex_t devInfoIid;
 	int attrValue = 0;
 	tr98Parameter_t *paramList = NULL;
 
 	zcfgLog(ZCFG_LOG_DEBUG, "Enter %s\n", __FUNCTION__);
-	if(zcfgFe98To181MappingNameGet(tr98FullPathName, tr181Obj) != ZCFG_SUCCESS) {
+	if(zcfgFe98To181MappingNameGet(tr98FullPathName, mapObj) != ZCFG_SUCCESS) {
 		return ZCFG_INVALID_OBJECT;
 	}
 	
 
 	IID_INIT(devInfoIid);
+	snprintf(tr181Obj, sizeof(tr181Obj),"Device.%s", mapObj);
 	devInfoOid = zcfgFeObjNameToObjId(tr181Obj, &devInfoIid);
 
 	paramList = tr98Obj[handler].parameter;
Index: libzcfg_fe_tr98-1.0/zyExt.c
===================================================================
--- libzcfg_fe_tr98-1.0.orig/zyExt.c	2014-03-18 18:16:06.376660936 +0800
+++ libzcfg_fe_tr98-1.0/zyExt.c	2014-03-18 18:29:37.945130135 +0800
@@ -192,6 +192,7 @@
 int zyExtDnsRtObjAttrGet(char *tr98FullPathName, int handler, char *paramName)
 {
 	char tr181Obj[128] = {0};
+	char mapObj[128] = {0};
 	uint32_t  devInfoOid = 0;
 	objIndex_t devInfoIid;
 	int attrValue = ZCFG_NO_SUCH_PARAMETER;
@@ -199,12 +200,13 @@
 
 	zcfgLog(ZCFG_LOG_DEBUG, "Enter %s\n", __FUNCTION__);
 
-	if(zcfgFe98To181MappingNameGet(tr98FullPathName, tr181Obj) != ZCFG_SUCCESS) {
+	if(zcfgFe98To181MappingNameGet(tr98FullPathName, mapObj) != ZCFG_SUCCESS) {
 		return ZCFG_INVALID_OBJECT;
 	}
 	
 
 	IID_INIT(devInfoIid);
+	snprintf(tr181Obj, sizeof(tr181Obj),"Device.%s", mapObj);
 	devInfoOid = zcfgFeObjNameToObjId(tr181Obj, &devInfoIid);
 		
 
@@ -232,18 +234,20 @@
 {
 	zcfgRet_t ret = ZCFG_SUCCESS;
 	char tr181Obj[128] = {0};
+	char mapObj[128] = {0};
 	uint32_t  devInfoOid = 0;
 	objIndex_t devInfoIid;
 	int attrValue = 0;
 	tr98Parameter_t *paramList = NULL;
 
 	zcfgLog(ZCFG_LOG_DEBUG, "Enter %s\n", __FUNCTION__);
-	if(zcfgFe98To181MappingNameGet(tr98FullPathName, tr181Obj) != ZCFG_SUCCESS) {
+	if(zcfgFe98To181MappingNameGet(tr98FullPathName, mapObj) != ZCFG_SUCCESS) {
 		return ZCFG_INVALID_OBJECT;
 	}
 	
 
 	IID_INIT(devInfoIid);
+	snprintf(tr181Obj, sizeof(tr181Obj),"Device.%s", mapObj);
 	devInfoOid = zcfgFeObjNameToObjId(tr181Obj, &devInfoIid);
 
 	paramList = tr98Obj[handler].parameter;
@@ -410,6 +414,7 @@
 int zyExtDDnsObjAttrGet(char *tr98FullPathName, int handler, char *paramName)
 {
 	char tr181Obj[128] = {0};
+	char mapObj[128] = {0};
 	uint32_t  devInfoOid = 0;
 	objIndex_t devInfoIid;
 	int attrValue = ZCFG_NO_SUCH_PARAMETER;
@@ -417,12 +422,13 @@
 
 	zcfgLog(ZCFG_LOG_DEBUG, "Enter %s\n", __FUNCTION__);
 
-	if(zcfgFe98To181MappingNameGet(tr98FullPathName, tr181Obj) != ZCFG_SUCCESS) {
+	if(zcfgFe98To181MappingNameGet(tr98FullPathName, mapObj) != ZCFG_SUCCESS) {
 		return ZCFG_INVALID_OBJECT;
 	}
 	
 
 	IID_INIT(devInfoIid);
+	snprintf(tr181Obj, sizeof(tr181Obj),"Device.%s", mapObj);
 	devInfoOid = zcfgFeObjNameToObjId(tr181Obj, &devInfoIid);
 		
 
@@ -450,18 +456,20 @@
 {
 	zcfgRet_t ret = ZCFG_SUCCESS;
 	char tr181Obj[128] = {0};
+	char mapObj[128] = {0};
 	uint32_t  devInfoOid = 0;
 	objIndex_t devInfoIid;
 	int attrValue = 0;
 	tr98Parameter_t *paramList = NULL;
 
 	zcfgLog(ZCFG_LOG_DEBUG, "Enter %s\n", __FUNCTION__);
-	if(zcfgFe98To181MappingNameGet(tr98FullPathName, tr181Obj) != ZCFG_SUCCESS) {
+	if(zcfgFe98To181MappingNameGet(tr98FullPathName, mapObj) != ZCFG_SUCCESS) {
 		return ZCFG_INVALID_OBJECT;
 	}
 	
 
 	IID_INIT(devInfoIid);
+	snprintf(tr181Obj, sizeof(tr181Obj),"Device.%s", mapObj);
 	devInfoOid = zcfgFeObjNameToObjId(tr181Obj, &devInfoIid);
 
 	paramList = tr98Obj[handler].parameter;
