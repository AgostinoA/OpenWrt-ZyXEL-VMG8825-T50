Index: libzcfg_fe_tr98-1.0/ipv6Spec.c
===================================================================
--- libzcfg_fe_tr98-1.0.orig/ipv6Spec.c	2017-12-26 20:36:57.288969619 +0800
+++ libzcfg_fe_tr98-1.0/ipv6Spec.c	2018-01-03 17:49:48.798369900 +0800
@@ -255,7 +255,7 @@
 			objIndex_t ifsetIid;
 			struct json_object *ifsetJobj = NULL;
 			IID_INIT(ifsetIid);
-			while((ret = feObjJsonGetNext(RDM_OID_ROUTING_ROUTER_V6_FWD, &ifsetIid, &ifsetJobj, TR98_GET_WITHOUT_UPDATE)) == ZCFG_SUCCESS) 
+			while((ret = feObjJsonSubNext(RDM_OID_ROUTING_ROUTER_V6_FWD, &objIid, &ifsetIid, &ifsetJobj, TR98_GET_WITHOUT_UPDATE)) == ZCFG_SUCCESS) 
 			{
 				if(ifsetIid.idx[0]==objIid.idx[0])
 					FWDNum++;
@@ -1608,7 +1608,7 @@
 			objIndex_t ifsetIid;
 			struct json_object *ifsetJobj = NULL;
 			IID_INIT(ifsetIid);
-			while((ret = feObjJsonGetNext(RDM_OID_RT_ADV_INTF_SET_OPT, &ifsetIid, &ifsetJobj, TR98_GET_WITHOUT_UPDATE)) == ZCFG_SUCCESS) 
+			while((ret = feObjJsonSubNext(RDM_OID_RT_ADV_INTF_SET_OPT, &profIid, &ifsetIid, &ifsetJobj, TR98_GET_WITHOUT_UPDATE)) == ZCFG_SUCCESS) 
 			{
 				if(ifsetIid.idx[0]==profIid.idx[0])
 					optNum++;
@@ -1940,7 +1940,7 @@
 			objIndex_t ifsetIid;
 			struct json_object *ifsetJobj = NULL;
 			IID_INIT(ifsetIid);
-			while((ret = feObjJsonGetNext(RDM_OID_HOSTS_HOST_V6_ADDR, &ifsetIid, &ifsetJobj, TR98_GET_WITHOUT_UPDATE)) == ZCFG_SUCCESS) 
+			while((ret = feObjJsonSubNext(RDM_OID_HOSTS_HOST_V6_ADDR, &objIid, &ifsetIid, &ifsetJobj, TR98_GET_WITHOUT_UPDATE)) == ZCFG_SUCCESS) 
 			{
 				if(ifsetIid.idx[0]==objIid.idx[0])
 					optNum++;
@@ -2530,7 +2530,7 @@
 			objIndex_t ifsetIid;
 			struct json_object *ifsetJobj = NULL;
 			IID_INIT(ifsetIid);
-			while((ret = feObjJsonGetNext(RDM_OID_DHCPV6_CLIENT_SRV, &ifsetIid, &ifsetJobj, TR98_GET_WITHOUT_UPDATE)) == ZCFG_SUCCESS) 
+			while((ret = feObjJsonSubNext(RDM_OID_DHCPV6_CLIENT_SRV, &objIid, &ifsetIid, &ifsetJobj, TR98_GET_WITHOUT_UPDATE)) == ZCFG_SUCCESS) 
 			{
 				if(ifsetIid.idx[0]==objIid.idx[0])
 					optNum++;
@@ -2545,7 +2545,7 @@
 			objIndex_t ifsetIid;
 			struct json_object *ifsetJobj = NULL;
 			IID_INIT(ifsetIid);
-			while((ret = feObjJsonGetNext(RDM_OID_DHCPV6_CLIENT_SENT_OPT, &ifsetIid, &ifsetJobj, TR98_GET_WITHOUT_UPDATE)) == ZCFG_SUCCESS) 
+			while((ret = feObjJsonSubNext(RDM_OID_DHCPV6_CLIENT_SENT_OPT, &objIid, &ifsetIid, &ifsetJobj, TR98_GET_WITHOUT_UPDATE)) == ZCFG_SUCCESS) 
 			{
 				if(ifsetIid.idx[0]==objIid.idx[0])
 					optNum++;
@@ -2560,7 +2560,7 @@
 			objIndex_t ifsetIid;
 			struct json_object *ifsetJobj = NULL;
 			IID_INIT(ifsetIid);
-			while((ret = feObjJsonGetNext(RDM_OID_DHCPV6_CLIENT_RECEIVED_OPT, &ifsetIid, &ifsetJobj, TR98_GET_WITHOUT_UPDATE)) == ZCFG_SUCCESS) 
+			while((ret = feObjJsonSubNext(RDM_OID_DHCPV6_CLIENT_RECEIVED_OPT, &objIid, &ifsetIid, &ifsetJobj, TR98_GET_WITHOUT_UPDATE)) == ZCFG_SUCCESS) 
 			{
 				if(ifsetIid.idx[0]==objIid.idx[0])
 					optNum++;
@@ -2943,7 +2943,7 @@
 
 	paramList = tr98Obj[handler].parameter;
 	while(paramList->name != NULL){
-		/*Write new parameter value from tr98 object to tr181 objects*/	
+		/*Write new parameter value from tr98 object to tr181 objects*/
 		paramValue = json_object_object_get(tr98Jobj, paramList->name);
 		if(paramValue != NULL){
 			tr181ParamValue = json_object_object_get(dhcpObj, paramList->name);
@@ -2995,7 +2995,36 @@
 	*tr98Jobj = json_object_new_object();
 	paramList = tr98Obj[handler].parameter;
 	while(paramList->name != NULL){
-		/*Write parameter value from tr181 objects to tr98 object*/		
+		/*Write parameter value from tr181 objects to tr98 object*/	
+		if(!strcmp(paramList->name, "ClientNumberOfEntries")) {
+			uint32_t  optNum = 0;
+			objIndex_t dhcp6SrvCltIid;
+			struct json_object *dhcp6SrvCltJobj = NULL;
+			IID_INIT(dhcp6SrvCltIid);
+			while((ret = feObjJsonSubNext(RDM_OID_DHCPV6_SRV_POOL_CLIENT, &objIid, &dhcp6SrvCltIid, &dhcp6SrvCltJobj, TR98_GET_WITHOUT_UPDATE)) == ZCFG_SUCCESS) 
+			{
+				optNum++;
+				json_object_put(dhcp6SrvCltJobj);
+			}
+			json_object_object_add(*tr98Jobj, "ClientNumberOfEntries", json_object_new_int(optNum));
+			paramList++;
+			continue;
+		}
+		if(!strcmp(paramList->name, "OptionNumberOfEntries")) {
+			uint32_t  optNum = 0;
+			objIndex_t dhcp6SrvOptIid;
+			struct json_object *dhcp6SrvOptJobj = NULL;
+			IID_INIT(dhcp6SrvOptIid);
+			while((ret = feObjJsonSubNext(RDM_OID_DHCPV6_SRV_POOL_OPT, &objIid, &dhcp6SrvOptIid, &dhcp6SrvOptJobj, TR98_GET_WITHOUT_UPDATE)) == ZCFG_SUCCESS) 
+			{
+				optNum++;
+				json_object_put(dhcp6SrvOptJobj);
+			}
+			json_object_object_add(*tr98Jobj, "OptionNumberOfEntries", json_object_new_int(optNum));
+			paramList++;
+			continue;
+		}
+
 		paramValue = json_object_object_get(dhcpObj, paramList->name);
 		if(paramValue != NULL){
 			json_object_object_add(*tr98Jobj, paramList->name, JSON_OBJ_COPY(paramValue));
@@ -3019,6 +3048,7 @@
 	struct json_object *tmpObj = NULL;
 	struct json_object *paramValue = NULL;
 	struct json_object *tr181ParamValue = NULL;
+	struct json_object *orderValue = NULL;
 	tr98Parameter_t *paramList = NULL;
 
 	printf("%s : Enter\n", __FUNCTION__);
@@ -3042,7 +3072,36 @@
 
 	paramList = tr98Obj[handler].parameter;
 	while(paramList->name != NULL){
-		/*Write new parameter value from tr98 object to tr181 objects*/	
+		/*Write new parameter value from tr98 object to tr181 objects*/
+		if(!strcmp(paramList->name, "Order")){
+			/*check duplicate order*/
+			objIndex_t srvPoolIid;
+			struct json_object *srvPoolJobj = NULL;
+			IID_INIT(srvPoolIid);
+			int order_cur=0, order_rdm=0; 
+			while((ret = feObjJsonGetNext(RDM_OID_DHCPV6_SRV_POOL, &srvPoolIid, &srvPoolJobj, TR98_GET_WITHOUT_UPDATE)) == ZCFG_SUCCESS) 
+			{
+				if(srvPoolIid.idx[0]!=objIid.idx[0])
+				{
+					paramValue = json_object_object_get(tr98Jobj, paramList->name);
+					orderValue = json_object_object_get(srvPoolJobj, "Order");
+					if(orderValue!=NULL && paramValue!=NULL)
+					{
+						order_cur = json_object_get_int(paramValue);
+						order_rdm = json_object_get_int(orderValue);
+						//printf("order_cur=%d, order_rdm=%d\n",order_cur, order_rdm);
+						if((order_cur==order_rdm)&&(order_cur!=0)&&(order_rdm!=0))
+						{
+							printf("%s : duplicate order!\n", __FUNCTION__);
+							json_object_put(srvPoolJobj);
+							return ZCFG_INVALID_PARAM_VALUE;
+						}
+					}
+				}
+				json_object_put(srvPoolJobj);
+			}
+		}
+
 		paramValue = json_object_object_get(tr98Jobj, paramList->name);
 		if(paramValue != NULL){
 			tr181ParamValue = json_object_object_get(dhcpObj, paramList->name);
@@ -3071,6 +3130,36 @@
 	return ZCFG_SUCCESS;
 }
 
+zcfgRet_t zyIpv6Dhcpv6SrvPoolObjAdd(char *tr98FullPathName, int *idx)
+{
+	zcfgRet_t ret;
+	objIndex_t objIid;
+
+	printf("%s : Enter\n", __FUNCTION__);
+
+	//printf("zcfgFeObjStructAdd RDM_OID_DNS_RELAY_FWD\n");
+	IID_INIT(objIid);
+	ret = zcfgFeObjStructAdd(RDM_OID_DHCPV6_SRV_POOL, &objIid, NULL);
+	*idx = objIid.idx[0];
+	//printf("objIid->idx[0]=%d\n",objIid.idx[0]);
+
+	return ret;
+}
+
+zcfgRet_t zyIpv6Dhcpv6SrvPoolObjDel(char *tr98FullPathName)
+{
+	objIndex_t objIid;
+
+	printf("%s : Enter\n", __FUNCTION__);
+
+	IID_INIT(objIid);
+	objIid.level = 1;
+	sscanf(tr98FullPathName, "InternetGatewayDevice.IPv6Specific.DHCPv6.Server.Pool.%hhu", 
+		&objIid.idx[0]);
+
+	return zcfgFeObjStructDel(RDM_OID_DHCPV6_SRV_POOL, &objIid, NULL);
+}
+
 zcfgRet_t zyIpv6Dhcpv6SrvCntObjGet(char *tr98FullPathName, int handler, struct json_object **tr98Jobj, bool updateFlag)
 {
 	zcfgRet_t ret;
Index: libzcfg_fe_tr98-1.0/ipv6Spec.h
===================================================================
--- libzcfg_fe_tr98-1.0.orig/ipv6Spec.h	2017-12-26 20:36:57.248968934 +0800
+++ libzcfg_fe_tr98-1.0/ipv6Spec.h	2018-01-03 17:49:23.494369900 +0800
@@ -98,6 +98,8 @@
 extern zcfgRet_t zyIpv6Dhcpv6SrvObjSet(char *tr98FullPathName, int handler, struct json_object *tr98Jobj, struct json_object *multiJobj, char *paramfault);
 extern zcfgRet_t zyIpv6Dhcpv6SrvPoolObjGet(char *tr98FullPathName, int handler, struct json_object **tr98Jobj, bool updateFlag);
 extern zcfgRet_t zyIpv6Dhcpv6SrvPoolObjSet(char *tr98FullPathName, int handler, struct json_object *tr98Jobj, struct json_object *multiJobj, char *paramfault);
+extern zcfgRet_t zyIpv6Dhcpv6SrvPoolObjAdd(char *tr98FullPathName, int *idx);
+extern zcfgRet_t zyIpv6Dhcpv6SrvPoolObjDel(char *tr98FullPathName);
 extern zcfgRet_t zyIpv6Dhcpv6SrvCntObjGet(char *tr98FullPathName, int handler, struct json_object **tr98Jobj, bool updateFlag);
 extern zcfgRet_t zyIpv6Dhcpv6SrvCntObjSet(char *tr98FullPathName, int handler, struct json_object *tr98Jobj, struct json_object *multiJobj, char *paramfault);
 extern zcfgRet_t zyIpv6Dhcpv6SrvCntV6AddrObjGet(char *tr98FullPathName, int handler, struct json_object **tr98Jobj, bool updateFlag);
Index: libzcfg_fe_tr98-1.0/zcfg_fe_tr98_handle.h
===================================================================
--- libzcfg_fe_tr98-1.0.orig/zcfg_fe_tr98_handle.h	2017-12-26 20:36:57.296969755 +0800
+++ libzcfg_fe_tr98-1.0/zcfg_fe_tr98_handle.h	2018-01-03 17:49:17.279369900 +0800
@@ -560,10 +560,10 @@
 #ifdef ZYXEL_IPV6SPEC
 {TR98_IPV6SPEC,					0,				NULL,						NULL,					 NULL,					 NULL,				NULL,			NULL},
 {TR98_IPV6_PPP,					0,				para_Ipv6Ppp,				zyIpv6PppObjGet, 				NULL, NULL,	NULL,	NULL,	NULL,	NULL},
-{TR98_IPV6_PPP_INTF, 			ATTR_INDEX_CREA,para_Ipv6PppIntf,			zyIpv6PppIntfObjGet, 			zyIpv6PppIntfObjSet, zyIpv6PppIntfObjAdd,	zyIpv6PppIntfObjDel,	NULL,	NULL,	NULL},
+{TR98_IPV6_PPP_INTF, 			0,				para_Ipv6PppIntf,			zyIpv6PppIntfObjGet, 			zyIpv6PppIntfObjSet, NULL,	NULL,	NULL,	NULL,	NULL},
 {TR98_IPV6_PPP_INTF_IPV6CP,		0,				para_Ipv6PppIpv6cp,			zyIpv6PppIpv6cpObjGet,			NULL, NULL,	NULL,	NULL,	NULL,	NULL},
 {TR98_IPV6_IP, 					0,				para_Ipv6Ip,				zyIpv6IpObjGet,  				zyIpv6IpObjSet, NULL,	NULL,	NULL,	NULL,	NULL},
-{TR98_IPV6_IP_INTF, 			ATTR_INDEX_CREA,para_Ipv6IpIntf,			zyIpv6IpIntfObjGet,  			zyIpv6IpIntfObjSet, 			zyIpv6IpIntfObjAdd,	zyIpv6IpIntfObjDel,	NULL},
+{TR98_IPV6_IP_INTF, 			0,				para_Ipv6IpIntf,			zyIpv6IpIntfObjGet,  			zyIpv6IpIntfObjSet, 			NULL,	NULL,	NULL},
 {TR98_IPV6_IP_INTF_IPV6ADDR,	ATTR_INDEX_CREA,para_Ipv6IpIntfIpv6Addr, 	zyIpv6IpIntfIpv6AddrObjGet, 	zyIpv6IpIntfIpv6AddrObjSet,	   	zyIpv6IpIntfIpv6AddrObjAdd, zyIpv6IpIntfIpv6AddrObjDel,			NULL},
 {TR98_IPV6_IP_INTF_IPV6PREFIX,	ATTR_INDEX_CREA,para_Ipv6IpIntfIpv6Prefix,	zyIpv6IpIntfIpv6PrefixObjGet, 	zyIpv6IpIntfIpv6PrefixObjSet,   zyIpv6IpIntfIpv6PrefixObjAdd, zyIpv6IpIntfIpv6PrefixObjDel,	NULL},
 {TR98_IPV6_ROUTING,				0,				NULL,						NULL,					 NULL,					 NULL,				NULL,			NULL},
@@ -590,7 +590,7 @@
 {TR98_IPV6_DHCPV6_CLIENT_SENT,	ATTR_INDEX_CREA,para_Ipv6Dhcpv6CntSentAddr,	zyIpv6Dhcpv6CntSentObjGet, 	zyIpv6Dhcpv6CntSentObjSet, zyIpv6Dhcpv6CntSentObjAdd,	zyIpv6Dhcpv6CntSentObjDel,	NULL,	NULL,	NULL},
 {TR98_IPV6_DHCPV6_CLIENT_RCV,	0,				para_Ipv6Dhcpv6CntRrvAddr,	zyIpv6Dhcpv6CntRrvObjGet,	NULL,	 NULL, NULL,			NULL},
 {TR98_IPV6_DHCPV6_SERVER,		0,				para_Ipv6Dhcpv6Srv,			zyIpv6Dhcpv6SrvObjGet, 		zyIpv6Dhcpv6SrvObjSet, NULL, NULL,	NULL,	NULL,	NULL},
-{TR98_IPV6_DHCPV6_SERVER_POOL,	0,				para_Ipv6Dhcpv6SrvPool,		zyIpv6Dhcpv6SrvPoolObjGet,	zyIpv6Dhcpv6SrvPoolObjSet, NULL, NULL,	NULL,	NULL,	NULL},
+{TR98_IPV6_DHCPV6_SERVER_POOL,	ATTR_INDEX_CREA,para_Ipv6Dhcpv6SrvPool,		zyIpv6Dhcpv6SrvPoolObjGet,	zyIpv6Dhcpv6SrvPoolObjSet, zyIpv6Dhcpv6SrvPoolObjAdd, zyIpv6Dhcpv6SrvPoolObjDel,	NULL,	NULL,	NULL},
 {TR98_IPV6_DHCPV6_SERVER_CNT,	0,				para_Ipv6Dhcpv6SrvCnt, 		zyIpv6Dhcpv6SrvCntObjGet,	zyIpv6Dhcpv6SrvCntObjSet, NULL, NULL,	NULL,	NULL,	NULL},
 {TR98_IPV6_DHCPV6_SERVER_CNT_V6ADDR,	0,		para_Ipv6Dhcpv6SrvCntV6Addr, 	zyIpv6Dhcpv6SrvCntV6AddrObjGet,	NULL, NULL, NULL,	NULL,	NULL,	NULL},
 {TR98_IPV6_DHCPV6_SERVER_CNT_V6PREFIX,	0,		para_Ipv6Dhcpv6SrvCntV6Prefix,	zyIpv6Dhcpv6SrvCntV6PrefixObjGet,	NULL, NULL, NULL,	NULL,	NULL,	NULL},
