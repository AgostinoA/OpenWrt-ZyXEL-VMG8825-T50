Index: libzcfg_fe_tr98-1.0/diag.c
===================================================================
--- libzcfg_fe_tr98-1.0.orig/diag.c	2016-12-06 11:31:28.234984114 +0800
+++ libzcfg_fe_tr98-1.0/diag.c	2016-12-06 13:25:47.114207481 +0800
@@ -129,6 +129,7 @@
 	while(paramList->name != NULL) {
 		/*Write new parameter value from tr98 object to tr181 objects*/		
 		if(!strcmp(paramList->name, "Interface")) {
+			sprintf(paramfault, "%s.%s", tr98FullPathName, paramList->name);
 			paramValue = json_object_object_get(tr98Jobj, paramList->name);
 			if(paramValue != NULL && json_object_get_string(paramValue)) {
 				bool emptyIface = false;
@@ -141,14 +142,14 @@
 					json_object_object_add(ipPingObj, paramList->name, json_object_new_string(""));
 					if(!multiJobj)
 					json_object_put(ipPingObj);
-					return ZCFG_NO_SUCH_OBJECT;
+					return ZCFG_INVALID_PARAM_VALUE;
 				}
 
 				if(strstr(iface, "PPP.Interface") != NULL) {
 					if((zcfgFeTr181IfaceStackHigherLayerGet(iface, higherLayer)) != ZCFG_SUCCESS) {
 						if(!multiJobj)
 							json_object_put(ipPingObj);
-						return ZCFG_NO_SUCH_OBJECT;
+						return ZCFG_INVALID_PARAM_VALUE;
 					}
 					memset(iface, 0, sizeof(iface));
 					strcpy(iface, higherLayer);
@@ -156,7 +157,7 @@
 					if(!strstr(iface, "IP.Interface")) {
 						if(!multiJobj)
 							json_object_put(ipPingObj);
-						return ZCFG_NO_SUCH_OBJECT;
+						return ZCFG_INVALID_PARAM_VALUE;
 					}
 				}
 					
@@ -166,6 +167,7 @@
 				else if(emptyIface)
 					json_object_object_add(ipPingObj, paramList->name, json_object_new_string(""));
 			}
+			strcpy(paramfault, "");
 			paramList++;
 			continue;
 		}
@@ -319,6 +321,7 @@
 	while(paramList->name != NULL) {
 		/*Write new parameter value from tr98 object to tr181 objects*/		
 		if(!strcmp(paramList->name, "Interface")) {
+			sprintf(paramfault, "%s.%s", tr98FullPathName, paramList->name);
 			const char *tmpTr98Iface = json_object_get_string(json_object_object_get(tr98Jobj, paramList->name));
 			if(tmpTr98Iface) {
 				char ipIface[300] = {0};
@@ -338,7 +341,7 @@
 				else {
 					if(!multiJobj)
 						json_object_put(traceRtObj);
-					return ZCFG_NO_SUCH_OBJECT;
+					return ZCFG_INVALID_PARAM_VALUE;
 				}
 			}
 			else {
@@ -347,6 +350,7 @@
 				//return ZCFG_NO_SUCH_OBJECT;
 				json_object_object_add(traceRtObj, paramList->name, json_object_new_string(""));
 			}
+			strcpy(paramfault, "");
 			paramList++;
 			continue;
 		}
@@ -645,6 +649,7 @@
 			}*/
 			json_object_object_add(dlDiagObj, paramList->name, JSON_OBJ_COPY(paramValue));
 		}else if(!strcmp(paramList->name, "Interface")) {
+			sprintf(paramfault, "%s.%s", tr98FullPathName, paramList->name);
 			strcpy(tmpTr98ConnObjName, json_object_get_string(paramValue));
 			strcpy(tr98ConnObjName, tmpTr98ConnObjName);
 			ReplaceWANDeviceIndex(tmpTr98ConnObjName, tr98ConnObjName); //recover the active wan from WANDEV.1 back to it original WANDEV.
@@ -654,7 +659,7 @@
 				if(strstr(iface, "PPP.Interface") != NULL) {
 					if((zcfgFeTr181IfaceStackHigherLayerGet(iface, higherLayer)) != ZCFG_SUCCESS) {
 						json_object_put(dlDiagObj);
-						return ZCFG_NO_SUCH_OBJECT;
+						return ZCFG_INVALID_PARAM_VALUE;
 					}
 					memset(iface, 0, sizeof(iface));
 					strcpy(iface, higherLayer);
@@ -662,7 +667,8 @@
 		
 				strcpy(devIpIface, iface);
 				json_object_object_add(dlDiagObj, paramList->name, json_object_new_string(devIpIface));
-			}
+			}			
+			strcpy(paramfault, "");
 		}else {
 			json_object_object_add(dlDiagObj, paramList->name, JSON_OBJ_COPY(paramValue));
 		}
@@ -831,6 +837,7 @@
 			}*/
 			json_object_object_add(ulDiagObj, paramList->name, JSON_OBJ_COPY(paramValue));
 		}else if(!strcmp(paramList->name, "Interface")) {
+			sprintf(paramfault, "%s.%s", tr98FullPathName, paramList->name);
 			strcpy(tmpTr98ConnObjName, json_object_get_string(paramValue));
 			strcpy(tr98ConnObjName, tmpTr98ConnObjName);
 			ReplaceWANDeviceIndex(tmpTr98ConnObjName, tr98ConnObjName); //recover the active wan from WANDEV.1 back to it original WANDEV.
@@ -840,7 +847,7 @@
 				if(strstr(iface, "PPP.Interface") != NULL) {
 					if((zcfgFeTr181IfaceStackHigherLayerGet(iface, higherLayer)) != ZCFG_SUCCESS) {
 						json_object_put(ulDiagObj);
-						return ZCFG_NO_SUCH_OBJECT;
+						return ZCFG_INVALID_PARAM_VALUE;
 					}
 					memset(iface, 0, sizeof(iface));
 					strcpy(iface, higherLayer);
@@ -849,6 +856,7 @@
 				strcpy(devIpIface, iface);
 				json_object_object_add(ulDiagObj, paramList->name, json_object_new_string(devIpIface));
 			}
+			strcpy(paramfault, "");
 		}else {
 			json_object_object_add(ulDiagObj, paramList->name, JSON_OBJ_COPY(paramValue));
 		}
@@ -1001,6 +1009,7 @@
 				json_object_object_add(udpEchoObj, paramList->name, JSON_OBJ_COPY(paramValue));
 			}
 		}else if(!strcmp(paramList->name, "Interface")) {
+			sprintf(paramfault, "%s.%s", tr98FullPathName, paramList->name);
 			const char *tmpTr98ObjParmValue = json_object_get_string(paramValue);
 			char tr98ObjParmValue[TR98_MAX_OBJ_NAME_LENGTH] = {0};
 			strcpy(tr98ObjParmValue, tmpTr98ObjParmValue);
@@ -1014,13 +1023,13 @@
 				if((zcfgFe98To181MappingNameGet((char *)tr98ObjParmValue, iface)) != ZCFG_SUCCESS) {
 					//zcfgLog(ZCFG_LOG_ERR, "%s : get mapping name failed\n", __FUNCTION__);
 					json_object_put(udpEchoObj);
-					return ZCFG_NO_SUCH_OBJECT;
+					return ZCFG_INVALID_PARAM_VALUE;
 				}
 				if(strstr(iface, "PPP.Interface") != NULL) {
 					if((zcfgFeTr181IfaceStackHigherLayerGet(iface, higherLayer)) != ZCFG_SUCCESS) {
 						//zcfgLog(ZCFG_LOG_ERR, "%s : get higher layer interface failed\n", __FUNCTION__);
 						json_object_put(udpEchoObj);
-						return ZCFG_NO_SUCH_OBJECT;
+						return ZCFG_INVALID_PARAM_VALUE;
 					}
 					memset(iface, 0, sizeof(iface));
 					strcpy(iface, higherLayer);
@@ -1032,17 +1041,18 @@
 				IID_INIT(addrIid);
 				if(zcfgFeSubInObjJsonGetNext(RDM_OID_IP_IFACE_V4_ADDR, &ipIfIid, &addrIid, &ipv4AddrObj) != ZCFG_SUCCESS) {
 					json_object_put(udpEchoObj);
-					return ZCFG_NO_SUCH_OBJECT;
+					return ZCFG_INVALID_PARAM_VALUE;
 				}
 				if((json_object_get_boolean(json_object_object_get(ipv4AddrObj, "Enable"))) != true) {
 					json_object_put(udpEchoObj);
 					json_object_put(ipv4AddrObj);
-					return ZCFG_NO_SUCH_OBJECT;
+					return ZCFG_INVALID_PARAM_VALUE;
 				}
 				json_object_put(ipv4AddrObj);
 
 				json_object_object_add(udpEchoObj, paramList->name, json_object_new_string(iface));
 			}
+			strcpy(paramfault, "");
 		}else if(!strcmp(paramList->name, "SourceIPAddress")) {
 			char addr[sizeof(struct in_addr)] = {0};
 			const char *srcIpAddress = json_object_get_string(paramValue);
@@ -1176,6 +1186,7 @@
 	while(paramList->name != NULL) {
 		/*Write new parameter value from tr98 object to tr181 objects*/		
 		if(!strcmp(paramList->name, "Interface")) {
+			sprintf(paramfault, "%s.%s", tr98FullPathName, paramList->name);
 			paramValue = json_object_object_get(tr98Jobj, paramList->name);
 			if(paramValue != NULL && json_object_get_string(paramValue)) {
 				bool emptyIface = false;
@@ -1188,14 +1199,14 @@
 					json_object_object_add(udpEchoDiagObj, paramList->name, json_object_new_string(""));
 					if(!multiJobj)
 					json_object_put(udpEchoDiagObj);
-					return ZCFG_NO_SUCH_OBJECT;
+					return ZCFG_INVALID_PARAM_VALUE;
 				}
 
 				if(strstr(iface, "PPP.Interface") != NULL) {
 					if((zcfgFeTr181IfaceStackHigherLayerGet(iface, higherLayer)) != ZCFG_SUCCESS) {
 						if(!multiJobj)
 							json_object_put(udpEchoDiagObj);
-						return ZCFG_NO_SUCH_OBJECT;
+						return ZCFG_INVALID_PARAM_VALUE;
 					}
 					memset(iface, 0, sizeof(iface));
 					strcpy(iface, higherLayer);
@@ -1203,7 +1214,7 @@
 					if(!strstr(iface, "IP.Interface")) {
 						if(!multiJobj)
 							json_object_put(udpEchoDiagObj);
-						return ZCFG_NO_SUCH_OBJECT;
+						return ZCFG_INVALID_PARAM_VALUE;
 					}
 				}
 					
@@ -1213,6 +1224,7 @@
 				else if(emptyIface)
 					json_object_object_add(udpEchoDiagObj, paramList->name, json_object_new_string(""));
 			}
+			strcpy(paramfault, "");
 			paramList++;
 			continue;
 		}
