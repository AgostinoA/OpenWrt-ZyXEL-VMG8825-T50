Index: libzcfg_fe_tr98-1.0/qos.c
===================================================================
--- libzcfg_fe_tr98-1.0.orig/qos.c	2015-08-11 14:35:39.896491021 +0800
+++ libzcfg_fe_tr98-1.0/qos.c	2015-08-11 14:43:26.236503402 +0800
@@ -410,7 +410,7 @@
 				}
 			}
 #endif
-				json_object_object_add(*tr98Jobj, paramList->name, json_object_new_string(tr098Intf));
+				json_object_object_add(*tr98Jobj, paramList->name, JSON_OBJ_COPY(paramValue));
 			}
 			paramList++;
 			continue;
Index: libzcfg_fe_tr98-1.0/qos.h
===================================================================
--- libzcfg_fe_tr98-1.0.orig/qos.h	2015-08-11 14:35:39.116491001 +0800
+++ libzcfg_fe_tr98-1.0/qos.h	2015-08-11 14:43:46.276503935 +0800
@@ -1,6 +1,5 @@
 tr98Parameter_t para_qMgmt[] = {
 	{ "Enable", PARAMETER_ATTR_WRITE, 0, json_type_boolean},
-	{ "X_ZYXEL_AutoPriorityMapping", PARAMETER_ATTR_WRITE, 0, json_type_boolean},
 	{ "MaxQueues", PARAMETER_ATTR_READONLY, 0, json_type_uint32},
 	{ "MaxClassificationEntries", PARAMETER_ATTR_READONLY, 0, json_type_uint32},
 	{ "ClassificationNumberOfEntries", PARAMETER_ATTR_READONLY, 0, json_type_uint32},
@@ -23,6 +22,8 @@
 	{ "DefaultEthernetPriorityMark", PARAMETER_ATTR_WRITE, 0, json_type_int},
 	{ "AvailableAppList", PARAMETER_ATTR_READONLY, 1024, json_type_string},
 	{ "X_ZYXEL_UpRate", PARAMETER_ATTR_WRITE, 0, json_type_uint32},
+	{ "X_ZYXEL_DownRate", PARAMETER_ATTR_WRITE, 0, json_type_uint32},
+	{ "X_ZYXEL_AutoMapType", PARAMETER_ATTR_WRITE, 17, json_type_string},
 	{ NULL, 0, 0, 0}
 };
 
@@ -110,7 +111,6 @@
 	{ "X_ZYXEL_VLANIDMark", PARAMETER_ATTR_WRITE, 0, json_type_uint32},
 	{ "X_ZYXEL_Name", PARAMETER_ATTR_WRITE, 32, json_type_string},
 	{ "X_ZYXEL_SourceClientIDType", PARAMETER_ATTR_WRITE, 32, json_type_string},
-	
 	{ NULL, 0, 0}
 };
 
Index: libzcfg_fe_tr98-1.0/wanDev.c
===================================================================
--- libzcfg_fe_tr98-1.0.orig/wanDev.c	2015-08-11 14:35:40.240491030 +0800
+++ libzcfg_fe_tr98-1.0/wanDev.c	2015-08-11 14:44:26.500505002 +0800
@@ -6041,7 +6041,6 @@
 	tr98Parameter_t *paramList = NULL;
 
 	zcfgLog(ZCFG_LOG_DEBUG, "Enter %s\n", __FUNCTION__);
-	printf("[@@]Enter %s\n", __FUNCTION__);
 
 	if(zcfgFe98To181MappingNameGet(tr98FullPathName, mapObj) != ZCFG_SUCCESS) {
 		return ZCFG_INVALID_OBJECT;
Index: libzcfg_fe_tr98-1.0/zcfg_fe_tr98.c
===================================================================
--- libzcfg_fe_tr98-1.0.orig/zcfg_fe_tr98.c	2015-08-11 14:35:40.188491029 +0800
+++ libzcfg_fe_tr98-1.0/zcfg_fe_tr98.c	2015-08-11 14:46:36.940508466 +0800
@@ -185,7 +185,7 @@
 {e_TR98_WAN_ETH_LINK_CONF       , &tr98Obj[e_TR98_WAN_ETH_LINK_CONF       -e_TR98_START]},
 //{e_TR98_WAN_POTS_LINK_CONF      , &tr98Obj[e_TR98_WAN_POTS_LINK_CONF      -e_TR98_START]},
 {e_TR98_WAN_IP_CONN             , &tr98Obj[e_TR98_WAN_IP_CONN             -e_TR98_START]},
-{e_TR98_WAN_IP_CONN_MLD         , &tr98Obj[e_TR98_WAN_IP_CONN_MLD         -e_TR98_START]},	//@@
+{e_TR98_WAN_IP_CONN_MLD         , &tr98Obj[e_TR98_WAN_IP_CONN_MLD         -e_TR98_START]},
 {e_TR98_DHCP_CLIENT             , &tr98Obj[e_TR98_DHCP_CLIENT             -e_TR98_START]},
 {e_TR98_SENT_DHCP_OPT           , &tr98Obj[e_TR98_SENT_DHCP_OPT           -e_TR98_START]},
 {e_TR98_REQ_DHCP_OPT            , &tr98Obj[e_TR98_REQ_DHCP_OPT            -e_TR98_START]},
@@ -204,7 +204,7 @@
 {e_TR98_WAN_PPP_CONN            , &tr98Obj[e_TR98_WAN_PPP_CONN            -e_TR98_START]},
 {e_TR98_WAN_PPP_PORT_MAP        , &tr98Obj[e_TR98_WAN_PPP_PORT_MAP        -e_TR98_START]},
 {e_TR98_WAN_PPP_CONN_STAT       , &tr98Obj[e_TR98_WAN_PPP_CONN_STAT       -e_TR98_START]},
-{e_TR98_WAN_PPP_CONN_MLD        , &tr98Obj[e_TR98_WAN_PPP_CONN_MLD        -e_TR98_START]},	//@@
+{e_TR98_WAN_PPP_CONN_MLD        , &tr98Obj[e_TR98_WAN_PPP_CONN_MLD        -e_TR98_START]},
 #ifdef IPV6INTERFACE_PROFILE
 {e_TR98_WAN_PPP_CONN_IPV6ADDR    , &tr98Obj[e_TR98_WAN_PPP_CONN_IPV6ADDR    -e_TR98_START]},
 {e_TR98_WAN_PPP_CONN_IPV6PREFIX  , &tr98Obj[e_TR98_WAN_PPP_CONN_IPV6PREFIX  -e_TR98_START]},
@@ -222,6 +222,7 @@
 #if ZYXEL_EXT
 {e_TR98_ZYXEL_EXT               , &tr98Obj[e_TR98_ZYXEL_EXT               -e_TR98_START]},
 {e_TR98_DNS_RT_ENTRY            , &tr98Obj[e_TR98_DNS_RT_ENTRY            -e_TR98_START]},
+{e_TR98_DNS_ENTRY    	        , &tr98Obj[e_TR98_DNS_ENTRY     	      -e_TR98_START]},
 {e_TR98_D_DNS                   , &tr98Obj[e_TR98_D_DNS                   -e_TR98_START]},
 {e_TR98_TR064	                , &tr98Obj[e_TR98_TR064	                  -e_TR98_START]},
 {e_TR98_VLAN_GROUP	            , &tr98Obj[e_TR98_VLAN_GROUP	          -e_TR98_START]},
@@ -234,22 +235,25 @@
 {e_TR98_SCHEDULE                , &tr98Obj[e_TR98_SCHEDULE                -e_TR98_START]},
 {e_TR98_REMO_MGMT               , &tr98Obj[e_TR98_REMO_MGMT               -e_TR98_START]},
 {e_TR98_REMO_SRV                , &tr98Obj[e_TR98_REMO_SRV                -e_TR98_START]},
+{e_TR98_IEEE8021AG              , &tr98Obj[e_TR98_IEEE8021AG              -e_TR98_START]},
 #ifdef SOL_TR69_TRUSTDOMAIN
-{e_TR98_REMO_TRUSTDOMAIN        , &tr98Obj[e_TR98_REMO_TRUSTDOMAIN                -e_TR98_START]},
+{e_TR98_REMO_TRUSTDOMAIN        , &tr98Obj[e_TR98_REMO_TRUSTDOMAIN        -e_TR98_START]},
 #endif
 {e_TR98_IGMP                    , &tr98Obj[e_TR98_IGMP                    -e_TR98_START]},
 #if defined(SUNRISE_RANDOM_PASSWORD) || defined(SOL_TR69_LOGINACCOUNT)
-{e_TR98_LOG_CFG           		 , &tr98Obj[e_TR98_LOG_CFG           		 -e_TR98_START]},
-{e_TR98_LOG_CFG_GP           	 , &tr98Obj[e_TR98_LOG_CFG_GP           	 -e_TR98_START]},
-{e_TR98_LOG_CFG_GP_ACCOUNT       , &tr98Obj[e_TR98_LOG_CFG_GP_ACCOUNT       -e_TR98_START]},
+{e_TR98_LOG_CFG           		 , &tr98Obj[e_TR98_LOG_CFG 				  -e_TR98_START]},
+{e_TR98_LOG_CFG_GP           	 , &tr98Obj[e_TR98_LOG_CFG_GP             -e_TR98_START]},
+{e_TR98_LOG_CFG_GP_ACCOUNT       , &tr98Obj[e_TR98_LOG_CFG_GP_ACCOUNT     -e_TR98_START]},
 #endif
 {e_TR98_LOG_SETTING             , &tr98Obj[e_TR98_LOG_SETTING             -e_TR98_START]},
 {e_TR98_LOG_CLASSIFY            , &tr98Obj[e_TR98_LOG_CLASSIFY            -e_TR98_START]},
-{e_TR98_LOG_CATEGORY	     , &tr98Obj[e_TR98_LOG_CATEGORY	     -e_TR98_START]},
-{e_TR98_MACFILTER	     , &tr98Obj[e_TR98_MACFILTER	     -e_TR98_START]},
-{e_TR98_MACFILTER_WHITELIST	     , &tr98Obj[e_TR98_MACFILTER_WHITELIST	     -e_TR98_START]},
-{e_TR98_PAREN_CTL             , &tr98Obj[e_TR98_PAREN_CTL             -e_TR98_START]},
-{e_TR98_PAREN_CTL_PROF            , &tr98Obj[e_TR98_PAREN_CTL_PROF            -e_TR98_START]},
+{e_TR98_LOG_CATEGORY	     	, &tr98Obj[e_TR98_LOG_CATEGORY	    	  -e_TR98_START]},
+{e_TR98_MACFILTER	     , &tr98Obj[e_TR98_MACFILTER	     			  -e_TR98_START]},
+{e_TR98_MACFILTER_WHITELIST	    , &tr98Obj[e_TR98_MACFILTER_WHITELIST	  -e_TR98_START]},
+{e_TR98_PAREN_CTL           	, &tr98Obj[e_TR98_PAREN_CTL            	  -e_TR98_START]},
+{e_TR98_PAREN_CTL_PROF          , &tr98Obj[e_TR98_PAREN_CTL_PROF     	  -e_TR98_START]},
+{e_TR98_SEC		          		, &tr98Obj[e_TR98_SEC		              -e_TR98_START]},
+{e_TR98_SEC_CERT		        , &tr98Obj[e_TR98_SEC_CERT		   		  -e_TR98_START]},
 #ifdef ONECONNECT
 {e_TR98_ONECONNECT_SPEEDTESTINFO            , &tr98Obj[e_TR98_ONECONNECT_SPEEDTESTINFO            -e_TR98_START]},
 #endif
Index: libzcfg_fe_tr98-1.0/zcfg_fe_tr98_handle.h
===================================================================
--- libzcfg_fe_tr98-1.0.orig/zcfg_fe_tr98_handle.h	2015-08-11 14:35:40.172491029 +0800
+++ libzcfg_fe_tr98-1.0/zcfg_fe_tr98_handle.h	2015-08-11 14:50:24.404514505 +0800
@@ -174,6 +174,7 @@
 #endif
 #define TR98_ZYXEL_EXT                "InternetGatewayDevice.X_ZYXEL_EXT"
 #define TR98_DNS_RT_ENTRY             "InternetGatewayDevice.X_ZYXEL_EXT.DNSRouteEntry.i"
+#define TR98_DNS_ENTRY     		      "InternetGatewayDevice.X_ZYXEL_EXT.DNSEntry.i"
 #define TR98_D_DNS                    "InternetGatewayDevice.X_ZYXEL_EXT.DynamicDNS"
 #define TR98_TR064	                  "InternetGatewayDevice.X_ZYXEL_EXT.TR064"
 #define TR98_VLAN_GROUP	              "InternetGatewayDevice.X_ZYXEL_EXT.VlanGroup.i"
@@ -185,13 +186,14 @@
 #define TR98_SNMP_TRAP                "InternetGatewayDevice.X_ZYXEL_EXT.SNMP.TrapAddr.i"
 #define TR98_REMO_MGMT                "InternetGatewayDevice.X_ZYXEL_EXT.RemoteManagement"
 #define TR98_REMO_SRV                 "InternetGatewayDevice.X_ZYXEL_EXT.RemoteManagement.Service.i"
+#define TR98_IEEE8021AG               "InternetGatewayDevice.X_ZYXEL_EXT.IEEE8021ag"
 #ifdef SOL_TR69_TRUSTDOMAIN
 #define TR98_REMO_TRUSTDOMAIN		"InternetGatewayDevice.X_ZYXEL_EXT.RemoteManagement.TrustDomain.i"
 #endif
 #define TR98_IGMP                     "InternetGatewayDevice.X_ZYXEL_EXT.IGMP"
 #define TR98_LOG_SETTING              "InternetGatewayDevice.X_ZYXEL_EXT.Log_Setting"
 #define TR98_LOG_CLASSIFY             "InternetGatewayDevice.X_ZYXEL_EXT.Log_Setting.LogClassify.i"
-#define TR98_LOG_CATEGORY	      "InternetGatewayDevice.X_ZYXEL_EXT.Log_Setting.LogClassify.i.Category.i"
+#define TR98_LOG_CATEGORY		      "InternetGatewayDevice.X_ZYXEL_EXT.Log_Setting.LogClassify.i.Category.i"
 
 #if defined(SUNRISE_RANDOM_PASSWORD) || defined(SOL_TR69_LOGINACCOUNT)
 #define TR98_LOG_CFG           		  "InternetGatewayDevice.X_ZYXEL_EXT.LoginCfg"
@@ -207,9 +209,10 @@
 
 #define TR98_MACFILTER		  		  "InternetGatewayDevice.X_ZYXEL_EXT.MacFilter"
 #define TR98_MACFILTER_WHITELIST	  "InternetGatewayDevice.X_ZYXEL_EXT.MacFilter.WhiteList.i"
-
 #define TR98_PAREN_CTL                "InternetGatewayDevice.X_ZYXEL_EXT.ParentalControl"
 #define TR98_PAREN_CTL_PROF           "InternetGatewayDevice.X_ZYXEL_EXT.ParentalControl.Profile.i"
+#define TR98_SEC		              "InternetGatewayDevice.X_ZYXEL_EXT.Security"
+#define TR98_SEC_CERT		          "InternetGatewayDevice.X_ZYXEL_EXT.Security.Certificate.i"
 
 #ifdef ONECONNECT
 #define TR98_ONECONNECT_EXT            	   "InternetGatewayDevice.LANDevice.i.Hosts.Host.i.X_ZYXEL_EXT"
@@ -409,6 +412,7 @@
 #if ZYXEL_EXT
 {TR98_ZYXEL_EXT,             	0,				NULL,        			NULL,        			 NULL,       			 NULL, 				NULL,			NULL},
 {TR98_DNS_RT_ENTRY,             ATTR_INDEX_CREA,para_DnsRtEntry,        zyExtDnsRtObjGet,        zyExtDnsRtObjSet,       zyExtDnsRtObjAdd, zyExtDnsRtObjDel,zyExtDnsRtObjNotify, zyExtDnsRtObjAttrGet, zyExtDnsRtObjAttrSet},
+{TR98_DNS_ENTRY, 	            ATTR_INDEX_CREA,para_DnsEntry, 		    zyExtDnsEntryObjGet,     zyExtDnsEntryObjSet,    zyExtDnsEntryObjAdd, zyExtDnsEntryObjDel,zyExtDnsEntryObjNotify, zyExtDnsEntryObjAttrGet, zyExtDnsEntryObjAttrSet},
 {TR98_D_DNS,                    0,              para_DDns,              zyExtDDnsObjGet,         zyExtDDnsObjSet,        NULL,             NULL,            zyExtDDnsObjNotify, zyExtDDnsObjAttrGet, zyExtDDnsObjAttrSet},
 {TR98_TR064, 	                0,              para_Tr064,	            zyExtTr064ObjGet,	     zyExtTr064ObjSet,	     NULL,             NULL,            zyExtTr064ObjNotify, zyExtTr064ObjAttrGet, zyExtTr064ObjAttrSet},
 {TR98_VLAN_GROUP,               ATTR_INDEX_CREA,para_VlanGroup,         zyExtVlanGroupObjGet,	 zyExtVlanGroupObjSet,	 zyExtVlanGroupObjAdd, zyExtVlanGroupObjDel, zyExtVlanGroupObjNotify, zyExtVlanGroupObjAttrGet, zyExtVlanGroupObjAttrSet},
@@ -421,28 +425,31 @@
 {TR98_SCHEDULE,                 ATTR_INDEX_CREA,para_Schedule,          scheduleObjGet,          scheduleObjSet,         scheduleObjAdd,   scheduleObjDel,  scheduleObjNotify, scheduleObjAttrGet, scheduleObjAttrSet},
 {TR98_REMO_MGMT,				0,				NULL,					NULL,					 NULL,					 NULL,				NULL,			NULL},
 {TR98_REMO_SRV, 			    ATTR_INDEX_CREA,para_RemoSrv,		    zyExtRemoteMgmtSrvObjGet,		 zyExtRemoteMgmtSrvObjSet,		 zyExtRemoteMgmtSrvObjAdd, zyExtRemoteMgmtSrvObjDel, zyExtRemoteMgmtSrvObjNotify, zyExtRemoteMgmtSrvObjAttrGet, zyExtRemoteMgmtSrvObjAttrSet},
+{TR98_IEEE8021AG,               0,              para_8021ag,	        zyExt8021agObjGet, 	     zyExt8021agObjSet,		NULL,             NULL,            zyExt8021agObjNotify, zyExt8021agObjAttrGet, zyExt8021agObjAttrSet},
 #ifdef SOL_TR69_TRUSTDOMAIN
 {TR98_REMO_TRUSTDOMAIN,         ATTR_INDEX_CREA,para_RemoTrustDomain,   zyExtRemoteMgmtTrustDomainObjGet,                    zyExtRemoteMgmtTrustDomainObjSet,                   zyExtRemoteMgmtTrustDomainObjAdd,            zyExtRemoteMgmtTrustDomainObjDel,            NULL},
 #endif
-{TR98_IGMP,                    0,              para_Igmp,              zyExtIgmpObjGet,         zyExtIgmpObjSet,        NULL,             NULL,            zyExtIgmpObjNotify, NULL, NULL},
+{TR98_IGMP,                     0,              para_Igmp,              zyExtIgmpObjGet,         zyExtIgmpObjSet,        NULL,             NULL,            zyExtIgmpObjNotify, NULL, NULL},
 #if defined(SUNRISE_RANDOM_PASSWORD) || defined(SOL_TR69_LOGINACCOUNT)
-{TR98_LOG_CFG,                    0,              NULL,              NULL,         NULL,        NULL,             NULL,            NULL, NULL, NULL},
-{TR98_LOG_CFG_GP,                    ATTR_INDEX_CREA,              para_LogCfgGp,              zyExtLogCfgGpObjGet,         NULL,        NULL,             NULL,            NULL},
+{TR98_LOG_CFG,                  0,              NULL,              NULL,         NULL,        NULL,             NULL,            NULL, NULL, NULL},
+{TR98_LOG_CFG_GP,               ATTR_INDEX_CREA,para_LogCfgGp,          zyExtLogCfgGpObjGet,         NULL,        NULL,             NULL,            NULL},
 #ifdef SOL_TR69_LOGINACCOUNT
-{TR98_LOG_CFG_GP_ACCOUNT,                    ATTR_INDEX_CREA,              para_LogCfgGpAccount,              zyExtLogCfgGpAccountObjGet,         zyExtLogCfgGpAccountObjSet,        zyExtLogCfgGpAccountObjAdd,             zyExtLogCfgGpAccountObjDel,            NULL, NULL, NULL},
+{TR98_LOG_CFG_GP_ACCOUNT,       ATTR_INDEX_CREA,para_LogCfgGpAccount,   zyExtLogCfgGpAccountObjGet,		zyExtLogCfgGpAccountObjSet,        zyExtLogCfgGpAccountObjAdd,             zyExtLogCfgGpAccountObjDel,            NULL, NULL, NULL},
 #else
-{TR98_LOG_CFG_GP_ACCOUNT,                    ATTR_INDEX_CREA,              para_LogCfgGpAccount,              zyExtLogCfgGpAccountObjGet,         zyExtLogCfgGpAccountObjSet,        zyExtLogCfgGpAccountObjAdd,             NULL,            NULL, NULL, NULL},
+{TR98_LOG_CFG_GP_ACCOUNT,       ATTR_INDEX_CREA,para_LogCfgGpAccount,   zyExtLogCfgGpAccountObjGet,		zyExtLogCfgGpAccountObjSet,        zyExtLogCfgGpAccountObjAdd,             NULL,            NULL, NULL, NULL},
 #endif
 #endif
-{TR98_LOG_SETTING,                    ATTR_INDEX_CREA,              para_LogSetting,              zyExtLogSettingObjGet,         zyExtLogSettingObjSet,        NULL,             NULL,            NULL, NULL, NULL},
-{TR98_LOG_CLASSIFY,		ATTR_INDEX_CREA,		para_LogClassify,		zyExtLogClassifyObjGet,		 NULL,					 NULL,				NULL,			NULL},
-{TR98_LOG_CATEGORY,                    ATTR_INDEX_CREA,              para_LogCategory,              zyExtLogCategoryObjGet,         zyExtLogCategoryObjSet,        NULL,             NULL,            NULL, NULL, NULL},
-{TR98_MACFILTER,		    0, 	para_MacFilter,		zyExtMacFilterObjGet,		 zyExtMacFilterObjSet,		   NULL,             NULL,            NULL},
-{TR98_MACFILTER_WHITELIST,		    ATTR_INDEX_CREA, 	para_MacFilter_WhiteList,		zyExtMacFilterWhiteListObjGet,		 zyExtMacFilterWhiteListObjSet,		   zyExtMacFilterWhiteListObjAdd,             zyExtMacFilterWhiteListObjDel,            NULL, NULL, NULL},
-{TR98_PAREN_CTL,                 0,              para_ParenCtl,          zyExtParenCtlObjGet,          zyExtParenCtlObjSet,         NULL,             NULL,            NULL, NULL, NULL},
-{TR98_PAREN_CTL_PROF,           ATTR_INDEX_CREA,para_ParenCtlProf,     zyExtParenCtlProfObjGet,     zyExtParenCtlProfObjSet,    zyExtParenCtlProfObjAdd,zyExtParenCtlProfObjDel,NULL, NULL, NULL},
+{TR98_LOG_SETTING,              ATTR_INDEX_CREA,para_LogSetting,        zyExtLogSettingObjGet,			zyExtLogSettingObjSet,		NULL,             NULL,            zyExtLogSettingObjNotify, zyExtLogSettingObjAttrGet, zyExtLogSettingObjAttrSet},
+{TR98_LOG_CLASSIFY,				ATTR_INDEX_CREA,para_LogClassify,		zyExtLogClassifyObjGet,			NULL, 						zyExtLogClassifyObjAdd,	zyExtLogClassifyObjDel,	zyExtLogClassifyObjNotify, zyExtLogClassifyObjAttrGet, zyExtLogClassifyObjAttrSet},
+{TR98_LOG_CATEGORY,             ATTR_INDEX_CREA,para_LogCategory,       zyExtLogCategoryObjGet,         zyExtLogCategoryObjSet,		zyExtLogCategoryObjAdd,	zyExtLogCategoryObjDel,	zyExtLogCategoryObjNotify, zyExtLogCategoryObjAttrGet, zyExtLogCategoryObjAttrSet},
+{TR98_MACFILTER,		    	0, 				para_MacFilter,			zyExtMacFilterObjGet,			zyExtMacFilterObjSet,		NULL,             NULL,            zyExtMacFilterObjNotify, zyExtMacFilterObjAttrGet, zyExtMacFilterObjAttrSet},
+{TR98_MACFILTER_WHITELIST,		ATTR_INDEX_CREA,para_MacFilter_WhiteList, zyExtMacFilterWhiteListObjGet,zyExtMacFilterWhiteListObjSet, zyExtMacFilterWhiteListObjAdd, zyExtMacFilterWhiteListObjDel, zyExtMacFilterWhiteListObjNotify, zyExtMacFilterWhiteListObjAttrGet, zyExtMacFilterWhiteListObjAttrSet},
+{TR98_PAREN_CTL,                0,              para_ParenCtl,          zyExtParenCtlObjGet,         	zyExtParenCtlObjSet,        NULL,             NULL,            zyExtParenCtlObjNotify, zyExtParenCtlObjAttrGet, zyExtParenCtlObjAttrSet},
+{TR98_PAREN_CTL_PROF,           ATTR_INDEX_CREA,para_ParenCtlProf,      zyExtParenCtlProfObjGet,		zyExtParenCtlProfObjSet,    zyExtParenCtlProfObjAdd, zyExtParenCtlProfObjDel, zyExtParenCtlProfObjNotify, zyExtParenCtlProfObjAttrGet, zyExtParenCtlProfObjAttrSet},
+{TR98_SEC,    		            0,              para_Sec,    		    zyExtSecObjGet,         		NULL,     			  		NULL,             NULL,            zyExtSecObjNotify, zyExtSecObjAttrGet, zyExtSecObjAttrSet},
+{TR98_SEC_CERT,  		        ATTR_INDEX_CREA,para_SecCert, 		    zyExtSecCertObjGet,				zyExtSecCertObjSet,  		zyExtSecCertObjAdd, zyExtSecCertObjDel, zyExtSecCertObjNotify, zyExtSecCertObjAttrGet, zyExtSecCertObjAttrSet},
 #ifdef ONECONNECT
-{TR98_ONECONNECT_SPEEDTESTINFO,		    0, 	para_SpeedTestInfo,		zyExtSpeedTestInfoObjGet,		 zyExtSpeedTestInfoObjSet,		   NULL,             NULL,            NULL},
+{TR98_ONECONNECT_SPEEDTESTINFO,	0, 				para_SpeedTestInfo,		zyExtSpeedTestInfoObjGet,		 zyExtSpeedTestInfoObjSet,		   NULL,             NULL,            NULL},
 #endif
 #endif
 #if OBSOLETED
@@ -451,10 +458,10 @@
 //{TR98_WAN_DSL_CONN_SRVC,        ATTR_INDEXNODE, NULL,                   NULL,                    NULL,                   NULL,             NULL,            NULL},
 #endif
 #ifdef ONECONNECT
-{TR98_ONECONNECT_EXT,		    0, 	para_OneConnectExt,		oneConnectExtObjGet,		 oneConnectExtObjSet,		   NULL,             NULL,            NULL},
+{TR98_ONECONNECT_EXT,		    0, 				para_OneConnectExt,		oneConnectExtObjGet,		 oneConnectExtObjSet,		   NULL,             NULL,            NULL},
 #endif
 #ifdef ZyXEL_IPP_PRINTSERVER
-{TR98_PRINT_SERVER,                 0,              para_Ipp_PrintServer,          zyExtIppPrintServObjGet,          zyExtIppPrintServObjSet,         NULL,             NULL,            NULL, NULL, NULL},
+{TR98_PRINT_SERVER,             0,              para_Ipp_PrintServer,   zyExtIppPrintServObjGet,          zyExtIppPrintServObjSet,         NULL,             NULL,            NULL, NULL, NULL},
 #endif
 {NULL,                          0,              NULL,                   NULL,                    NULL,                   NULL,             NULL,            NULL}
 };
Index: libzcfg_fe_tr98-1.0/zyExt.c
===================================================================
--- libzcfg_fe_tr98-1.0.orig/zyExt.c	2015-08-11 14:35:40.164491028 +0800
+++ libzcfg_fe_tr98-1.0/zyExt.c	2015-08-11 15:05:37.224538740 +0800
@@ -287,6 +287,251 @@
 	return ret;
 }
 
+/*
+ *   TR98 Object Name : InternetGatewayDevice.X_ZYXEL_EXT.DNSEntry.i
+ *
+ *   Related object in TR181:
+ *   Device.X_ZYXEL_EXT.DNSEntry.i
+ */
+zcfgRet_t zyExtDnsEntryObjGet(char *tr98FullPathName, int handler, struct json_object **tr98Jobj, bool updateFlag)
+{
+	zcfgRet_t ret;
+	objIndex_t objIid;
+	struct json_object *dnsJobj = NULL;
+	struct json_object *paramValue = NULL;
+	tr98Parameter_t *paramList = NULL;
+
+	printf("%s : Enter\n", __FUNCTION__);
+
+	/*Get related tr181 objects*/
+	IID_INIT(objIid);
+	objIid.level = 1;
+	sscanf(tr98FullPathName, "InternetGatewayDevice.X_ZYXEL_EXT.DNSEntry.%hhu", &objIid.idx[0]);
+
+	if((ret = feObjJsonGet(RDM_OID_DNS_ENTRY, &objIid, &dnsJobj, updateFlag)) != ZCFG_SUCCESS)
+		return ret;
+
+	/*fill up tr98 object from related tr181 objects*/
+	*tr98Jobj = json_object_new_object();
+	paramList = tr98Obj[handler].parameter;
+	while(paramList->name != NULL) {
+		/*Write parameter value from tr181 objects to tr98 object*/		
+		paramValue = json_object_object_get(dnsJobj, paramList->name);
+		if(paramValue != NULL) {
+			json_object_object_add(*tr98Jobj, paramList->name, JSON_OBJ_COPY(paramValue));
+			paramList++;
+			continue;
+		}
+
+		/*Not defined in tr181, give it a default value*/
+		printf("Can't find parameter %s in TR181\n", paramList->name);
+		paramList++;	
+	}
+
+	json_object_put(dnsJobj);
+
+	return ZCFG_SUCCESS;
+}
+
+zcfgRet_t zyExtDnsEntryObjSet(char *tr98FullPathName, int handler, struct json_object *tr98Jobj, struct json_object *multiJobj, char *paramfault)
+{
+	zcfgRet_t ret;
+	objIndex_t objIid;
+	struct json_object *dnsJobj = NULL;
+	struct json_object *tmpObj = NULL;
+	struct json_object *paramValue = NULL;
+	struct json_object *tr181ParamValue = NULL;
+	tr98Parameter_t *paramList = NULL;
+
+	printf("%s : Enter\n", __FUNCTION__);
+
+	/*Get related tr181 objects*/
+	IID_INIT(objIid);
+	objIid.level = 1;
+	sscanf(tr98FullPathName, "InternetGatewayDevice.X_ZYXEL_EXT.DNSEntry.%hhu", &objIid.idx[0]);
+
+	if((ret = zcfgFeObjJsonGet(RDM_OID_DNS_ENTRY, &objIid, &dnsJobj)) != ZCFG_SUCCESS)
+		return ret;
+
+	if(multiJobj){
+		tmpObj = dnsJobj;
+		dnsJobj = NULL;
+		dnsJobj = zcfgFeJsonMultiObjAppend(RDM_OID_DNS_ENTRY, &objIid, multiJobj, tmpObj);
+	}
+
+	paramList = tr98Obj[handler].parameter;
+	while(paramList->name != NULL) {
+		/*Write new parameter value from tr98 object to tr181 objects*/	
+		paramValue = json_object_object_get(tr98Jobj, paramList->name);
+		if(paramValue != NULL) {
+			tr181ParamValue = json_object_object_get(dnsJobj, paramList->name);
+			if(tr181ParamValue != NULL) {
+				json_object_object_add(dnsJobj, paramList->name, JSON_OBJ_COPY(paramValue));
+				paramList++;
+				continue;
+			}
+		}
+
+		printf("Can't find parameter %s in TR181\n", paramList->name);
+
+		paramList++;	
+	}
+
+	if(multiJobj){
+		json_object_put(tmpObj);
+	}
+	else{
+		if((ret = zcfgFeObjJsonSet(RDM_OID_DNS_ENTRY, &objIid, dnsJobj, NULL)) != ZCFG_SUCCESS ) {
+			json_object_put(dnsJobj);
+			return ret;
+		}
+		json_object_put(dnsJobj);
+	}
+
+	return ZCFG_SUCCESS;
+}
+
+zcfgRet_t zyExtDnsEntryObjAdd(char *tr98FullPathName, int *idx)
+{
+	zcfgRet_t ret;
+	objIndex_t objIid;
+
+	printf("%s : Enter\n", __FUNCTION__);
+
+	IID_INIT(objIid);
+	ret = zcfgFeObjStructAdd(RDM_OID_DNS_ENTRY, &objIid, NULL);
+	*idx = objIid.idx[0];
+
+	return ret;
+}
+
+zcfgRet_t zyExtDnsEntryObjDel(char *tr98FullPathName)
+{
+	objIndex_t objIid;
+
+	printf("%s : Enter\n", __FUNCTION__);
+
+	IID_INIT(objIid);
+	objIid.level = 1;
+	sscanf(tr98FullPathName, "InternetGatewayDevice.X_ZYXEL_EXT.DNSEntry.%hhu", &objIid.idx[0]);
+
+	return zcfgFeObjStructDel(RDM_OID_DNS_ENTRY, &objIid, NULL);;
+}
+
+zcfgRet_t zyExtDnsEntryObjNotify(char *tr98ObjName, char *tr181ParamName, struct json_object *tr181ParamVal, int handler, struct json_object **tr98NotifyInfo)
+{
+	bool found = false;
+	char tr98Notify[256] = "";
+	tr98Parameter_t *paramList = NULL;
+
+	zcfgLog(ZCFG_LOG_DEBUG, "Enter %s\n", __FUNCTION__);
+
+	if(*tr98NotifyInfo == NULL) {
+		*tr98NotifyInfo = json_object_new_object();
+	}
+
+	paramList = tr98Obj[handler].parameter;
+	while(paramList->name != NULL) {
+		if(strcmp(tr181ParamName, paramList->name) == 0) {
+			found = true;
+			sprintf(tr98Notify, "%s.%s", tr98ObjName, paramList->name);
+			break;
+		}
+		paramList++;
+	}
+
+	if(found) {
+		json_object_object_add(*tr98NotifyInfo, tr98Notify, JSON_OBJ_COPY(tr181ParamVal));
+	}
+
+	return ZCFG_SUCCESS;
+}
+
+int zyExtDnsEntryObjAttrGet(char *tr98FullPathName, int handler, char *paramName)
+{
+	char tr181Obj[128] = {0};
+	char mapObj[128] = {0};
+	uint32_t  dnsOid = 0;
+	objIndex_t dnsIid;
+	int attrValue = ZCFG_NO_SUCH_PARAMETER;
+	tr98Parameter_t *paramList = NULL;
+
+	zcfgLog(ZCFG_LOG_DEBUG, "Enter %s\n", __FUNCTION__);
+
+	if(zcfgFe98To181MappingNameGet(tr98FullPathName, mapObj) != ZCFG_SUCCESS) {
+		return ZCFG_INVALID_OBJECT;
+	}
+	
+	IID_INIT(dnsIid);
+	snprintf(tr181Obj, sizeof(tr181Obj),"Device.%s", mapObj);
+	dnsOid = zcfgFeObjNameToObjId(tr181Obj, &dnsIid);
+	
+	/*fill up tr98 devInfo object*/
+	paramList = tr98Obj[handler].parameter;
+	while(paramList->name != NULL) {
+		if(strcmp(paramList->name, paramName)){
+			paramList++;
+			continue;
+		}
+		
+		/*special case*/
+
+		attrValue = zcfgFeParamAttrGetByName(dnsOid, paramList->name);
+		if(attrValue < 0 ) {
+			attrValue = 0;
+		}
+		break;
+	}
+	
+	return attrValue;
+}
+
+zcfgRet_t zyExtDnsEntryObjAttrSet(char *tr98FullPathName, int handler, char *paramName, int newNotify, struct json_object *multiAttrJobj)
+{
+	zcfgRet_t ret = ZCFG_SUCCESS;
+	char tr181Obj[128] = {0};
+	char mapObj[128] = {0};
+	uint32_t  dnsOid = 0;
+	objIndex_t dnsIid;
+	int attrValue = 0;
+	tr98Parameter_t *paramList = NULL;
+
+	zcfgLog(ZCFG_LOG_DEBUG, "Enter %s\n", __FUNCTION__);
+	if(zcfgFe98To181MappingNameGet(tr98FullPathName, mapObj) != ZCFG_SUCCESS) {
+		return ZCFG_INVALID_OBJECT;
+	}
+	
+	IID_INIT(dnsIid);
+	snprintf(tr181Obj, sizeof(tr181Obj),"Device.%s", mapObj);
+	dnsOid = zcfgFeObjNameToObjId(tr181Obj, &dnsIid);
+
+	paramList = tr98Obj[handler].parameter;
+	while(paramList->name != NULL) {
+		/*find the matched parameter*/
+		if(strcmp(paramList->name, paramName)){
+			paramList++;
+			continue;
+		}
+		/*special case*/
+		
+		attrValue = zcfgFeParamAttrGetByName(dnsOid, paramList->name);
+		if(attrValue < 0) {
+			ret = ZCFG_INVALID_ARGUMENTS;
+			break;
+		}
+
+		/*Write new parameter attribute from tr98 object to tr181 objects*/
+		attrValue = zcfgFeNotifyAttrValSet(attrValue, newNotify);
+		ret = zcfgFeMultiParamAttrAppend(dnsOid, multiAttrJobj, paramList->name, attrValue);
+		if( ret != ZCFG_SUCCESS){
+			zcfgLog(ZCFG_LOG_ERR, "%s(): set %d %s attribute fail\n", __FUNCTION__, dnsOid, paramList->name);
+		}
+		break;
+
+	} /*Edn while*/
+	
+	return ret;
+}
 
 /*
  *   TR98 Object Name : InternetGatewayDevice.X_ZYXEL_EXT.DynamicDNS
@@ -1992,12 +2237,10 @@
 		return ZCFG_INVALID_OBJECT;
 	}
 	
-
 	IID_INIT(devInfoIid);
 	snprintf(tr181Obj, sizeof(tr181Obj),"Device.%s", mapObj);
 	devInfoOid = zcfgFeObjNameToObjId(tr181Obj, &devInfoIid);
-		
-
+	
 	/*fill up tr98 devInfo object*/
 	paramList = tr98Obj[handler].parameter;
 	while(paramList->name != NULL) {
@@ -2092,19 +2335,14 @@
 	IID_INIT(objIid);
 	objIid.level = 1;
 	sscanf(tr98FullPathName, "InternetGatewayDevice.X_ZYXEL_EXT.SNMP.TrapAddr.%hhu", &objIid.idx[0]);
-	printf("[@@]%s tr98FullPathName=%s\n", __FUNCTION__, tr98FullPathName);
-
+	
 	if((ret = feObjJsonGet(RDM_OID_TRAP_ADDR, &objIid, &SnmpTrapJobj, updateFlag)) != ZCFG_SUCCESS)
 		return ret;
 	
-	printf("[@@]%s():%d\n", __FUNCTION__, __LINE__);
-	
 	/*fill up tr98 object from related tr181 objects*/
 	*tr98Jobj = json_object_new_object();
 	paramList = tr98Obj[handler].parameter;
-	printf("[@@]%s():%d\n", __FUNCTION__, __LINE__);
 	while(paramList->name != NULL) {
-		printf("[@@]%s paramList->name=%s\n", __FUNCTION__, paramList->name);
 		/*Write parameter value from tr181 objects to tr98 object*/		
 		paramValue = json_object_object_get(SnmpTrapJobj, paramList->name);
 		if(paramValue != NULL) {
@@ -2350,8 +2588,7 @@
 			zcfgLog(ZCFG_LOG_ERR, "%s(): set %d %s attribute fail\n", __FUNCTION__, devInfoOid, paramList->name);
 		}
 		break;
-
-	} /*Edn while*/
+	}
 	
 	return ret;
 }
@@ -2766,6 +3003,41 @@
 	paramList = tr98Obj[handler].parameter;
 	while(paramList->name != NULL) {
 		/*Write parameter value from tr181 objects to tr98 object*/
+		if(!strcmp(paramList->name, "Interface")) {
+			if(igmpJobj != NULL) {
+				const char *interface = json_object_get_string(json_object_object_get(igmpJobj, "Interface"));
+				
+				if(interface) {
+					char wanIpConnName[TR98_MAX_OBJ_NAME_LENGTH] = {0};
+					char igmpIface[TR98_MAX_OBJ_NAME_LENGTH * 5] = {0};
+					char ipIfaceName[32] = {0};
+					char interface_str[75] = {0};
+					char *str = NULL;
+					
+					sprintf(interface_str, "%s", interface);
+					str = strtok(interface_str, ",");
+					while (str != NULL) {
+						sprintf(ipIfaceName, "%s", str);
+						memset(wanIpConnName, 0, TR98_MAX_OBJ_NAME_LENGTH);
+						
+						if (zcfgFe181To98MappingNameGet(ipIfaceName, wanIpConnName) != ZCFG_SUCCESS) {
+							str = strtok(NULL, ",");
+							continue;
+						}
+						sprintf(wanIpConnName, "%s,", wanIpConnName);
+						strcat(igmpIface, wanIpConnName);
+						str = strtok(NULL, ",");
+					}
+					json_object_object_add(*tr98Jobj, paramList->name, json_object_new_string(igmpIface));
+					paramList++;
+					continue;
+				}
+				json_object_object_add(*tr98Jobj, paramList->name, json_object_new_string(""));
+				paramList++;
+				continue;
+			}
+		}
+		
 		paramValue = json_object_object_get(igmpJobj, paramList->name);
 		if(paramValue != NULL) {
 			json_object_object_add(*tr98Jobj, paramList->name, JSON_OBJ_COPY(paramValue));
@@ -3211,6 +3483,7 @@
 
 #endif
 
+/* InternetGatewayDevice.X_ZYXEL_EXT.Log_Setting */
 zcfgRet_t zyExtLogSettingObjGet(char *tr98FullPathName, int handler, struct json_object **tr98Jobj, bool updateFlag){
 	zcfgRet_t ret;
 	objIndex_t objIid;
@@ -3297,47 +3570,127 @@
 	return ZCFG_SUCCESS;
 }
 
-zcfgRet_t zyExtLogClassifyObjGet(char *tr98FullPathName, int handler, struct json_object **tr98Jobj, bool updateFlag){
-	zcfgRet_t ret;
-	objIndex_t objIid;
-	struct json_object *logClassifyJobj = NULL;
-	struct json_object *paramValue = NULL;
+zcfgRet_t zyExtLogSettingObjNotify(char *tr98ObjName, char *tr181ParamName, struct json_object *tr181ParamVal, int handler, struct json_object **tr98NotifyInfo)
+{
+	bool found = false;
+	char tr98Notify[256] = "";
 	tr98Parameter_t *paramList = NULL;
 
-	printf("%s : Enter\n", __FUNCTION__);
-
-	/*Get related tr181 objects*/
-	IID_INIT(objIid);
-	objIid.level = 1;
-	sscanf(tr98FullPathName, "InternetGatewayDevice.X_ZYXEL_EXT.Log_setting.LogClassify.%hhu", &objIid.idx[0]);
+	zcfgLog(ZCFG_LOG_DEBUG, "Enter %s\n", __FUNCTION__);
 
-	if((ret = feObjJsonGet(RDM_OID_LOG_CLASSIFY, &objIid, &logClassifyJobj, updateFlag)) != ZCFG_SUCCESS)
-		return ret;
+	if(*tr98NotifyInfo == NULL) {
+		*tr98NotifyInfo = json_object_new_object();
+	}
 
-	/*fill up tr98 object from related tr181 objects*/
-	*tr98Jobj = json_object_new_object();
 	paramList = tr98Obj[handler].parameter;
 	while(paramList->name != NULL) {
-		/*Write parameter value from tr181 objects to tr98 object*/
-		paramValue = json_object_object_get(logClassifyJobj, paramList->name);
-		if(paramValue != NULL) {
-			json_object_object_add(*tr98Jobj, paramList->name, JSON_OBJ_COPY(paramValue));
-			paramList++;
-			continue;
+		if(strcmp(tr181ParamName, paramList->name) == 0) {
+			found = true;
+			sprintf(tr98Notify, "%s.%s", tr98ObjName, paramList->name);
+			break;
 		}
-
-		/*Not defined in tr181, give it a default value*/
-		printf("Can't find parameter %s in TR181\n", paramList->name);
 		paramList++;
 	}
-	json_object_put(logClassifyJobj);
+
+	if(found) {
+		json_object_object_add(*tr98NotifyInfo, tr98Notify, JSON_OBJ_COPY(tr181ParamVal));
+	}
+
 	return ZCFG_SUCCESS;
 }
 
-zcfgRet_t zyExtLogCategoryObjGet(char *tr98FullPathName, int handler, struct json_object **tr98Jobj, bool updateFlag){
+int zyExtLogSettingObjAttrGet(char *tr98FullPathName, int handler, char *paramName)
+{
+	char tr181Obj[128] = {0};
+	char mapObj[128] = {0};
+	uint32_t  logOid = 0;
+	objIndex_t logIid;
+	int attrValue = ZCFG_NO_SUCH_PARAMETER;
+	tr98Parameter_t *paramList = NULL;
+
+	zcfgLog(ZCFG_LOG_DEBUG, "Enter %s\n", __FUNCTION__);
+
+	if(zcfgFe98To181MappingNameGet(tr98FullPathName, mapObj) != ZCFG_SUCCESS) {
+		return ZCFG_INVALID_OBJECT;
+	}
+	
+	IID_INIT(logIid);
+	snprintf(tr181Obj, sizeof(tr181Obj),"Device.%s", mapObj);
+	logOid = zcfgFeObjNameToObjId(tr181Obj, &logIid);
+	
+	/*fill up tr98 devInfo object*/
+	paramList = tr98Obj[handler].parameter;
+	while(paramList->name != NULL) {
+		if(strcmp(paramList->name, paramName)){
+			paramList++;
+			continue;
+		}
+		
+		/*special case*/
+
+		attrValue = zcfgFeParamAttrGetByName(logOid, paramList->name);
+		if(attrValue < 0 ) {
+			attrValue = 0;
+		}
+		break;
+	}
+	
+	return attrValue;
+}
+
+zcfgRet_t zyExtLogSettingObjAttrSet(char *tr98FullPathName, int handler, char *paramName, int newNotify, struct json_object *multiAttrJobj)
+{
+	zcfgRet_t ret = ZCFG_SUCCESS;
+	char tr181Obj[128] = {0};
+	char mapObj[128] = {0};
+	uint32_t  logOid = 0;
+	objIndex_t logIid;
+	int attrValue = 0;
+	tr98Parameter_t *paramList = NULL;
+
+	zcfgLog(ZCFG_LOG_DEBUG, "Enter %s\n", __FUNCTION__);
+	if(zcfgFe98To181MappingNameGet(tr98FullPathName, mapObj) != ZCFG_SUCCESS) {
+		return ZCFG_INVALID_OBJECT;
+	}
+	
+	IID_INIT(logIid);
+	snprintf(tr181Obj, sizeof(tr181Obj),"Device.%s", mapObj);
+	logOid = zcfgFeObjNameToObjId(tr181Obj, &logIid);
+
+	paramList = tr98Obj[handler].parameter;
+	while(paramList->name != NULL) {
+		/*find the matched parameter*/
+		if(strcmp(paramList->name, paramName)){
+			paramList++;
+			continue;
+		}
+		/*special case*/
+		
+		attrValue = zcfgFeParamAttrGetByName(logOid, paramList->name);
+		if(attrValue < 0) {
+			ret = ZCFG_INVALID_ARGUMENTS;
+			break;
+		}
+
+		/*Write new parameter attribute from tr98 object to tr181 objects*/
+		attrValue = zcfgFeNotifyAttrValSet(attrValue, newNotify);
+		ret = zcfgFeMultiParamAttrAppend(logOid, multiAttrJobj, paramList->name, attrValue);
+		if( ret != ZCFG_SUCCESS){
+			zcfgLog(ZCFG_LOG_ERR, "%s(): set %d %s attribute fail\n", __FUNCTION__, logOid, paramList->name);
+		}
+		break;
+
+	} /*Edn while*/
+	
+	return ret;
+}
+
+/* InternetGatewayDevice.X_ZYXEL_EXT.Log_Setting.LogClassify.i */
+zcfgRet_t zyExtLogClassifyObjGet(char *tr98FullPathName, int handler, struct json_object **tr98Jobj, bool updateFlag)
+{
 	zcfgRet_t ret;
 	objIndex_t objIid;
-	struct json_object *logCategoryJobj = NULL;
+	struct json_object *logClassifyJobj = NULL;
 	struct json_object *paramValue = NULL;
 	tr98Parameter_t *paramList = NULL;
 
@@ -3345,18 +3698,19 @@
 
 	/*Get related tr181 objects*/
 	IID_INIT(objIid);
-	objIid.level = 2;
-	sscanf(tr98FullPathName, "InternetGatewayDevice.X_ZYXEL_EXT.Log_Setting.LogClassify.%hhu.Category.%hhu", &objIid.idx[0] ,&objIid.idx[1]);
-
-	if((ret = feObjJsonGet(RDM_OID_LOG_CATEGORY, &objIid, &logCategoryJobj, updateFlag)) != ZCFG_SUCCESS)
+	objIid.level = 1;
+	sscanf(tr98FullPathName, "InternetGatewayDevice.X_ZYXEL_EXT.Log_Setting.LogClassify.%hhu", &objIid.idx[0]);
+	
+	if((ret = feObjJsonGet(RDM_OID_LOG_CLASSIFY, &objIid, &logClassifyJobj, updateFlag)) != ZCFG_SUCCESS)
 		return ret;
 
 	/*fill up tr98 object from related tr181 objects*/
 	*tr98Jobj = json_object_new_object();
 	paramList = tr98Obj[handler].parameter;
-	while(paramList->name != NULL) {
+	while(paramList->name != NULL)
+	{
 		/*Write parameter value from tr181 objects to tr98 object*/		
-		paramValue = json_object_object_get(logCategoryJobj, paramList->name);
+		paramValue = json_object_object_get(logClassifyJobj, paramList->name);
 		if(paramValue != NULL) {
 			json_object_object_add(*tr98Jobj, paramList->name, JSON_OBJ_COPY(paramValue));
 			paramList++;
@@ -3367,8 +3721,186 @@
 		printf("Can't find parameter %s in TR181\n", paramList->name);
 		paramList++;	
 	}
+	json_object_put(logClassifyJobj);
+	return ZCFG_SUCCESS;
+}
+
+zcfgRet_t zyExtLogClassifyObjAdd(char *tr98FullPathName, int *idx)
+{
+	zcfgRet_t ret;
+	objIndex_t objIid;
+
+	printf("%s : Enter\n", __FUNCTION__);
+
+	IID_INIT(objIid);
+	ret = zcfgFeObjStructAdd(RDM_OID_LOG_CLASSIFY, &objIid, NULL);
+	*idx = objIid.idx[0];
+
+	return ret;
+}
+
+zcfgRet_t zyExtLogClassifyObjDel(char *tr98FullPathName)
+{
+	objIndex_t objIid;
+
+	printf("%s : Enter\n", __FUNCTION__);
+
+	IID_INIT(objIid);
+	objIid.level = 1;
+	sscanf(tr98FullPathName, "InternetGatewayDevice.X_ZYXEL_EXT.Log_Setting.LogClassify.%hhu", &objIid.idx[0]);
+
+	return zcfgFeObjStructDel(RDM_OID_LOG_CLASSIFY, &objIid, NULL);;
+}
+
+zcfgRet_t zyExtLogClassifyObjNotify(char *tr98ObjName, char *tr181ParamName, struct json_object *tr181ParamVal, int handler, struct json_object **tr98NotifyInfo)
+{
+	bool found = false;
+	char tr98Notify[256] = "";
+	tr98Parameter_t *paramList = NULL;
+
+	zcfgLog(ZCFG_LOG_DEBUG, "Enter %s\n", __FUNCTION__);
+
+	if(*tr98NotifyInfo == NULL) {
+		*tr98NotifyInfo = json_object_new_object();
+	}
+
+	paramList = tr98Obj[handler].parameter;
+	while(paramList->name != NULL) {
+		if(strcmp(tr181ParamName, paramList->name) == 0) {
+			found = true;
+			sprintf(tr98Notify, "%s.%s", tr98ObjName, paramList->name);
+			break;
+		}
+		paramList++;
+	}
+
+	if(found) {
+		json_object_object_add(*tr98NotifyInfo, tr98Notify, JSON_OBJ_COPY(tr181ParamVal));
+	}
+
+	return ZCFG_SUCCESS;
+}
+
+int zyExtLogClassifyObjAttrGet(char *tr98FullPathName, int handler, char *paramName)
+{
+	char tr181Obj[128] = {0};
+	char mapObj[128] = {0};
+	uint32_t  logOid = 0;
+	objIndex_t logIid;
+	int attrValue = ZCFG_NO_SUCH_PARAMETER;
+	tr98Parameter_t *paramList = NULL;
+
+	zcfgLog(ZCFG_LOG_DEBUG, "Enter %s\n", __FUNCTION__);
+
+	if(zcfgFe98To181MappingNameGet(tr98FullPathName, mapObj) != ZCFG_SUCCESS) {
+		return ZCFG_INVALID_OBJECT;
+	}
+	
+	IID_INIT(logIid);
+	snprintf(tr181Obj, sizeof(tr181Obj),"Device.%s", mapObj);
+	logOid = zcfgFeObjNameToObjId(tr181Obj, &logIid);
+	
+	/*fill up tr98 devInfo object*/
+	paramList = tr98Obj[handler].parameter;
+	while(paramList->name != NULL) {
+		if(strcmp(paramList->name, paramName)){
+			paramList++;
+			continue;
+		}
+		
+		attrValue = zcfgFeParamAttrGetByName(logOid, paramList->name);
+		if(attrValue < 0 ) {
+			attrValue = 0;
+		}
+		break;
+	}
+	
+	return attrValue;
+}
+
+zcfgRet_t zyExtLogClassifyObjAttrSet(char *tr98FullPathName, int handler, char *paramName, int newNotify, struct json_object *multiAttrJobj)
+{
+	zcfgRet_t ret = ZCFG_SUCCESS;
+	char tr181Obj[128] = {0};
+	char mapObj[128] = {0};
+	uint32_t  logOid = 0;
+	objIndex_t logIid;
+	int attrValue = 0;
+	tr98Parameter_t *paramList = NULL;
+
+	zcfgLog(ZCFG_LOG_DEBUG, "Enter %s\n", __FUNCTION__);
+	if(zcfgFe98To181MappingNameGet(tr98FullPathName, mapObj) != ZCFG_SUCCESS) {
+		return ZCFG_INVALID_OBJECT;
+	}
+	
+	IID_INIT(logIid);
+	snprintf(tr181Obj, sizeof(tr181Obj),"Device.%s", mapObj);
+	logOid = zcfgFeObjNameToObjId(tr181Obj, &logIid);
+
+	paramList = tr98Obj[handler].parameter;
+	while(paramList->name != NULL) {
+		/*find the matched parameter*/
+		if(strcmp(paramList->name, paramName)){
+			paramList++;
+			continue;
+		}
+		
+		attrValue = zcfgFeParamAttrGetByName(logOid, paramList->name);
+		if(attrValue < 0) {
+			ret = ZCFG_INVALID_ARGUMENTS;
+			break;
+		}
+
+		/*Write new parameter attribute from tr98 object to tr181 objects*/
+		attrValue = zcfgFeNotifyAttrValSet(attrValue, newNotify);
+		ret = zcfgFeMultiParamAttrAppend(logOid, multiAttrJobj, paramList->name, attrValue);
+		if( ret != ZCFG_SUCCESS){
+			zcfgLog(ZCFG_LOG_ERR, "%s(): set %d %s attribute fail\n", __FUNCTION__, logOid, paramList->name);
+		}
+		break;
+
+	} /*Edn while*/
+	
+	return ret;
+}
 
-	json_object_put(logCategoryJobj);
+/* InternetGatewayDevice.X_ZYXEL_EXT.Log_Setting.LogClassify.i.Category.i */
+zcfgRet_t zyExtLogCategoryObjGet(char *tr98FullPathName, int handler, struct json_object **tr98Jobj, bool updateFlag)
+{
+	zcfgRet_t ret;
+	char logObjFormate[128] = "InternetGatewayDevice.X_ZYXEL_EXT.Log_Setting.LogClassify.%hhu.Category.%hhu";
+	uint32_t  logOid = 0;
+	objIndex_t logIid;
+	struct json_object *logObj = NULL;
+	struct json_object *paramValue = NULL;
+	tr98Parameter_t *paramList = NULL;
+
+	zcfgLog(ZCFG_LOG_DEBUG, "Enter %s\n", __FUNCTION__);
+
+	IID_INIT(logIid);
+	logIid.level = 2;
+	if(sscanf(tr98FullPathName, logObjFormate, &logIid.idx[0], &logIid.idx[1]) != 2)
+		return ZCFG_INVALID_OBJECT;	
+	logOid = RDM_OID_LOG_CATEGORY;
+
+	if((ret = feObjJsonGet(logOid, &logIid, &logObj, updateFlag)) != ZCFG_SUCCESS)
+		return ret;
+	
+	/*fill up tr98 rule object*/
+	*tr98Jobj = json_object_new_object();
+	paramList = tr98Obj[handler].parameter;
+	while(paramList->name != NULL) {
+		paramValue = json_object_object_get(logObj, paramList->name);
+		if(paramValue != NULL) {
+			json_object_object_add(*tr98Jobj, paramList->name, JSON_OBJ_COPY(paramValue));
+			paramList++;
+			continue;
+		}
+		/*Not defined in tr181, give it a default value*/
+		zcfgLog(ZCFG_LOG_DEBUG, "Can't find parameter %s in TR181\n", paramList->name);
+		paramList++;
+	}
+	json_object_put(logObj);
 
 	return ZCFG_SUCCESS;
 }
@@ -3427,113 +3959,1153 @@
 	return ZCFG_SUCCESS;
 }
 
-/* InternetGatewayDevice.X_ZYXEL_EXT.MacFilter */
-zcfgRet_t zyExtMacFilterObjGet(char *tr98FullPathName, int handler, struct json_object **tr98Jobj, bool updateFlag)
+zcfgRet_t zyExtLogCategoryObjAdd(char *tr98FullPathName, int *idx)
 {
 	zcfgRet_t ret;
-	//char tr181Obj[128] = {0};
-	//char mapObj[128] = {0};
-	uint32_t  macFilterOid = 0;
-	objIndex_t macFilterIid;
-	struct json_object *macFilterObj = NULL;
-	struct json_object *paramValue = NULL;
+	char logObjFormate[128] = "InternetGatewayDevice.X_ZYXEL_EXT.Log_Setting.LogClassify.%hhu.Category";
+	uint32_t  logOid = 0;
+	objIndex_t logIid;
+
+	zcfgLog(ZCFG_LOG_DEBUG, "Enter %s\n", __FUNCTION__);
+
+	IID_INIT(logIid);
+	logIid.level = 1;
+	if(sscanf(tr98FullPathName, logObjFormate, &logIid.idx[0]) != 1) return ZCFG_INVALID_OBJECT;	
+	logOid = RDM_OID_LOG_CATEGORY;
+
+	if((ret = zcfgFeObjStructAdd(logOid, &logIid, NULL)) != ZCFG_SUCCESS) {
+		zcfgLog(ZCFG_LOG_DEBUG,"%s : Add X_ZYXEL_EXT.Log_Setting.LogClassify.%hhu.Category. Fail.\n", __FUNCTION__, logIid.idx[0]);
+		return ret;
+	}
+
+	*idx = logIid.idx[1];
+	
+	return ZCFG_SUCCESS;
+}
+
+zcfgRet_t zyExtLogCategoryObjDel(char *tr98FullPathName)
+{
+	zcfgRet_t ret;
+	char logObjFormate[128] = "InternetGatewayDevice.X_ZYXEL_EXT.Log_Setting.LogClassify.%hhu.Category.%hhu";
+	uint32_t  logOid = 0;
+	objIndex_t logIid;
+
+	zcfgLog(ZCFG_LOG_DEBUG, "Enter %s\n", __FUNCTION__);
+
+	IID_INIT(logIid);
+	logIid.level = 2;
+	if(sscanf(tr98FullPathName, logObjFormate, &logIid.idx[0], &logIid.idx[1]) != 2) return ZCFG_INVALID_OBJECT;	
+	logOid = RDM_OID_LOG_CATEGORY;
+
+	ret = zcfgFeObjStructDel(logOid, &logIid, NULL);
+	if (ret != ZCFG_SUCCESS) {
+		zcfgLog(ZCFG_LOG_DEBUG, "%s : Delete Firewall.Chain.%hhu.Rule.%hhu Fail\n", __FUNCTION__, logIid.idx[0], logIid.idx[1]);
+	}
+
+	return ret;
+}
+
+zcfgRet_t zyExtLogCategoryObjNotify(char *tr98ObjName, char *tr181ParamName, struct json_object *tr181ParamVal, int handler, struct json_object **tr98NotifyInfo)
+{
+	bool found = false;
+	char tr98Notify[256] = "";
+	tr98Parameter_t *paramList = NULL;
+
+	zcfgLog(ZCFG_LOG_DEBUG, "Enter %s\n", __FUNCTION__);
+
+	if(*tr98NotifyInfo == NULL) {
+		*tr98NotifyInfo = json_object_new_object();
+	}
+
+	paramList = tr98Obj[handler].parameter;
+	while(paramList->name != NULL) {
+		if(strcmp(tr181ParamName, paramList->name) == 0) {
+			found = true;
+			sprintf(tr98Notify, "%s.%s", tr98ObjName, paramList->name);
+			break;
+		}
+		paramList++;
+	}
+
+	if(found) {
+		json_object_object_add(*tr98NotifyInfo, tr98Notify, JSON_OBJ_COPY(tr181ParamVal));
+	}
+
+	return ZCFG_SUCCESS;
+}
+
+int zyExtLogCategoryObjAttrGet(char *tr98FullPathName, int handler, char *paramName)
+{
+	char tr181Obj[128] = {0};
+	char mapObj[128] = {0};
+	uint32_t  logOid = 0;
+	objIndex_t logIid;
+	int attrValue = ZCFG_NO_SUCH_PARAMETER;
+	tr98Parameter_t *paramList = NULL;
+
+	zcfgLog(ZCFG_LOG_DEBUG, "Enter %s\n", __FUNCTION__);
+
+	if(zcfgFe98To181MappingNameGet(tr98FullPathName, mapObj) != ZCFG_SUCCESS) {
+		return ZCFG_INVALID_OBJECT;
+	}
+	
+	IID_INIT(logIid);
+	snprintf(tr181Obj, sizeof(tr181Obj),"Device.%s", mapObj);
+	logOid = zcfgFeObjNameToObjId(tr181Obj, &logIid);
+	
+	/*fill up tr98 devInfo object*/
+	paramList = tr98Obj[handler].parameter;
+	while(paramList->name != NULL) {
+		if(strcmp(paramList->name, paramName)){
+			paramList++;
+			continue;
+		}
+		
+		/*special case*/
+
+		attrValue = zcfgFeParamAttrGetByName(logOid, paramList->name);
+		if(attrValue < 0 ) {
+			attrValue = 0;
+		}
+		break;
+	}
+	
+	return attrValue;
+}
+
+zcfgRet_t zyExtLogCategoryObjAttrSet(char *tr98FullPathName, int handler, char *paramName, int newNotify, struct json_object *multiAttrJobj)
+{
+	zcfgRet_t ret = ZCFG_SUCCESS;
+	char tr181Obj[128] = {0};
+	char mapObj[128] = {0};
+	uint32_t  logOid = 0;
+	objIndex_t logIid;
+	int attrValue = 0;
+	tr98Parameter_t *paramList = NULL;
+
+	zcfgLog(ZCFG_LOG_DEBUG, "Enter %s\n", __FUNCTION__);
+	if(zcfgFe98To181MappingNameGet(tr98FullPathName, mapObj) != ZCFG_SUCCESS) {
+		return ZCFG_INVALID_OBJECT;
+	}
+	
+	IID_INIT(logIid);
+	snprintf(tr181Obj, sizeof(tr181Obj),"Device.%s", mapObj);
+	logOid = zcfgFeObjNameToObjId(tr181Obj, &logIid);
+
+	paramList = tr98Obj[handler].parameter;
+	while(paramList->name != NULL) {
+		/*find the matched parameter*/
+		if(strcmp(paramList->name, paramName)){
+			paramList++;
+			continue;
+		}
+		/*special case*/
+		
+		attrValue = zcfgFeParamAttrGetByName(logOid, paramList->name);
+		if(attrValue < 0) {
+			ret = ZCFG_INVALID_ARGUMENTS;
+			break;
+		}
+
+		/*Write new parameter attribute from tr98 object to tr181 objects*/
+		attrValue = zcfgFeNotifyAttrValSet(attrValue, newNotify);
+		ret = zcfgFeMultiParamAttrAppend(logOid, multiAttrJobj, paramList->name, attrValue);
+		if( ret != ZCFG_SUCCESS){
+			zcfgLog(ZCFG_LOG_ERR, "%s(): set %d %s attribute fail\n", __FUNCTION__, logOid, paramList->name);
+		}
+		break;
+
+	}
+	
+	return ret;
+}
+
+/* InternetGatewayDevice.X_ZYXEL_EXT.MacFilter */
+zcfgRet_t zyExtMacFilterObjGet(char *tr98FullPathName, int handler, struct json_object **tr98Jobj, bool updateFlag)
+{
+	zcfgRet_t ret;
+	//char tr181Obj[128] = {0};
+	//char mapObj[128] = {0};
+	uint32_t  macFilterOid = 0;
+	objIndex_t macFilterIid;
+	struct json_object *macFilterObj = NULL;
+	struct json_object *paramValue = NULL;
+	tr98Parameter_t *paramList = NULL;
+	zcfgLog(ZCFG_LOG_DEBUG, "Enter %s\n", __FUNCTION__);
+
+	IID_INIT(macFilterIid);
+	/*if(zcfgFe98To181MappingNameGet(tr98FullPathName, mapObj) != ZCFG_SUCCESS) {
+		printf("%d:Get %s failed\n", __LINE__, tr98FullPathName);
+		return ZCFG_INVALID_OBJECT;
+	}*/
+	//snprintf(tr181Obj, sizeof(tr181Obj),"Device.%s", mapObj);
+	macFilterOid = RDM_OID_ZY_MAC_FILTER;
+
+	if((ret = feObjJsonGet(macFilterOid, &macFilterIid, &macFilterObj, updateFlag)) != ZCFG_SUCCESS)
+		return ret;	
+
+	/*fill up tr98 firewall object*/
+	*tr98Jobj = json_object_new_object();
+	paramList = tr98Obj[handler].parameter;
+	while(paramList->name != NULL) {
+		paramValue = json_object_object_get(macFilterObj, paramList->name);
+		if(paramValue != NULL) {
+			json_object_object_add(*tr98Jobj, paramList->name, JSON_OBJ_COPY(paramValue));
+			paramList++;
+			continue;
+		}
+		/*Not defined in tr181, give it a default value*/
+		zcfgLog(ZCFG_LOG_DEBUG, "Can't find parameter %s in TR181\n", paramList->name);
+		paramList++;
+	}
+	json_object_put(macFilterObj);
+	return ZCFG_SUCCESS;
+}
+
+/* InternetGatewayDevice.X_ZYXEL_EXT.MacFilter */
+zcfgRet_t zyExtMacFilterObjSet(char *tr98FullPathName, int handler, struct json_object *tr98Jobj, struct json_object *multiJobj, char *paramfault)
+{
+	zcfgRet_t ret;
+	//char tr181Obj[128] = {0};
+	//char mapObj[128] = {0};
+	uint32_t  macFilterOid = 0;
+	objIndex_t macFilterIid;
+	struct json_object *macFilterObj = NULL;
+	struct json_object *paramValue = NULL;
+	struct json_object *tr181ParamValue = NULL;
+	struct json_object *tmpObj = NULL;
+	tr98Parameter_t *paramList = NULL;
+
+	zcfgLog(ZCFG_LOG_DEBUG, "Enter %s\n", __FUNCTION__);
+
+	IID_INIT(macFilterIid);
+	/*if(zcfgFe98To181MappingNameGet(tr98FullPathName, mapObj) != ZCFG_SUCCESS) {
+		printf("%d:Get %s failed\n", __LINE__, tr98FullPathName);
+		return ZCFG_INVALID_OBJECT;
+	}*/
+	
+	//snprintf(tr181Obj, sizeof(tr181Obj),"Device.%s", mapObj);
+	macFilterOid = RDM_OID_ZY_MAC_FILTER;
+	if((ret = zcfgFeObjJsonGet(macFilterOid, &macFilterIid, &macFilterObj)) != ZCFG_SUCCESS)
+		return ret;
+	
+	if(multiJobj){
+		tmpObj = macFilterObj;
+		macFilterObj = NULL;
+		macFilterObj = zcfgFeJsonMultiObjAppend(macFilterOid, &macFilterIid, multiJobj, tmpObj);
+	}
+
+	paramList = tr98Obj[handler].parameter;
+	while(paramList->name != NULL) {
+		/*Write new parameter value from tr98 object to tr181 objects*/
+		paramValue = json_object_object_get(tr98Jobj, paramList->name);
+		if(paramValue != NULL) {
+			tr181ParamValue = json_object_object_get(macFilterObj, paramList->name);
+			if(tr181ParamValue != NULL) {
+				json_object_object_add(macFilterObj, paramList->name, JSON_OBJ_COPY(paramValue));
+				paramList++;
+				continue;
+			}
+		}
+		paramList++;	
+	} /*Edn while*/
+	
+	/*Set */
+	if(multiJobj){
+		json_object_put(tmpObj);
+	}
+	else{
+		if((ret = zcfgFeObjJsonSet(macFilterOid, &macFilterIid, macFilterObj, NULL)) != ZCFG_SUCCESS ) {
+			json_object_put(macFilterObj);
+			return ret;
+		}
+		json_object_put(macFilterObj);
+	}
+	
+	return ZCFG_SUCCESS;
+}
+
+zcfgRet_t zyExtMacFilterObjNotify(char *tr98ObjName, char *tr181ParamName, struct json_object *tr181ParamVal, int handler, struct json_object **tr98NotifyInfo)
+{
+	bool found = false;
+	char tr98Notify[256] = "";
+	tr98Parameter_t *paramList = NULL;
+
+	zcfgLog(ZCFG_LOG_DEBUG, "Enter %s\n", __FUNCTION__);
+
+	if(*tr98NotifyInfo == NULL) {
+		*tr98NotifyInfo = json_object_new_object();
+	}
+
+	paramList = tr98Obj[handler].parameter;
+	while(paramList->name != NULL) {
+		if(strcmp(tr181ParamName, paramList->name) == 0) {
+			found = true;
+			sprintf(tr98Notify, "%s.%s", tr98ObjName, paramList->name);
+			break;
+		}
+		paramList++;
+	}
+
+	if(found) {
+		json_object_object_add(*tr98NotifyInfo, tr98Notify, JSON_OBJ_COPY(tr181ParamVal));
+	}
+
+	return ZCFG_SUCCESS;
+}
+
+int zyExtMacFilterObjAttrGet(char *tr98FullPathName, int handler, char *paramName)
+{
+	char tr181Obj[128] = {0};
+	char mapObj[128] = {0};
+	uint32_t  macOid = 0;
+	objIndex_t macIid;
+	int attrValue = ZCFG_NO_SUCH_PARAMETER;
+	tr98Parameter_t *paramList = NULL;
+
+	zcfgLog(ZCFG_LOG_DEBUG, "Enter %s\n", __FUNCTION__);
+
+	if(zcfgFe98To181MappingNameGet(tr98FullPathName, mapObj) != ZCFG_SUCCESS) {
+		return ZCFG_INVALID_OBJECT;
+	}
+	
+	IID_INIT(macIid);
+	snprintf(tr181Obj, sizeof(tr181Obj),"Device.%s", mapObj);
+	macOid = zcfgFeObjNameToObjId(tr181Obj, &macIid);
+	
+	/*fill up tr98 devInfo object*/
+	paramList = tr98Obj[handler].parameter;
+	while(paramList->name != NULL) {
+		if(strcmp(paramList->name, paramName)){
+			paramList++;
+			continue;
+		}
+		
+		/*special case*/
+
+		attrValue = zcfgFeParamAttrGetByName(macOid, paramList->name);
+		if(attrValue < 0 ) {
+			attrValue = 0;
+		}
+		break;
+	}
+	
+	return attrValue;
+}
+
+zcfgRet_t zyExtMacFilterObjAttrSet(char *tr98FullPathName, int handler, char *paramName, int newNotify, struct json_object *multiAttrJobj)
+{
+	zcfgRet_t ret = ZCFG_SUCCESS;
+	char tr181Obj[128] = {0};
+	char mapObj[128] = {0};
+	uint32_t  macOid = 0;
+	objIndex_t macIid;
+	int attrValue = 0;
+	tr98Parameter_t *paramList = NULL;
+
+	zcfgLog(ZCFG_LOG_DEBUG, "Enter %s\n", __FUNCTION__);
+	if(zcfgFe98To181MappingNameGet(tr98FullPathName, mapObj) != ZCFG_SUCCESS) {
+		return ZCFG_INVALID_OBJECT;
+	}
+	
+	IID_INIT(macIid);
+	snprintf(tr181Obj, sizeof(tr181Obj),"Device.%s", mapObj);
+	macOid = zcfgFeObjNameToObjId(tr181Obj, &macIid);
+
+	paramList = tr98Obj[handler].parameter;
+	while(paramList->name != NULL) {
+		/*find the matched parameter*/
+		if(strcmp(paramList->name, paramName)){
+			paramList++;
+			continue;
+		}
+		/*special case*/
+		
+		attrValue = zcfgFeParamAttrGetByName(macOid, paramList->name);
+		if(attrValue < 0) {
+			ret = ZCFG_INVALID_ARGUMENTS;
+			break;
+		}
+
+		/*Write new parameter attribute from tr98 object to tr181 objects*/
+		attrValue = zcfgFeNotifyAttrValSet(attrValue, newNotify);
+		ret = zcfgFeMultiParamAttrAppend(macOid, multiAttrJobj, paramList->name, attrValue);
+		if( ret != ZCFG_SUCCESS){
+			zcfgLog(ZCFG_LOG_ERR, "%s(): set %d %s attribute fail\n", __FUNCTION__, macOid, paramList->name);
+		}
+		break;
+
+	} /*Edn while*/
+	
+	return ret;
+}
+
+/* InternetGatewayDevice.X_ZYXEL_EXT.MacFilter.WhiteList.i */
+zcfgRet_t zyExtMacFilterWhiteListObjGet(char *tr98FullPathName, int handler, struct json_object **tr98Jobj, bool updateFlag)
+{
+	zcfgRet_t ret;
+	char levelObjFormate[128] = "InternetGatewayDevice.X_ZYXEL_EXT.MacFilter.WhiteList.%hhu";
+	uint32_t  levelOid = 0;
+	objIndex_t levelIid;
+	struct json_object *levelObj = NULL;
+	struct json_object *paramValue = NULL;
+	tr98Parameter_t *paramList = NULL;
+
+	zcfgLog(ZCFG_LOG_DEBUG, "Enter %s\n", __FUNCTION__);
+	IID_INIT(levelIid);
+	levelIid.level = 1;
+	if(sscanf(tr98FullPathName, levelObjFormate, levelIid.idx) != 1) return ZCFG_INVALID_OBJECT;	
+	levelOid = RDM_OID_ZY_MAC_FILTER_WHITE_LIST;
+
+	if((ret = feObjJsonGet(levelOid, &levelIid, &levelObj, updateFlag)) != ZCFG_SUCCESS)
+		return ret;
+
+	/*fill up tr98 level object*/
+	*tr98Jobj = json_object_new_object();
+	paramList = tr98Obj[handler].parameter;
+	while(paramList->name != NULL) {
+		paramValue = json_object_object_get(levelObj, paramList->name);
+		if(paramValue != NULL) {
+			json_object_object_add(*tr98Jobj, paramList->name, JSON_OBJ_COPY(paramValue));
+			paramList++;
+			continue;
+		}
+		/*Not defined in tr181, give it a default value*/
+		zcfgLog(ZCFG_LOG_DEBUG, "Can't find parameter %s in TR181\n", paramList->name);
+		paramList++;
+	}
+	json_object_put(levelObj);
+	return ZCFG_SUCCESS;
+}
+
+zcfgRet_t zyExtMacFilterWhiteListObjSet(char *tr98FullPathName, int handler, struct json_object *tr98Jobj, struct json_object *multiJobj, char *paramfault)
+{
+	zcfgRet_t ret;
+	char whiteListObjFormate[128] = "InternetGatewayDevice.X_ZYXEL_EXT.MacFilter.WhiteList.%hhu";
+	uint32_t  whiteListOid = 0;
+	objIndex_t whiteListIid;
+	struct json_object *whiteListObj = NULL;
+	struct json_object *paramValue = NULL;
+	struct json_object *tr181ParamValue = NULL;
+	struct json_object *tmpObj = NULL;
+	tr98Parameter_t *paramList = NULL;
+	int index = 0;
+	char macAddr[18] = {0};
+
+	zcfgLog(ZCFG_LOG_DEBUG, "Enter %s\n", __FUNCTION__);
+
+	IID_INIT(whiteListIid);
+	whiteListIid.level = 1;
+	if(sscanf(tr98FullPathName, whiteListObjFormate, whiteListIid.idx) != 1) return ZCFG_INVALID_OBJECT;	
+	whiteListOid = RDM_OID_ZY_MAC_FILTER_WHITE_LIST;
+
+	if((ret = zcfgFeObjJsonGet(whiteListOid, &whiteListIid, &whiteListObj)) != ZCFG_SUCCESS)
+		return ret;
+	if(multiJobj){
+		tmpObj = whiteListObj;
+		whiteListObj = NULL;
+		whiteListObj = zcfgFeJsonMultiObjAppend(whiteListOid, &whiteListIid, multiJobj, tmpObj);
+	}
+
+	paramList = tr98Obj[handler].parameter;
+	while(paramList->name != NULL) {
+		/*Write new parameter value from tr98 object to tr181 objects*/
+		paramValue = json_object_object_get(tr98Jobj, paramList->name);
+		if(paramValue != NULL) {
+			tr181ParamValue = json_object_object_get(whiteListObj, paramList->name);
+			if(tr181ParamValue != NULL) {
+				// -------- check validity of MAC start --------
+				if(strcmp(paramList->name, "MACAddress") == 0){
+					strcpy(macAddr, json_object_get_string(paramValue));
+					if(strcmp(macAddr, "") != 0){
+						for(; index < 17; index++) {
+							if(index % 3 != 2 && !isxdigit(macAddr[index])){
+								json_object_put(whiteListObj);
+								return ZCFG_INVALID_ARGUMENTS;
+							}
+							else if(index % 3 == 2 && macAddr[index] != ':'){
+								json_object_put(whiteListObj);
+								return ZCFG_INVALID_ARGUMENTS;
+							}
+						}
+						if(macAddr[17] != '\0'){
+							json_object_put(whiteListObj);
+							return ZCFG_INVALID_ARGUMENTS;
+						}
+					}
+				}
+				// -------- check validity of MAC end --------
+				json_object_object_add(whiteListObj, paramList->name, JSON_OBJ_COPY(paramValue));
+				paramList++;
+				continue;
+			}
+		}		
+		paramList++;	
+	} /*Edn while*/
+	
+	/*Set */
+	if(multiJobj){
+		json_object_put(tmpObj);
+	}
+	else{
+		if((ret = zcfgFeObjJsonSet(whiteListOid, &whiteListIid, whiteListObj, NULL)) != ZCFG_SUCCESS ) {
+			json_object_put(whiteListObj);
+			return ret;
+		}
+		json_object_put(whiteListObj);
+	}
+	
+	return ZCFG_SUCCESS;
+}
+
+zcfgRet_t zyExtMacFilterWhiteListObjAdd(char *tr98FullPathName, int *idx)
+{
+	zcfgRet_t ret;
+	objIndex_t objIid;
+
+	printf("%s : Enter\n", __FUNCTION__);
+
+	IID_INIT(objIid);
+	ret = zcfgFeObjStructAdd(RDM_OID_ZY_MAC_FILTER_WHITE_LIST, &objIid, NULL);
+	*idx = objIid.idx[0];
+
+	return ret;
+}
+
+zcfgRet_t zyExtMacFilterWhiteListObjDel(char *tr98FullPathName)
+{
+	zcfgRet_t ret;
+	char levelObjFormate[128] = "InternetGatewayDevice.X_ZYXEL_EXT.MacFilter.WhiteList.%hhu";
+	uint32_t  levelOid = 0;
+	objIndex_t levelIid;
+
+	zcfgLog(ZCFG_LOG_DEBUG, "Enter %s\n", __FUNCTION__);
+
+	IID_INIT(levelIid);
+	levelIid.level = 1;
+	if(sscanf(tr98FullPathName, levelObjFormate, levelIid.idx) != 1) return ZCFG_INVALID_OBJECT;	
+	levelOid = RDM_OID_ZY_MAC_FILTER_WHITE_LIST;
+
+
+	ret = zcfgFeObjStructDel(levelOid, &levelIid, NULL);
+	if (ret != ZCFG_SUCCESS) {
+		zcfgLog(ZCFG_LOG_DEBUG, "%s : Delete X_ZYXEL_EXT.MacFilter.WhiteList.%hhu Fail\n", __FUNCTION__, levelIid.idx[0]);
+	}
+
+	return ret;
+}
+
+zcfgRet_t zyExtMacFilterWhiteListObjNotify(char *tr98ObjName, char *tr181ParamName, struct json_object *tr181ParamVal, int handler, struct json_object **tr98NotifyInfo)
+{
+	bool found = false;
+	char tr98Notify[256] = "";
+	tr98Parameter_t *paramList = NULL;
+
+	zcfgLog(ZCFG_LOG_DEBUG, "Enter %s\n", __FUNCTION__);
+
+	if(*tr98NotifyInfo == NULL) {
+		*tr98NotifyInfo = json_object_new_object();
+	}
+
+	paramList = tr98Obj[handler].parameter;
+	while(paramList->name != NULL) {
+		if(strcmp(tr181ParamName, paramList->name) == 0) {
+			found = true;
+			sprintf(tr98Notify, "%s.%s", tr98ObjName, paramList->name);
+			break;
+		}
+		paramList++;
+	}
+
+	if(found) {
+		json_object_object_add(*tr98NotifyInfo, tr98Notify, JSON_OBJ_COPY(tr181ParamVal));
+	}
+
+	return ZCFG_SUCCESS;
+}
+
+int zyExtMacFilterWhiteListObjAttrGet(char *tr98FullPathName, int handler, char *paramName)
+{
+	char tr181Obj[128] = {0};
+	char mapObj[128] = {0};
+	uint32_t  macOid = 0;
+	objIndex_t macIid;
+	int attrValue = ZCFG_NO_SUCH_PARAMETER;
+	tr98Parameter_t *paramList = NULL;
+
+	zcfgLog(ZCFG_LOG_DEBUG, "Enter %s\n", __FUNCTION__);
+
+	if(zcfgFe98To181MappingNameGet(tr98FullPathName, mapObj) != ZCFG_SUCCESS) {
+		return ZCFG_INVALID_OBJECT;
+	}
+	
+	IID_INIT(macIid);
+	snprintf(tr181Obj, sizeof(tr181Obj),"Device.%s", mapObj);
+	macOid = zcfgFeObjNameToObjId(tr181Obj, &macIid);
+	
+	/*fill up tr98 devInfo object*/
+	paramList = tr98Obj[handler].parameter;
+	while(paramList->name != NULL) {
+		if(strcmp(paramList->name, paramName)){
+			paramList++;
+			continue;
+		}
+		
+		attrValue = zcfgFeParamAttrGetByName(macOid, paramList->name);
+		if(attrValue < 0 ) {
+			attrValue = 0;
+		}
+		break;
+	}
+	
+	return attrValue;
+}
+
+zcfgRet_t zyExtMacFilterWhiteListObjAttrSet(char *tr98FullPathName, int handler, char *paramName, int newNotify, struct json_object *multiAttrJobj)
+{
+	zcfgRet_t ret = ZCFG_SUCCESS;
+	char tr181Obj[128] = {0};
+	char mapObj[128] = {0};
+	uint32_t  macOid = 0;
+	objIndex_t macIid;
+	int attrValue = 0;
+	tr98Parameter_t *paramList = NULL;
+
+	zcfgLog(ZCFG_LOG_DEBUG, "Enter %s\n", __FUNCTION__);
+	if(zcfgFe98To181MappingNameGet(tr98FullPathName, mapObj) != ZCFG_SUCCESS) {
+		return ZCFG_INVALID_OBJECT;
+	}
+	
+	IID_INIT(macIid);
+	snprintf(tr181Obj, sizeof(tr181Obj),"Device.%s", mapObj);
+	macOid = zcfgFeObjNameToObjId(tr181Obj, &macIid);
+
+	paramList = tr98Obj[handler].parameter;
+	while(paramList->name != NULL) {
+		/*find the matched parameter*/
+		if(strcmp(paramList->name, paramName)){
+			paramList++;
+			continue;
+		}
+		
+		attrValue = zcfgFeParamAttrGetByName(macOid, paramList->name);
+		if(attrValue < 0) {
+			ret = ZCFG_INVALID_ARGUMENTS;
+			break;
+		}
+
+		/*Write new parameter attribute from tr98 object to tr181 objects*/
+		attrValue = zcfgFeNotifyAttrValSet(attrValue, newNotify);
+		ret = zcfgFeMultiParamAttrAppend(macOid, multiAttrJobj, paramList->name, attrValue);
+		if( ret != ZCFG_SUCCESS){
+			zcfgLog(ZCFG_LOG_ERR, "%s(): set %d %s attribute fail\n", __FUNCTION__, macOid, paramList->name);
+		}
+		break;
+	}
+	
+	return ret;
+}
+
+/*
+ *   TR98 Object Name : InternetGatewayDevice.X_ZYXEL_EXT.ParentalControl
+ *
+ *   Related object in TR181: Device.X_ZYXEL_ParentalControl
+ *
+ */
+zcfgRet_t zyExtParenCtlObjGet(char *tr98FullPathName, int handler, struct json_object **tr98Jobj, bool updateFlag){
+	zcfgRet_t ret;
+	objIndex_t objIid;
+	struct json_object *parenCtlJobj = NULL;
+	struct json_object *paramValue = NULL;
+	tr98Parameter_t *paramList = NULL;
+
+	printf("%s : Enter\n", __FUNCTION__);
+
+	/*Get related tr181 objects*/
+	IID_INIT(objIid);
+	if((ret = feObjJsonGet(RDM_OID_PAREN_CTL, &objIid, &parenCtlJobj, updateFlag)) != ZCFG_SUCCESS){
+		return ret;
+	}
+
+	/*fill up tr98 object from related tr181 objects*/
+	*tr98Jobj = json_object_new_object();
+	paramList = tr98Obj[handler].parameter;
+	while(paramList->name != NULL){
+		/*Write parameter value from tr181 objects to tr98 object*/		
+		paramValue = json_object_object_get(parenCtlJobj, paramList->name);
+		if(paramValue != NULL){
+			json_object_object_add(*tr98Jobj, paramList->name, JSON_OBJ_COPY(paramValue));
+			paramList++;
+			continue;
+		}
+
+		/*Not defined in tr181, give it a default value*/
+		printf("Can't find parameter %s in TR181\n", paramList->name);
+		paramList++;	
+	}
+	
+	json_object_put(parenCtlJobj);
+	
+	return ZCFG_SUCCESS;
+}
+
+zcfgRet_t zyExtParenCtlObjSet(char *tr98FullPathName, int handler, struct json_object *tr98Jobj, struct json_object *multiJobj, char *paramfault){
+	zcfgRet_t ret;
+	objIndex_t objIid;
+	struct json_object *parenCtlJobj = NULL;
+	struct json_object *tmpObj = NULL;
+	struct json_object *paramValue = NULL;
+	struct json_object *tr181ParamValue = NULL;
+	tr98Parameter_t *paramList = NULL;
+
+	printf("%s : Enter\n", __FUNCTION__);
+
+	/*Get related tr181 objects*/
+	IID_INIT(objIid);
+	if((ret = zcfgFeObjJsonGet(RDM_OID_PAREN_CTL, &objIid, &parenCtlJobj)) != ZCFG_SUCCESS){
+		return ret;
+	}
+
+	if(multiJobj){
+		tmpObj = parenCtlJobj;
+		parenCtlJobj = NULL;
+		parenCtlJobj = zcfgFeJsonMultiObjAppend(RDM_OID_PAREN_CTL, &objIid, multiJobj, tmpObj);
+	}
+
+	paramList = tr98Obj[handler].parameter;
+	while(paramList->name != NULL){
+		/*Write new parameter value from tr98 object to tr181 objects*/	
+		paramValue = json_object_object_get(tr98Jobj, paramList->name);
+		if(paramValue != NULL){
+			tr181ParamValue = json_object_object_get(parenCtlJobj, paramList->name);
+			if(tr181ParamValue != NULL){
+				json_object_object_add(parenCtlJobj, paramList->name, JSON_OBJ_COPY(paramValue));
+				paramList++;
+				continue;
+			}
+		}
+		printf("Can't find parameter %s in TR181\n", paramList->name);
+
+		paramList++;	
+	}
+
+	if(multiJobj){
+		json_object_put(tmpObj);
+	}
+	else{
+		if((ret = zcfgFeObjJsonSet(RDM_OID_PAREN_CTL, &objIid, parenCtlJobj, NULL)) != ZCFG_SUCCESS ){
+			json_object_put(parenCtlJobj);
+			return ret;
+		}
+		json_object_put(parenCtlJobj);
+	}
+	
+	return ZCFG_SUCCESS;
+}
+
+zcfgRet_t zyExtParenCtlObjNotify(char *tr98ObjName, char *tr181ParamName, struct json_object *tr181ParamVal, int handler, struct json_object **tr98NotifyInfo)
+{
+	bool found = false;
+	char tr98Notify[256] = "";
+	tr98Parameter_t *paramList = NULL;
+
+	zcfgLog(ZCFG_LOG_DEBUG, "Enter %s\n", __FUNCTION__);
+
+	if(*tr98NotifyInfo == NULL) {
+		*tr98NotifyInfo = json_object_new_object();
+	}
+
+	paramList = tr98Obj[handler].parameter;
+	while(paramList->name != NULL) {
+		if(strcmp(tr181ParamName, paramList->name) == 0) {
+			found = true;
+			sprintf(tr98Notify, "%s.%s", tr98ObjName, paramList->name);
+			break;
+		}
+		paramList++;
+	}
+
+	if(found) {
+		json_object_object_add(*tr98NotifyInfo, tr98Notify, JSON_OBJ_COPY(tr181ParamVal));
+	}
+
+	return ZCFG_SUCCESS;
+}
+
+int zyExtParenCtlObjAttrGet(char *tr98FullPathName, int handler, char *paramName)
+{
+	char tr181Obj[128] = {0};
+	char mapObj[128] = {0};
+	uint32_t  parenCtlOid = 0;
+	objIndex_t parenCtlIid;
+	int attrValue = ZCFG_NO_SUCH_PARAMETER;
+	tr98Parameter_t *paramList = NULL;
+
+	zcfgLog(ZCFG_LOG_DEBUG, "Enter %s\n", __FUNCTION__);
+
+	if(zcfgFe98To181MappingNameGet(tr98FullPathName, mapObj) != ZCFG_SUCCESS) {
+		return ZCFG_INVALID_OBJECT;
+	}
+	
+	IID_INIT(parenCtlIid);
+	snprintf(tr181Obj, sizeof(tr181Obj),"Device.%s", mapObj);
+	parenCtlOid = zcfgFeObjNameToObjId(tr181Obj, &parenCtlIid);
+	
+	/*fill up tr98 devInfo object*/
+	paramList = tr98Obj[handler].parameter;
+	while(paramList->name != NULL) {
+		if(strcmp(paramList->name, paramName)){
+			paramList++;
+			continue;
+		}
+		
+		/*special case*/
+
+		attrValue = zcfgFeParamAttrGetByName(parenCtlOid, paramList->name);
+		if(attrValue < 0 ) {
+			attrValue = 0;
+		}
+		break;
+	}
+	
+	return attrValue;
+}
+
+zcfgRet_t zyExtParenCtlObjAttrSet(char *tr98FullPathName, int handler, char *paramName, int newNotify, struct json_object *multiAttrJobj)
+{
+	zcfgRet_t ret = ZCFG_SUCCESS;
+	char tr181Obj[128] = {0};
+	char mapObj[128] = {0};
+	uint32_t  parenCtlOid = 0;
+	objIndex_t parenCtlIid;
+	int attrValue = 0;
+	tr98Parameter_t *paramList = NULL;
+
+	zcfgLog(ZCFG_LOG_DEBUG, "Enter %s\n", __FUNCTION__);
+	if(zcfgFe98To181MappingNameGet(tr98FullPathName, mapObj) != ZCFG_SUCCESS) {
+		return ZCFG_INVALID_OBJECT;
+	}
+	
+	IID_INIT(parenCtlIid);
+	snprintf(tr181Obj, sizeof(tr181Obj),"Device.%s", mapObj);
+	parenCtlOid = zcfgFeObjNameToObjId(tr181Obj, &parenCtlIid);
+
+	paramList = tr98Obj[handler].parameter;
+	while(paramList->name != NULL) {
+		/*find the matched parameter*/
+		if(strcmp(paramList->name, paramName)){
+			paramList++;
+			continue;
+		}
+		/*special case*/
+		
+		attrValue = zcfgFeParamAttrGetByName(parenCtlOid, paramList->name);
+		if(attrValue < 0) {
+			ret = ZCFG_INVALID_ARGUMENTS;
+			break;
+		}
+
+		/*Write new parameter attribute from tr98 object to tr181 objects*/
+		attrValue = zcfgFeNotifyAttrValSet(attrValue, newNotify);
+		ret = zcfgFeMultiParamAttrAppend(parenCtlOid, multiAttrJobj, paramList->name, attrValue);
+		if( ret != ZCFG_SUCCESS){
+			zcfgLog(ZCFG_LOG_ERR, "%s(): set %d %s attribute fail\n", __FUNCTION__, parenCtlOid, paramList->name);
+		}
+		break;
+	}
+	
+	return ret;
+}
+
+/*
+ *   TR98 Object Name : InternetGatewayDevice.X_ZYXEL_EXT.ParentalControl.Profile.i
+ *
+ *   Related object in TR181: Device.X_ZYXEL_ParentalControl.Profile.i
+ *
+ */
+zcfgRet_t zyExtParenCtlProfObjGet(char *tr98FullPathName, int handler, struct json_object **tr98Jobj, bool updateFlag)
+{
+	zcfgRet_t ret;
+	objIndex_t objIid;
+	struct json_object *parenCtlProfJobj = NULL;
+	struct json_object *paramValue = NULL;
+	tr98Parameter_t *paramList = NULL;
+
+	printf("%s : Enter\n", __FUNCTION__);
+
+	/*Get related tr181 objects*/
+	IID_INIT(objIid);
+	objIid.level = 1;
+	sscanf(tr98FullPathName, "InternetGatewayDevice.X_ZYXEL_EXT.ParentalControl.Profile.%hhu", &objIid.idx[0]);
+
+	if((ret = feObjJsonGet(RDM_OID_PAREN_CTL_PROF, &objIid, &parenCtlProfJobj, updateFlag)) != ZCFG_SUCCESS){
+		return ret;
+	}
+
+	/*fill up tr98 object from related tr181 objects*/
+	*tr98Jobj = json_object_new_object();
+	paramList = tr98Obj[handler].parameter;
+	while(paramList->name != NULL){
+		/*Write parameter value from tr181 objects to tr98 object*/ 	
+		paramValue = json_object_object_get(parenCtlProfJobj, paramList->name);
+		if(paramValue != NULL){
+			json_object_object_add(*tr98Jobj, paramList->name, JSON_OBJ_COPY(paramValue));
+			paramList++;
+			continue;
+		}
+
+		/*Not defined in tr181, give it a default value*/
+		printf("Can't find parameter %s in TR181\n", paramList->name);
+		paramList++;	
+	}
+
+	json_object_put(parenCtlProfJobj);
+
+	return ZCFG_SUCCESS;
+}
+
+zcfgRet_t zyExtParenCtlProfObjSet(char *tr98FullPathName, int handler, struct json_object *tr98Jobj, struct json_object *multiJobj, char *paramfault)
+{
+	zcfgRet_t ret;
+	objIndex_t objIid;
+	struct json_object *parenCtlProfJobj = NULL;
+	struct json_object *tmpObj = NULL;
+	struct json_object *paramValue = NULL;
+	struct json_object *tr181ParamValue = NULL;
+	tr98Parameter_t *paramList = NULL;
+
+	printf("%s : Enter\n", __FUNCTION__);
+
+	/*Get related tr181 objects*/
+	IID_INIT(objIid);
+	objIid.level = 1;
+	sscanf(tr98FullPathName, "InternetGatewayDevice.X_ZYXEL_EXT.ParentalControl.Profile.%hhu", &objIid.idx[0]);
+
+	if((ret = zcfgFeObjJsonGet(RDM_OID_PAREN_CTL_PROF, &objIid, &parenCtlProfJobj)) != ZCFG_SUCCESS){
+		return ret;
+	}
+
+	if(multiJobj){
+		tmpObj = parenCtlProfJobj;
+		parenCtlProfJobj = NULL;
+		parenCtlProfJobj = zcfgFeJsonMultiObjAppend(RDM_OID_PAREN_CTL_PROF, &objIid, multiJobj, tmpObj);
+	}
+
+	paramList = tr98Obj[handler].parameter;
+	while(paramList->name != NULL){
+		/*Write new parameter value from tr98 object to tr181 objects*/	
+		paramValue = json_object_object_get(tr98Jobj, paramList->name);
+		if(paramValue != NULL){
+			tr181ParamValue = json_object_object_get(parenCtlProfJobj, paramList->name);
+			if(tr181ParamValue != NULL){
+				json_object_object_add(parenCtlProfJobj, paramList->name, JSON_OBJ_COPY(paramValue));
+				paramList++;
+				continue;
+			}
+		}
+
+		printf("Can't find parameter %s in TR181\n", paramList->name);
+
+		paramList++;	
+	}
+
+	if(multiJobj){
+		json_object_put(tmpObj);
+	}
+	else{
+		if((ret = zcfgFeObjJsonSet(RDM_OID_PAREN_CTL_PROF, &objIid, parenCtlProfJobj, NULL)) != ZCFG_SUCCESS ){
+			json_object_put(parenCtlProfJobj);
+			return ret;
+		}
+		json_object_put(parenCtlProfJobj);
+	}
+
+	return ZCFG_SUCCESS;
+}
+
+zcfgRet_t zyExtParenCtlProfObjAdd(char *tr98FullPathName, int *idx)
+{
+	zcfgRet_t ret;
+	objIndex_t objIid;
+
+	printf("%s : Enter\n", __FUNCTION__);
+
+	IID_INIT(objIid);
+	ret = zcfgFeObjStructAdd(RDM_OID_PAREN_CTL_PROF, &objIid, NULL);
+	*idx = objIid.idx[0];
+
+	return ret;
+}
+
+zcfgRet_t zyExtParenCtlProfObjDel(char *tr98FullPathName)
+{
+	objIndex_t objIid;
+
+	printf("%s : Enter\n", __FUNCTION__);
+
+	IID_INIT(objIid);
+	objIid.level = 1;
+	sscanf(tr98FullPathName, "InternetGatewayDevice.X_ZYXEL_EXT.ParentalControl.Profile.%hhu", &objIid.idx[0]);
+
+	return zcfgFeObjStructDel(RDM_OID_PAREN_CTL_PROF, &objIid, NULL);;
+}
+
+zcfgRet_t zyExtParenCtlProfObjNotify(char *tr98ObjName, char *tr181ParamName, struct json_object *tr181ParamVal, int handler, struct json_object **tr98NotifyInfo)
+{
+	bool found = false;
+	char tr98Notify[256] = "";
+	tr98Parameter_t *paramList = NULL;
+
+	zcfgLog(ZCFG_LOG_DEBUG, "Enter %s\n", __FUNCTION__);
+
+	if(*tr98NotifyInfo == NULL) {
+		*tr98NotifyInfo = json_object_new_object();
+	}
+
+	paramList = tr98Obj[handler].parameter;
+	while(paramList->name != NULL) {
+		if(strcmp(tr181ParamName, paramList->name) == 0) {
+			found = true;
+			sprintf(tr98Notify, "%s.%s", tr98ObjName, paramList->name);
+			break;
+		}
+		paramList++;
+	}
+
+	if(found) {
+		json_object_object_add(*tr98NotifyInfo, tr98Notify, JSON_OBJ_COPY(tr181ParamVal));
+	}
+
+	return ZCFG_SUCCESS;
+}
+
+int zyExtParenCtlProfObjAttrGet(char *tr98FullPathName, int handler, char *paramName)
+{
+	char tr181Obj[128] = {0};
+	char mapObj[128] = {0};
+	uint32_t  parentCtlOid = 0;
+	objIndex_t parentCtlIid;
+	int attrValue = ZCFG_NO_SUCH_PARAMETER;
+	tr98Parameter_t *paramList = NULL;
+
+	zcfgLog(ZCFG_LOG_DEBUG, "Enter %s\n", __FUNCTION__);
+
+	if(zcfgFe98To181MappingNameGet(tr98FullPathName, mapObj) != ZCFG_SUCCESS) {
+		return ZCFG_INVALID_OBJECT;
+	}
+	
+	IID_INIT(parentCtlIid);
+	snprintf(tr181Obj, sizeof(tr181Obj),"Device.%s", mapObj);
+	parentCtlOid = zcfgFeObjNameToObjId(tr181Obj, &parentCtlIid);
+	
+	/*fill up tr98 devInfo object*/
+	paramList = tr98Obj[handler].parameter;
+	while(paramList->name != NULL) {
+		if(strcmp(paramList->name, paramName)){
+			paramList++;
+			continue;
+		}
+		
+		attrValue = zcfgFeParamAttrGetByName(parentCtlOid, paramList->name);
+		if(attrValue < 0 ) {
+			attrValue = 0;
+		}
+		break;
+	}
+	
+	return attrValue;
+}
+
+zcfgRet_t zyExtParenCtlProfObjAttrSet(char *tr98FullPathName, int handler, char *paramName, int newNotify, struct json_object *multiAttrJobj)
+{
+	zcfgRet_t ret = ZCFG_SUCCESS;
+	char tr181Obj[128] = {0};
+	char mapObj[128] = {0};
+	uint32_t  parentCtlOid = 0;
+	objIndex_t parentCtlIid;
+	int attrValue = 0;
 	tr98Parameter_t *paramList = NULL;
-	zcfgLog(ZCFG_LOG_DEBUG, "Enter %s\n", __FUNCTION__);
 
-	IID_INIT(macFilterIid);
-	/*if(zcfgFe98To181MappingNameGet(tr98FullPathName, mapObj) != ZCFG_SUCCESS) {
-		printf("%d:Get %s failed\n", __LINE__, tr98FullPathName);
+	zcfgLog(ZCFG_LOG_DEBUG, "Enter %s\n", __FUNCTION__);
+	if(zcfgFe98To181MappingNameGet(tr98FullPathName, mapObj) != ZCFG_SUCCESS) {
 		return ZCFG_INVALID_OBJECT;
-	}*/
-	//snprintf(tr181Obj, sizeof(tr181Obj),"Device.%s", mapObj);
-	macFilterOid = RDM_OID_ZY_MAC_FILTER;
-
-	if((ret = feObjJsonGet(macFilterOid, &macFilterIid, &macFilterObj, updateFlag)) != ZCFG_SUCCESS)
-		return ret;	
+	}
+	
+	IID_INIT(parentCtlIid);
+	snprintf(tr181Obj, sizeof(tr181Obj),"Device.%s", mapObj);
+	parentCtlOid = zcfgFeObjNameToObjId(tr181Obj, &parentCtlIid);
 
-	/*fill up tr98 firewall object*/
-	*tr98Jobj = json_object_new_object();
 	paramList = tr98Obj[handler].parameter;
 	while(paramList->name != NULL) {
-		paramValue = json_object_object_get(macFilterObj, paramList->name);
-		if(paramValue != NULL) {
-			json_object_object_add(*tr98Jobj, paramList->name, JSON_OBJ_COPY(paramValue));
+		/*find the matched parameter*/
+		if(strcmp(paramList->name, paramName)){
 			paramList++;
 			continue;
 		}
-		/*Not defined in tr181, give it a default value*/
-		zcfgLog(ZCFG_LOG_DEBUG, "Can't find parameter %s in TR181\n", paramList->name);
-		paramList++;
+		
+		attrValue = zcfgFeParamAttrGetByName(parentCtlOid, paramList->name);
+		if(attrValue < 0) {
+			ret = ZCFG_INVALID_ARGUMENTS;
+			break;
+		}
+
+		/*Write new parameter attribute from tr98 object to tr181 objects*/
+		attrValue = zcfgFeNotifyAttrValSet(attrValue, newNotify);
+		ret = zcfgFeMultiParamAttrAppend(parentCtlOid, multiAttrJobj, paramList->name, attrValue);
+		if( ret != ZCFG_SUCCESS){
+			zcfgLog(ZCFG_LOG_ERR, "%s(): set %d %s attribute fail\n", __FUNCTION__, parentCtlOid, paramList->name);
+		}
+		break;
 	}
-	json_object_put(macFilterObj);
-	return ZCFG_SUCCESS;
+	
+	return ret;
 }
 
-/* InternetGatewayDevice.X_ZYXEL_EXT.MacFilter */
-zcfgRet_t zyExtMacFilterObjSet(char *tr98FullPathName, int handler, struct json_object *tr98Jobj, struct json_object *multiJobj, char *paramfault)
+/*
+ *   TR98 Object Name : InternetGatewayDevice.X_ZYXEL_EXT.Security
+ *
+ *   Related object in TR181: Device.Security
+ *
+ */
+zcfgRet_t zyExtSecObjGet(char *tr98FullPathName, int handler, struct json_object **tr98Jobj, bool updateFlag)
 {
 	zcfgRet_t ret;
-	//char tr181Obj[128] = {0};
-	//char mapObj[128] = {0};
-	uint32_t  macFilterOid = 0;
-	objIndex_t macFilterIid;
-	struct json_object *macFilterObj = NULL;
+	objIndex_t objIid;
+	struct json_object *secJobj = NULL;
 	struct json_object *paramValue = NULL;
-	struct json_object *tr181ParamValue = NULL;
-	struct json_object *tmpObj = NULL;
 	tr98Parameter_t *paramList = NULL;
 
-	zcfgLog(ZCFG_LOG_DEBUG, "Enter %s\n", __FUNCTION__);
+	printf("%s : Enter\n", __FUNCTION__);
 
-	IID_INIT(macFilterIid);
-	/*if(zcfgFe98To181MappingNameGet(tr98FullPathName, mapObj) != ZCFG_SUCCESS) {
-		printf("%d:Get %s failed\n", __LINE__, tr98FullPathName);
-		return ZCFG_INVALID_OBJECT;
-	}*/
-	
-	//snprintf(tr181Obj, sizeof(tr181Obj),"Device.%s", mapObj);
-	macFilterOid = RDM_OID_ZY_MAC_FILTER;
-	if((ret = zcfgFeObjJsonGet(macFilterOid, &macFilterIid, &macFilterObj)) != ZCFG_SUCCESS)
+	/*Get related tr181 objects*/
+	IID_INIT(objIid);
+	if((ret = feObjJsonGet(RDM_OID_DEV_SEC, &objIid, &secJobj, updateFlag)) != ZCFG_SUCCESS){
 		return ret;
-	
-	if(multiJobj){
-		tmpObj = macFilterObj;
-		macFilterObj = NULL;
-		macFilterObj = zcfgFeJsonMultiObjAppend(macFilterOid, &macFilterIid, multiJobj, tmpObj);
 	}
 
+	/*fill up tr98 object from related tr181 objects*/
+	*tr98Jobj = json_object_new_object();
 	paramList = tr98Obj[handler].parameter;
-	while(paramList->name != NULL) {
-		/*Write new parameter value from tr98 object to tr181 objects*/
-		paramValue = json_object_object_get(tr98Jobj, paramList->name);
-		if(paramValue != NULL) {
-			tr181ParamValue = json_object_object_get(macFilterObj, paramList->name);
-			if(tr181ParamValue != NULL) {
-				json_object_object_add(macFilterObj, paramList->name, JSON_OBJ_COPY(paramValue));
-				paramList++;
-				continue;
-			}
+	while(paramList->name != NULL){
+		/*Write parameter value from tr181 objects to tr98 object*/		
+		paramValue = json_object_object_get(secJobj, paramList->name);
+		if(paramValue != NULL){
+			json_object_object_add(*tr98Jobj, paramList->name, JSON_OBJ_COPY(paramValue));
+			paramList++;
+			continue;
 		}
+
+		/*Not defined in tr181, give it a default value*/
+		printf("Can't find parameter %s in TR181\n", paramList->name);
 		paramList++;	
-	} /*Edn while*/
-	
-	/*Set */
-	if(multiJobj){
-		json_object_put(tmpObj);
-	}
-	else{
-		if((ret = zcfgFeObjJsonSet(macFilterOid, &macFilterIid, macFilterObj, NULL)) != ZCFG_SUCCESS ) {
-			json_object_put(macFilterObj);
-			return ret;
-		}
-		json_object_put(macFilterObj);
 	}
 	
+	json_object_put(secJobj);
+	
 	return ZCFG_SUCCESS;
 }
 
-#if 0
-zcfgRet_t zyExtMacFilterObjNotify(char *tr98ObjName, char *tr181ParamName, struct json_object *tr181ParamVal, int handler, struct json_object **tr98NotifyInfo)
+zcfgRet_t zyExtSecObjNotify(char *tr98ObjName, char *tr181ParamName, struct json_object *tr181ParamVal, int handler, struct json_object **tr98NotifyInfo)
 {
 	bool found = false;
 	char tr98Notify[256] = "";
@@ -3562,12 +5134,12 @@
 	return ZCFG_SUCCESS;
 }
 
-int zyExtMacFilterObjAttrGet(char *tr98FullPathName, int handler, char *paramName)
+int zyExtSecObjAttrGet(char *tr98FullPathName, int handler, char *paramName)
 {
 	char tr181Obj[128] = {0};
 	char mapObj[128] = {0};
-	uint32_t  devInfoOid = 0;
-	objIndex_t devInfoIid;
+	uint32_t  secOid = 0;
+	objIndex_t secIid;
 	int attrValue = ZCFG_NO_SUCH_PARAMETER;
 	tr98Parameter_t *paramList = NULL;
 
@@ -3577,12 +5149,10 @@
 		return ZCFG_INVALID_OBJECT;
 	}
 	
-
-	IID_INIT(devInfoIid);
+	IID_INIT(secIid);
 	snprintf(tr181Obj, sizeof(tr181Obj),"Device.%s", mapObj);
-	devInfoOid = zcfgFeObjNameToObjId(tr181Obj, &devInfoIid);
-		
-
+	secOid = zcfgFeObjNameToObjId(tr181Obj, &secIid);
+	
 	/*fill up tr98 devInfo object*/
 	paramList = tr98Obj[handler].parameter;
 	while(paramList->name != NULL) {
@@ -3593,7 +5163,7 @@
 		
 		/*special case*/
 
-		attrValue = zcfgFeParamAttrGetByName(devInfoOid, paramList->name);
+		attrValue = zcfgFeParamAttrGetByName(secOid, paramList->name);
 		if(attrValue < 0 ) {
 			attrValue = 0;
 		}
@@ -3603,13 +5173,13 @@
 	return attrValue;
 }
 
-zcfgRet_t zyExtMacFilterObjAttrSet(char *tr98FullPathName, int handler, char *paramName, int newNotify, struct json_object *multiAttrJobj)
+zcfgRet_t zyExtSecObjAttrSet(char *tr98FullPathName, int handler, char *paramName, int newNotify, struct json_object *multiAttrJobj)
 {
-	zcfgRet_t ret;
+	zcfgRet_t ret = ZCFG_SUCCESS;
 	char tr181Obj[128] = {0};
 	char mapObj[128] = {0};
-	uint32_t  devInfoOid = 0;
-	objIndex_t devInfoIid;
+	uint32_t  secOid = 0;
+	objIndex_t secIid;
 	int attrValue = 0;
 	tr98Parameter_t *paramList = NULL;
 
@@ -3618,10 +5188,9 @@
 		return ZCFG_INVALID_OBJECT;
 	}
 	
-
-	IID_INIT(devInfoIid);
+	IID_INIT(secIid);
 	snprintf(tr181Obj, sizeof(tr181Obj),"Device.%s", mapObj);
-	devInfoOid = zcfgFeObjNameToObjId(tr181Obj, &devInfoIid);
+	secOid = zcfgFeObjNameToObjId(tr181Obj, &secIid);
 
 	paramList = tr98Obj[handler].parameter;
 	while(paramList->name != NULL) {
@@ -3632,7 +5201,7 @@
 		}
 		/*special case*/
 		
-		attrValue = zcfgFeParamAttrGetByName(devInfoOid, paramList->name);
+		attrValue = zcfgFeParamAttrGetByName(secOid, paramList->name);
 		if(attrValue < 0) {
 			ret = ZCFG_INVALID_ARGUMENTS;
 			break;
@@ -3640,137 +5209,122 @@
 
 		/*Write new parameter attribute from tr98 object to tr181 objects*/
 		attrValue = zcfgFeNotifyAttrValSet(attrValue, newNotify);
-		ret = zcfgFeMultiParamAttrAppend(devInfoOid, multiAttrJobj, paramList->name, attrValue);
+		ret = zcfgFeMultiParamAttrAppend(secOid, multiAttrJobj, paramList->name, attrValue);
 		if( ret != ZCFG_SUCCESS){
-			zcfgLog(ZCFG_LOG_ERR, "%s(): set %d %s attribute fail\n", __FUNCTION__, devInfoOid, paramList->name);
+			zcfgLog(ZCFG_LOG_ERR, "%s(): set %d %s attribute fail\n", __FUNCTION__, secOid, paramList->name);
 		}
 		break;
-
-	} /*Edn while*/
+	}
 	
 	return ret;
 }
-#endif
 
-/* InternetGatewayDevice.X_ZYXEL_EXT.MacFilter.WhiteList.i */
-zcfgRet_t zyExtMacFilterWhiteListObjGet(char *tr98FullPathName, int handler, struct json_object **tr98Jobj, bool updateFlag)
+/*
+ *   TR98 Object Name : InternetGatewayDevice.X_ZYXEL_EXT.Security.Certificate.i
+ *
+ *   Related object in TR181: Device.Security.Certificate.i
+ *
+ */
+zcfgRet_t zyExtSecCertObjGet(char *tr98FullPathName, int handler, struct json_object **tr98Jobj, bool updateFlag)
 {
 	zcfgRet_t ret;
-	char levelObjFormate[128] = "InternetGatewayDevice.X_ZYXEL_EXT.MacFilter.WhiteList.%hhu";
-	uint32_t  levelOid = 0;
-	objIndex_t levelIid;
-	struct json_object *levelObj = NULL;
+	objIndex_t objIid;
+	struct json_object *secJobj = NULL;
 	struct json_object *paramValue = NULL;
 	tr98Parameter_t *paramList = NULL;
 
-	zcfgLog(ZCFG_LOG_DEBUG, "Enter %s\n", __FUNCTION__);
-	IID_INIT(levelIid);
-	levelIid.level = 1;
-	if(sscanf(tr98FullPathName, levelObjFormate, levelIid.idx) != 1) return ZCFG_INVALID_OBJECT;	
-	levelOid = RDM_OID_ZY_MAC_FILTER_WHITE_LIST;
+	printf("%s : Enter\n", __FUNCTION__);
 
-	if((ret = feObjJsonGet(levelOid, &levelIid, &levelObj, updateFlag)) != ZCFG_SUCCESS)
+	/*Get related tr181 objects*/
+	IID_INIT(objIid);
+	objIid.level = 1;
+	sscanf(tr98FullPathName, "InternetGatewayDevice.X_ZYXEL_EXT.Security.Certificate.%hhu", &objIid.idx[0]);
+
+	if((ret = feObjJsonGet(RDM_OID_DEV_SEC_CERT, &objIid, &secJobj, updateFlag)) != ZCFG_SUCCESS){
 		return ret;
+	}
 
-	/*fill up tr98 level object*/
+	/*fill up tr98 object from related tr181 objects*/
 	*tr98Jobj = json_object_new_object();
 	paramList = tr98Obj[handler].parameter;
-	while(paramList->name != NULL) {
-		paramValue = json_object_object_get(levelObj, paramList->name);
-		if(paramValue != NULL) {
+	while(paramList->name != NULL){
+		/*Write parameter value from tr181 objects to tr98 object*/ 	
+		paramValue = json_object_object_get(secJobj, paramList->name);
+		if(paramValue != NULL){
 			json_object_object_add(*tr98Jobj, paramList->name, JSON_OBJ_COPY(paramValue));
 			paramList++;
 			continue;
 		}
+
 		/*Not defined in tr181, give it a default value*/
-		zcfgLog(ZCFG_LOG_DEBUG, "Can't find parameter %s in TR181\n", paramList->name);
-		paramList++;
+		printf("Can't find parameter %s in TR181\n", paramList->name);
+		paramList++;	
 	}
-	json_object_put(levelObj);
+
+	json_object_put(secJobj);
+
 	return ZCFG_SUCCESS;
 }
 
-zcfgRet_t zyExtMacFilterWhiteListObjSet(char *tr98FullPathName, int handler, struct json_object *tr98Jobj, struct json_object *multiJobj, char *paramfault)
+zcfgRet_t zyExtSecCertObjSet(char *tr98FullPathName, int handler, struct json_object *tr98Jobj, struct json_object *multiJobj, char *paramfault)
 {
 	zcfgRet_t ret;
-	char whiteListObjFormate[128] = "InternetGatewayDevice.X_ZYXEL_EXT.MacFilter.WhiteList.%hhu";
-	uint32_t  whiteListOid = 0;
-	objIndex_t whiteListIid;
-	struct json_object *whiteListObj = NULL;
+	objIndex_t objIid;
+	struct json_object *secJobj = NULL;
+	struct json_object *tmpObj = NULL;
 	struct json_object *paramValue = NULL;
 	struct json_object *tr181ParamValue = NULL;
-	struct json_object *tmpObj = NULL;
 	tr98Parameter_t *paramList = NULL;
-	int index = 0;
-	char macAddr[18] = {0};
 
-	zcfgLog(ZCFG_LOG_DEBUG, "Enter %s\n", __FUNCTION__);
+	printf("%s : Enter\n", __FUNCTION__);
 
-	IID_INIT(whiteListIid);
-	whiteListIid.level = 1;
-	if(sscanf(tr98FullPathName, whiteListObjFormate, whiteListIid.idx) != 1) return ZCFG_INVALID_OBJECT;	
-	whiteListOid = RDM_OID_ZY_MAC_FILTER_WHITE_LIST;
+	/*Get related tr181 objects*/
+	IID_INIT(objIid);
+	objIid.level = 1;
+	sscanf(tr98FullPathName, "InternetGatewayDevice.X_ZYXEL_EXT.Security.Certificate.%hhu", &objIid.idx[0]);
 
-	if((ret = zcfgFeObjJsonGet(whiteListOid, &whiteListIid, &whiteListObj)) != ZCFG_SUCCESS)
+	if((ret = zcfgFeObjJsonGet(RDM_OID_DEV_SEC_CERT, &objIid, &secJobj)) != ZCFG_SUCCESS){
 		return ret;
+	}
+
 	if(multiJobj){
-		tmpObj = whiteListObj;
-		whiteListObj = NULL;
-		whiteListObj = zcfgFeJsonMultiObjAppend(whiteListOid, &whiteListIid, multiJobj, tmpObj);
+		tmpObj = secJobj;
+		secJobj = NULL;
+		secJobj = zcfgFeJsonMultiObjAppend(RDM_OID_DEV_SEC_CERT, &objIid, multiJobj, tmpObj);
 	}
 
 	paramList = tr98Obj[handler].parameter;
-	while(paramList->name != NULL) {
-		/*Write new parameter value from tr98 object to tr181 objects*/
+	while(paramList->name != NULL){
+		/*Write new parameter value from tr98 object to tr181 objects*/	
 		paramValue = json_object_object_get(tr98Jobj, paramList->name);
-		if(paramValue != NULL) {
-			tr181ParamValue = json_object_object_get(whiteListObj, paramList->name);
-			if(tr181ParamValue != NULL) {
-				// -------- check validity of MAC start --------
-				if(strcmp(paramList->name, "MACAddress") == 0){
-					strcpy(macAddr, json_object_get_string(paramValue));
-					if(strcmp(macAddr, "") != 0){
-						for(; index < 17; index++) {
-							if(index % 3 != 2 && !isxdigit(macAddr[index])){
-								json_object_put(whiteListObj);
-								return ZCFG_INVALID_ARGUMENTS;
-							}
-							else if(index % 3 == 2 && macAddr[index] != ':'){
-								json_object_put(whiteListObj);
-								return ZCFG_INVALID_ARGUMENTS;
-							}
-						}
-						if(macAddr[17] != '\0'){
-							json_object_put(whiteListObj);
-							return ZCFG_INVALID_ARGUMENTS;
-						}
-					}
-				}
-				// -------- check validity of MAC end --------
-				json_object_object_add(whiteListObj, paramList->name, JSON_OBJ_COPY(paramValue));
+		if(paramValue != NULL){
+			tr181ParamValue = json_object_object_get(secJobj, paramList->name);
+			if(tr181ParamValue != NULL){
+				json_object_object_add(secJobj, paramList->name, JSON_OBJ_COPY(paramValue));
 				paramList++;
 				continue;
 			}
-		}		
+		}
+
+		printf("Can't find parameter %s in TR181\n", paramList->name);
 		paramList++;	
-	} /*Edn while*/
-	
-	/*Set */
+	}
+
 	if(multiJobj){
 		json_object_put(tmpObj);
 	}
 	else{
-		if((ret = zcfgFeObjJsonSet(whiteListOid, &whiteListIid, whiteListObj, NULL)) != ZCFG_SUCCESS ) {
-			json_object_put(whiteListObj);
+		if((ret = zcfgFeObjJsonSet(RDM_OID_DEV_SEC_CERT, &objIid, secJobj, NULL)) != ZCFG_SUCCESS ){
+			json_object_put(secJobj);
 			return ret;
 		}
-		json_object_put(whiteListObj);
+		json_object_put(secJobj);
 	}
-	
+
 	return ZCFG_SUCCESS;
 }
 
-zcfgRet_t zyExtMacFilterWhiteListObjAdd(char *tr98FullPathName, int *idx)
+zcfgRet_t zyExtSecCertObjAdd(char *tr98FullPathName, int *idx)
 {
 	zcfgRet_t ret;
 	objIndex_t objIid;
@@ -3778,36 +5332,26 @@
 	printf("%s : Enter\n", __FUNCTION__);
 
 	IID_INIT(objIid);
-	ret = zcfgFeObjStructAdd(RDM_OID_ZY_MAC_FILTER_WHITE_LIST, &objIid, NULL);
-	*idx = objIid.idx[0];
-
-	return ret;
-}
-
-zcfgRet_t zyExtMacFilterWhiteListObjDel(char *tr98FullPathName)
-{
-	zcfgRet_t ret;
-	char levelObjFormate[128] = "InternetGatewayDevice.X_ZYXEL_EXT.MacFilter.WhiteList.%hhu";
-	uint32_t  levelOid = 0;
-	objIndex_t levelIid;
+	ret = zcfgFeObjStructAdd(RDM_OID_DEV_SEC_CERT, &objIid, NULL);
+	*idx = objIid.idx[0];
 
-	zcfgLog(ZCFG_LOG_DEBUG, "Enter %s\n", __FUNCTION__);
+	return ret;
+}
 
-	IID_INIT(levelIid);
-	levelIid.level = 1;
-	if(sscanf(tr98FullPathName, levelObjFormate, levelIid.idx) != 1) return ZCFG_INVALID_OBJECT;	
-	levelOid = RDM_OID_ZY_MAC_FILTER_WHITE_LIST;
+zcfgRet_t zyExtSecCertObjDel(char *tr98FullPathName)
+{
+	objIndex_t objIid;
 
+	printf("%s : Enter\n", __FUNCTION__);
 
-	ret = zcfgFeObjStructDel(levelOid, &levelIid, NULL);
-	if (ret != ZCFG_SUCCESS) {
-		zcfgLog(ZCFG_LOG_DEBUG, "%s : Delete X_ZYXEL_EXT.MacFilter.WhiteList.%hhu Fail\n", __FUNCTION__, levelIid.idx[0]);
-	}
+	IID_INIT(objIid);
+	objIid.level = 1;
+	sscanf(tr98FullPathName, "InternetGatewayDevice.X_ZYXEL_EXT.Security.Certificate.%hhu", &objIid.idx[0]);
 
-	return ret;
+	return zcfgFeObjStructDel(RDM_OID_DEV_SEC_CERT, &objIid, NULL);;
 }
-#if 0
-zcfgRet_t zyExtMacFilterWhiteListObjNotify(char *tr98ObjName, char *tr181ParamName, struct json_object *tr181ParamVal, int handler, struct json_object **tr98NotifyInfo)
+
+zcfgRet_t zyExtSecCertObjNotify(char *tr98ObjName, char *tr181ParamName, struct json_object *tr181ParamVal, int handler, struct json_object **tr98NotifyInfo)
 {
 	bool found = false;
 	char tr98Notify[256] = "";
@@ -3836,12 +5380,12 @@
 	return ZCFG_SUCCESS;
 }
 
-int zyExtMacFilterWhiteListObjAttrGet(char *tr98FullPathName, int handler, char *paramName)
+int zyExtSecCertObjAttrGet(char *tr98FullPathName, int handler, char *paramName)
 {
 	char tr181Obj[128] = {0};
 	char mapObj[128] = {0};
-	uint32_t  devInfoOid = 0;
-	objIndex_t devInfoIid;
+	uint32_t  secOid = 0;
+	objIndex_t secIid;
 	int attrValue = ZCFG_NO_SUCH_PARAMETER;
 	tr98Parameter_t *paramList = NULL;
 
@@ -3851,12 +5395,10 @@
 		return ZCFG_INVALID_OBJECT;
 	}
 	
-
-	IID_INIT(devInfoIid);
+	IID_INIT(secIid);
 	snprintf(tr181Obj, sizeof(tr181Obj),"Device.%s", mapObj);
-	devInfoOid = zcfgFeObjNameToObjId(tr181Obj, &devInfoIid);
-		
-
+	secOid = zcfgFeObjNameToObjId(tr181Obj, &secIid);
+	
 	/*fill up tr98 devInfo object*/
 	paramList = tr98Obj[handler].parameter;
 	while(paramList->name != NULL) {
@@ -3865,9 +5407,7 @@
 			continue;
 		}
 		
-		/*special case*/
-
-		attrValue = zcfgFeParamAttrGetByName(devInfoOid, paramList->name);
+		attrValue = zcfgFeParamAttrGetByName(secOid, paramList->name);
 		if(attrValue < 0 ) {
 			attrValue = 0;
 		}
@@ -3877,13 +5417,13 @@
 	return attrValue;
 }
 
-zcfgRet_t zyExtMacFilterWhiteListObjAttrSet(char *tr98FullPathName, int handler, char *paramName, int newNotify, struct json_object *multiAttrJobj)
+zcfgRet_t zyExtSecCertObjAttrSet(char *tr98FullPathName, int handler, char *paramName, int newNotify, struct json_object *multiAttrJobj)
 {
-	zcfgRet_t ret;
+	zcfgRet_t ret = ZCFG_SUCCESS;
 	char tr181Obj[128] = {0};
 	char mapObj[128] = {0};
-	uint32_t  devInfoOid = 0;
-	objIndex_t devInfoIid;
+	uint32_t  secOid = 0;
+	objIndex_t secIid;
 	int attrValue = 0;
 	tr98Parameter_t *paramList = NULL;
 
@@ -3892,10 +5432,9 @@
 		return ZCFG_INVALID_OBJECT;
 	}
 	
-
-	IID_INIT(devInfoIid);
+	IID_INIT(secIid);
 	snprintf(tr181Obj, sizeof(tr181Obj),"Device.%s", mapObj);
-	devInfoOid = zcfgFeObjNameToObjId(tr181Obj, &devInfoIid);
+	secOid = zcfgFeObjNameToObjId(tr181Obj, &secIid);
 
 	paramList = tr98Obj[handler].parameter;
 	while(paramList->name != NULL) {
@@ -3904,9 +5443,8 @@
 			paramList++;
 			continue;
 		}
-		/*special case*/
 		
-		attrValue = zcfgFeParamAttrGetByName(devInfoOid, paramList->name);
+		attrValue = zcfgFeParamAttrGetByName(secOid, paramList->name);
 		if(attrValue < 0) {
 			ret = ZCFG_INVALID_ARGUMENTS;
 			break;
@@ -3914,28 +5452,27 @@
 
 		/*Write new parameter attribute from tr98 object to tr181 objects*/
 		attrValue = zcfgFeNotifyAttrValSet(attrValue, newNotify);
-		ret = zcfgFeMultiParamAttrAppend(devInfoOid, multiAttrJobj, paramList->name, attrValue);
+		ret = zcfgFeMultiParamAttrAppend(secOid, multiAttrJobj, paramList->name, attrValue);
 		if( ret != ZCFG_SUCCESS){
-			zcfgLog(ZCFG_LOG_ERR, "%s(): set %d %s attribute fail\n", __FUNCTION__, devInfoOid, paramList->name);
+			zcfgLog(ZCFG_LOG_ERR, "%s(): set %d %s attribute fail\n", __FUNCTION__, secOid, paramList->name);
 		}
 		break;
-
-	} /*Edn while*/
+	}
 	
 	return ret;
 }
-#endif	
 
 /*
- *   TR98 Object Name : InternetGatewayDevice.X_ZYXEL_EXT.ParentalControl
- *
- *   Related object in TR181: Device.X_ZYXEL_ParentalControl
+ *   TR98 Object Name : InternetGatewayDevice.X_ZYXEL_EXT.8021ag
  *
+ *   Related object in TR181:
+ *   Device.X_ZYXEL_8021ag
  */
-zcfgRet_t zyExtParenCtlObjGet(char *tr98FullPathName, int handler, struct json_object **tr98Jobj, bool updateFlag){
+ zcfgRet_t zyExt8021agObjGet(char *tr98FullPathName, int handler, struct json_object **tr98Jobj, bool updateFlag)
+{
 	zcfgRet_t ret;
 	objIndex_t objIid;
-	struct json_object *parenCtlJobj = NULL;
+	struct json_object *ieeeJobj = NULL;
 	struct json_object *paramValue = NULL;
 	tr98Parameter_t *paramList = NULL;
 
@@ -3943,17 +5480,16 @@
 
 	/*Get related tr181 objects*/
 	IID_INIT(objIid);
-	if((ret = feObjJsonGet(RDM_OID_PAREN_CTL, &objIid, &parenCtlJobj, updateFlag)) != ZCFG_SUCCESS){
-		return ret;
-	}
+	if((ret = feObjJsonGet(RDM_OID_IEEE8021AG, &objIid, &ieeeJobj, updateFlag)) != ZCFG_SUCCESS)
+		return ret;	
 
 	/*fill up tr98 object from related tr181 objects*/
 	*tr98Jobj = json_object_new_object();
 	paramList = tr98Obj[handler].parameter;
-	while(paramList->name != NULL){
+	while(paramList->name != NULL) {
 		/*Write parameter value from tr181 objects to tr98 object*/		
-		paramValue = json_object_object_get(parenCtlJobj, paramList->name);
-		if(paramValue != NULL){
+		paramValue = json_object_object_get(ieeeJobj, paramList->name);
+		if(paramValue != NULL) {
 			json_object_object_add(*tr98Jobj, paramList->name, JSON_OBJ_COPY(paramValue));
 			paramList++;
 			continue;
@@ -3963,16 +5499,17 @@
 		printf("Can't find parameter %s in TR181\n", paramList->name);
 		paramList++;	
 	}
-	
-	json_object_put(parenCtlJobj);
-	
+
+	json_object_put(ieeeJobj);
+
 	return ZCFG_SUCCESS;
 }
 
-zcfgRet_t zyExtParenCtlObjSet(char *tr98FullPathName, int handler, struct json_object *tr98Jobj, struct json_object *multiJobj, char *paramfault){
+zcfgRet_t zyExt8021agObjSet(char *tr98FullPathName, int handler, struct json_object *tr98Jobj, struct json_object *multiJobj, char *paramfault)
+{
 	zcfgRet_t ret;
 	objIndex_t objIid;
-	struct json_object *parenCtlJobj = NULL;
+	struct json_object *ieeeJobj = NULL;
 	struct json_object *tmpObj = NULL;
 	struct json_object *paramValue = NULL;
 	struct json_object *tr181ParamValue = NULL;
@@ -3982,28 +5519,28 @@
 
 	/*Get related tr181 objects*/
 	IID_INIT(objIid);
-	if((ret = zcfgFeObjJsonGet(RDM_OID_PAREN_CTL, &objIid, &parenCtlJobj)) != ZCFG_SUCCESS){
+	if((ret = zcfgFeObjJsonGet(RDM_OID_IEEE8021AG, &objIid, &ieeeJobj)) != ZCFG_SUCCESS)
 		return ret;
-	}
 
 	if(multiJobj){
-		tmpObj = parenCtlJobj;
-		parenCtlJobj = NULL;
-		parenCtlJobj = zcfgFeJsonMultiObjAppend(RDM_OID_PAREN_CTL, &objIid, multiJobj, tmpObj);
+		tmpObj = ieeeJobj;
+		ieeeJobj = NULL;
+		ieeeJobj = zcfgFeJsonMultiObjAppend(RDM_OID_IEEE8021AG, &objIid, multiJobj, tmpObj);
 	}
 
 	paramList = tr98Obj[handler].parameter;
-	while(paramList->name != NULL){
+	while(paramList->name != NULL) {
 		/*Write new parameter value from tr98 object to tr181 objects*/	
 		paramValue = json_object_object_get(tr98Jobj, paramList->name);
-		if(paramValue != NULL){
-			tr181ParamValue = json_object_object_get(parenCtlJobj, paramList->name);
-			if(tr181ParamValue != NULL){
-				json_object_object_add(parenCtlJobj, paramList->name, JSON_OBJ_COPY(paramValue));
+		if(paramValue != NULL) {
+			tr181ParamValue = json_object_object_get(ieeeJobj, paramList->name);
+			if(tr181ParamValue != NULL) {
+				json_object_object_add(ieeeJobj, paramList->name, JSON_OBJ_COPY(paramValue));
 				paramList++;
 				continue;
 			}
 		}
+
 		printf("Can't find parameter %s in TR181\n", paramList->name);
 
 		paramList++;	
@@ -4013,149 +5550,130 @@
 		json_object_put(tmpObj);
 	}
 	else{
-		if((ret = zcfgFeObjJsonSet(RDM_OID_PAREN_CTL, &objIid, parenCtlJobj, NULL)) != ZCFG_SUCCESS ){
-			json_object_put(parenCtlJobj);
+		if((ret = zcfgFeObjJsonSet(RDM_OID_IEEE8021AG, &objIid, ieeeJobj, NULL)) != ZCFG_SUCCESS ) {
+			json_object_put(ieeeJobj);
 			return ret;
 		}
-		json_object_put(parenCtlJobj);
+		json_object_put(ieeeJobj);
 	}
-	
+
 	return ZCFG_SUCCESS;
 }
 
-/*
- *   TR98 Object Name : InternetGatewayDevice.X_ZYXEL_EXT.ParentalControl.Profile.i
- *
- *   Related object in TR181: Device.X_ZYXEL_ParentalControl.Profile.i
- *
- */
-zcfgRet_t zyExtParenCtlProfObjGet(char *tr98FullPathName, int handler, struct json_object **tr98Jobj, bool updateFlag)
+zcfgRet_t zyExt8021agObjNotify(char *tr98ObjName, char *tr181ParamName, struct json_object *tr181ParamVal, int handler, struct json_object **tr98NotifyInfo)
 {
-	zcfgRet_t ret;
-	objIndex_t objIid;
-	struct json_object *parenCtlProfJobj = NULL;
-	struct json_object *paramValue = NULL;
+	bool found = false;
+	char tr98Notify[256] = "";
 	tr98Parameter_t *paramList = NULL;
 
-	printf("%s : Enter\n", __FUNCTION__);
-
-	/*Get related tr181 objects*/
-	IID_INIT(objIid);
-	objIid.level = 1;
-	sscanf(tr98FullPathName, "InternetGatewayDevice.X_ZYXEL_EXT.ParentalControl.Profile.%hhu", &objIid.idx[0]);
+	zcfgLog(ZCFG_LOG_DEBUG, "Enter %s\n", __FUNCTION__);
 
-	if((ret = feObjJsonGet(RDM_OID_PAREN_CTL_PROF, &objIid, &parenCtlProfJobj, updateFlag)) != ZCFG_SUCCESS){
-		return ret;
+	if(*tr98NotifyInfo == NULL) {
+		*tr98NotifyInfo = json_object_new_object();
 	}
 
-	/*fill up tr98 object from related tr181 objects*/
-	*tr98Jobj = json_object_new_object();
 	paramList = tr98Obj[handler].parameter;
-	while(paramList->name != NULL){
-		/*Write parameter value from tr181 objects to tr98 object*/ 	
-		paramValue = json_object_object_get(parenCtlProfJobj, paramList->name);
-		if(paramValue != NULL){
-			json_object_object_add(*tr98Jobj, paramList->name, JSON_OBJ_COPY(paramValue));
-			paramList++;
-			continue;
+	while(paramList->name != NULL) {
+		if(strcmp(tr181ParamName, paramList->name) == 0) {
+			found = true;
+			sprintf(tr98Notify, "%s.%s", tr98ObjName, paramList->name);
+			break;
 		}
-
-		/*Not defined in tr181, give it a default value*/
-		printf("Can't find parameter %s in TR181\n", paramList->name);
-		paramList++;	
+		paramList++;
 	}
 
-	json_object_put(parenCtlProfJobj);
+	if(found) {
+		json_object_object_add(*tr98NotifyInfo, tr98Notify, JSON_OBJ_COPY(tr181ParamVal));
+	}
 
 	return ZCFG_SUCCESS;
 }
 
-zcfgRet_t zyExtParenCtlProfObjSet(char *tr98FullPathName, int handler, struct json_object *tr98Jobj, struct json_object *multiJobj, char *paramfault)
+int zyExt8021agObjAttrGet(char *tr98FullPathName, int handler, char *paramName)
 {
-	zcfgRet_t ret;
-	objIndex_t objIid;
-	struct json_object *parenCtlProfJobj = NULL;
-	struct json_object *tmpObj = NULL;
-	struct json_object *paramValue = NULL;
-	struct json_object *tr181ParamValue = NULL;
+	char tr181Obj[128] = {0};
+	char mapObj[128] = {0};
+	uint32_t  ieeeOid = 0;
+	objIndex_t ieeeIid;
+	int attrValue = ZCFG_NO_SUCH_PARAMETER;
 	tr98Parameter_t *paramList = NULL;
 
-	printf("%s : Enter\n", __FUNCTION__);
-
-	/*Get related tr181 objects*/
-	IID_INIT(objIid);
-	objIid.level = 1;
-	sscanf(tr98FullPathName, "InternetGatewayDevice.X_ZYXEL_EXT.ParentalControl.Profile.%hhu", &objIid.idx[0]);
-
-	if((ret = zcfgFeObjJsonGet(RDM_OID_PAREN_CTL_PROF, &objIid, &parenCtlProfJobj)) != ZCFG_SUCCESS){
-		return ret;
-	}
+	zcfgLog(ZCFG_LOG_DEBUG, "Enter %s\n", __FUNCTION__);
 
-	if(multiJobj){
-		tmpObj = parenCtlProfJobj;
-		parenCtlProfJobj = NULL;
-		parenCtlProfJobj = zcfgFeJsonMultiObjAppend(RDM_OID_PAREN_CTL_PROF, &objIid, multiJobj, tmpObj);
+	if(zcfgFe98To181MappingNameGet(tr98FullPathName, mapObj) != ZCFG_SUCCESS) {
+		return ZCFG_INVALID_OBJECT;
 	}
-
+	
+	IID_INIT(ieeeIid);
+	snprintf(tr181Obj, sizeof(tr181Obj),"Device.%s", mapObj);
+	ieeeOid = zcfgFeObjNameToObjId(tr181Obj, &ieeeIid);
+	
+	/*fill up tr98 devInfo object*/
 	paramList = tr98Obj[handler].parameter;
-	while(paramList->name != NULL){
-		/*Write new parameter value from tr98 object to tr181 objects*/	
-		paramValue = json_object_object_get(tr98Jobj, paramList->name);
-		if(paramValue != NULL){
-			tr181ParamValue = json_object_object_get(parenCtlProfJobj, paramList->name);
-			if(tr181ParamValue != NULL){
-				json_object_object_add(parenCtlProfJobj, paramList->name, JSON_OBJ_COPY(paramValue));
-				paramList++;
-				continue;
-			}
+	while(paramList->name != NULL) {
+		if(strcmp(paramList->name, paramName)){
+			paramList++;
+			continue;
 		}
+		
+		/*special case*/
 
-		printf("Can't find parameter %s in TR181\n", paramList->name);
-
-		paramList++;	
-	}
-
-	if(multiJobj){
-		json_object_put(tmpObj);
-	}
-	else{
-		if((ret = zcfgFeObjJsonSet(RDM_OID_PAREN_CTL_PROF, &objIid, parenCtlProfJobj, NULL)) != ZCFG_SUCCESS ){
-			json_object_put(parenCtlProfJobj);
-			return ret;
+		attrValue = zcfgFeParamAttrGetByName(ieeeOid, paramList->name);
+		if(attrValue < 0 ) {
+			attrValue = 0;
 		}
-		json_object_put(parenCtlProfJobj);
+		break;
 	}
-
-	return ZCFG_SUCCESS;
+	
+	return attrValue;
 }
 
-zcfgRet_t zyExtParenCtlProfObjAdd(char *tr98FullPathName, int *idx)
+zcfgRet_t zyExt8021agObjAttrSet(char *tr98FullPathName, int handler, char *paramName, int newNotify, struct json_object *multiAttrJobj)
 {
-	zcfgRet_t ret;
-	objIndex_t objIid;
+	zcfgRet_t ret = ZCFG_SUCCESS;
+	char tr181Obj[128] = {0};
+	char mapObj[128] = {0};
+	uint32_t  ieeeOid = 0;
+	objIndex_t ieeeIid;
+	int attrValue = 0;
+	tr98Parameter_t *paramList = NULL;
 
-	printf("%s : Enter\n", __FUNCTION__);
+	zcfgLog(ZCFG_LOG_DEBUG, "Enter %s\n", __FUNCTION__);
+	if(zcfgFe98To181MappingNameGet(tr98FullPathName, mapObj) != ZCFG_SUCCESS) {
+		return ZCFG_INVALID_OBJECT;
+	}
+	
+	IID_INIT(ieeeIid);
+	snprintf(tr181Obj, sizeof(tr181Obj),"Device.%s", mapObj);
+	ieeeOid = zcfgFeObjNameToObjId(tr181Obj, &ieeeIid);
 
-	IID_INIT(objIid);
-	ret = zcfgFeObjStructAdd(RDM_OID_PAREN_CTL_PROF, &objIid, NULL);
-	*idx = objIid.idx[0];
+	paramList = tr98Obj[handler].parameter;
+	while(paramList->name != NULL) {
+		/*find the matched parameter*/
+		if(strcmp(paramList->name, paramName)){
+			paramList++;
+			continue;
+		}
+		/*special case*/
+		
+		attrValue = zcfgFeParamAttrGetByName(ieeeOid, paramList->name);
+		if(attrValue < 0) {
+			ret = ZCFG_INVALID_ARGUMENTS;
+			break;
+		}
 
+		/*Write new parameter attribute from tr98 object to tr181 objects*/
+		attrValue = zcfgFeNotifyAttrValSet(attrValue, newNotify);
+		ret = zcfgFeMultiParamAttrAppend(ieeeOid, multiAttrJobj, paramList->name, attrValue);
+		if( ret != ZCFG_SUCCESS){
+			zcfgLog(ZCFG_LOG_ERR, "%s(): set %d %s attribute fail\n", __FUNCTION__, ieeeOid, paramList->name);
+		}
+		break;
+	}
+	
 	return ret;
 }
 
-zcfgRet_t zyExtParenCtlProfObjDel(char *tr98FullPathName)
-{
-	objIndex_t objIid;
-
-	printf("%s : Enter\n", __FUNCTION__);
-
-	IID_INIT(objIid);
-	objIid.level = 1;
-	sscanf(tr98FullPathName, "InternetGatewayDevice.X_ZYXEL_EXT.ParentalControl.Profile.%hhu", &objIid.idx[0]);
-
-	return zcfgFeObjStructDel(RDM_OID_PAREN_CTL_PROF, &objIid, NULL);;
-}
-
 #ifdef ONECONNECT
 /* InternetGatewayDevice.X_ZYXEL_EXT.SpeedTest */
 zcfgRet_t zyExtSpeedTestInfoObjGet(char *tr98FullPathName, int handler, struct json_object **tr98Jobj, bool updateFlag)
Index: libzcfg_fe_tr98-1.0/zyExt.h
===================================================================
--- libzcfg_fe_tr98-1.0.orig/zyExt.h	2015-08-11 14:35:40.164491028 +0800
+++ libzcfg_fe_tr98-1.0/zyExt.h	2015-08-11 15:06:46.616540582 +0800
@@ -1,5 +1,6 @@
 /*Parameter*/
 extern tr98Parameter_t para_DnsRtEntry[];
+extern tr98Parameter_t para_DnsEntry[];
 extern tr98Parameter_t para_DDns[];
 extern tr98Parameter_t para_Tr064[];
 extern tr98Parameter_t para_EmailSrv[];
@@ -9,6 +10,7 @@
 extern tr98Parameter_t para_Snmp[];
 extern tr98Parameter_t para_SnmpTrap[];
 extern tr98Parameter_t para_RemoSrv[];
+extern tr98Parameter_t para_8021ag[];
 #ifdef SOL_TR69_TRUSTDOMAIN
 extern tr98Parameter_t para_RemoTrustDomain[];
 #endif
@@ -24,6 +26,8 @@
 extern tr98Parameter_t para_MacFilter_WhiteList[];
 extern tr98Parameter_t para_ParenCtl[];
 extern tr98Parameter_t para_ParenCtlProf[];
+extern tr98Parameter_t para_Sec[];
+extern tr98Parameter_t para_SecCert[];
 
 #ifdef ZyXEL_IPP_PRINTSERVER
 extern tr98Parameter_t para_Ipp_PrintServer[];
@@ -44,6 +48,15 @@
 extern int zyExtDnsRtObjAttrGet(char *, int, char *);
 extern zcfgRet_t zyExtDnsRtObjAttrSet(char *, int, char *, int , struct json_object *);
 
+/*InternetGatewayDevice.X_ZYXEL_EXT.DNSEntry.i*/
+extern zcfgRet_t zyExtDnsEntryObjGet(char *, int, struct json_object **, bool);
+extern zcfgRet_t zyExtDnsEntryObjSet(char *, int , struct json_object *, struct json_object *);
+extern zcfgRet_t zyExtDnsEntryObjAdd(char *, int *);
+extern zcfgRet_t zyExtDnsEntryObjDel(char *);
+extern zcfgRet_t zyExtDnsEntryObjNotify(char *, char *, struct json_object *, int, struct json_object **);
+extern int zyExtDnsEntryObjAttrGet(char *, int, char *);
+extern zcfgRet_t zyExtDnsEntryObjAttrSet(char *, int, char *, int , struct json_object *);
+
 /*InternetGatewayDevice.X_ZYXEL_EXT.DynamicDNS*/
 extern zcfgRet_t zyExtDDnsObjGet(char *, int, struct json_object **, bool);
 extern zcfgRet_t zyExtDDnsObjSet(char *, int, struct json_object *, struct json_object *);
@@ -141,32 +154,78 @@
 #endif
 #endif
 
+/*InternetGatewayDevice.X_ZYXEL_EXT.8021ag*/
+extern zcfgRet_t zyExt8021agObjGet(char *, int, struct json_object **, bool);
+extern zcfgRet_t zyExt8021agObjSet(char *, int, struct json_object *, struct json_object *);
+extern zcfgRet_t zyExt8021agObjNotify(char *, char *, struct json_object *, int, struct json_object **);
+extern int zyExt8021agObjAttrGet(char *, int, char *);
+extern zcfgRet_t zyExt8021agObjAttrSet(char *, int, char *, int , struct json_object *);
+
+/*InternetGatewayDevice.X_ZYXEL_EXT.Log_Setting*/
 extern zcfgRet_t zyExtLogSettingObjGet(char *, int , struct json_object **, bool );
 extern zcfgRet_t zyExtLogSettingObjSet(char *, int , struct json_object *, struct json_object *);
+extern zcfgRet_t zyExtLogSettingObjNotify(char *, char *, struct json_object *, int, struct json_object **);
+extern int zyExtLogSettingObjAttrGet(char *, int, char *);
+extern zcfgRet_t zyExtLogSettingObjAttrSet(char *, int, char *, int , struct json_object *);
+
+/*InternetGatewayDevice.X_ZYXEL_EXT.Log_Setting.LogClassify.i*/
 extern zcfgRet_t zyExtLogClassifyObjGet(char *, int , struct json_object **, bool );
+extern zcfgRet_t zyExtLogClassifyObjAdd(char *tr98FullPathName, int *idx);
+extern zcfgRet_t zyExtLogClassifyObjDel(char *tr98FullPathName);
+extern zcfgRet_t zyExtLogClassifyObjNotify(char *, char *, struct json_object *, int, struct json_object **);
+extern int zyExtLogClassifyObjAttrGet(char *, int, char *);
+extern zcfgRet_t zyExtLogClassifyObjAttrSet(char *, int, char *, int , struct json_object *);
+
+/*InternetGatewayDevice.X_ZYXEL_EXT.Log_Setting.LogClassify.i.Category.i*/
 extern zcfgRet_t zyExtLogCategoryObjGet(char *, int , struct json_object **, bool );
 extern zcfgRet_t zyExtLogCategoryObjSet(char *, int , struct json_object *, struct json_object *);
+extern zcfgRet_t zyExtLogCategoryObjAdd(char *tr98FullPathName, int *idx);
+extern zcfgRet_t zyExtLogCategoryObjDel(char *tr98FullPathName);
+extern zcfgRet_t zyExtLogCategoryObjNotify(char *, char *, struct json_object *, int, struct json_object **);
+extern int zyExtLogCategoryObjAttrGet(char *, int, char *);
+extern zcfgRet_t zyExtLogCategoryObjAttrSet(char *, int, char *, int , struct json_object *);
 
 extern zcfgRet_t zyExtMacFilterObjGet(char *, int, struct json_object **, bool);
 extern zcfgRet_t zyExtMacFilterObjSet(char *, int , struct json_object *, struct json_object *);
-/*extern zcfgRet_t zyExtMacFilterNotify(char *, char *, struct json_object *, int, struct json_object **);
-extern int firewallObjAttrGet(char *, int, char *);
-extern zcfgRet_t zyExtMacFilterAttrSet(char *, int, char *, int , struct json_object *);*/
+extern zcfgRet_t zyExtMacFilterObjNotify(char *, char *, struct json_object *, int, struct json_object **);
+extern int zyExtMacFilterObjAttrGet(char *, int, char *);
+extern zcfgRet_t zyExtMacFilterObjAttrSet(char *, int, char *, int , struct json_object *);
 
 extern zcfgRet_t zyExtMacFilterWhiteListObjGet(char *, int, struct json_object **, bool);
 extern zcfgRet_t zyExtMacFilterWhiteListObjSet(char *, int , struct json_object *, struct json_object *);
 extern zcfgRet_t zyExtMacFilterWhiteListObjAdd(char *, int *);
 extern zcfgRet_t zyExtMacFilterWhiteListObjDel(char *);
-/*extern zcfgRet_t zyExtMacFilterWhiteListObjNotify(char *, char *, struct json_object *, int, struct json_object **);
-extern int firewallLevelObjAttrGet(char *, int, char *);
-extern zcfgRet_t zyExtMacFilterWhiteListObjAttrSet(char *, int, char *, int , struct json_object *);*/
+extern zcfgRet_t zyExtMacFilterWhiteListObjNotify(char *, char *, struct json_object *, int, struct json_object **);
+extern int zyExtMacFilterWhiteListObjAttrGet(char *, int, char *);
+extern zcfgRet_t zyExtMacFilterWhiteListObjAttrSet(char *, int, char *, int , struct json_object *);
 
 extern zcfgRet_t zyExtParenCtlObjGet(char *tr98FullPathName, int handler, struct json_object **tr98Jobj, bool updateFlag);
 extern zcfgRet_t zyExtParenCtlObjSet(char *tr98FullPathName, int handler, struct json_object *tr98Jobj, struct json_object *multiJobj);
+extern zcfgRet_t zyExtParenCtlObjNotify(char *, char *, struct json_object *, int, struct json_object **);
+extern int zyExtParenCtlObjAttrGet(char *, int, char *);
+extern zcfgRet_t zyExtParenCtlObjAttrSet(char *, int, char *, int , struct json_object *);
+
 extern zcfgRet_t zyExtParenCtlProfObjGet(char *tr98FullPathName, int handler, struct json_object **tr98Jobj, bool updateFlag);
 extern zcfgRet_t zyExtParenCtlProfObjSet(char *tr98FullPathName, int handler, struct json_object *tr98Jobj, struct json_object *multiJobj);
 extern zcfgRet_t zyExtParenCtlProfObjAdd(char *tr98FullPathName, int *idx);
 extern zcfgRet_t zyExtParenCtlProfObjDel(char *tr98FullPathName);
+extern zcfgRet_t zyExtParenCtlProfObjNotify(char *, char *, struct json_object *, int, struct json_object **);
+extern int zyExtParenCtlProfObjAttrGet(char *, int, char *);
+extern zcfgRet_t zyExtParenCtlProfObjAttrSet(char *, int, char *, int , struct json_object *);
+
+extern zcfgRet_t zyExtSecObjGet(char *tr98FullPathName, int handler, struct json_object **tr98Jobj, bool updateFlag);
+extern zcfgRet_t zyExtSecObjNotify(char *, char *, struct json_object *, int, struct json_object **);
+extern int zyExtSecObjAttrGet(char *, int, char *);
+extern zcfgRet_t zyExtSecObjAttrSet(char *, int, char *, int , struct json_object *);
+
+extern zcfgRet_t zyExtSecCertObjGet(char *tr98FullPathName, int handler, struct json_object **tr98Jobj, bool updateFlag);
+extern zcfgRet_t zyExtSecCertObjSet(char *tr98FullPathName, int handler, struct json_object *tr98Jobj, struct json_object *multiJobj);
+extern zcfgRet_t zyExtSecCertObjAdd(char *tr98FullPathName, int *idx);
+extern zcfgRet_t zyExtSecCertObjDel(char *tr98FullPathName);
+extern zcfgRet_t zyExtSecCertObjNotify(char *, char *, struct json_object *, int, struct json_object **);
+extern int zyExtSecCertObjAttrGet(char *, int, char *);
+extern zcfgRet_t zyExtSecCertObjAttrSet(char *, int, char *, int , struct json_object *);
+
 #ifdef ZyXEL_IPP_PRINTSERVER
 /*InternetGatewayDevice.X_ZYXEL_EXT.PrintServer */
 extern zcfgRet_t zyExtIppPrintServObjGet(char *tr98FullPathName, int handler, struct json_object **tr98Jobj, bool updateFlag);
Index: libzcfg_fe_tr98-1.0/zyExt_parameter.h
===================================================================
--- libzcfg_fe_tr98-1.0.orig/zyExt_parameter.h	2015-08-11 14:35:40.164491028 +0800
+++ libzcfg_fe_tr98-1.0/zyExt_parameter.h	2015-08-11 15:08:00.780542551 +0800
@@ -8,6 +8,12 @@
 	{ NULL, 0, 0}
 };
 
+tr98Parameter_t para_DnsEntry[] = {
+	{ "HostName", PARAMETER_ATTR_WRITE, 257, json_type_string},
+	{ "IPv4Address", PARAMETER_ATTR_WRITE, 17, json_type_string},
+	{ NULL, 0, 0}
+};
+
 tr98Parameter_t para_DDns[] = {
 	{ "Enable", PARAMETER_ATTR_WRITE, 0, json_type_boolean},
 	{ "ServiceProvider", PARAMETER_ATTR_WRITE, 33, json_type_string},
@@ -19,6 +25,9 @@
 	{ "UserIPAddress", PARAMETER_ATTR_WRITE, 17, json_type_string},
 	{ "Wildcard", PARAMETER_ATTR_WRITE, 0, json_type_boolean},
 	{ "Offline", PARAMETER_ATTR_WRITE, 0, json_type_boolean},
+	{ "AuthenticationResult", PARAMETER_ATTR_READONLY, 17, json_type_string},
+	{ "UpdatedTime", PARAMETER_ATTR_WRITE, 17, json_type_string},
+	{ "DynamicIP", PARAMETER_ATTR_WRITE, 129, json_type_string},
 	{ NULL, 0, 0}
 };
 tr98Parameter_t para_RemoSrv[] = {
@@ -56,7 +65,7 @@
 	{ "FastLeave", PARAMETER_ATTR_WRITE, 0, json_type_uint32},
 	{ "JoinImmediate", PARAMETER_ATTR_WRITE, 0, json_type_uint32},
 	{ "SnoopingEnable", PARAMETER_ATTR_WRITE, 0, json_type_uint32},
-	{ "Interface", PARAMETER_ATTR_READONLY, 321, json_type_string},
+	{ "Interface", PARAMETER_ATTR_READONLY, TR98_MAX_OBJ_NAME_LENGTH*5, json_type_string},
 	{ "ifName", PARAMETER_ATTR_READONLY, 321, json_type_string},
 	{ "Status", PARAMETER_ATTR_READONLY, 19, json_type_string},
 	{ "SnoopingBridgeIfName", PARAMETER_ATTR_READONLY, 101, json_type_string},
@@ -94,11 +103,16 @@
 	{ "Enable", PARAMETER_ATTR_WRITE, 0, json_type_boolean},
 	{ "LogServer", PARAMETER_ATTR_WRITE, 128, json_type_string},
 	{ "UDPPort", PARAMETER_ATTR_WRITE, 0, json_type_uint32},
+	{ "ZCFG_LOG_Enable", PARAMETER_ATTR_WRITE, 0, json_type_boolean},
+	{ "LogMode", PARAMETER_ATTR_WRITE, 33, json_type_string},
+	{ "Interval", PARAMETER_ATTR_WRITE, 0, json_type_uint32},
 	{ NULL, 0, 0}
 };
 
 tr98Parameter_t para_LogClassify[] = {
 	{ "Name", PARAMETER_ATTR_READONLY, 30, json_type_string},
+	{ "Describe", PARAMETER_ATTR_READONLY, 51, json_type_string},
+	{ "File", PARAMETER_ATTR_READONLY, 51, json_type_string},
 	{ NULL, 0, 0}
 };
 
@@ -107,8 +121,10 @@
 	{ "Name", PARAMETER_ATTR_READONLY, 30, json_type_string},
 	{ "Describe", PARAMETER_ATTR_READONLY, 50, json_type_string},
 	{ "Level", PARAMETER_ATTR_WRITE, 0, json_type_uint32},
+	{ "Filter", PARAMETER_ATTR_WRITE, 256, json_type_string},
 	{ NULL, 0, 0}
 };
+
 tr98Parameter_t para_MacFilter[] = {
 	{ "MaxNumberOfEntries", PARAMETER_ATTR_WRITE, 0, json_type_uint32},
 	{ "Enable", PARAMETER_ATTR_WRITE, 0, json_type_boolean},
@@ -140,6 +156,7 @@
 	{ "NetworkServiceList", PARAMETER_ATTR_WRITE, 1024, json_type_string},
 	{ NULL, 0, 0}
 };
+
 #ifdef ZyXEL_IPP_PRINTSERVER
 tr98Parameter_t para_Ipp_PrintServer[] = {
 	{ "Enable", PARAMETER_ATTR_WRITE, 0, json_type_boolean},
@@ -222,3 +239,42 @@
 	{ "TagList", PARAMETER_ATTR_WRITE, 65, json_type_string},
 	{ NULL, 0, 0, 0}
 };
+
+tr98Parameter_t para_8021ag[] = {
+	{ "MDLevel", PARAMETER_ATTR_WRITE, 0, json_type_int},
+	{ "IsPtmLink", PARAMETER_ATTR_WRITE, 0, json_type_boolean},
+	{ "VLANID", PARAMETER_ATTR_WRITE, 0, json_type_int},
+	{ "DestMacAddress", PARAMETER_ATTR_WRITE, 18, json_type_string},
+	{ "SendLoopBack", PARAMETER_ATTR_WRITE, 0, json_type_boolean},
+	{ "LoopBackResult", PARAMETER_ATTR_WRITE, 0, json_type_int},
+	{ "SendLinkTrace", PARAMETER_ATTR_WRITE, 0, json_type_boolean},
+	{ "LinkTraceResult", PARAMETER_ATTR_WRITE, 321, json_type_string},
+	{ NULL, 0, 0, 0}
+};
+
+tr98Parameter_t para_Sec[] = {
+	{ "CertificateNumberOfEntries", PARAMETER_ATTR_READONLY, 0, json_type_uint32},
+	{ NULL, 0, 0, 0}
+};
+
+tr98Parameter_t para_SecCert[] = {
+	{ "X_ZYXEL_Name", PARAMETER_ATTR_WRITE, 33, json_type_string},
+	{ "X_ZYXEL_Type", PARAMETER_ATTR_WRITE, 33, json_type_string},
+	{ "X_ZYXEL_Certificate", PARAMETER_ATTR_WRITE, 4097, json_type_string},
+	{ "X_ZYXEL_PrivateKey", PARAMETER_ATTR_WRITE, 4097, json_type_string},
+	{ "X_ZYXEL_SigningRequest", PARAMETER_ATTR_WRITE, 4097, json_type_string},
+	{ "X_ZYXEL_CommonName", PARAMETER_ATTR_WRITE, 65, json_type_string},
+	{ "X_ZYXEL_OrgName", PARAMETER_ATTR_WRITE, 33, json_type_string},
+	{ "X_ZYXEL_StateName", PARAMETER_ATTR_WRITE, 33, json_type_string},
+	{ "X_ZYXEL_CountryName", PARAMETER_ATTR_WRITE, 3, json_type_string},
+	{ "Enable", PARAMETER_ATTR_WRITE, 0, json_type_boolean},
+	{ "LastModif", PARAMETER_ATTR_WRITE, 32, json_type_string},
+	{ "SerialNumber", PARAMETER_ATTR_WRITE, 65, json_type_string},
+	{ "Issuer", PARAMETER_ATTR_WRITE, 257, json_type_string},
+	{ "NotBefore", PARAMETER_ATTR_WRITE, 32, json_type_string},
+	{ "NotAfter", PARAMETER_ATTR_WRITE, 32, json_type_string},
+	{ "Subject", PARAMETER_ATTR_WRITE, 257, json_type_string},
+	{ "SubjectAlt", PARAMETER_ATTR_WRITE, 257, json_type_string},
+	{ "SignatureAlgorithm", PARAMETER_ATTR_WRITE, 257, json_type_string},
+	{ NULL, 0, 0, 0}
+};
