Index: libzcfg_fe_tr98-1.0/zcfg_fe_tr98.c
===================================================================
--- libzcfg_fe_tr98-1.0.orig/zcfg_fe_tr98.c	2015-06-07 07:06:26.942301439 +0800
+++ libzcfg_fe_tr98-1.0/zcfg_fe_tr98.c	2015-06-07 07:07:37.334487300 +0800
@@ -881,6 +881,7 @@
 			sprintf(instNumStr, "%hhu", objIid->idx[level++]);
 			strcat(tr98PathName, instNumStr);
 			tr98PathNameLen += strlen(instNumStr);
+			instNumStr[0] = '\0';
 		}
 		else {
 			*(tr98PathName + (tr98PathNameLen++)) = *pos;
@@ -905,7 +906,10 @@
 	objIndex_t tr98ObjIid;
 	int n = 0, instNumStrLen = 0;
 
-	//if(!notifyName || !tr98NotifyName)
+	if(!notifyName || !tr98NotifyName)
+		return ZCFG_INTERNAL_ERROR;
+
+	*tr98NotifyName = '\0';
 
 	zcfgLog(ZCFG_LOG_INFO, "%s\n", __FUNCTION__);
 
@@ -1597,17 +1601,20 @@
 			const char *notifyName = tr181NotifyName + strlen(TR98MAPPING_PREFIX);
 			char *tr98NotifyName = (char *)malloc(TR98_MAX_OBJ_NAME_LENGTH + MAX_PARMNAME_LEN);
 
+			memset(tr98NotifyName, 0, TR98_MAX_OBJ_NAME_LENGTH + MAX_PARMNAME_LEN);
 			if((ret = zcfgFe98ParmMappingToName(notifyName, tr98NotifyName)) != ZCFG_SUCCESS) {
 
 				free(tr98NotifyName);
 				return ret;
 			}
 
-			if(*tr98NotifyInfo == NULL) {
+			if(strlen(tr98NotifyName) > 0) {
+				if(*tr98NotifyInfo == NULL)
 				*tr98NotifyInfo = json_object_new_object();
-			}
 
 			json_object_object_add(*tr98NotifyInfo, tr98NotifyName, JSON_OBJ_COPY(tr181ParamVal));
+			}
+
 			free(tr98NotifyName);
 		}
 #endif
@@ -1719,6 +1726,9 @@
 			paramList++;
 		}
 	}
+	else {
+		return ZCFG_NO_SUCH_PARAMETER;
+	}
 
 	if(!paramList->name) {
 		return ZCFG_NO_SUCH_PARAMETER;
