Index: libzcfg_fe_tr98-1.0/wanDev.c
===================================================================
--- libzcfg_fe_tr98-1.0.orig/wanDev.c	2015-06-18 18:02:55.630491972 +0800
+++ libzcfg_fe_tr98-1.0/wanDev.c	2015-06-18 18:02:40.310482600 +0800
@@ -1145,6 +1145,9 @@
 		zcfgFeObjStructFree(dslChannelObj);
 	}
 	else if(strstr(wanIntfObj, "Ethernet") != NULL) { // Ethernet WAN
+#if 1 //WANDevice.i and WANDevice.i.WANConnectionDevice.i are both mapping to Ethernet.Interface
+		return TR069_RESOURCES_EXCEEDED;
+#else
 		/*Check if Ethernet WAN Connection Device exists or not*/
 		strcat(tr98TmpName, ".WANConnectionDevice.1");
 		if((ret = zcfgFe98To181MappingNameGet(tr98TmpName, wanObjName)) == ZCFG_SUCCESS) {
@@ -1171,6 +1174,7 @@
 
 		/*Hard coding here, only one WANConnectionDevice.i will exist under InternetGatewayDevice.WANDevice.i if type is Ethernet*/
 		*idx = 1;
+#endif
 	}
 
 	return ret;
@@ -1830,9 +1834,9 @@
 	zcfgRet_t ret;
 	char tr98TmpName[TR98_MAX_OBJ_NAME_LENGTH] = {0};
 	char *ptr = NULL;
-	char ethLink[32] = {0};
+	char ethIntf[32] = {0};
 	objIndex_t objIid;
-	rdm_EthLink_t *ethLinkObj = NULL;
+	rdm_EthLink_t *ethIntfObj = NULL;
 
 	printf("%s : Enter\n", __FUNCTION__);
 
@@ -1841,27 +1845,27 @@
 	*ptr = '\0';
 
 	/* tr98TmpName will be InternetGatewayDevice.WANDevice.i.WANConnectionDevice.i */
-	if((ret = zcfgFe98To181MappingNameGet(tr98TmpName, ethLink)) == ZCFG_SUCCESS) {
-		if(strstr(ethLink, "Ethernet") == NULL) {
+	if((ret = zcfgFe98To181MappingNameGet(tr98TmpName, ethIntf)) == ZCFG_SUCCESS) {
+		if(strstr(ethIntf, "Ethernet") == NULL) {
 			printf("%s : Not an Ethernet Link\n", __FUNCTION__);
 			return ZCFG_NO_SUCH_OBJECT;
 		}
 
 		IID_INIT(objIid);
-		sscanf(ethLink, "Ethernet.Link.%hhu", &objIid.idx[0]);
+		sscanf(ethIntf, "Ethernet.Interface.%hhu", &objIid.idx[0]);
 		objIid.level = 1;
 
 		/*Get Ethernet.Link.i*/
-		if(feObjStructGet(RDM_OID_ETH_LINK, &objIid, (void **)&ethLinkObj, updateFlag) == ZCFG_SUCCESS) {
+		if(feObjStructGet(RDM_OID_ETH_IFACE, &objIid, (void **)&ethIntfObj, updateFlag) == ZCFG_SUCCESS) {
 			*tr98Jobj = json_object_new_object();
 
-			if(!strcmp(ethLinkObj->Status, "Up") || !strcmp(ethLinkObj->Status, "Down")) {
-				json_object_object_add(*tr98Jobj, "EthernetLinkStatus", json_object_new_string(ethLinkObj->Status));
+			if(!strcmp(ethIntfObj->Status, "Up") || !strcmp(ethIntfObj->Status, "Down")) {
+				json_object_object_add(*tr98Jobj, "EthernetLinkStatus", json_object_new_string(ethIntfObj->Status));
 			}
 			else {
 				json_object_object_add(*tr98Jobj, "EthernetLinkStatus", json_object_new_string("Unavailable"));
 			}
-			zcfgFeObjStructFree(ethLinkObj);
+			zcfgFeObjStructFree(ethIntfObj);
 		}
 		else {
 			printf("%s : Can't get Ethernet.Link object\n", __FUNCTION__);
Index: libzcfg_fe_tr98-1.0/zcfg_fe_tr98.h
===================================================================
--- libzcfg_fe_tr98-1.0.orig/zcfg_fe_tr98.h	2015-06-18 18:02:55.446491970 +0800
+++ libzcfg_fe_tr98-1.0/zcfg_fe_tr98.h	2015-06-18 18:02:55.638491972 +0800
@@ -19,6 +19,45 @@
 #define TR98_GET_WITHOUT_UPDATE 1
 #define NAME_SIZE 256
 
+#ifndef TR069ERR_E
+#define TR069ERR_E
+// need to sync to libzcfg_fe_tr98/zcfg_fe_tr98.h
+typedef enum
+{
+	TR069_SOCK_CLOSE = -1,    
+	TR069_OK = 0,    
+	TR069_NOK = 1,    			/* common errors */
+	TR069_SERVICE_TIME_OUT,
+	TR069_BUFFER_OVERFLOW,
+	TR069_DNS_ERR,
+	TR069_INIT_FAILED,    	/* errors occurs in initialization */
+	TR069_SET_NON_APPLY,	/*All Parameter changes have been validated and committed, but some or all are not yet applied*/
+	/* RPC Fault Code*/
+	TR069_METHOD_NOT_SUPPORTED = 9000,
+	TR069_REQUEST_DENIED = 9001,
+	TR069_INTERNAL_ERROR = 9002,
+	TR069_INVALID_ARGUMENTS = 9003,
+	TR069_RESOURCES_EXCEEDED = 9004,
+	TR069_INVALID_PARAMETER_NAME = 9005,
+	TR069_INVALID_PARAMETER_TYPE = 9006,
+	TR069_INVALID_PARAMETER_VALUE = 9007,
+	TR069_ATTEMPT_TO_SET_NONWRITABLE_PARAMETER = 9008,
+	TR069_NOTIFICATION_REQUEST_REJECTED = 9009,
+	TR069_DOWNLOAD_FAILURE = 9010,
+	TR069_UPLOAD_FAILURE = 9011,
+	TR069_FILE_TRANSFER_SERVER_AUTHENTICATION_FAILURE = 9012,
+	TR069_UNSUPPORTED_PROTOCOL_FOR_FILE_TRANSFER = 9013,
+	TR069_FILE_TRANSFER_FAILURE = 9014,
+	TR069_FILE_TRANSFER_FAILURE_CONTACT_SERVER = 9015,
+	TR069_FILE_TRANSFER_FAILURE_ACCESS_FILE = 9016,
+	TR069_FILE_TRANSFER_FAILURE_COMPLETE = 9017,
+	TR069_FILE_TRANSFER_FAILURE_CORRUPTED = 9018,
+	TR069_FILE_TRANSFER_FAILURE_AUTHENTICATION = 9019,
+	TR069_FILE_TRANSFER_FAILURE_TIMEOUT = 9020
+	/* 9800 - 9899: Vendor defined fault codes */
+	/* RPC Fault Code*/
+}tr069ERR_e;
+#endif
 
 extern int myEid; /*use source Eid to know who use this library*/
 typedef struct tr98Parameter_s {
