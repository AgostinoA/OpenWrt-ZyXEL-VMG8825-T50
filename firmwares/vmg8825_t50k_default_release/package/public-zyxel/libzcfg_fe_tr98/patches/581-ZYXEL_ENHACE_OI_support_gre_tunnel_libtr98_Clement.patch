Index: libzcfg_fe_tr98-1.0/xgre.c
===================================================================
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ libzcfg_fe_tr98-1.0/xgre.c	2018-06-07 17:20:25.218297892 +0800
@@ -0,0 +1,558 @@
+#include <json/json.h>
+
+#include "zcfg_common.h"
+#include "zcfg_fe_rdm_access.h"
+#include "zcfg_fe_rdm_string.h"
+#include "zcfg_fe_rdm_struct.h"
+#include "zcmd_schema.h"
+#include "zcfg_rdm_oid.h"
+#include "zcfg_rdm_obj.h"
+#include "zcfg_msg.h"
+#include "zcfg_net.h"
+#include "zcfg_debug.h"
+#include "zcfg_fe_tr98.h"
+#include "xgre_parameter.h"
+
+extern tr98Object_t tr98Obj[];
+
+zcfgRet_t zyXGREObjGet(char *tr98FullPathName, int handler, struct json_object **tr98Jobj, bool updateFlag)
+{
+	zcfgRet_t ret;
+	objIndex_t objIid;
+	struct json_object *GREObj = NULL;
+	struct json_object *paramValue = NULL;
+	struct json_object *tr181ParamValue = NULL;
+	tr98Parameter_t *paramList = NULL;
+	//printf("%s enter\n",__FUNCTION__);
+
+	IID_INIT(objIid);
+	if((ret = feObjJsonGet(RDM_OID_GRE, &objIid, &GREObj, updateFlag)) != ZCFG_SUCCESS){
+		return ret;
+	}
+
+	/*fill up tr98 object from related tr181 objects*/
+	*tr98Jobj = json_object_new_object();
+	paramList = tr98Obj[handler].parameter;
+	while(paramList->name != NULL){
+		if(!strcmp(paramList->name, "TunnelNumberOfEntries")) {
+			uint32_t tunnelNum = 0;
+			objIndex_t GRETunnelIid;
+			struct json_object *GRETunnelObj = NULL;
+			IID_INIT(GRETunnelIid);
+			while((ret = feObjJsonGetNext(RDM_OID_GRE_TUNNEL, &GRETunnelIid, &GRETunnelObj, TR98_GET_WITHOUT_UPDATE)) == ZCFG_SUCCESS) 
+			{
+				tunnelNum++;
+				json_object_put(GRETunnelObj);
+			}
+			json_object_object_add(*tr98Jobj, "TunnelNumberOfEntries", json_object_new_int(tunnelNum));
+			paramList++;
+			continue;
+		}
+
+		/*Write parameter value from tr181 objects to tr98 object*/ 	
+		paramValue = json_object_object_get(GREObj, paramList->name);
+		if(paramValue != NULL){
+			json_object_object_add(*tr98Jobj, paramList->name, JSON_OBJ_COPY(paramValue));
+			paramList++;
+			continue;
+		}
+
+		/*Not defined in tr181, give it a default value*/
+		printf("Can't find parameter %s in TR181\n", paramList->name);
+		paramList++;	
+	}
+	
+	json_object_put(GREObj);
+	return ZCFG_SUCCESS;
+}
+
+zcfgRet_t zyXGRETunnelObjGet(char *tr98FullPathName, int handler, struct json_object **tr98Jobj, bool updateFlag)
+{
+	zcfgRet_t ret;
+	objIndex_t objIid;
+	struct json_object *GRETunnelObj = NULL;
+	struct json_object *tr181ParamValue = NULL;
+	struct json_object *paramValue = NULL;
+	tr98Parameter_t *paramList = NULL;
+	//printf("%s enter\n",__FUNCTION__);
+
+	IID_INIT(objIid);
+	objIid.level = 1;
+	sscanf(tr98FullPathName, "InternetGatewayDevice.X_GRE.Tunnel.%hhu", &objIid.idx[0]);
+
+	if((ret = zcfgFeObjJsonGet(RDM_OID_GRE_TUNNEL, &objIid, &GRETunnelObj)) != ZCFG_SUCCESS){
+		printf("%s: fail to get GRE tunnel obj codec object ret=%d\n", __FUNCTION__, ret);
+		return ret;
+	}
+	
+	/*fill up tr98 object from related tr181 objects*/
+	*tr98Jobj = json_object_new_object();
+	paramList = tr98Obj[handler].parameter;
+	while(paramList->name != NULL){
+		if(!strcmp(paramList->name, "LowerLayers")) {
+			paramValue = json_object_object_get(GRETunnelObj, "X_ZYXEL_LowerLayers");
+			if(paramValue != NULL){
+				json_object_object_add(*tr98Jobj, "LowerLayers", JSON_OBJ_COPY(paramValue));
+				paramList++;
+				continue;
+			}
+		}
+
+		if(!strcmp(paramList->name, "InterfaceGroup")) {
+			paramValue = json_object_object_get(GRETunnelObj, "X_ZYXEL_InterfaceGroup");
+			if(paramValue != NULL){
+				json_object_object_add(*tr98Jobj, "InterfaceGroup", JSON_OBJ_COPY(paramValue));
+				paramList++;
+				continue;
+			}
+		}
+
+		if(!strcmp(paramList->name, "RemoteEndpoint")) {
+			paramValue = json_object_object_get(GRETunnelObj, "RemoteEndpoints");
+			if(paramValue != NULL){
+				json_object_object_add(*tr98Jobj, "RemoteEndpoint", JSON_OBJ_COPY(paramValue));
+				paramList++;
+				continue;
+			}
+		}
+
+		if(!strcmp(paramList->name, "RemoteEndpoint2")) {
+			paramValue = json_object_object_get(GRETunnelObj, "X_ZYXEL_RemoteEndpoint2");
+			if(paramValue != NULL){
+				json_object_object_add(*tr98Jobj, "RemoteEndpoint2", JSON_OBJ_COPY(paramValue));
+				paramList++;
+				continue;
+			}
+		}
+
+		if(!strcmp(paramList->name, "ConnRemoteEndpoint")) {
+			paramValue = json_object_object_get(GRETunnelObj, "ConnectedRemoteEndpoint");
+			if(paramValue != NULL){
+				json_object_object_add(*tr98Jobj, "ConnRemoteEndpoint", JSON_OBJ_COPY(paramValue));
+				paramList++;
+				continue;
+			}
+		}
+
+		if(!strcmp(paramList->name, "Checksum")) {
+			paramValue = json_object_object_get(GRETunnelObj, "X_ZYXEL_Checksum");
+			if(paramValue != NULL){
+				json_object_object_add(*tr98Jobj, "Checksum", JSON_OBJ_COPY(paramValue));
+				paramList++;
+				continue;
+			}
+		}
+
+		if(!strcmp(paramList->name, "Seq")) {
+			paramValue = json_object_object_get(GRETunnelObj, "X_ZYXEL_SequenceNumber");
+			if(paramValue != NULL){
+				json_object_object_add(*tr98Jobj, "Seq", JSON_OBJ_COPY(paramValue));
+				paramList++;
+				continue;
+			}
+		}
+
+		if(!strcmp(paramList->name, "Key")) {
+			paramValue = json_object_object_get(GRETunnelObj, "X_ZYXEL_SequenceNumber");
+			if(paramValue != NULL){
+				json_object_object_add(*tr98Jobj, "Key", JSON_OBJ_COPY(paramValue));
+				paramList++;
+				continue;
+			}
+		}
+
+		if(!strcmp(paramList->name, "ShapingRate")) {
+			paramValue = json_object_object_get(GRETunnelObj, "X_ZYXEL_ShapingRate");
+			if(paramValue != NULL){
+				json_object_object_add(*tr98Jobj, "ShapingRate", JSON_OBJ_COPY(paramValue));
+				paramList++;
+				continue;
+			}
+		}
+
+		if(!strcmp(paramList->name, "DownstreamShapingRate")) {
+			paramValue = json_object_object_get(GRETunnelObj, "X_ZYXEL_DownstreamShapingRate");
+			if(paramValue != NULL){
+				json_object_object_add(*tr98Jobj, "DownstreamShapingRate", JSON_OBJ_COPY(paramValue));
+				paramList++;
+				continue;
+			}
+		}
+
+		if(!strcmp(paramList->name, "DSCP")) {
+			paramValue = json_object_object_get(GRETunnelObj, "X_ZYXEL_DSCP");
+			if(paramValue != NULL){
+				json_object_object_add(*tr98Jobj, "DSCP", JSON_OBJ_COPY(paramValue));
+				paramList++;
+				continue;
+			}
+		}
+
+		if(!strcmp(paramList->name, "VlanGroupNumberOfEntriesxsi")) {
+			paramValue = json_object_object_get(GRETunnelObj, "X_ZYXEL_VlanGroupNumberOfEntriesxsi");
+			if(paramValue != NULL){
+				json_object_object_add(*tr98Jobj, "VlanGroupNumberOfEntriesxsi", JSON_OBJ_COPY(paramValue));
+				paramList++;
+				continue;
+			}
+		}
+
+		if(!strcmp(paramList->name, "MaxAssociatedDevices")) {
+			paramValue = json_object_object_get(GRETunnelObj, "X_ZYXEL_MaxAssociatedDevices");
+			if(paramValue != NULL){
+				json_object_object_add(*tr98Jobj, "MaxAssociatedDevices", JSON_OBJ_COPY(paramValue));
+				paramList++;
+				continue;
+			}
+		}
+
+		/*Write parameter value from tr181 objects to tr98 object*/		
+		paramValue = json_object_object_get(GRETunnelObj, paramList->name);
+		if(paramValue != NULL){
+			json_object_object_add(*tr98Jobj, paramList->name, JSON_OBJ_COPY(paramValue));
+			paramList++;
+			continue;
+		}
+
+		/*Not defined in tr181, give it a default value*/
+		printf("Can't find parameter %s in TR181\n", paramList->name);
+		paramList++;	
+	}
+	
+	json_object_put(GRETunnelObj);
+
+	return ZCFG_SUCCESS;
+}
+
+int zyXGRETunnelObjCheckBr(char *pchLowerLayers)
+{
+	bool brFound = false;
+	objIndex_t brIid, brPortIid;;
+	struct json_object *brPortJobj = NULL;
+	char brLowerLayers[257];
+	struct json_object *brLowerLayersParamValue = NULL;
+
+	IID_INIT(brIid);
+	brIid.level=1;
+	brIid.idx[0]=1;
+	brFound=false;
+	IID_INIT(brPortIid);
+	while((zcfgFeSubInObjJsonGetNext(RDM_OID_BRIDGING_BR_PORT, &brIid, &brPortIid, &brPortJobj)) == ZCFG_SUCCESS)
+	{
+		brLowerLayersParamValue=json_object_object_get(brPortJobj, "LowerLayers");
+		memset(brLowerLayers, 0, sizeof(brLowerLayers));
+		strcpy(brLowerLayers, json_object_get_string(brLowerLayersParamValue));
+		if(strcmp(pchLowerLayers, brLowerLayers)==0)
+		{
+			brFound = true;
+		}
+		json_object_put(brPortJobj);
+	}
+
+	//printf("beGRETunnelCheckBr: brFound=%d\n",brFound);
+	return brFound;
+}
+
+zcfgRet_t zyXGRETunnelObjSet(char *tr98FullPathName, int handler, struct json_object *tr98Jobj, struct json_object *multiJobj, char *paramfault)
+{
+	zcfgRet_t ret;
+	objIndex_t objIid;
+	struct json_object *GRETunnelObj = NULL;
+	struct json_object *tmpObj = NULL;
+	struct json_object *paramValue = NULL;
+	struct json_object *tr181ParamValue = NULL;
+	tr98Parameter_t *paramList = NULL;
+	//printf("%s : Enter\n", __FUNCTION__);
+
+	IID_INIT(objIid);
+	objIid.level = 1;
+	sscanf(tr98FullPathName, "InternetGatewayDevice.X_GRE.Tunnel.%hhu", &objIid.idx[0]);
+
+	/*Get related tr181 objects*/
+	if((ret = zcfgFeObjJsonGet(RDM_OID_GRE_TUNNEL, &objIid, &GRETunnelObj)) != ZCFG_SUCCESS){
+		printf("%s: fail to get GRE tunnel obj codec object ret=%d\n", __FUNCTION__, ret);
+		return ret;
+	}
+
+	if(multiJobj){
+		tmpObj = GRETunnelObj;
+		GRETunnelObj = NULL;
+		GRETunnelObj = zcfgFeJsonMultiObjAppend(RDM_OID_GRE_TUNNEL, &objIid, multiJobj, tmpObj);
+	}
+
+	paramList = tr98Obj[handler].parameter;
+	while(paramList->name != NULL){
+		if(!strcmp(paramList->name, "LowerLayers")) {
+			paramValue = json_object_object_get(tr98Jobj, paramList->name);
+			if(paramValue != NULL){
+				/*check LowerLayers in default bridge or not*/
+				char inputLowerLayers[1024];
+				struct json_object *brLowerLayersParamValue = NULL;
+				struct json_object *greLowerLayersParamValue = NULL;
+				bool brFound = false;
+				bool brFail = false;
+				char LowerLayers[64] = {0};
+				char *delim = ",";
+				char *pch, *pchGRE;
+				objIndex_t brIid, brPortIid;
+				struct json_object *brPortJobj = NULL;
+				char brLowerLayers[200];
+				char greLowerLayers[512];
+				char pchLowerLayers[64];
+				char pchGreLowerLayers[64];
+
+				strcpy(inputLowerLayers, json_object_get_string(paramValue));
+				pch = strtok(inputLowerLayers,delim);
+				while (pch != NULL)
+				{
+					memset(pchLowerLayers, 0, sizeof(pchLowerLayers));
+					strcpy(pchLowerLayers, pch);
+					brFound=zyXGRETunnelObjCheckBr(pchLowerLayers);
+					greLowerLayersParamValue=json_object_object_get(GRETunnelObj, "X_ZYXEL_LowerLayers");
+					memset(greLowerLayers, 0, sizeof(greLowerLayers));
+					strcpy(greLowerLayers, json_object_get_string(greLowerLayersParamValue));
+					if(strstr(greLowerLayers, pchLowerLayers)!=NULL)
+					{
+						brFound = true;
+					}
+					if(!brFound)
+					{
+						brFail = true;
+					}
+
+					pch = strtok (NULL, delim);
+				}
+				if(brFail)
+					return ZCFG_INVALID_PARAM_VALUE;
+				
+				tr181ParamValue = json_object_object_get(GRETunnelObj, "X_ZYXEL_LowerLayers");
+				if(tr181ParamValue != NULL){
+					json_object_object_add(GRETunnelObj, "X_ZYXEL_LowerLayers", JSON_OBJ_COPY(paramValue));
+					paramList++;
+					continue;
+				}
+			}
+		}
+
+		if(!strcmp(paramList->name, "RemoteEndpoint")) {
+			paramValue = json_object_object_get(tr98Jobj, paramList->name);
+			if(paramValue != NULL){
+				tr181ParamValue = json_object_object_get(GRETunnelObj, "RemoteEndpoints");
+				if(tr181ParamValue != NULL){
+					json_object_object_add(GRETunnelObj, "RemoteEndpoints", JSON_OBJ_COPY(paramValue));
+					paramList++;
+					continue;
+				}
+			}
+		}
+
+		if(!strcmp(paramList->name, "RemoteEndpoint2")) {
+			paramValue = json_object_object_get(tr98Jobj, paramList->name);
+			if(paramValue != NULL){
+				tr181ParamValue = json_object_object_get(GRETunnelObj, "X_ZYXEL_RemoteEndpoint2");
+				if(tr181ParamValue != NULL){
+					json_object_object_add(GRETunnelObj, "X_ZYXEL_RemoteEndpoint2", JSON_OBJ_COPY(paramValue));
+					paramList++;
+					continue;
+				}
+			}
+		}
+
+		if(!strcmp(paramList->name, "ConnRemoteEndpoint")) {
+			paramValue = json_object_object_get(tr98Jobj, paramList->name);
+			if(paramValue != NULL){
+				tr181ParamValue = json_object_object_get(GRETunnelObj, "ConnectedRemoteEndpoint");
+				if(tr181ParamValue != NULL){
+					json_object_object_add(GRETunnelObj, "ConnectedRemoteEndpoint", JSON_OBJ_COPY(paramValue));
+					paramList++;
+					continue;
+				}
+			}
+		}
+
+		if(!strcmp(paramList->name, "Checksum")) {
+			paramValue = json_object_object_get(tr98Jobj, paramList->name);
+			if(paramValue != NULL){
+				tr181ParamValue = json_object_object_get(GRETunnelObj, "X_ZYXEL_Checksum");
+				if(tr181ParamValue != NULL){
+					json_object_object_add(GRETunnelObj, "X_ZYXEL_Checksum", JSON_OBJ_COPY(paramValue));
+					paramList++;
+					continue;
+				}
+			}
+		}
+
+		if(!strcmp(paramList->name, "Seq")) {
+			paramValue = json_object_object_get(tr98Jobj, paramList->name);
+			if(paramValue != NULL){
+				tr181ParamValue = json_object_object_get(GRETunnelObj, "X_ZYXEL_SequenceNumber");
+				if(tr181ParamValue != NULL){
+					json_object_object_add(GRETunnelObj, "X_ZYXEL_SequenceNumber", JSON_OBJ_COPY(paramValue));
+					paramList++;
+					continue;
+				}
+			}
+		}
+
+		if(!strcmp(paramList->name, "Key")) {
+			paramValue = json_object_object_get(tr98Jobj, paramList->name);
+			if(paramValue != NULL){
+				tr181ParamValue = json_object_object_get(GRETunnelObj, "X_ZYXEL_Key");
+				if(tr181ParamValue != NULL){
+					json_object_object_add(GRETunnelObj, "X_ZYXEL_Key", JSON_OBJ_COPY(paramValue));
+					paramList++;
+					continue;
+				}
+			}
+		}
+
+		if(!strcmp(paramList->name, "ShapingRate")) {
+			paramValue = json_object_object_get(tr98Jobj, paramList->name);
+			if(paramValue != NULL){
+				tr181ParamValue = json_object_object_get(GRETunnelObj, "X_ZYXEL_ShapingRate");
+				if(tr181ParamValue != NULL){
+					json_object_object_add(GRETunnelObj, "X_ZYXEL_ShapingRate", JSON_OBJ_COPY(paramValue));
+					paramList++;
+					continue;
+				}
+			}
+		}
+
+		if(!strcmp(paramList->name, "DownstreamShapingRate")) {
+			paramValue = json_object_object_get(tr98Jobj, paramList->name);
+			if(paramValue != NULL){
+				tr181ParamValue = json_object_object_get(GRETunnelObj, "X_ZYXEL_DownstreamShapingRate");
+				if(tr181ParamValue != NULL){
+					json_object_object_add(GRETunnelObj, "X_ZYXEL_DownstreamShapingRate", JSON_OBJ_COPY(paramValue));
+					paramList++;
+					continue;
+				}
+			}
+		}
+
+		if(!strcmp(paramList->name, "DSCP")) {
+			paramValue = json_object_object_get(tr98Jobj, paramList->name);
+			if(paramValue != NULL){
+				tr181ParamValue = json_object_object_get(GRETunnelObj, "X_ZYXEL_DSCP");
+				if(tr181ParamValue != NULL){
+					json_object_object_add(GRETunnelObj, "X_ZYXEL_DSCP", JSON_OBJ_COPY(paramValue));
+					paramList++;
+					continue;
+				}
+			}
+		}
+
+		/*Write new parameter value from tr98 object to tr181 objects*/	
+		paramValue = json_object_object_get(tr98Jobj, paramList->name);
+		if(paramValue != NULL){
+			tr181ParamValue = json_object_object_get(GRETunnelObj, paramList->name);
+			if(tr181ParamValue != NULL){
+				json_object_object_add(GRETunnelObj, paramList->name, JSON_OBJ_COPY(paramValue));
+				paramList++;
+				continue;
+			}
+		}
+		printf("Can't find parameter %s in TR181\n", paramList->name);
+		paramList++;	
+	}
+
+	if(multiJobj){
+		json_object_put(tmpObj);
+	}
+	else{
+		if((ret = zcfgFeObjJsonSet(RDM_OID_GRE_TUNNEL, &objIid, GRETunnelObj, NULL)) != ZCFG_SUCCESS ){
+			json_object_put(GRETunnelObj);
+			return ret;
+		}
+		json_object_put(GRETunnelObj);
+	}
+
+	return ZCFG_SUCCESS;
+}
+
+zcfgRet_t zyXGRETunnelObjAdd(char *tr98FullPathName, int *idx)
+{
+	zcfgRet_t ret;
+	objIndex_t objIid;
+
+	printf("%s : Enter\n", __FUNCTION__);
+
+	IID_INIT(objIid);
+	ret = zcfgFeObjStructAdd(RDM_OID_GRE_TUNNEL, &objIid, NULL);
+	*idx = objIid.idx[0];
+
+	return ret;
+}
+
+zcfgRet_t zyXGRETunnelObjDel(char *tr98FullPathName)
+{
+	objIndex_t objIid;
+
+	printf("%s : Enter\n", __FUNCTION__);
+
+	IID_INIT(objIid);
+	objIid.level = 1;
+	sscanf(tr98FullPathName, "InternetGatewayDevice.X_GRE.Tunnel.%hhu", &objIid.idx[0]);
+
+	return zcfgFeObjStructDel(RDM_OID_GRE_TUNNEL, &objIid, NULL);
+}
+
+zcfgRet_t zyXGRETunnelStatsObjGet(char *tr98FullPathName, int handler, struct json_object **tr98Jobj, bool updateFlag)
+{
+	zcfgRet_t ret;
+	objIndex_t objIid;
+	struct json_object *GRETunnelObj = NULL;
+	struct json_object *tr181ParamValue = NULL;
+	struct json_object *paramValue = NULL;
+	tr98Parameter_t *paramList = NULL;
+	//printf("%s enter\n",__FUNCTION__);
+
+	IID_INIT(objIid);
+	objIid.level = 1;
+	sscanf(tr98FullPathName, "InternetGatewayDevice.X_GRE.Tunnel.%hhu.Stats", &objIid.idx[0]);
+
+	if((ret = zcfgFeObjJsonGet(RDM_OID_GRE_TUNNEL_STAT, &objIid, &GRETunnelObj)) != ZCFG_SUCCESS){
+		printf("%s: fail to get GRE tunnel stat obj codec object ret=%d\n", __FUNCTION__, ret);
+		return ret;
+	}
+	
+	/*fill up tr98 object from related tr181 objects*/
+	*tr98Jobj = json_object_new_object();
+	paramList = tr98Obj[handler].parameter;
+	while(paramList->name != NULL){
+		if(!strcmp(paramList->name, "DiscardPacketsSent")) {
+			paramValue = json_object_object_get(GRETunnelObj, "X_ZYXEL_DiscardPacketsSent");
+			if(paramValue != NULL){
+				json_object_object_add(*tr98Jobj, "DiscardPacketsSent", JSON_OBJ_COPY(paramValue));
+				paramList++;
+				continue;
+			}
+		}
+
+		if(!strcmp(paramList->name, "DiscardPacketsReceived")) {
+			paramValue = json_object_object_get(GRETunnelObj, "X_ZYXEL_DiscardPacketsReceived");
+			if(paramValue != NULL){
+				json_object_object_add(*tr98Jobj, "DiscardPacketsReceived", JSON_OBJ_COPY(paramValue));
+				paramList++;
+				continue;
+			}
+		}
+
+		/*Write parameter value from tr181 objects to tr98 object*/		
+		paramValue = json_object_object_get(GRETunnelObj, paramList->name);
+		if(paramValue != NULL){
+			json_object_object_add(*tr98Jobj, paramList->name, JSON_OBJ_COPY(paramValue));
+			paramList++;
+			continue;
+		}
+
+		/*Not defined in tr181, give it a default value*/
+		printf("Can't find parameter %s in TR181\n", paramList->name);
+		paramList++;	
+	}
+	
+	json_object_put(GRETunnelObj);
+
+	return ZCFG_SUCCESS;
+}
+
Index: libzcfg_fe_tr98-1.0/xgre.h
===================================================================
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ libzcfg_fe_tr98-1.0/xgre.h	2018-06-07 17:20:51.266205340 +0800
@@ -0,0 +1,10 @@
+extern tr98Parameter_t para_XGRE[];
+extern tr98Parameter_t para_XGRETunnel[];
+extern tr98Parameter_t para_XGRETunnelStats[];
+
+extern zcfgRet_t zyXGREObjGet(char *, int, struct json_object **, bool);
+extern zcfgRet_t zyXGRETunnelObjGet(char *, int, struct json_object **, bool);
+extern zcfgRet_t zyXGRETunnelObjSet(char *, int, struct json_object *, struct json_object *);
+extern zcfgRet_t zyXGRETunnelObjAdd(char *tr98FullPathName, int *idx);
+extern zcfgRet_t zyXGRETunnelObjDel(char *tr98FullPathName);
+extern zcfgRet_t zyXGRETunnelStatsObjGet(char *, int, struct json_object **, bool);
Index: libzcfg_fe_tr98-1.0/xgre_parameter.h
===================================================================
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ libzcfg_fe_tr98-1.0/xgre_parameter.h	2018-06-07 17:21:13.092461186 +0800
@@ -0,0 +1,36 @@
+
+tr98Parameter_t para_XGRE[] = {
+	{ "TunnelNumberOfEntries", PARAMETER_ATTR_READONLY, 0, json_type_uint32},
+	{ NULL, 0, 0, 0}
+};
+
+tr98Parameter_t para_XGRETunnel[] = {
+	{ "Enable", PARAMETER_ATTR_WRITE, 0, json_type_boolean},
+	{ "LowerLayers", PARAMETER_ATTR_WRITE, 1025, json_type_string},
+	{ "RemoteEndpoint", PARAMETER_ATTR_WRITE, 257, json_type_string},
+	{ "RemoteEndpoint2", PARAMETER_ATTR_WRITE, 257, json_type_string},
+	{ "ConnRemoteEndpoint", PARAMETER_ATTR_WRITE, 257, json_type_string},
+	{ "InterfaceGroup", PARAMETER_ATTR_READONLY, 257, json_type_string},
+	{ "Checksum", PARAMETER_ATTR_WRITE, 0, json_type_boolean},
+	{ "Seq", PARAMETER_ATTR_WRITE, 0, json_type_boolean},
+	{ "Key", PARAMETER_ATTR_WRITE, 0, json_type_uint32},
+	{ "ShapingRate", PARAMETER_ATTR_WRITE, 0, json_type_int},
+	{ "DownstreamShapingRate", PARAMETER_ATTR_WRITE, 0, json_type_int},
+	{ "DSCP", PARAMETER_ATTR_WRITE, 0, json_type_uint32},
+	{ "VlanGroupNumberOfEntriesxsi", PARAMETER_ATTR_READONLY, 0, json_type_uint32},
+	{ "MaxAssociatedDevices", PARAMETER_ATTR_READONLY, 0, json_type_uint32},
+	{ NULL, 0, 0, 0}
+};
+
+tr98Parameter_t para_XGRETunnelStats[] = {
+	{ "BytesSent", PARAMETER_ATTR_READONLY, 0, json_type_uint32},
+	{ "BytesReceived", PARAMETER_ATTR_READONLY, 0, json_type_uint32},
+	{ "PacketsSent", PARAMETER_ATTR_READONLY, 0, json_type_uint32},
+	{ "PacketsReceived", PARAMETER_ATTR_READONLY, 0, json_type_uint32},
+	{ "ErrorsSent", PARAMETER_ATTR_READONLY, 0, json_type_uint32},
+	{ "ErrorsReceived", PARAMETER_ATTR_READONLY, 0, json_type_uint32},
+	{ "DiscardPacketsSent", PARAMETER_ATTR_READONLY, 0, json_type_uint32},
+	{ "DiscardPacketsReceived", PARAMETER_ATTR_READONLY, 0, json_type_uint32},
+	{ NULL, 0, 0, 0}
+};
+
Index: libzcfg_fe_tr98-1.0/zcfg_fe_tr98.c
===================================================================
--- libzcfg_fe_tr98-1.0.orig/zcfg_fe_tr98.c	2018-06-07 17:18:54.881548700 +0800
+++ libzcfg_fe_tr98-1.0/zcfg_fe_tr98.c	2018-06-07 17:18:54.941548702 +0800
@@ -26,7 +26,9 @@
 #include "oneConnect.h"
 #endif
 #include "ipv6Spec.h"
-
+#ifdef ZYXEL_X_GRE
+#include "xgre.h"
+#endif
 #include "zcfg_fe_rdm_access.h"
 #include "zcfg_fe_rdm_string.h"
 #include "zcfg_fe_rdm_struct.h"
@@ -305,6 +307,11 @@
 {e_TR98_IPV6_DHCPV6_SERVER_CNT_OPT	,&tr98Obj[e_TR98_IPV6_DHCPV6_SERVER_CNT_OPT -e_TR98_START]},
 {e_TR98_IPV6_DHCPV6_SERVER_OPT	, &tr98Obj[e_TR98_IPV6_DHCPV6_SERVER_OPT -e_TR98_START]},
 #endif
+#ifdef ZYXEL_X_GRE
+{e_TR98_GRE						,&tr98Obj[e_TR98_GRE 					-e_TR98_START]},
+{e_TR98_GRE_TUNNEL				,&tr98Obj[e_TR98_GRE_TUNNEL 			-e_TR98_START]},
+{e_TR98_GRE_TUNNEL_STATS		,&tr98Obj[e_TR98_GRE_TUNNEL_STATS 		-e_TR98_START]},
+#endif
 #if ZYXEL_EXT
 {e_TR98_ZYXEL_EXT               , &tr98Obj[e_TR98_ZYXEL_EXT               -e_TR98_START]},
 #ifdef ZYXEL_LANDING_PAGE_FEATURE
Index: libzcfg_fe_tr98-1.0/zcfg_fe_tr98_handle.h
===================================================================
--- libzcfg_fe_tr98-1.0.orig/zcfg_fe_tr98_handle.h	2018-06-07 17:18:54.881548700 +0800
+++ libzcfg_fe_tr98-1.0/zcfg_fe_tr98_handle.h	2018-06-07 17:18:54.941548702 +0800
@@ -344,6 +344,12 @@
 #define TR98_IPV6_DHCPV6_SERVER_OPT		"InternetGatewayDevice.IPv6Specific.DHCPv6.Server.Pool.i.Option.i"
 #endif
 
+#ifdef ZYXEL_X_GRE
+#define TR98_XGRE						"InternetGatewayDevice.X_GRE"
+#define TR98_XGRE_TUNNEL				"InternetGatewayDevice.X_GRE.Tunnel.i"
+#define TR98_XGRE_TUNNEL_STATS			"InternetGatewayDevice.X_GRE.Tunnel.i.Stats"
+#endif
+
 #define OBSOLETED 1
 //#define ZYXEL_EXT 1
 
@@ -608,6 +614,11 @@
 {TR98_IPV6_DHCPV6_SERVER_CNT_OPT,		ATTR_INDEXNODE,	para_Ipv6Dhcpv6SrvCntOpt,	zyIpv6Dhcpv6SrvCntOptObjGet, NULL, NULL, NULL,	NULL,	NULL,	NULL},
 {TR98_IPV6_DHCPV6_SERVER_OPT,	ATTR_INDEX_CREA,para_Ipv6Dhcpv6SrvOpt, 		zyIpv6Dhcpv6SrvOptObjGet,	zyIpv6Dhcpv6SrvOptObjSet, zyIpv6Dhcpv6SrvOptObjAdd, zyIpv6Dhcpv6SrvOptObjDel,	NULL,	NULL,	NULL},
 #endif
+#ifdef ZYXEL_X_GRE
+{TR98_XGRE,						0,				para_XGRE,					zyXGREObjGet, 			 NULL, NULL, NULL,	NULL,	NULL,	NULL},
+{TR98_XGRE_TUNNEL, 				ATTR_INDEX_CREA,para_XGRETunnel,			zyXGRETunnelObjGet, 	 zyXGRETunnelObjSet, zyXGRETunnelObjAdd,	zyXGRETunnelObjDel,	NULL,	NULL,	NULL},
+{TR98_XGRE_TUNNEL_STATS,		0, 				para_XGRETunnelStats,		zyXGRETunnelStatsObjGet, NULL, NULL, NULL,	NULL,	NULL,	NULL},
+#endif
 #if ZYXEL_EXT
 {TR98_ZYXEL_EXT,                0,              para_extend,            zyExtObjGet,             zyExtObjSet, NULL, NULL, NULL, NULL, NULL},
 #ifdef ZYXEL_LANDING_PAGE_FEATURE
Index: libzcfg_fe_tr98-1.0/Makefile
===================================================================
--- libzcfg_fe_tr98-1.0.orig/Makefile	2018-06-07 17:18:54.877548700 +0800
+++ libzcfg_fe_tr98-1.0/Makefile	2018-06-07 17:18:54.941548702 +0800
@@ -3,7 +3,7 @@
 LIB_PATH = -L$(USRLIBDIR) -L$(INSTALL_DIR)/lib/public -L$(INSTALL_DIR)/lib/private
 LINK_LIB = -ljson -lzcfg_msg -lzcfg_fe_rdm_access -lzcfg_fe_rdm_string -lzcfg_fe_rdm_struct
 INC_PATH = -I$(TOOLCHAIN)/include -I$(COMMON_ZCFG_INCLUDE_DIR) -I.
-OBJ_FILES = wanDev.o wanDev_api.o zyExt.o diag.o devInfo.o devTime.o root.o mgmtSrv.o lanDev.o l2bridge.o l3fwd.o lanConfSec.o firewall.o schedule.o qos.o voice.o ipv6Spec.o
+OBJ_FILES = wanDev.o wanDev_api.o zyExt.o diag.o devInfo.o devTime.o root.o mgmtSrv.o lanDev.o l2bridge.o l3fwd.o lanConfSec.o firewall.o schedule.o qos.o voice.o ipv6Spec.o xgre.o
 
 SSL_LIBS = -lssl -lcrypto
 LINK_LIBS += $(SSL_LIBS)
@@ -239,6 +239,11 @@
 CFLAGS += -DZYXEL_IPV6SPEC
 endif
 
+#Support tr98 GRE
+ifeq ($(CONFIG_ZYXEL_GRE),y)
+CFLAGS += -DZYXEL_X_GRE
+endif
+
 ifeq ($(CONFIG_ZCFG_RPC_REQUEST_ADDITIONS),y)
 CFLAGS += -DZCFG_RPC_REQUEST_ADDITIONS
 endif
Index: libzcfg_fe_tr98-1.0/l2bridge.c
===================================================================
--- libzcfg_fe_tr98-1.0.orig/l2bridge.c	2018-06-07 17:18:54.105548675 +0800
+++ libzcfg_fe_tr98-1.0/l2bridge.c	2018-06-07 17:18:54.941548702 +0800
@@ -1843,6 +1843,23 @@
 		return ret;
 	}
 
+#if ZYXEL_X_GRE
+	/*check it is gre br or not*/
+	rdm_BridgingBr_t *brBdgObj = NULL;
+	IID_INIT(objIid);
+	sscanf(mappingPathName, "Bridging.Bridge.%hhu", &objIid.idx[0]);
+	objIid.level = 1;
+	if((ret = zcfgFeObjStructGet(RDM_OID_BRIDGING_BR, &objIid, (void **)&brBdgObj)) == ZCFG_SUCCESS)
+	{
+		if(strstr(brBdgObj->X_ZYXEL_BridgeName, "brgre"))
+		{
+			printf("%s: can not modify gre br\n", __FUNCTION__);
+			return ZCFG_INVALID_PARAM_VALUE;
+		}
+		zcfgFeObjStructFree(brBdgObj);
+	}
+#endif
+
 	IID_INIT(objIid);
 	sscanf(mappingPathName, "Bridging.Bridge.%hhu", &objIid.idx[0]);
 	objIid.level = 1;
@@ -1916,6 +1933,24 @@
 		printf("%s: Mapping not correct\n", __FUNCTION__);
 		return ZCFG_INTERNAL_ERROR;
 	}
+	
+#if ZYXEL_X_GRE
+	/*check it is gre br or not*/
+	rdm_BridgingBr_t *brBdgObj = NULL;
+	IID_INIT(objIid);
+	sscanf(mappingPathName, "Bridging.Bridge.%hhu", &objIid.idx[0]);
+	objIid.level = 1;
+	if((ret = zcfgFeObjStructGet(RDM_OID_BRIDGING_BR, &objIid, (void **)&brBdgObj)) == ZCFG_SUCCESS)
+	{
+		if(strstr(brBdgObj->X_ZYXEL_BridgeName, "brgre"))
+		{
+			printf("%s: can not modify gre br\n", __FUNCTION__);
+			return ZCFG_INVALID_PARAM_VALUE;
+		}
+		zcfgFeObjStructFree(brBdgObj);
+	}
+#endif
+
 
 	IID_INIT(objIid);
 	sscanf(mappingPathName, "Bridging.Bridge.%hhu.Port.%hhu", &objIid.idx[0], &objIid.idx[1]);
