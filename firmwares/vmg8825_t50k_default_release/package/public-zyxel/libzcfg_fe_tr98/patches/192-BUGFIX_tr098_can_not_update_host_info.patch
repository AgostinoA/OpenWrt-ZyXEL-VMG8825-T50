diff -Naur libzcfg_fe_tr98-1.0.orig/lanDev.c libzcfg_fe_tr98-1.0/lanDev.c
--- libzcfg_fe_tr98-1.0.orig/lanDev.c	2015-08-09 20:38:40.349055000 +0800
+++ libzcfg_fe_tr98-1.0/lanDev.c	2015-08-09 20:08:08.805822700 +0800
@@ -47,6 +47,8 @@
 #define TAG_LOSTWIFI 	(1 << 3)
 #endif
 
+#define MODIFY_HOSTS_AND_HOST_FUN 1
+
 #define WPS_DEVICENAME "wps_devicename"
 enum {
 	WPS_PIN = 1,
@@ -425,6 +427,11 @@
 #else
 	zcfgRet_t ret;
 	objIndex_t objIid;
+#if MODIFY_HOSTS_AND_HOST_FUN // modify 20150809
+	struct json_object *hostsObj = NULL;
+	struct json_object *paramValue = NULL;
+	tr98Parameter_t *paramList = NULL;
+#else	
 	char tr181Name[32] = {0};
 	char tr98TmpName[32] = {0};
 	char mappingPathName[32] = {0};
@@ -432,9 +439,35 @@
 	char *ptr = NULL;
 	uint32_t hostNum = 0;
 	rdm_HostsHost_t *stHost = NULL;
+#endif
 
 	zcfgLog(ZCFG_LOG_DEBUG, "%s : Enter\n", __FUNCTION__);
 	
+#if MODIFY_HOSTS_AND_HOST_FUN // modify 20150809
+	IID_INIT(objIid);
+	if((ret = feObjJsonGet(RDM_OID_HOSTS, &objIid, &hostsObj, updateFlag)) != ZCFG_SUCCESS){
+		return ret;
+	}
+	
+	/*fill up tr98 object from related tr181 objects*/
+	*tr98Jobj = json_object_new_object();
+	paramList = tr98Obj[handler].parameter;
+	while(paramList->name != NULL){
+		/*Write parameter value from tr181 objects to tr98 object*/ 	
+		paramValue = json_object_object_get(hostsObj, paramList->name);
+		if(paramValue != NULL){
+			json_object_object_add(*tr98Jobj, paramList->name, JSON_OBJ_COPY(paramValue));
+			paramList++;
+			continue;
+		}
+
+		/*Not defined in tr181, give it a default value*/
+		printf("Can't find parameter %s in TR181\n", paramList->name);
+		paramList++;	
+	}
+	
+	json_object_put(hostsObj);
+#else
 	strcpy(tr98TmpName, tr98FullPathName);
 	ptr = strstr(tr98TmpName, ".Hosts");
 	*ptr = '\0';
@@ -465,7 +498,8 @@
 	*tr98Jobj = json_object_new_object();
 	json_object_object_add(*tr98Jobj, "HostNumberOfEntries", json_object_new_int(hostNum));
 #endif
-
+#endif
+	
 	return ZCFG_SUCCESS;
 }
 
@@ -589,23 +623,34 @@
 	freeHostList(hostlist);
 #else
 	zcfgRet_t ret;
-	objIndex_t objIid, hostIid;
+	objIndex_t objIid; 
 	tr98Parameter_t *paramList = NULL;
+	char *ptr = NULL;
+	struct json_object *hostJobj = NULL;
+	struct json_object *paramValue = NULL;
+#if MODIFY_HOSTS_AND_HOST_FUN // modify 20150809
+#else
+	objIndex_t hostIid;
 	char tr181Name[32] = {0};
 	char tr98TmpName[128] = {0};
 	char higherLayerPath[32] = {0};
 	char mappingPathName[32] = {0};
-	char hostName[128] = {0};
-	char *ptr = NULL;
-	char paramName[64] = {0};
 	int idx = 0;
 	uint32_t hostNum = 0;
-	struct json_object *hostJobj = NULL;
-	struct json_object *paramValue = NULL;
 	rdm_HostsHost_t *stHost = NULL;
+#endif
 	
 	zcfgLog(ZCFG_LOG_DEBUG, "%s : Enter\n", __FUNCTION__);
 	
+#if MODIFY_HOSTS_AND_HOST_FUN // modify 20150809
+	/*Get related tr181 objects*/
+	IID_INIT(objIid);
+	objIid.level = 1;
+	sscanf(tr98FullPathName, "%*[^.].%*[^.].%*d.Hosts.Host.%hhu", &objIid.idx[0]);
+	if((ret = feObjJsonGet(RDM_OID_HOSTS_HOST, &objIid, &hostJobj, updateFlag)) != ZCFG_SUCCESS){
+		return ret;
+	}
+#else
 	strcpy(tr98TmpName, tr98FullPathName);
 	ptr = strstr(tr98TmpName, ".Hosts");
 	*ptr = '\0';
@@ -618,17 +663,7 @@
 	strcpy(tr181Name, mappingPathName);
 	if((ret = zcfgFeTr181IfaceStackHigherLayerGet(tr181Name, higherLayerPath)) != ZCFG_SUCCESS)
 		return ret;
-		
-#if 1
-	/*Get related tr181 objects*/
-	IID_INIT(objIid);
-	objIid.level = 1;
-	sscanf(tr98FullPathName, "%*[^.].%*[^.].%*d.Hosts.Host.%hhu", &objIid.idx[0]);
 
-	if((ret = feObjJsonGet(RDM_OID_HOSTS_HOST, &objIid, &hostJobj, updateFlag)) != ZCFG_SUCCESS){
-		return ret;
-	}
-#else
 	if(strstr(higherLayerPath, "IP.Interface") != NULL) {
 		IID_INIT(objIid);
 		IID_INIT(hostIid);
