Index: libzcfg_fe_tr98-1.0/lanDev.c
===================================================================
--- libzcfg_fe_tr98-1.0.orig/lanDev.c	2016-03-08 17:59:25.738381029 +0800
+++ libzcfg_fe_tr98-1.0/lanDev.c	2016-03-08 18:12:14.510395776 +0800
@@ -1818,6 +1818,7 @@
 	struct json_object *ethLinkJobj = NULL;
 	objIndex_t ethLinkIid;
 	const char *setIfName = NULL;
+	//bool ipAddressModify = false;
 
 	if((ret = zcfgFe98To181MappingNameGet(tr98FullPathName, mappingPathName)) != ZCFG_SUCCESS){
 		printf("%s:98 to 181 Mapping Fail!!\n", __FUNCTION__);
@@ -1971,19 +1972,18 @@
 			if(strstr(paramList->name, "X_ZYXEL_IfName") != NULL){
 				uint8_t brNum = 255;
 				char bridgingIfaceName[30] = {0}, ipIfaceIpAddr[20] = {0};
-				const char *ifName = json_object_get_string(paramValue);
 				char startIP[16] = {0}, endIP[16] = {0};
 				objIndex_t brIid;
 				char *bridgeName = NULL;
 
-				if(!ifName || !strlen(ifName) || !strstr(ifName, "br")) {
+				if(!setIfName || !strlen(setIfName) || !strstr(setIfName, "br")) {
 					paramList++;
 					continue;
 				}
 
-				printf("%s: set X_ZYXEL_IfName %s\n", __FUNCTION__, ifName);
-				json_object_object_add(ipIntfJobj, paramList->name, json_object_new_string(ifName));
-				sscanf(ifName, "br%hhu", &brNum);
+				printf("%s: set X_ZYXEL_IfName %s\n", __FUNCTION__, setIfName);
+				json_object_object_add(ipIntfJobj, paramList->name, json_object_new_string(setIfName));
+				sscanf(setIfName, "br%hhu", &brNum);
 
 				IID_INIT(brIid);
 				brIid.idx[0] = brNum+1;
@@ -2002,7 +2002,8 @@
 					json_object_object_add(ethLinkJobj, "LowerLayers", json_object_new_string(bridgingIfaceName));
 				}
 
-				if(ipIntfv4AddrJobj) {
+				const char *tr181SetIpAddress = json_object_get_string(json_object_object_get(ipIntfv4AddrJobj, "IPAddress"));
+				if(ipIntfv4AddrJobj && !(tr181SetIpAddress && strlen(tr181SetIpAddress))) {
 					sprintf(ipIfaceIpAddr, "%s.%d.1", LAN_DEFAULT_SUBNET, brNum+1);
 					// Default lan ip address
 					json_object_object_add(ipIntfv4AddrJobj, "Enable", json_object_new_boolean(true));
