Index: libzcfg_fe_tr98-1.0/zcfg_fe_tr98.c
===================================================================
--- libzcfg_fe_tr98-1.0.orig/zcfg_fe_tr98.c	2018-01-04 16:12:18.935954617 +0800
+++ libzcfg_fe_tr98-1.0/zcfg_fe_tr98.c	2018-01-04 16:23:37.262052000 +0800
@@ -4209,6 +4209,198 @@
 	return ZCFG_SUCCESS;
 }
 
+
+#ifdef ZCFG_RPC_REQUEST_ADDITIONS
+struct json_object *zcfgFeRpcRequestAdditionNew()
+{
+	struct json_object *additions = json_object_new_object();
+	zcfgFeRpcRequestAddRpcDelayApply(additions, false);
+
+	return additions;
+}
+
+zcfgRet_t zcfgFeRpcRequestAddAttr(struct json_object *rpcAdditions, const char *attrName, struct json_object *attrObject, bool utilizeOnConfigApply)
+{
+	struct json_object *rpcRequestAttrs = NULL;
+
+	if(!rpcAdditions || !attrName || !attrObject)
+		return ZCFG_INTERNAL_ERROR;
+
+	rpcRequestAttrs = json_object_object_get(rpcAdditions, "rpcrequestattrs");
+	if(!rpcRequestAttrs){
+		rpcRequestAttrs = json_object_new_object();
+		json_object_object_add(rpcAdditions, "rpcrequestattrs", rpcRequestAttrs);
+	}
+
+	json_object_object_add(rpcRequestAttrs, attrName, attrObject);
+	if(utilizeOnConfigApply)
+		zcfgFeRpcRequestAddRpcApplyAttr(rpcRequestAttrs, "runonconfigapply", json_object_new_boolean(true));
+	else
+		zcfgFeRpcRequestAddRpcApplyAttr(rpcRequestAttrs, "runonconfigrequest", json_object_new_boolean(true));
+
+	return ZCFG_SUCCESS;
+}
+
+zcfgRet_t zcfgFeRpcRequestAddReplyAttr(struct json_object *rpcAdditions, const char *attrName, struct json_object *attrObject)
+{
+	struct json_object *rpcReplyAttrs = NULL;
+
+	if(!rpcAdditions || !attrName || !attrObject)
+		return ZCFG_INTERNAL_ERROR;
+
+	rpcReplyAttrs = json_object_object_get(rpcAdditions, "rpcreplyattrs");
+	if(!rpcReplyAttrs){
+		rpcReplyAttrs = json_object_new_object();
+		json_object_object_add(rpcAdditions, "rpcreplyattrs", rpcReplyAttrs);
+	}
+
+	json_object_object_add(rpcReplyAttrs, attrName, attrObject);
+
+	return ZCFG_SUCCESS;
+}
+
+zcfgRet_t zcfgFeRpcRequestAddRpcApplyAttr(struct json_object *rpcAdditions, const char *attrName, struct json_object *attrObject)
+{
+	struct json_object *rpcApplySetAttrs = NULL;
+
+	if(!rpcAdditions || !attrName || !attrObject)
+		return ZCFG_INTERNAL_ERROR;
+
+	rpcApplySetAttrs = json_object_object_get(rpcAdditions, "rpcapplysetattrs");
+	if(!rpcApplySetAttrs){
+		rpcApplySetAttrs = json_object_new_object();
+		json_object_object_add(rpcAdditions, "rpcapplysetattrs", rpcApplySetAttrs);
+	}
+
+	json_object_object_add(rpcApplySetAttrs, attrName, attrObject);
+
+	return ZCFG_SUCCESS;
+}
+
+
+zcfgRet_t zcfgFeRpcRequestAddMethod(struct json_object *rpcAdditions, const char *methodName, bool runMethodOnConfigApply)
+{
+	struct json_object *rpcRequestMethods = NULL;
+
+	if(!rpcAdditions || !methodName)
+		return ZCFG_INTERNAL_ERROR;
+
+	rpcRequestMethods = json_object_object_get(rpcAdditions, "rpcrequestmethods");
+	if(!rpcRequestMethods){
+		rpcRequestMethods = json_object_new_object();
+		json_object_object_add(rpcAdditions, "rpcrequestmethods", rpcRequestMethods);
+	}
+
+	struct json_object *rpcApplySetAttrs = json_object_object_get(rpcAdditions, "rpcapplysetattrs");
+	if(!rpcApplySetAttrs){
+		rpcApplySetAttrs = json_object_new_object();
+		json_object_object_add(rpcAdditions, "rpcapplysetattrs", rpcApplySetAttrs);
+	}
+
+	struct json_object *rpcRequestMethod = json_object_object_get(rpcRequestMethods, methodName);
+	if(!rpcRequestMethod){
+		rpcRequestMethod = json_object_new_object();
+		json_object_object_add(rpcRequestMethods, methodName, rpcRequestMethod);
+		if(runMethodOnConfigApply)
+			zcfgFeRpcRequestAddRpcApplyAttr(rpcApplySetAttrs, "runonconfigapply", json_object_new_boolean(true));
+		else
+			zcfgFeRpcRequestAddRpcApplyAttr(rpcApplySetAttrs, "runonconfigrequest", json_object_new_boolean(true));
+	}
+
+	return ZCFG_SUCCESS;
+}
+
+zcfgRet_t zcfgFeRpcRequestSpecifyMethodParam(struct json_object *rpcAdditions, const char *methodName, const char *param, struct json_object *value)
+{
+	struct json_object *rpcRequestMethods = NULL;
+
+	if(!rpcAdditions || !methodName || !param || !value)
+		return ZCFG_INTERNAL_ERROR;
+
+	rpcRequestMethods = json_object_object_get(rpcAdditions, "rpcrequestmethods");
+	if(!rpcRequestMethods)
+		return ZCFG_NO_SUCH_OBJECT;
+
+	struct json_object *rpcRequestMethod = json_object_object_get(rpcRequestMethods, methodName);
+	if(!rpcRequestMethod)
+		return ZCFG_NO_SUCH_OBJECT;
+
+	json_object_object_add(rpcRequestMethod, param, value);
+
+	return ZCFG_SUCCESS;
+}
+
+zcfgRet_t zcfgFeRpcObjectRetrieveMethodReply(struct json_object *rpcAdditions, const char *methodName, struct json_object **methodReply)
+{
+	struct json_object *rpcReplyMethods = NULL, *rpcReplyMethod = NULL;
+	zcfgRet_t methodReplyRst = ZCFG_NO_SUCH_PARAMETER;
+
+	if(!rpcAdditions || !methodName || !methodReply)
+		return ZCFG_INTERNAL_ERROR;
+
+	*methodReply = NULL;
+	struct json_object *rpcAdditionsReply = json_object_object_get(rpcAdditions, "rpcadditionsreply");
+	if(rpcAdditionsReply)
+		rpcReplyMethods = json_object_object_get(rpcAdditions, "rpcreplymethod");
+
+	if(rpcReplyMethods){
+		rpcReplyMethod = json_object_object_get(rpcReplyMethods, methodName);
+		if(rpcReplyMethod){
+			struct json_object *methodReplyRstObj = json_object_object_get(rpcReplyMethod, "_methodreplyrst");
+			methodReplyRst = methodReplyRstObj ? json_object_get_int(methodReplyRstObj) : ZCFG_NO_SUCH_PARAMETER;
+			*methodReply = rpcReplyMethod;
+		}
+	}
+
+	return methodReplyRst;
+}
+
+struct json_object *zcfgFeRpcRequestRetrieveMethodReplyParam(struct json_object *methodReply, const char *parmName)
+{
+	struct json_object *paramObj;
+	paramObj = (methodReply && parmName) ? json_object_object_get(methodReply, parmName) : NULL;
+	return paramObj;
+}
+#else
+zcfgRet_t zcfgFeRpcRequestAddAttr(struct json_object *rpcAdditions, const char *attrName, struct json_object *attrObject, bool utilizeOnConfigApply)
+{
+	return ZCFG_INTERNAL_ERROR;
+}
+
+zcfgRet_t zcfgFeRpcRequestAddReplyAttr(struct json_object *rpcAdditions, const char *attrName, struct json_object *attrObject)
+{
+	return ZCFG_INTERNAL_ERROR;
+}
+
+
+zcfgRet_t zcfgFeRpcRequestAddRpcApplyAttr(struct json_object *rpcAdditions, const char *attrName, struct json_object *attrObject)
+{
+	return ZCFG_INTERNAL_ERROR;
+}
+
+zcfgRet_t zcfgFeRpcRequestAddMethod(struct json_object *rpcAdditions, const char *methodName, bool runMethodOnConfigApply)
+{
+	return ZCFG_INTERNAL_ERROR;
+}
+
+zcfgRet_t zcfgFeRpcRequestSpecifyMethodParam(struct json_object *rpcAdditions, const char *methodName, const char *param, struct json_object *value)
+{
+	return ZCFG_INTERNAL_ERROR;
+}
+
+
+zcfgRet_t zcfgFeRpcObjectRetrieveMethodReply(struct json_object *rpcAdditions, const char *methodName, struct json_object **methodReply)
+{
+	return ZCFG_INTERNAL_ERROR;
+}
+
+struct json_object *zcfgFeRpcRequestRetrieveMethodReplyParam(struct json_object *methodReply, const char *parmName)
+{
+	return NULL;
+}
+
+#endif
+
 zcfgSubObjNameList_t* zcfgFeTr98SubObjNameListGet(char *tr98ObjName){
 	zcfgSubObjNameList_t *head = NULL, *now = NULL, *node = NULL;
 	char tr98ClassName[128] = {0};
Index: libzcfg_fe_tr98-1.0/Makefile
===================================================================
--- libzcfg_fe_tr98-1.0.orig/Makefile	2018-01-04 16:12:18.891954617 +0800
+++ libzcfg_fe_tr98-1.0/Makefile	2018-01-04 16:12:18.975954617 +0800
@@ -221,6 +221,10 @@
 CFLAGS += -DZYXEL_IPV6SPEC
 endif
 
+ifeq ($(CONFIG_ZCFG_RPC_REQUEST_ADDITIONS),y)
+CFLAGS += -DZCFG_RPC_REQUEST_ADDITIONS
+endif
+
 .PHONY : libzcfg_fe_tr98
 
 all: clean libzcfg_fe_tr98
Index: libzcfg_fe_tr98-1.0/zcfg_fe_tr98.h
===================================================================
--- libzcfg_fe_tr98-1.0.orig/zcfg_fe_tr98.h	2018-01-04 16:12:18.935954617 +0800
+++ libzcfg_fe_tr98-1.0/zcfg_fe_tr98.h	2018-01-04 16:22:54.315757800 +0800
@@ -350,4 +350,22 @@
 #define zcfgFeJsonMultiObjParamkRetrieve() NULL
 #endif
 
+#ifdef ZCFG_RPC_REQUEST_ADDITIONS
+struct json_object *zcfgFeRpcRequestAdditionNew();
+#else
+#define zcfgFeRpcRequestAdditionNew() NULL
 #endif
+
+#define zcfgFeRpcRequestAddRpcDelayApply(_rpcObjAddition, _value) zcfgFeRpcRequestAddRpcApplyAttr(_rpcObjAddition, "delayapply", json_object_new_boolean(_value))
+#define zcfgFeRpcRequestAdditionRelease json_object_put
+
+zcfgRet_t zcfgFeRpcRequestAddAttr(struct json_object *, const char *, struct json_object *, bool );
+zcfgRet_t zcfgFeRpcRequestAddReplyAttr(struct json_object *, const char *, struct json_object *);
+zcfgRet_t zcfgFeRpcRequestAddRpcApplyAttr(struct json_object *, const char *, struct json_object *);
+zcfgRet_t zcfgFeRpcRequestAddMethod(struct json_object *, const char *, bool);
+zcfgRet_t zcfgFeRpcRequestSpecifyMethodParam(struct json_object *, const char *, const char *, struct json_object *);
+
+zcfgRet_t zcfgFeRpcObjectRetrieveMethodReply(struct json_object *, const char *, struct json_object **);
+struct json_object *zcfgFeRpcRequestRetrieveMethodReplyParam(struct json_object *, const char *);
+
+#endif
\ No newline at end of file
