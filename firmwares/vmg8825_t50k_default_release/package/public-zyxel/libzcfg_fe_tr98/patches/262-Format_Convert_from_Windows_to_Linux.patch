Index: libzcfg_fe_tr98-1.0/Makefile
===================================================================
--- libzcfg_fe_tr98-1.0.orig/Makefile	2015-12-02 18:08:48.000000000 +0800
+++ libzcfg_fe_tr98-1.0/Makefile	2015-12-02 18:20:54.797816276 +0800
@@ -1,171 +1,171 @@
-CURRENT_DIR = $(shell pwd)
-COMMON_ZCFG_INCLUDE_DIR = $(CURRENT_DIR)/../../../private/apps/zcfg/include
-LIB_PATH = -L$(USRLIBDIR) -L$(INSTALL_DIR)/lib/public -L$(INSTALL_DIR)/lib/private
-LINK_LIB = -ljson -lzcfg_msg -lzcfg_fe_rdm_access -lzcfg_fe_rdm_string -lzcfg_fe_rdm_struct
-INC_PATH = -I$(TOOLCHAIN)/include -I$(COMMON_ZCFG_INCLUDE_DIR) -I.
-OBJ_FILES = wanDev.o wanDev_api.o zyExt.o diag.o devInfo.o devTime.o root.o mgmtSrv.o lanDev.o l2bridge.o l3fwd.o lanConfSec.o firewall.o schedule.o qos.o voice.o
-ifeq ($(CONFIG_ZYXEL_ONECONNECT),y)
-LINK_LIB+= -lsqlite3
-OBJ_FILES+=oneConnect.o
-endif
-
-OBJ_FILES+=zcfg_fe_msg.o
-
-CFLAGS += -fPIC -Wall
-
-CFLAGS += -DZCFG_DYNAMIC_NAMEMAPPING
-
-.PHONY : $(OBJ_FILES) libzcfg_fe_tr98
-
-all: clean $(OBJ_FILES) libzcfg_fe_tr98
-
-libzcfg_fe_tr98 : zcfg_fe_tr98.o $(OBJ_FILES)
-	$(CC) -shared -o libzcfg_fe_tr98.so zcfg_fe_tr98.o $(OBJ_FILES) $(LIB_PATH) $(LINK_LIB)
-
-wanDev.o: wanDev.c wanDev_api.h
-	$(CC) $(CFLAGS) -c $< $(INC_PATH) $(LIB_PATH) $(LINK_LIB) -std=gnu99
-
-wanDev_api.o: wanDev_api.c
-	$(CC) $(CFLAGS) -c $< $(INC_PATH) $(LIB_PATH) $(LINK_LIB) -std=gnu99
-
-zyExt.o : zyExt.c
-	$(CC) $(CFLAGS) -Werror -c $< $(INC_PATH) $(LIB_PATH) $(LINK_LIB) -std=gnu99
-
-diag.o : diag.c
-	$(CC) $(CFLAGS) -Werror -c $< $(INC_PATH) $(LIB_PATH) $(LINK_LIB) -std=gnu99
-
-devInfo.o: devInfo.c
-	$(CC) $(CFLAGS) -c $< $(INC_PATH) $(LIB_PATH) $(LINK_LIB) -std=gnu99
-
-devTime.o: devTime.c
-	$(CC) $(CFLAGS) -c $< $(INC_PATH) $(LIB_PATH) $(LINK_LIB) -std=gnu99
-
-lanDev.o: lanDev.c
-	$(CC) $(CFLAGS) -c $< $(INC_PATH) $(LIB_PATH) $(LINK_LIB) -std=gnu99
-
-l2bridge.o: l2bridge.c
-	$(CC) $(CFLAGS) -c $< $(INC_PATH) $(LIB_PATH) $(LINK_LIB) -std=gnu99
-
-root.o: root.c
-	$(CC) $(CFLAGS) -c $< $(INC_PATH) $(LIB_PATH) $(LINK_LIB) -std=gnu99
-
-mgmtSrv.o: mgmtSrv.c
-	$(CC) $(CFLAGS) -c $< $(INC_PATH) $(LIB_PATH) $(LINK_LIB) -std=gnu99
-
-l3fwd.o: l3fwd.c
-	$(CC) $(CFLAGS) -c $< $(INC_PATH) $(LIB_PATH) $(LINK_LIB) -std=gnu99
-
-lanConfSec.o: lanConfSec.c
-	$(CC) $(CFLAGS) -c $< $(INC_PATH) $(LIB_PATH) $(LINK_LIB) -std=gnu99
-
-firewall.o: firewall.c
-	$(CC) $(CFLAGS) -c $< $(INC_PATH) $(LIB_PATH) $(LINK_LIB) -std=gnu99
-
-schedule.o: schedule.c
-	$(CC) $(CFLAGS) -c $< $(INC_PATH) $(LIB_PATH) $(LINK_LIB) -std=gnu99
-
-qos.o: qos.c
-	$(CC) $(CFLAGS) -c $< $(INC_PATH) $(LIB_PATH) $(LINK_LIB) -std=gnu99
-
-voice.o: voice.c
-	$(CC) $(CFLAGS) -c $< $(INC_PATH) $(LIB_PATH) $(LINK_LIB) -std=gnu99
-
-ifeq ($(CONFIG_ZYXEL_ONECONNECT),y)
-oneConnect.o: oneConnect.c
-	$(CC) $(CFLAGS) -c $< $(INC_PATH) $(LIB_PATH) $(LINK_LIB) -std=gnu99
-endif
-
-ifeq ($(CONFIG_ZCFG_ABANDON_NO_TR181_MAPPING_PARM),y)
-CFLAGS += -DZCFG_ABANDON_NO_TR181_MAPPING_PARM
-endif
-
-zcfg_fe_msg.o: zcfg_fe_msg.c
-	$(CC) $(CFLAGS) -c $< $(INC_PATH) $(LIB_PATH) $(LINK_LIB) -std=gnu99
-
-zcfg_fe_tr98.o : zcfg_fe_tr98.c zcfg_fe_tr98.h
-	$(CC) $(CFLAGS) -c zcfg_fe_tr98.c $(CFLAG) $(LIB_PATH) $(INC_PATH) $(LINK_LIB) -std=gnu99
-
-install:
-	install -m 755 libzcfg_fe_tr98.so $(INSTALL_DIR)/lib/public
-	install -m 666 zcfg_fe_tr98.h $(COMMON_ZCFG_INCLUDE_DIR)
-
-clean:
-	rm -rf *.o
-	rm -rf *.so
-	rm -rf $(COMMON_ZCFG_INCLUDE_DIR)/zcfg_fe_tr98.h
-
-CURR_DIR := $(shell pwd)
-BUILD_DIR:=$(subst /userspace, /userspace,$(CURR_DIR))
-BUILD_DIR:=$(word 1, $(BUILD_DIR))
-
-#include $(BUILD_DIR)/make.common
-
-CFLAGS += -DIPV6INTERFACE_PROFILE -DDHCPV6CLIENT_PROFILE -DIPV6RD_PROFILE -DROUTERADVERTISEMENT_PROFILE -DIPV6SERVER_PROFILE
-CFLAGS += -DZCFG_DYNAMIC_NAMEMAPPING -DZCFG_PARM_NAMEMAPPING
-CFLAGS += -DZYXEL_EXT=1
-
-#Generic
-ifneq ($(strip $(CONFIG_PACKAGE_ZyIMS)),)
-CFLAGS += -DCONFIG_PACKAGE_ZyIMS
-endif
-
-ifeq ($(CONFIG_XPON_SUPPORT),y)
-CFLAGS += -DCONFIG_XPON_SUPPORT
-endif
-
-#One Connect
-ifeq ($(CONFIG_ZYXEL_ONECONNECT),y)
-CFLAGS += -DONECONNECT
-endif
-ifeq ($(CONFIG_ZYXEL_HOSTPOLLING),y)
-CFLAGS += -DHOSTPOLLING
-endif
-
-ifeq ($(strip $(ZYXEL)),y)
-CFLAGS += -DZYXEL_EXT=1
-endif
-
-ifeq ($(CONFIG_ZyXEL_IPP_PRINTSERVER),y)
-CFLAGS += -DZyXEL_IPP_PRINTSERVER
-endif
-
-ifeq ($(CONFIG_ZyXEL_DHCP_OPTION125),y)
-CFLAGS += -DZyXEL_DHCP_OPTION125
-endif
-
-#Sunrise
-ifneq ($(strip $(CONFIG_SUNRISE_STB_PROVISION)),)
-CFLAGS += -DSUNRISE_STB_PROVISION
-endif
-ifneq ($(strip $(CONFIG_SUNRISE_TR98_CUSTOMIZATION)),)
-CFLAGS += -DSUNRISE_TR98_CUSTOMIZATION
-endif
-ifeq ($(CONFIG_SUNRISE_RANDOM_PASSWORD),y)
-CFLAGS += -DSUNRISE_RANDOM_PASSWORD
-endif
-ifeq ($(CONFIG_SUNRISE_BRIDGE_INDEX_CUSTOMIZATION),y)
-CFLAGS += -DSUNRISE_BRIDGE_INDEX_CUSTOMIZATION
-endif
-ifeq ($(CONFIG_SUNRISE_FIXED_WANDEV_INDEX_CUSTOMIZATION),y)
-CFLAGS += -DSUNRISE_FIXED_WANDEV_INDEX_CUSTOMIZATION
-endif
-
-#SuperOnline
-ifeq ($(CONFIG_SOL_TR69_AUTO_CHANGE_DHCP_POOL),y)
-CFLAGS += -DSOL_TR69_AUTO_CHANGE_DHCP_POOL
-endif
-ifeq ($(CONFIG_SOL_TR69_FIREWALL_CONTROL),y)
-CFLAGS += -DSOL_TR69_FIREWALL_CONTROL
-endif
-ifeq ($(CONFIG_SOL_TR69_3G_Backup),y)
-CFLAGS += -DSOL_TR69_3G_Backup
-endif
-ifeq ($(CONFIG_SOL_TR69_TRUSTDOMAIN),y)
-CFLAGS += -DSOL_TR69_TRUSTDOMAIN
-endif
-ifeq ($(CONFIG_SOL_TR69_LOGINACCOUNT),y)
-CFLAGS += -DSOL_TR69_LOGINACCOUNT
-endif
-ifeq ($(CONFIG_SOL_TR69_NO_LAN_HOST),y)
-CFLAGS += -DSOL_TR69_NO_LAN_HOST
-endif
+CURRENT_DIR = $(shell pwd)
+COMMON_ZCFG_INCLUDE_DIR = $(CURRENT_DIR)/../../../private/apps/zcfg/include
+LIB_PATH = -L$(USRLIBDIR) -L$(INSTALL_DIR)/lib/public -L$(INSTALL_DIR)/lib/private
+LINK_LIB = -ljson -lzcfg_msg -lzcfg_fe_rdm_access -lzcfg_fe_rdm_string -lzcfg_fe_rdm_struct
+INC_PATH = -I$(TOOLCHAIN)/include -I$(COMMON_ZCFG_INCLUDE_DIR) -I.
+OBJ_FILES = wanDev.o wanDev_api.o zyExt.o diag.o devInfo.o devTime.o root.o mgmtSrv.o lanDev.o l2bridge.o l3fwd.o lanConfSec.o firewall.o schedule.o qos.o voice.o
+ifeq ($(CONFIG_ZYXEL_ONECONNECT),y)
+LINK_LIB+= -lsqlite3
+OBJ_FILES+=oneConnect.o
+endif
+
+OBJ_FILES+=zcfg_fe_msg.o
+
+CFLAGS += -fPIC -Wall
+
+CFLAGS += -DZCFG_DYNAMIC_NAMEMAPPING
+
+.PHONY : $(OBJ_FILES) libzcfg_fe_tr98
+
+all: clean $(OBJ_FILES) libzcfg_fe_tr98
+
+libzcfg_fe_tr98 : zcfg_fe_tr98.o $(OBJ_FILES)
+	$(CC) -shared -o libzcfg_fe_tr98.so zcfg_fe_tr98.o $(OBJ_FILES) $(LIB_PATH) $(LINK_LIB)
+
+wanDev.o: wanDev.c wanDev_api.h
+	$(CC) $(CFLAGS) -c $< $(INC_PATH) $(LIB_PATH) $(LINK_LIB) -std=gnu99
+
+wanDev_api.o: wanDev_api.c
+	$(CC) $(CFLAGS) -c $< $(INC_PATH) $(LIB_PATH) $(LINK_LIB) -std=gnu99
+
+zyExt.o : zyExt.c
+	$(CC) $(CFLAGS) -Werror -c $< $(INC_PATH) $(LIB_PATH) $(LINK_LIB) -std=gnu99
+
+diag.o : diag.c
+	$(CC) $(CFLAGS) -Werror -c $< $(INC_PATH) $(LIB_PATH) $(LINK_LIB) -std=gnu99
+
+devInfo.o: devInfo.c
+	$(CC) $(CFLAGS) -c $< $(INC_PATH) $(LIB_PATH) $(LINK_LIB) -std=gnu99
+
+devTime.o: devTime.c
+	$(CC) $(CFLAGS) -c $< $(INC_PATH) $(LIB_PATH) $(LINK_LIB) -std=gnu99
+
+lanDev.o: lanDev.c
+	$(CC) $(CFLAGS) -c $< $(INC_PATH) $(LIB_PATH) $(LINK_LIB) -std=gnu99
+
+l2bridge.o: l2bridge.c
+	$(CC) $(CFLAGS) -c $< $(INC_PATH) $(LIB_PATH) $(LINK_LIB) -std=gnu99
+
+root.o: root.c
+	$(CC) $(CFLAGS) -c $< $(INC_PATH) $(LIB_PATH) $(LINK_LIB) -std=gnu99
+
+mgmtSrv.o: mgmtSrv.c
+	$(CC) $(CFLAGS) -c $< $(INC_PATH) $(LIB_PATH) $(LINK_LIB) -std=gnu99
+
+l3fwd.o: l3fwd.c
+	$(CC) $(CFLAGS) -c $< $(INC_PATH) $(LIB_PATH) $(LINK_LIB) -std=gnu99
+
+lanConfSec.o: lanConfSec.c
+	$(CC) $(CFLAGS) -c $< $(INC_PATH) $(LIB_PATH) $(LINK_LIB) -std=gnu99
+
+firewall.o: firewall.c
+	$(CC) $(CFLAGS) -c $< $(INC_PATH) $(LIB_PATH) $(LINK_LIB) -std=gnu99
+
+schedule.o: schedule.c
+	$(CC) $(CFLAGS) -c $< $(INC_PATH) $(LIB_PATH) $(LINK_LIB) -std=gnu99
+
+qos.o: qos.c
+	$(CC) $(CFLAGS) -c $< $(INC_PATH) $(LIB_PATH) $(LINK_LIB) -std=gnu99
+
+voice.o: voice.c
+	$(CC) $(CFLAGS) -c $< $(INC_PATH) $(LIB_PATH) $(LINK_LIB) -std=gnu99
+
+ifeq ($(CONFIG_ZYXEL_ONECONNECT),y)
+oneConnect.o: oneConnect.c
+	$(CC) $(CFLAGS) -c $< $(INC_PATH) $(LIB_PATH) $(LINK_LIB) -std=gnu99
+endif
+
+ifeq ($(CONFIG_ZCFG_ABANDON_NO_TR181_MAPPING_PARM),y)
+CFLAGS += -DZCFG_ABANDON_NO_TR181_MAPPING_PARM
+endif
+
+zcfg_fe_msg.o: zcfg_fe_msg.c
+	$(CC) $(CFLAGS) -c $< $(INC_PATH) $(LIB_PATH) $(LINK_LIB) -std=gnu99
+
+zcfg_fe_tr98.o : zcfg_fe_tr98.c zcfg_fe_tr98.h
+	$(CC) $(CFLAGS) -c zcfg_fe_tr98.c $(CFLAG) $(LIB_PATH) $(INC_PATH) $(LINK_LIB) -std=gnu99
+
+install:
+	install -m 755 libzcfg_fe_tr98.so $(INSTALL_DIR)/lib/public
+	install -m 666 zcfg_fe_tr98.h $(COMMON_ZCFG_INCLUDE_DIR)
+
+clean:
+	rm -rf *.o
+	rm -rf *.so
+	rm -rf $(COMMON_ZCFG_INCLUDE_DIR)/zcfg_fe_tr98.h
+
+CURR_DIR := $(shell pwd)
+BUILD_DIR:=$(subst /userspace, /userspace,$(CURR_DIR))
+BUILD_DIR:=$(word 1, $(BUILD_DIR))
+
+#include $(BUILD_DIR)/make.common
+
+CFLAGS += -DIPV6INTERFACE_PROFILE -DDHCPV6CLIENT_PROFILE -DIPV6RD_PROFILE -DROUTERADVERTISEMENT_PROFILE -DIPV6SERVER_PROFILE
+CFLAGS += -DZCFG_DYNAMIC_NAMEMAPPING -DZCFG_PARM_NAMEMAPPING
+CFLAGS += -DZYXEL_EXT=1
+
+#Generic
+ifneq ($(strip $(CONFIG_PACKAGE_ZyIMS)),)
+CFLAGS += -DCONFIG_PACKAGE_ZyIMS
+endif
+
+ifeq ($(CONFIG_XPON_SUPPORT),y)
+CFLAGS += -DCONFIG_XPON_SUPPORT
+endif
+
+#One Connect
+ifeq ($(CONFIG_ZYXEL_ONECONNECT),y)
+CFLAGS += -DONECONNECT
+endif
+ifeq ($(CONFIG_ZYXEL_HOSTPOLLING),y)
+CFLAGS += -DHOSTPOLLING
+endif
+
+ifeq ($(strip $(ZYXEL)),y)
+CFLAGS += -DZYXEL_EXT=1
+endif
+
+ifeq ($(CONFIG_ZyXEL_IPP_PRINTSERVER),y)
+CFLAGS += -DZyXEL_IPP_PRINTSERVER
+endif
+
+ifeq ($(CONFIG_ZyXEL_DHCP_OPTION125),y)
+CFLAGS += -DZyXEL_DHCP_OPTION125
+endif
+
+#Sunrise
+ifneq ($(strip $(CONFIG_SUNRISE_STB_PROVISION)),)
+CFLAGS += -DSUNRISE_STB_PROVISION
+endif
+ifneq ($(strip $(CONFIG_SUNRISE_TR98_CUSTOMIZATION)),)
+CFLAGS += -DSUNRISE_TR98_CUSTOMIZATION
+endif
+ifeq ($(CONFIG_SUNRISE_RANDOM_PASSWORD),y)
+CFLAGS += -DSUNRISE_RANDOM_PASSWORD
+endif
+ifeq ($(CONFIG_SUNRISE_BRIDGE_INDEX_CUSTOMIZATION),y)
+CFLAGS += -DSUNRISE_BRIDGE_INDEX_CUSTOMIZATION
+endif
+ifeq ($(CONFIG_SUNRISE_FIXED_WANDEV_INDEX_CUSTOMIZATION),y)
+CFLAGS += -DSUNRISE_FIXED_WANDEV_INDEX_CUSTOMIZATION
+endif
+
+#SuperOnline
+ifeq ($(CONFIG_SOL_TR69_AUTO_CHANGE_DHCP_POOL),y)
+CFLAGS += -DSOL_TR69_AUTO_CHANGE_DHCP_POOL
+endif
+ifeq ($(CONFIG_SOL_TR69_FIREWALL_CONTROL),y)
+CFLAGS += -DSOL_TR69_FIREWALL_CONTROL
+endif
+ifeq ($(CONFIG_SOL_TR69_3G_Backup),y)
+CFLAGS += -DSOL_TR69_3G_Backup
+endif
+ifeq ($(CONFIG_SOL_TR69_TRUSTDOMAIN),y)
+CFLAGS += -DSOL_TR69_TRUSTDOMAIN
+endif
+ifeq ($(CONFIG_SOL_TR69_LOGINACCOUNT),y)
+CFLAGS += -DSOL_TR69_LOGINACCOUNT
+endif
+ifeq ($(CONFIG_SOL_TR69_NO_LAN_HOST),y)
+CFLAGS += -DSOL_TR69_NO_LAN_HOST
+endif
Index: libzcfg_fe_tr98-1.0/zcfg_fe_tr98.c
===================================================================
--- libzcfg_fe_tr98-1.0.orig/zcfg_fe_tr98.c	2015-12-02 18:08:48.000000000 +0800
+++ libzcfg_fe_tr98-1.0/zcfg_fe_tr98.c	2015-12-02 18:19:09.224522473 +0800
@@ -1,2494 +1,2494 @@
-#include <ctype.h>
-
-#include "zcfg_fe_tr98.h"
-#include "wanDev.h"
-#include "devInfo.h"
-#include "devTime.h"
-#include "root.h"
-#include "mgmtSrv.h"
-#include "lanDev.h"
-#include "l2bridge.h"
-#include "l3fwd.h"
-#include "lanConfSec.h"
-#include "zyExt.h"
-#include "diag.h"
-#include "firewall.h"
-#include "schedule.h"
-#include "qos.h"
-#include "voice.h"
-#ifdef ONECONNECT
-#include "oneConnect.h"
-#endif
-
-#include "zcfg_fe_rdm_access.h"
-#include "zcfg_fe_rdm_string.h"
-#include "zcfg_fe_rdm_struct.h"
-#include "zcfg_rdm_oid.h"
-#include "zcfg_rdm_obj.h"
-#include "zcfg_debug.h"
-#include "zcfg_webgui_flag.h"
-#include "zcfg_fe_tr98_handle.h"
-#include "zcfg_tr98_common.h"
-
-#ifdef ZCFG_PARM_NAMEMAPPING
-#define TR98MAPPING_PREFIX "Tr98_"
-#define IS_HANDLE_ROUTINE_REQUIRED(attr) (attr & PARAMETER_ATTR_ROUTINE_REQ)
-#define ZCFG_PARM_NAMEMAPPING_NOT_APPLIED
-#endif
-
-static struct json_object *tr98StaticNameTable = NULL;
-
-
-tr98NameObj_t tr98NameObjList[] =
-{
-{e_TR98_IGD, &tr98Obj[e_TR98_IGD-e_TR98_START]}, 
-#ifdef CONFIG_PACKAGE_ZyIMS
-{e_TR98_SERVICE                             , &tr98Obj[e_TR98_SERVICE                             -e_TR98_START]},
-{e_TR98_VOICE_SRV                           , &tr98Obj[e_TR98_VOICE_SRV                           -e_TR98_START]},
-{e_TR98_VOICE_CAPB                          , &tr98Obj[e_TR98_VOICE_CAPB                          -e_TR98_START]},
-{e_TR98_VOICE_CAPB_SIP                      , &tr98Obj[e_TR98_VOICE_CAPB_SIP                      -e_TR98_START]},
-//{e_TR98_VOICE_CAPB_MGCP                     , &tr98Obj[e_TR98_VOICE_CAPB_MGCP                     -e_TR98_START]},
-//{e_TR98_VOICE_CAPB_H323                     , &tr98Obj[e_TR98_VOICE_CAPB_H323                     -e_TR98_START]},
-{e_TR98_VOICE_CAPB_CODEC                    , &tr98Obj[e_TR98_VOICE_CAPB_CODEC                    -e_TR98_START]},
-{e_TR98_VOICE_PROF                          , &tr98Obj[e_TR98_VOICE_PROF                          -e_TR98_START]},
-//{e_TR98_VOICE_PROF_SRV_PRO_INFO             , &tr98Obj[e_TR98_VOICE_PROF_SRV_PRO_INFO             -e_TR98_START]},
-{e_TR98_VOICE_PROF_SIP                      , &tr98Obj[e_TR98_VOICE_PROF_SIP                      -e_TR98_START]},
-//{e_TR98_VOICE_PROF_SIP_SUBSCRIBE_OBJ        , &tr98Obj[e_TR98_VOICE_PROF_SIP_SUBSCRIBE_OBJ        -e_TR98_START]},
-//{e_TR98_VOICE_PROF_SIP_RESP_MAP_OBJ         , &tr98Obj[e_TR98_VOICE_PROF_SIP_RESP_MAP_OBJ         -e_TR98_START]},
-//{e_TR98_VOICE_PROF_RTP                      , &tr98Obj[e_TR98_VOICE_PROF_RTP                      -e_TR98_START]},
-//{e_TR98_VOICE_PROF_RTP_RTCP                 , &tr98Obj[e_TR98_VOICE_PROF_RTP_RTCP                 -e_TR98_START]},
-//{e_TR98_VOICE_PROF_RTP_SRTP                 , &tr98Obj[e_TR98_VOICE_PROF_RTP_SRTP                 -e_TR98_START]},
-//{e_TR98_VOICE_PROF_RTP_REDUNDANCY           , &tr98Obj[e_TR98_VOICE_PROF_RTP_REDUNDANCY           -e_TR98_START]},
-{e_TR98_VOICE_PROF_NUM_PLAN                 , &tr98Obj[e_TR98_VOICE_PROF_NUM_PLAN                 -e_TR98_START]},
-//{e_TR98_VOICE_PROF_NUM_PLAN_PREFIX_INFO     , &tr98Obj[e_TR98_VOICE_PROF_NUM_PLAN_PREFIX_INFO     -e_TR98_START]},
-//{e_TR98_VOICE_PROF_TONE                     , &tr98Obj[e_TR98_VOICE_PROF_TONE                     -e_TR98_START]},
-//{e_TR98_VOICE_PROF_TONE_EVENT               , &tr98Obj[e_TR98_VOICE_PROF_TONE_EVENT               -e_TR98_START]},
-//{e_TR98_VOICE_PROF_TONE_DESCRIPTION         , &tr98Obj[e_TR98_VOICE_PROF_TONE_DESCRIPTION         -e_TR98_START]},
-//{e_TR98_VOICE_PROF_TONE_PATTERN             , &tr98Obj[e_TR98_VOICE_PROF_TONE_PATTERN             -e_TR98_START]},
-//{e_TR98_VOICE_PROF_FAX_T38                  , &tr98Obj[e_TR98_VOICE_PROF_FAX_T38                  -e_TR98_START]},
-{e_TR98_VOICE_LINE                          , &tr98Obj[e_TR98_VOICE_LINE                          -e_TR98_START]},
-{e_TR98_VOICE_LINE_SIP                      , &tr98Obj[e_TR98_VOICE_LINE_SIP                      -e_TR98_START]},
-//{e_TR98_VOICE_LINE_SIP_EVENT_SUBS           , &tr98Obj[e_TR98_VOICE_LINE_SIP_EVENT_SUBS           -e_TR98_START]},
-//{e_TR98_VOICE_LINE_RINGER                   , &tr98Obj[e_TR98_VOICE_LINE_RINGER                   -e_TR98_START]},
-//{e_TR98_VOICE_LINE_RINGER_EVENT             , &tr98Obj[e_TR98_VOICE_LINE_RINGER_EVENT             -e_TR98_START]},
-//{e_TR98_VOICE_LINE_RINGER_DESCRIPTION       , &tr98Obj[e_TR98_VOICE_LINE_RINGER_DESCRIPTION       -e_TR98_START]},
-//{e_TR98_VOICE_LINE_RINGER_PATTERN           , &tr98Obj[e_TR98_VOICE_LINE_RINGER_PATTERN           -e_TR98_START]},
-{e_TR98_VOICE_LINE_CALLING_FEATURE          , &tr98Obj[e_TR98_VOICE_LINE_CALLING_FEATURE          -e_TR98_START]},
-{e_TR98_VOICE_LINE_PROCESSING               , &tr98Obj[e_TR98_VOICE_LINE_PROCESSING               -e_TR98_START]},
-{e_TR98_VOICE_LINE_CODEC                    , &tr98Obj[e_TR98_VOICE_LINE_CODEC                    -e_TR98_START]},
-{e_TR98_VOICE_LINE_CODEC_LIST               , &tr98Obj[e_TR98_VOICE_LINE_CODEC_LIST               -e_TR98_START]},
-//{e_TR98_VOICE_LINE_SESSION                  , &tr98Obj[e_TR98_VOICE_LINE_SESSION                  -e_TR98_START]},
-{e_TR98_VOICE_LINE_STATS                    , &tr98Obj[e_TR98_VOICE_LINE_STATS                    -e_TR98_START]},
-{e_TR98_VOICE_PHY_INTF                      , &tr98Obj[e_TR98_VOICE_PHY_INTF                      -e_TR98_START]},
-//{e_TR98_VOICE_PSTN                          , &tr98Obj[e_TR98_VOICE_PSTN                          -e_TR98_START]},
-{e_TR98_VOICE_COMMON                        , &tr98Obj[e_TR98_VOICE_COMMON                        -e_TR98_START]},
-//{e_TR98_VOICE_PHONE_BOOK                    , &tr98Obj[e_TR98_VOICE_PHONE_BOOK                    -e_TR98_START]},
-//{e_TR98_VOICE_FXO                           , &tr98Obj[e_TR98_VOICE_FXO                           -e_TR98_START]},
-//{e_TR98_VOICE_FXO_PORT                      , &tr98Obj[e_TR98_VOICE_FXO_PORT                      -e_TR98_START]},
-#endif
-{e_TR98_CAPB                    , &tr98Obj[e_TR98_CAPB                    -e_TR98_START]},
-{e_TR98_PERF_DIAG               , &tr98Obj[e_TR98_PERF_DIAG               -e_TR98_START]},
-{e_TR98_DEV_INFO                , &tr98Obj[e_TR98_DEV_INFO                -e_TR98_START]},
-//{e_TR98_VEND_CONF_FILE          , &tr98Obj[e_TR98_VEND_CONF_FILE          -e_TR98_START]},
-//{e_TR98_DEV_CONF                , &tr98Obj[e_TR98_DEV_CONF                -e_TR98_START]},
-{e_TR98_MGMT_SRV                , &tr98Obj[e_TR98_MGMT_SRV                -e_TR98_START]},
-{e_TR98_MGAB_DEV                , &tr98Obj[e_TR98_MGAB_DEV                -e_TR98_START]},
-{e_TR98_TIME                    , &tr98Obj[e_TR98_TIME                    -e_TR98_START]},
-//{e_TR98_USR_INTF                , &tr98Obj[e_TR98_USR_INTF                -e_TR98_START]},
-//{e_TR98_CAPT_PORTAL             , &tr98Obj[e_TR98_CAPT_PORTAL             -e_TR98_START]},
-{e_TR98_L3_FWD                  , &tr98Obj[e_TR98_L3_FWD                  -e_TR98_START]},
-{e_TR98_FWD                     , &tr98Obj[e_TR98_FWD                     -e_TR98_START]},
-{e_TR98_L2_BR                   , &tr98Obj[e_TR98_L2_BR                   -e_TR98_START]},
-{e_TR98_BR                      , &tr98Obj[e_TR98_BR                      -e_TR98_START]},
-{e_TR98_PORT                    , &tr98Obj[e_TR98_PORT                    -e_TR98_START]},
-{e_TR98_VLAN                    , &tr98Obj[e_TR98_VLAN                    -e_TR98_START]},
-{e_TR98_FILTER                  , &tr98Obj[e_TR98_FILTER                  -e_TR98_START]},
-{e_TR98_MARK                    , &tr98Obj[e_TR98_MARK                    -e_TR98_START]},
-{e_TR98_AVAI_INTF               , &tr98Obj[e_TR98_AVAI_INTF               -e_TR98_START]},
-{e_TR98_QUE_MGMT                , &tr98Obj[e_TR98_QUE_MGMT                -e_TR98_START]},
-{e_TR98_CLS                     , &tr98Obj[e_TR98_CLS                     -e_TR98_START]},
-//{e_TR98_APP                     , &tr98Obj[e_TR98_APP                     -e_TR98_START]},
-//{e_TR98_FLOW                    , &tr98Obj[e_TR98_FLOW                    -e_TR98_START]},
-{e_TR98_POLICER                 , &tr98Obj[e_TR98_POLICER                 -e_TR98_START]},
-{e_TR98_QUE                     , &tr98Obj[e_TR98_QUE                     -e_TR98_START]},
-{e_TR98_SHAPER                  , &tr98Obj[e_TR98_SHAPER                  -e_TR98_START]},
-//{e_TR98_QUE_STAT                , &tr98Obj[e_TR98_QUE_STAT                -e_TR98_START]},
-{e_TR98_LAN_CONF_SEC            , &tr98Obj[e_TR98_LAN_CONF_SEC            -e_TR98_START]},
-{e_TR98_IP_PING_DIAG            , &tr98Obj[e_TR98_IP_PING_DIAG            -e_TR98_START]},
-{e_TR98_TRA_RT_DIAG             , &tr98Obj[e_TR98_TRA_RT_DIAG             -e_TR98_START]},
-{e_TR98_RT_HOP                  , &tr98Obj[e_TR98_RT_HOP                  -e_TR98_START]},
-{e_TR98_DL_DIAG                 , &tr98Obj[e_TR98_DL_DIAG                 -e_TR98_START]},
-{e_TR98_UL_DIAG                 , &tr98Obj[e_TR98_UL_DIAG                 -e_TR98_START]},
-{e_TR98_UDP_ECHO_CONF           , &tr98Obj[e_TR98_UDP_ECHO_CONF           -e_TR98_START]},
-{e_TR98_LAN_DEV                 , &tr98Obj[e_TR98_LAN_DEV                 -e_TR98_START]},
-{e_TR98_LAN_HOST_CONF_MGMT      , &tr98Obj[e_TR98_LAN_HOST_CONF_MGMT      -e_TR98_START]},
-{e_TR98_IP_INTF                 , &tr98Obj[e_TR98_IP_INTF                 -e_TR98_START]},
-#ifdef IPV6INTERFACE_PROFILE
-{e_TR98_IP_INTF_IPV6ADDR        , &tr98Obj[e_TR98_IP_INTF_IPV6ADDR        -e_TR98_START]},
-{e_TR98_IP_INTF_IPV6PREFIX      , &tr98Obj[e_TR98_IP_INTF_IPV6PREFIX      -e_TR98_START]},
-#endif
-#ifdef ROUTERADVERTISEMENT_PROFILE
-{e_TR98_IP_INTF_ROUTERADVER     , &tr98Obj[e_TR98_IP_INTF_ROUTERADVER     -e_TR98_START]},
-#endif
-#ifdef IPV6SERVER_PROFILE
-{e_TR98_IP_INTF_DHCPV6SRV       , &tr98Obj[e_TR98_IP_INTF_DHCPV6SRV       -e_TR98_START]},
-#endif
-{e_TR98_DHCP_STATIC_ADDR        , &tr98Obj[e_TR98_DHCP_STATIC_ADDR        -e_TR98_START]},
-{e_TR98_DHCP_OPT                , &tr98Obj[e_TR98_DHCP_OPT                -e_TR98_START]},
-#ifdef ZyXEL_DHCP_OPTION125
-{e_TR98_VENDOR_SPECIFIC             , &tr98Obj[e_TR98_VENDOR_SPECIFIC             -e_TR98_START]},
-{e_TR98_VENDOR_SPECIFIC_PROF            , &tr98Obj[e_TR98_VENDOR_SPECIFIC_PROF            -e_TR98_START]},
-#endif
-{e_TR98_DHCP_COND_SERVPOOL      , &tr98Obj[e_TR98_DHCP_COND_SERVPOOL      -e_TR98_START]},
-{e_TR98_SERVPOOL_DHCP_STATICADDR, &tr98Obj[e_TR98_SERVPOOL_DHCP_STATICADDR-e_TR98_START]},
-{e_TR98_SERVPOOL_DHCP_OPT       , &tr98Obj[e_TR98_SERVPOOL_DHCP_OPT       -e_TR98_START]},
-{e_TR98_LAN_ETH_INTF_CONF       , &tr98Obj[e_TR98_LAN_ETH_INTF_CONF       -e_TR98_START]},
-{e_TR98_LAN_ETH_INTF_CONF_STAT  , &tr98Obj[e_TR98_LAN_ETH_INTF_CONF_STAT  -e_TR98_START]},
-//{e_TR98_LAN_USB_INTF_CONF       , &tr98Obj[e_TR98_LAN_USB_INTF_CONF       -e_TR98_START]},
-//{e_TR98_LAN_USB_INTF_CONF_STAT  , &tr98Obj[e_TR98_LAN_USB_INTF_CONF_STAT  -e_TR98_START]},
-{e_TR98_LAN_DEV_WLAN_CFG        , &tr98Obj[e_TR98_LAN_DEV_WLAN_CFG        -e_TR98_START]},
-{e_TR98_WLAN_CFG_STAT           , &tr98Obj[e_TR98_WLAN_CFG_STAT           -e_TR98_START]},
-{e_TR98_WPS                     , &tr98Obj[e_TR98_WPS                     -e_TR98_START]},
-//{e_TR98_REG                     , &tr98Obj[e_TR98_REG                     -e_TR98_START]},
-{e_TR98_ASSOC_DEV               , &tr98Obj[e_TR98_ASSOC_DEV               -e_TR98_START]},
-{e_TR98_WEP_KEY                 , &tr98Obj[e_TR98_WEP_KEY                 -e_TR98_START]},
-{e_TR98_PSK                     , &tr98Obj[e_TR98_PSK                     -e_TR98_START]},
-//{e_TR98_AP_WMM_PARAM            , &tr98Obj[e_TR98_AP_WMM_PARAM            -e_TR98_START]},
-//{e_TR98_STA_WMM_PARAM           , &tr98Obj[e_TR98_STA_WMM_PARAM           -e_TR98_START]},
-{e_TR98_HOSTS                   , &tr98Obj[e_TR98_HOSTS                   -e_TR98_START]},
-{e_TR98_HOST                    , &tr98Obj[e_TR98_HOST                    -e_TR98_START]},
-//{e_TR98_LAN_INTF                , &tr98Obj[e_TR98_LAN_INTF                -e_TR98_START]},
-//{e_TR98_LAN_INTF_ETH_INTF_CONF  , &tr98Obj[e_TR98_LAN_INTF_ETH_INTF_CONF  -e_TR98_START]},
-//{e_TR98_USB_INTF_CONF           , &tr98Obj[e_TR98_USB_INTF_CONF           -e_TR98_START]},
-//{e_TR98_LAN_INTF_WLAN_CFG       , &tr98Obj[e_TR98_LAN_INTF_WLAN_CFG       -e_TR98_START]},
-{e_TR98_WAN_DEV                 , &tr98Obj[e_TR98_WAN_DEV                 -e_TR98_START]},
-{e_TR98_WAN_COMM_INTF_CONF      , &tr98Obj[e_TR98_WAN_COMM_INTF_CONF      -e_TR98_START]},
-//{e_TR98_WAN_COMM_INTF_CONNECT   , &tr98Obj[e_TR98_WAN_COMM_INTF_CONNECT   -e_TR98_START]},
-{e_TR98_WAN_DSL_INTF_CONF       , &tr98Obj[e_TR98_WAN_DSL_INTF_CONF       -e_TR98_START]},
-{e_TR98_WAN_DSL_INTF_TEST_PARAM , &tr98Obj[e_TR98_WAN_DSL_INTF_TEST_PARAM -e_TR98_START]},
-{e_TR98_WAN_DSL_INTF_CONF_STAT  , &tr98Obj[e_TR98_WAN_DSL_INTF_CONF_STAT  -e_TR98_START]},
-{e_TR98_TTL                     , &tr98Obj[e_TR98_TTL                     -e_TR98_START]},
-{e_TR98_ST                      , &tr98Obj[e_TR98_ST                      -e_TR98_START]},
-//{e_TR98_LST_SHOWTIME            , &tr98Obj[e_TR98_LST_SHOWTIME            -e_TR98_START]},
-{e_TR98_CURRENT_DAY             , &tr98Obj[e_TR98_CURRENT_DAY             -e_TR98_START]},
-//{e_TR98_QTR_HR                  , &tr98Obj[e_TR98_QTR_HR                  -e_TR98_START]},
-{e_TR98_WAN_ETH_INTF_CONF       , &tr98Obj[e_TR98_WAN_ETH_INTF_CONF       -e_TR98_START]},
-{e_TR98_WAN_ETH_INTF_CONF_STAT  , &tr98Obj[e_TR98_WAN_ETH_INTF_CONF_STAT  -e_TR98_START]},
-{e_TR98_WAN_DSL_DIAG            , &tr98Obj[e_TR98_WAN_DSL_DIAG            -e_TR98_START]},
-{e_TR98_WAN_CONN_DEV            , &tr98Obj[e_TR98_WAN_CONN_DEV            -e_TR98_START]},
-{e_TR98_WAN_DSL_LINK_CONF       , &tr98Obj[e_TR98_WAN_DSL_LINK_CONF       -e_TR98_START]},
-{e_TR98_WAN_ATM_F5_LO_DIAG      , &tr98Obj[e_TR98_WAN_ATM_F5_LO_DIAG      -e_TR98_START]},
-{e_TR98_WAN_ATM_F4_LO_DIAG      , &tr98Obj[e_TR98_WAN_ATM_F4_LO_DIAG      -e_TR98_START]},
-{e_TR98_WAN_PTM_LINK_CONF       , &tr98Obj[e_TR98_WAN_PTM_LINK_CONF       -e_TR98_START]},
-{e_TR98_WAN_PTM_LINK_CONF_STAT  , &tr98Obj[e_TR98_WAN_PTM_LINK_CONF_STAT  -e_TR98_START]},
-{e_TR98_WAN_ETH_LINK_CONF       , &tr98Obj[e_TR98_WAN_ETH_LINK_CONF       -e_TR98_START]},
-//{e_TR98_WAN_POTS_LINK_CONF      , &tr98Obj[e_TR98_WAN_POTS_LINK_CONF      -e_TR98_START]},
-{e_TR98_WAN_IP_CONN             , &tr98Obj[e_TR98_WAN_IP_CONN             -e_TR98_START]},
-{e_TR98_WAN_IP_CONN_MLD         , &tr98Obj[e_TR98_WAN_IP_CONN_MLD         -e_TR98_START]},
-{e_TR98_DHCP_CLIENT             , &tr98Obj[e_TR98_DHCP_CLIENT             -e_TR98_START]},
-{e_TR98_SENT_DHCP_OPT           , &tr98Obj[e_TR98_SENT_DHCP_OPT           -e_TR98_START]},
-{e_TR98_REQ_DHCP_OPT            , &tr98Obj[e_TR98_REQ_DHCP_OPT            -e_TR98_START]},
-{e_TR98_WAN_IP_PORT_MAP         , &tr98Obj[e_TR98_WAN_IP_PORT_MAP         -e_TR98_START]},
-{e_TR98_WAN_IP_PORT_TRIGGER     , &tr98Obj[e_TR98_WAN_IP_PORT_TRIGGER     -e_TR98_START]},
-{e_TR98_WAN_IP_ADDR_MAPPING     , &tr98Obj[e_TR98_WAN_IP_ADDR_MAPPING     -e_TR98_START]},
-{e_TR98_WAN_IP_CONN_STAT        , &tr98Obj[e_TR98_WAN_IP_CONN_STAT        -e_TR98_START]},
-#ifdef IPV6INTERFACE_PROFILE
-{e_TR98_WAN_IP_CONN_IPV6ADDR    , &tr98Obj[e_TR98_WAN_IP_CONN_IPV6ADDR    -e_TR98_START]},
-{e_TR98_WAN_IP_CONN_IPV6PREFIX	 , &tr98Obj[e_TR98_WAN_IP_CONN_IPV6PREFIX	 -e_TR98_START]},
-#endif
-#ifdef DHCPV6CLIENT_PROFILE
-{e_TR98_WAN_IP_CONN_DHCPV6CLIENT, &tr98Obj[e_TR98_WAN_IP_CONN_DHCPV6CLIENT-e_TR98_START]},
-#endif
-#ifdef IPV6RD_PROFILE
-{e_TR98_WAN_IP_CONN_IPV6RD	     , &tr98Obj[e_TR98_WAN_IP_CONN_IPV6RD	     -e_TR98_START]},
-#endif
-{e_TR98_WAN_PPP_CONN            , &tr98Obj[e_TR98_WAN_PPP_CONN            -e_TR98_START]},
-{e_TR98_WAN_PPP_PORT_MAP        , &tr98Obj[e_TR98_WAN_PPP_PORT_MAP        -e_TR98_START]},
-{e_TR98_WAN_PPP_PORT_TRIGGER    , &tr98Obj[e_TR98_WAN_PPP_PORT_TRIGGER    -e_TR98_START]},
-{e_TR98_WAN_PPP_ADDR_MAPPING    , &tr98Obj[e_TR98_WAN_PPP_ADDR_MAPPING    -e_TR98_START]},
-{e_TR98_WAN_PPP_CONN_STAT       , &tr98Obj[e_TR98_WAN_PPP_CONN_STAT       -e_TR98_START]},
-{e_TR98_WAN_PPP_CONN_MLD        , &tr98Obj[e_TR98_WAN_PPP_CONN_MLD        -e_TR98_START]},
-#ifdef IPV6INTERFACE_PROFILE
-{e_TR98_WAN_PPP_CONN_IPV6ADDR    , &tr98Obj[e_TR98_WAN_PPP_CONN_IPV6ADDR    -e_TR98_START]},
-{e_TR98_WAN_PPP_CONN_IPV6PREFIX  , &tr98Obj[e_TR98_WAN_PPP_CONN_IPV6PREFIX  -e_TR98_START]},
-#endif
-#ifdef DHCPV6CLIENT_PROFILE
-{e_TR98_WAN_PPP_CONN_DHCPV6CLIENT, &tr98Obj[e_TR98_WAN_PPP_CONN_DHCPV6CLIENT-e_TR98_START]},
-#endif
-#ifdef IPV6RD_PROFILE
-{e_TR98_WAN_PPP_CONN_IPV6RD      , &tr98Obj[e_TR98_WAN_PPP_CONN_IPV6RD      -e_TR98_START]},
-#endif
-#ifdef CONFIG_XPON_SUPPORT
-{e_TR98_WAN_PON_INTF_CONF      , &tr98Obj[e_TR98_WAN_PON_INTF_CONF            -e_TR98_START]},
-{e_TR98_WAN_PON_INTF_CONF_STAT      , &tr98Obj[e_TR98_WAN_PON_INTF_CONF_STAT  -e_TR98_START]},
-#endif
-{e_TR98_FIREWALL                , &tr98Obj[e_TR98_FIREWALL                -e_TR98_START]},
-{e_TR98_FIREWALL_LEVEL          , &tr98Obj[e_TR98_FIREWALL_LEVEL          -e_TR98_START]},
-{e_TR98_FIREWALL_CHAIN          , &tr98Obj[e_TR98_FIREWALL_CHAIN          -e_TR98_START]},
-{e_TR98_FIREWALL_CHAIN_RULE     , &tr98Obj[e_TR98_FIREWALL_CHAIN_RULE     -e_TR98_START]},
-#if ZYXEL_EXT
-{e_TR98_ZYXEL_EXT               , &tr98Obj[e_TR98_ZYXEL_EXT               -e_TR98_START]},
-{e_TR98_DNS_RT_ENTRY            , &tr98Obj[e_TR98_DNS_RT_ENTRY            -e_TR98_START]},
-{e_TR98_DNS_ENTRY    	        , &tr98Obj[e_TR98_DNS_ENTRY     	      -e_TR98_START]},
-{e_TR98_D_DNS                   , &tr98Obj[e_TR98_D_DNS                   -e_TR98_START]},
-{e_TR98_TR064	                , &tr98Obj[e_TR98_TR064	                  -e_TR98_START]},
-{e_TR98_VLAN_GROUP	            , &tr98Obj[e_TR98_VLAN_GROUP	          -e_TR98_START]},
-{e_TR98_EMAIL_NOTIFY            , &tr98Obj[e_TR98_EMAIL_NOTIFY            -e_TR98_START]},
-{e_TR98_EMAIL_SERVICE           , &tr98Obj[e_TR98_EMAIL_SERVICE	          -e_TR98_START]},
-{e_TR98_EMAIL_EVENT_CFG         , &tr98Obj[e_TR98_EMAIL_EVENT_CFG         -e_TR98_START]},
-{e_TR98_SYS_INFO                , &tr98Obj[e_TR98_SYS_INFO                -e_TR98_START]},
-{e_TR98_SNMP	                , &tr98Obj[e_TR98_SNMP					  -e_TR98_START]},
-{e_TR98_SNMP_TRAP               , &tr98Obj[e_TR98_SNMP_TRAP				  -e_TR98_START]},
-{e_TR98_SCHEDULE                , &tr98Obj[e_TR98_SCHEDULE                -e_TR98_START]},
-{e_TR98_REMO_MGMT               , &tr98Obj[e_TR98_REMO_MGMT               -e_TR98_START]},
-{e_TR98_REMO_SRV                , &tr98Obj[e_TR98_REMO_SRV                -e_TR98_START]},
-{e_TR98_IEEE8021AG              , &tr98Obj[e_TR98_IEEE8021AG              -e_TR98_START]},
-{e_TR98_SAMBA		            , &tr98Obj[e_TR98_SAMBA		              -e_TR98_START]},
-#ifdef SOL_TR69_TRUSTDOMAIN
-{e_TR98_REMO_TRUSTDOMAIN        , &tr98Obj[e_TR98_REMO_TRUSTDOMAIN        -e_TR98_START]},
-#endif
-{e_TR98_IGMP                    , &tr98Obj[e_TR98_IGMP                    -e_TR98_START]},
-#if defined(SUNRISE_RANDOM_PASSWORD) || defined(SOL_TR69_LOGINACCOUNT)
-{e_TR98_LOG_CFG           		 , &tr98Obj[e_TR98_LOG_CFG 				  -e_TR98_START]},
-{e_TR98_LOG_CFG_GP           	 , &tr98Obj[e_TR98_LOG_CFG_GP             -e_TR98_START]},
-{e_TR98_LOG_CFG_GP_ACCOUNT       , &tr98Obj[e_TR98_LOG_CFG_GP_ACCOUNT     -e_TR98_START]},
-#endif
-{e_TR98_LOG_SETTING             , &tr98Obj[e_TR98_LOG_SETTING             -e_TR98_START]},
-{e_TR98_LOG_CLASSIFY            , &tr98Obj[e_TR98_LOG_CLASSIFY            -e_TR98_START]},
-{e_TR98_LOG_CATEGORY	     	, &tr98Obj[e_TR98_LOG_CATEGORY	    	  -e_TR98_START]},
-{e_TR98_MACFILTER	     , &tr98Obj[e_TR98_MACFILTER	     			  -e_TR98_START]},
-{e_TR98_MACFILTER_WHITELIST	    , &tr98Obj[e_TR98_MACFILTER_WHITELIST	  -e_TR98_START]},
-{e_TR98_PAREN_CTL           	, &tr98Obj[e_TR98_PAREN_CTL            	  -e_TR98_START]},
-{e_TR98_PAREN_CTL_PROF          , &tr98Obj[e_TR98_PAREN_CTL_PROF     	  -e_TR98_START]},
-{e_TR98_SEC		          		, &tr98Obj[e_TR98_SEC		              -e_TR98_START]},
-{e_TR98_SEC_CERT		        , &tr98Obj[e_TR98_SEC_CERT		   		  -e_TR98_START]},
-#ifdef ONECONNECT
-{e_TR98_ONECONNECT_SPEEDTESTINFO            , &tr98Obj[e_TR98_ONECONNECT_SPEEDTESTINFO            -e_TR98_START]},
-#endif
-#endif
-#if OBSOLETED
-#else
-//{e_TR98_WAN_DSL_CONN_MGMT       , &tr98Obj[e_TR98_WAN_DSL_CONN_MGMT       -e_TR98_START]},
-//{e_TR98_WAN_DSL_CONN_SRVC       , &tr98Obj[e_TR98_WAN_DSL_CONN_SRVC       -e_TR98_START]},
-#endif
-#ifdef ONECONNECT
-{e_TR98_ONECONNECT_EXT	     , &tr98Obj[e_TR98_ONECONNECT_EXT	     -e_TR98_START]},
-#endif
-#ifdef ZyXEL_IPP_PRINTSERVER
-{e_TR98_PRINT_SERVER             , &tr98Obj[e_TR98_PRINT_SERVER             -e_TR98_START]}
-#endif
-};
-
-#ifdef SUNRISE_FIXED_WANDEV_INDEX_CUSTOMIZATION
-zcfgRet_t ReplaceWANDeviceIndex(char* pathname)
-{	
-	objIndex_t objIid;
-	rdm_MgmtSrv_t *MgmtSrvObj = NULL;
-	zcfgRet_t ret = ZCFG_INTERNAL_ERROR;
-	char *ptr1 = NULL, *ptr2 = NULL;
-	char tr69WANpath[128] = {0};
-
-	
-	printf("%s : Enter\n", __FUNCTION__);
-	printf("pathname=%s\n", pathname);
-
-	IID_INIT(objIid);
-	if(zcfgFeObjStructGetWithoutUpdate(RDM_OID_MGMT_SRV, &objIid, (void **)&MgmtSrvObj) == ZCFG_SUCCESS) {
-		printf("tr69WanIPName=%s\n", MgmtSrvObj->X_ZYXEL_ActiveBoundInterface);
-		if (strlen(MgmtSrvObj->X_ZYXEL_ActiveBoundInterface) > 0){
-			if(zcfgFe181To98MappingNameGet(MgmtSrvObj->X_ZYXEL_ActiveBoundInterface, tr69WANpath) == ZCFG_SUCCESS)
-				ret = ZCFG_SUCCESS;
-		}
-		zcfgFeObjStructFree(MgmtSrvObj);
-	}
-
-	if (ret == ZCFG_SUCCESS){
-		ret = ZCFG_INTERNAL_ERROR;
-		if (ptr1 = strstr(tr69WANpath, "WANDevice.")){
-			if (ptr2 = strstr(pathname, "WANDevice.")){
-				*(ptr2+10) = *(ptr1+10);
-				ret = ZCFG_SUCCESS;
-			}
-		}
-	}
-
-	printf("ret= %d, new pathname=%s\n", ret, pathname);
-	
-	return ret;	
-}
-#endif
-
-zcfgRet_t zcfgFeTr98AllIGDNameGet()
-{
-#if 0
-	zcfgRet_t ret;
-
-	if(tr98_names_array != NULL)
-		json_object_put(tr98_names_array);
-
-	tr98_names_array = NULL;
-
-	if((ret = zcfgFeAllIGDNameGet()) != ZCFG_SUCCESS) {
-		printf("%s : Error. ret %d\n", __FUNCTION__, ret);
-		return ret;
-	}
-
-	tr98_names_array = json_object_from_file("/tmp/ALL_IGD");
-
-	return ret;
-#else
-	return zcfgFeAllIGDNameGet();
-#endif
-}
-
-static zcfgRet_t zcfgFeTr98ClassNameGet(char *objName, char *className)
-{
-	char *token = NULL;
-	char *tmpName = NULL;
-	uint16_t len = 0, c = 0;
-
-	if(objName == NULL) {
-		zcfgLog(ZCFG_LOG_ERR, "Object Name is NULL\n");
-		return ZCFG_INVALID_OBJECT;
-	}
-
-	tmpName = (char *)malloc(strlen(objName)+1);
-	strcpy(tmpName, objName);
-
-	if(*(tmpName + strlen(tmpName) - 1) == '.') {
-		printf("%s : Invalid object Name %s ended with '.'\n", __FUNCTION__, objName);
-		free(tmpName);
-		return ZCFG_INVALID_OBJECT;
-	}
-
-	token = strtok(tmpName, ".");
-	/*InternetGatewayDevice*/
-	strcpy(className, token);
-	token = strtok(NULL, ".");
-
-	/* Replace number with "i" */
-	while(token != NULL) {
-		strcat(className, ".");
-
-		len = strlen(token);
-		for(c = 0; c < len; c++) {
-			if(!isdigit(*(token + c)))
-				break;
-		}
-
-		if(len == c)
-			strcat(className, "i");
-		else
-			strcat(className, token);
-
-		token = strtok(NULL, ".");
-	}
-
-	free(tmpName);
-	
-	return ZCFG_SUCCESS;
-}
-
-#if 0
-static int zcfgFeTr98HandlerGet(char *tr98FullPathName)
-{
-	static int last = 0;
-	int c = 0;
-
-	c = last;
-
-	do {
-		if(tr98Obj[c].name == NULL) {
-			c = 0;
-
-			if(c == last)
-				break;
-		}
-
-		if(!strcmp(tr98Obj[c].name, tr98FullPathName)) {
-			last = c;
-			return c;
-		}
-
-		c++;
-	} while(c != last);
-
-	return -1;
-}
-#endif
-
-static int zcfgFeTr98HandlerGet(char *tr98FullPathName)
-{
-	tr98NameObj_t *entry = NULL;
-	tr98Object_t *tr98Obj = NULL;
-	int seqnum = 0;
-	char pathName[TR98_MAX_OBJ_NAME_LENGTH] = {0};
-
-	if(!tr98FullPathName)
-		return -1;
-
-	entry = (tr98NameObj_t *)json_object_object_get(tr98StaticNameTable, (const char *)tr98FullPathName);
-	if(!entry)
-		return -1;
-
-	seqnum = (int)entry->nameSeqNum;
-	if(!IS_SEQNUM_RIGHT(seqnum)) {
-		zcfgLog(ZCFG_LOG_ERR, "%s: wrong sequence num\n", __FUNCTION__);
-		return -1;
-	}
-
-	tr98Obj = entry->tr98Obj;
-	strcpy(pathName, tr98Obj->name);
-	if(strcmp(tr98FullPathName, pathName)) {
-		zcfgLog(ZCFG_LOG_ERR, "%s: wrong tr98Obj entry\n", __FUNCTION__);
-		return -1;
-	}
-
-	return ARRAY_SEQNUM(seqnum);
-}
-
-zcfgRet_t zcfgFeTr181IfaceStackLowerLayerGet(char *higherLayer, char *result)
-{
-	objIndex_t objIid;
-	rdm_IfaceStack_t *ifaceStack = NULL;
-
-	IID_INIT(objIid);
-	while(zcfgFeObjStructGetNext(RDM_OID_IFACE_STACK, &objIid, (void **)&ifaceStack) == ZCFG_SUCCESS) {
-		if(strcmp(ifaceStack->HigherLayer, higherLayer) == 0) {
-			strcpy(result, ifaceStack->LowerLayer);
-			zcfgFeObjStructFree(ifaceStack);
-			return ZCFG_SUCCESS;
-		}
-		zcfgFeObjStructFree(ifaceStack);
-	}
-
-	return ZCFG_NO_SUCH_OBJECT;
-}
-
-zcfgRet_t zcfgFeTr181IfaceStackHigherLayerGet(char *lowerLayer, char *result)
-{
-	objIndex_t objIid;
-	rdm_IfaceStack_t *ifaceStack = NULL;
-
-	IID_INIT(objIid);
-	while(zcfgFeObjStructGetNext(RDM_OID_IFACE_STACK, &objIid, (void **)&ifaceStack) == ZCFG_SUCCESS) {
-		if(strcmp(ifaceStack->LowerLayer, lowerLayer) == 0) {
-			strcpy(result, ifaceStack->HigherLayer);
-			zcfgFeObjStructFree(ifaceStack);
-			return ZCFG_SUCCESS;
-		}
-		zcfgFeObjStructFree(ifaceStack);
-	}
-
-	return ZCFG_NO_SUCH_OBJECT;
-}
-
-zcfgRet_t zcfgFe98To181IpIface(const char *tr98IfaceName, char *ipIface)
-{
-	char tr98ObjName[300] = {0}, tr181ObjName[300] = {0};
-	char higherLayer[300] = {0};
-
-	if(!tr98IfaceName || !ipIface)
-		return ZCFG_INTERNAL_ERROR;
-
-	ipIface[0] = '\0';
-
-	if(!strcmp(tr98IfaceName, "")) {
-		return ZCFG_SUCCESS;
-	}
-
-	strncpy(tr98ObjName, tr98IfaceName, sizeof(tr98ObjName)-1);
-	if(strcmp(tr98ObjName, "") && (zcfgFe98To181MappingNameGet(tr98ObjName, tr181ObjName) != ZCFG_SUCCESS)) {
-		return ZCFG_NO_SUCH_OBJECT;
-	}
-
-	if(strstr(tr181ObjName, "PPP.Interface") != NULL) {
-		if((zcfgFeTr181IfaceStackHigherLayerGet(tr181ObjName, higherLayer)) != ZCFG_SUCCESS) {
-			return ZCFG_NO_SUCH_OBJECT;
-		}
-		memset(tr181ObjName, 0, sizeof(tr181ObjName));
-		strncpy(tr181ObjName, higherLayer, sizeof(tr98ObjName)-1);
-					
-		if(!strstr(tr181ObjName, "IP.Interface")) {
-			return ZCFG_NO_SUCH_OBJECT;
-		}
-	}
-
-	if(!strstr(tr181ObjName, "IP.Interface")) {
-		return ZCFG_NO_SUCH_OBJECT;
-	}
-
-	strncpy(ipIface, tr181ObjName, sizeof(tr181ObjName)-1);
-
-	return ZCFG_SUCCESS;
-}
-
-#define setLinkObjParm(linkObj, value) { \
-	struct json_object *obj = (struct json_object *)(linkObj); \
-	bool paramValue = value; \
-	json_object_object_add(obj, "Enable", json_object_new_boolean(paramValue)); }
-
-#define relObj(obj) {json_object_put((struct json_object *)(obj));}
-#define TR181_STATUS_UP "Up"
-
-/*
- * zcfgFeTr181WanSetLink is generic interface object enable/disable routine
- *
- * wanLinkName: interface stack to enable/disable, 
- *            as DSL.Channel.i, IP.Interface.i, Ethernet.Link.i, ATM.Link.i, PTM.Link.i
- * set: true is enable, false is disable
- * retObj: means it could return retrieved object, once !=0
- * retObjIndex: means it could return object index, once !=0
- * applied: return whether demand is applied
- *
- * Return: 'Object Identity' it is applied while not zero
- */
-zcfg_offset_t zcfgFeTr181WanSetLink(char *wanLinkName, bool set, void **retObj, objIndex_t *retObjIndex, int *applied)
-{
-	objIndex_t *linkIid = NULL;
-	void *linkObj = NULL;
-	zcfg_offset_t linkOid = 0;
-	const char *paramStr = NULL;
-	bool linkParmStatus;
-	char hLIntfName[100];
-
-	if(!applied) {
-		zcfgLog(ZCFG_LOG_INFO, "%s : no 'applied' parameter\n", __FUNCTION__);
-		return 0;
-	}
-
-	if(retObj) *retObj = NULL;
-
-	*applied = 0;
-
-	if(retObjIndex) {
-		linkIid = retObjIndex;
-	}
-	else linkIid = (objIndex_t *)malloc(sizeof(objIndex_t));
-
-	memset(linkIid, 0, sizeof(objIndex_t));
-
-	if(strstr(wanLinkName, "DSL.Channel") || strstr(wanLinkName, "Ethernet.Link")) {
-		memset(hLIntfName, 0, sizeof(hLIntfName));
-		if(zcfgFeTr181IfaceStackHigherLayerGet(wanLinkName, hLIntfName) ==  ZCFG_SUCCESS) {
-			wanLinkName = hLIntfName;
-		}
-		else return 0;
-	}
-	else {
-		//might recognize another
-	}
-
-	if(strstr(wanLinkName, "IP.Interface")) {
-		sscanf(wanLinkName, "IP.Interface.%hhu", &linkIid->idx[0]);
-		linkOid = RDM_OID_IP_IFACE;
-		zcfgLog(ZCFG_LOG_INFO, "%s : set IP.Interface.%d\n", __FUNCTION__, linkIid->idx[0]);
-	}
-	else if(strstr(wanLinkName, "Ethernet.Link")) {
-		sscanf(wanLinkName, "Ethernet.Link.%hhu", &linkIid->idx[0]);
-		linkOid = RDM_OID_ETH_LINK;
-		zcfgLog(ZCFG_LOG_INFO, "%s : set Ethernet.Link.%d\n", __FUNCTION__, linkIid->idx[0]);
-	}
-	else if(strstr(wanLinkName, "ATM.Link")) {
-		sscanf(wanLinkName, "ATM.Link.%hhu", &linkIid->idx[0]);
-		linkOid = RDM_OID_ATM_LINK;
-		zcfgLog(ZCFG_LOG_INFO, "%s : set ATM.Link.%d\n", __FUNCTION__, linkIid->idx[0]);
-	}
-	else if(strstr(wanLinkName, "PTM.Link")) {
-		sscanf(wanLinkName, "PTM.Link.%hhu", &linkIid->idx[0]);
-		linkOid = RDM_OID_PTM_LINK;
-		zcfgLog(ZCFG_LOG_INFO, "%s : set PTM.Link.%d\n", __FUNCTION__, linkIid->idx[0]);
-	}
-	else {
-		//might recognize another
-
-		return 0;
-	}
-	linkIid->level = 1;
-
-	//if(zcfgFeObjStructGet(linkOid, linkIid, (void **)&linkObj) != ZCFG_SUCCESS) {
-	if(zcfgFeObjJsonGet(linkOid, linkIid, (struct json_object **)&linkObj) != ZCFG_SUCCESS) {
-		zcfgLog(ZCFG_LOG_ERR, "%s : Get Link Fail\n", __FUNCTION__);
-		if(!retObjIndex) free(linkIid);
-
-		return 0;
-	}
-
-	paramStr = json_object_get_string(json_object_object_get((struct json_object *)linkObj, "Status"));
-	linkParmStatus = (strstr(paramStr, TR181_STATUS_UP)) ? true : false;
-	printf("%s: set %s %d, %d\n", __FUNCTION__, wanLinkName, linkParmStatus, set);
-	
-	if(linkParmStatus == set) {
-		if(retObj) *retObj = linkObj;
-		else relObj(linkObj);
-
-		if(!retObjIndex) free(linkIid);
-
-	}
-	else {
-		zcfgRet_t ret = ZCFG_SUCCESS;
-		setLinkObjParm(linkObj, set);
-		//ret = zcfgFeObjStructSet(linkOid, linkIid, (void *)linkObj, NULL);
-		ret = zcfgFeObjJsonSet(linkOid, linkIid, (struct json_object *)linkObj, NULL);
-		if((ret != ZCFG_SUCCESS) && (ret != ZCFG_DELAY_APPLY)) {
-			zcfgLog(ZCFG_LOG_ERR, "%s : Set %s fail\n", __FUNCTION__, wanLinkName);
-			relObj(linkObj);
-			linkOid = 0;
-		}
-		else {
-			if(retObj) *retObj = linkObj;
-			else relObj(linkObj);
-			
-			*applied = 1;
-			zcfgLog(ZCFG_LOG_INFO, "%s : Set %s complete\n", __FUNCTION__, wanLinkName);
-		}
-		if(!retObjIndex) free(linkIid);
-	}
-
-	return linkOid;
-}
-
-zcfgRet_t zcfgFeTr98ObjGet(char *tr98ObjName, struct json_object **value)
-{
-	zcfgRet_t ret;
-	char tr98ClassName[257] = {0};
-	int handler = 0;
-#ifdef SUNRISE_FIXED_WANDEV_INDEX_CUSTOMIZATION
-	char newtr98ObjName[257] = {0};
-#endif
-
-#if TR98_MAPPING_DEBUG
-	printf("Enter %s\n", __FUNCTION__);
-#endif
-	if((ret = zcfgFeTr98ClassNameGet(tr98ObjName, tr98ClassName)) != ZCFG_SUCCESS) {
-		return ret;
-	}
-
-#if TR98_MAPPING_DEBUG
-	printf("tr98ClassName %s\n", tr98ClassName);
-#endif
-	handler = zcfgFeTr98HandlerGet(tr98ClassName);
-
-	if(handler != -1) {
-#ifdef SUNRISE_FIXED_WANDEV_INDEX_CUSTOMIZATION
-		strcpy(newtr98ObjName, tr98ObjName);
-		if (strstr(tr98ObjName, "WANDevice.1")){
-			if (ReplaceWANDeviceIndex(newtr98ObjName) != ZCFG_SUCCESS)
-				return ZCFG_OBJECT_WITHOUT_PARAMETER;
-		}
-		
-		if(tr98Obj[handler].getObj != NULL)
-			return tr98Obj[handler].getObj(newtr98ObjName, handler, value, TR98_GET_UPDATE);
-		else
-			return ZCFG_OBJECT_WITHOUT_PARAMETER;
-#else
-		if(tr98Obj[handler].getObj != NULL)
-			return tr98Obj[handler].getObj(tr98ObjName, handler, value, TR98_GET_UPDATE);
-		else
-			return ZCFG_OBJECT_WITHOUT_PARAMETER;
-#endif
-	}
-	else {
-		return ZCFG_INVALID_OBJECT;
-	}
-
-	return ZCFG_SUCCESS;
-}
-
-struct json_object *zcfgFe98ParamGuardInit(const char *parmList, void *addition)
-{
-	if(!parmList)
-		return NULL;
-
-	if(addition)
-		printf("%s: has addition\n", __FUNCTION__);
-
-	struct json_object *parmListObj = json_tokener_parse((const char *)parmList);
-	if(!parmListObj) {
-		printf("%s: parmList object build fail: %s\n", __FUNCTION__, parmList);
-		return NULL;
-	}
-
-	return parmListObj;
-}
-
-zcfgRet_t zcfgFe98ParamGuard(struct json_object *parmList, const char *parmName, struct json_object *param)
-{
-	struct json_object *paramValueObjs, *paramValueObj = NULL;
-	bool secured = false;
-	enum json_type parmtype = json_type_null;
-	const char *paramString = NULL;
-
-	if(!parmList || !parmName)
-		return ZCFG_INTERNAL_ERROR;
-
-	if(!param)
-		return ZCFG_NO_SUCH_PARAMETER;
-
-	parmtype = json_object_get_type(param);
-	if(parmtype == json_type_string)
-		paramString = json_object_get_string(param);
-
-
-	paramValueObjs = json_object_object_get(parmList, parmName);
-	if(!paramValueObjs)
-		return ZCFG_NO_SUCH_PARAMETER;
-
-	if((!paramString || !strlen(paramString)) && json_object_object_get(paramValueObjs, "Emp"))
-		secured = true;
-	else if(paramString && strlen(paramString)) {
-		paramValueObj = json_object_object_get(paramValueObjs, paramString);
-		secured = (paramValueObj) ? true : false;
-		if(paramValueObj)
-			printf("%s: has parameter %s %s\n", __FUNCTION__, parmName, paramString);
-	}
-
-	return (secured == true) ? ZCFG_SUCCESS : ZCFG_INVALID_PARAM_VALUE;
-}
-
-void zcfgFe98ParamGuardRelease(struct json_object *parmList)
-{
-	json_object_put(parmList);
-}
-
-zcfgRet_t zcfgFe98StaticNameTableInit(void)
-{
-	int maxTableEntries = e_TR98_LAST;
-	int n = 0, n_Entries;
-
-	zcfgLog(ZCFG_LOG_INFO, "%s\n", __FUNCTION__);
-
-	if(tr98StaticNameTable)
-		return ZCFG_SUCCESS;
-
-	if(!(tr98StaticNameTable = json_object_new_c_object(maxTableEntries))) {
-		zcfgLog(ZCFG_LOG_INFO, "%s: Tr98 static name table allocation fail\n", __FUNCTION__);
-		return ZCFG_INTERNAL_ERROR;
-	}
-
-	n_Entries = e_TR98_LAST-e_TR98_START;
-	while(n < n_Entries) {
-		json_object_object_add(tr98StaticNameTable, (const char *)tr98Obj[n].name, 
-			    (struct json_object *)&tr98NameObjList[n]);
-		n++;
-	}
-
-	return ZCFG_SUCCESS;
-}
-
-zcfgRet_t zcfgFe98To181ObjMappingNameAdd(const char *tr98PathName, const char *tr181PathName, zcfg_name_t *nameSeqNum, objIndex_t *tr98ObjIid)
-{
-	zcfgRet_t ret = ZCFG_SUCCESS;
-	objIndex_t tr181ObjIid, objIid;
-	zcfg_offset_t oid;
-	zcfg_name_t seqnum = 0;
-	char pathName[OBJ_NAME_BUFF_SIZE] = {0};
-	const char *tr181Name = NULL;
-
-#ifndef ZCFG_DYNAMIC_NAMEMAPPING
-	return ZCFG_SUCCESS;
-#endif
-
-	zcfgLog(ZCFG_LOG_INFO, "%s\n", __FUNCTION__);
-
-	if(!tr98PathName || !tr181PathName || !nameSeqNum || !tr98ObjIid)
-		return ZCFG_INTERNAL_ERROR;
-
-	*nameSeqNum = 0;
-	IID_INIT((*tr98ObjIid));
-
-	IID_INIT(objIid);
-	if((ret = zcfgFe98NameToSeqnum(tr98PathName, &seqnum, &objIid)) != ZCFG_SUCCESS) {
-		zcfgLog(ZCFG_LOG_INFO, "%s: NameToSeqnum fail!\n", __FUNCTION__);
-		return ret;
-	}
-
-	IID_INIT(tr181ObjIid);
-	if(strncmp(tr181PathName, "Device", 6)) {
-		sprintf(pathName, "Device.%s", tr181PathName);
-		tr181Name = pathName;
-	}
-	else {
-		tr181Name = tr181PathName;
-	}
-	if((oid = zcfgFeObjNameToObjId((char *)tr181Name, &tr181ObjIid)) == ZCFG_NO_SUCH_OBJECT) {
-		zcfgLog(ZCFG_LOG_INFO, "%s Name To ObjId fail!\n", __FUNCTION__);
-		return ZCFG_INTERNAL_ERROR;
-	}
-
-	if((ret = zcfg98To181ObjMappingAdd(seqnum, &objIid, oid, &tr181ObjIid)) != ZCFG_SUCCESS) {
-		zcfgLog(ZCFG_LOG_INFO, "%s 98To181 mapping add fail!\n", __FUNCTION__);
-		return ret;
-	}
-
-	*nameSeqNum = seqnum;
-	memcpy(tr98ObjIid, &objIid, sizeof(objIndex_t));
-
-	return ZCFG_SUCCESS;
-}
-
-zcfgRet_t zcfgFe98To181ObjMappingNameGet(const char *tr98PathName, char *tr181PathName)
-{
-	zcfgRet_t ret = ZCFG_SUCCESS;
-	zcfg_name_t nameSeqNum = 0;
-	objIndex_t tr181ObjIid, objIid;
-	zcfg_offset_t oid;
-	char queriedTr181PathName[OBJ_NAME_BUFF_SIZE] = {0};
-
-#ifndef ZCFG_DYNAMIC_NAMEMAPPING
-	return ZCFG_SUCCESS;
-#endif
-
-	//zcfgLog(ZCFG_LOG_INFO, "%s\n", __FUNCTION__);
-	//printf("Enter %s()\n", __FUNCTION__);
-
-	if(!tr98PathName || !tr181PathName || strlen(tr98PathName) == 0)
-		return ZCFG_INTERNAL_ERROR;
-
-	//printf("*** query tr98PathName=%s\n", tr98PathName);
-	
- 	IID_INIT(objIid);
-	if((ret = zcfgFe98NameToSeqnum(tr98PathName, &nameSeqNum, &objIid)) != ZCFG_SUCCESS) {
-		zcfgLog(ZCFG_LOG_INFO, "%s: NameToSeqnum fail!\n", __FUNCTION__);
-		return ret;
-	}
-	//printf("e_TR98_LAN_DEV=%d\n", e_TR98_LAN_DEV);
-
-
-	IID_INIT(tr181ObjIid);
-	if((ret = zcfgObjMappingGet(ZCFG_MSG_REQUEST_TR98_OBJMAPPING, nameSeqNum, &objIid, &oid, &tr181ObjIid)) != ZCFG_SUCCESS) {
-		//zcfgLog(ZCFG_LOG_INFO, "%s: 98To181 mapping query fail\n", __FUNCTION__);
-		return ret;
-	}
-
-	if((ret = zcfgFeObjIdToName(oid, &tr181ObjIid, queriedTr181PathName)) != ZCFG_SUCCESS) {
-		//zcfgLog(ZCFG_LOG_INFO, "%s: ObjId to Name fail\n", __FUNCTION__);
-		return ret;	
-	}
-
-	tr181PathName[0] = '\0';
-	if (!strncmp(queriedTr181PathName, "Device.", strlen("Device.")))
-		strcpy(tr181PathName, queriedTr181PathName + strlen("Device."));
-	else
-		strcpy(tr181PathName, queriedTr181PathName);
-	
-	printf("18198mapqried: %s %s\n", tr98PathName, tr181PathName);
-
-	return ZCFG_SUCCESS;
-}
-
-zcfgRet_t zcfgFe181To98ObjMappingNameGet(const char *tr181PathName, char *tr98PathName)
-{
-	zcfgRet_t ret = ZCFG_SUCCESS;
-	zcfg_name_t nameSeqNum = 0;
-	objIndex_t tr181ObjIid, objIid;
-	zcfg_offset_t oid;
-
-#ifndef ZCFG_DYNAMIC_NAMEMAPPING
-	return ZCFG_SUCCESS;
-#endif
-
-	zcfgLog(ZCFG_LOG_INFO, "%s\n", __FUNCTION__);
-
-	//printf("*** tr181PathName=%s\n", tr181PathName);
-
-	if(!tr98PathName || !tr181PathName)
-		return ZCFG_INTERNAL_ERROR;
-
-	IID_INIT(tr181ObjIid);
-	if((oid = zcfgFeObjNameToObjId((char *)tr181PathName, &tr181ObjIid)) == ZCFG_NO_SUCH_OBJECT) {
-		zcfgLog(ZCFG_LOG_INFO, "%s\n", __FUNCTION__);
-		return ZCFG_INTERNAL_ERROR;
-	}
-
-	IID_INIT(objIid);
-	if((ret = zcfgObjMappingGet(ZCFG_MSG_REQUEST_TR181_OBJMAPPING, oid, &tr181ObjIid, &nameSeqNum, &objIid)) != ZCFG_SUCCESS) {
-		zcfgLog(ZCFG_LOG_INFO, "%s: 181To98 mapping query fail\n", __FUNCTION__);
-		return ret;
-	}
-
- 	//IID_INIT(objIid);
-	if((ret = zcfgFe98SeqnumToName(nameSeqNum, &objIid, tr98PathName)) != ZCFG_SUCCESS) {
-		zcfgLog(ZCFG_LOG_INFO, "%s: SeqnumToName fail\n", __FUNCTION__);
-		return ret;
-	}
-
-	printf("98181mapqried: %s %s\n", tr181PathName, tr98PathName);
-
-	return ZCFG_SUCCESS;
-}
-
-zcfgRet_t zcfgFe98NameToSeqnum(const char *tr98PathName, zcfg_name_t *seqnum, objIndex_t *tr98ObjIid)
-{
-	const char *pos = NULL;
-	int n = 0, level = 0;
-	bool subpathname = false;
-	char instNumStr[5] = {0};
-	char pathName[TR98_MAX_OBJ_NAME_LENGTH] = {0};
-	int pathNameLen = 0, instNumStrLen = 0;
-	objIndex_t objIid;
-	tr98NameObj_t *entry = NULL;
-
-	//zcfgLog(ZCFG_LOG_INFO, "%s\n", __FUNCTION__);
-
-	if(!tr98PathName || !seqnum || !tr98ObjIid || (strlen(tr98PathName) <= 0))
-		return ZCFG_INTERNAL_ERROR;
-
-	*seqnum = 0;
-	IID_INIT(*tr98ObjIid);
-
-	IID_INIT(objIid);
-	pos = (tr98PathName + n);
-	while(*pos != '\0') {
-		if(*pos == '.') {
-			subpathname = (_isdigit(*(pos + 1)) && !subpathname) ? true : false;
-			pathName[pathNameLen++] = *pos;
-		}
-		else if(subpathname == true) {
-			if(_isdigit(*pos)) {
-				if(instNumStrLen == 0) {
-					pathName[pathNameLen++] = 'i';
-				}
-				instNumStr[instNumStrLen++] = *pos;
-				if((instNumStrLen+1) >= sizeof(instNumStr))
-					return ZCFG_NO_SUCH_OBJECT;
-			}
-			else {
-				subpathname = false;
-				if(instNumStrLen && pathName[pathNameLen-1] == 'i') {
-					strcat(&pathName[pathNameLen-1], instNumStr);
-					pathNameLen += (instNumStrLen-1);
-					memset(instNumStr, 0, sizeof(instNumStr));
-					instNumStrLen = 0;
-				}
-				else
-				pathName[pathNameLen++] = *pos;
-			}
-		}
-		else {
-			pathName[pathNameLen++] = *pos;
-		}
-		pos = tr98PathName+(++n);
-		if(((subpathname == false) && instNumStrLen) || ((*pos == '\0') && instNumStrLen)) {
-			int idx = 0;
-			if(level < SUPPORTED_INDEX_LEVEL)
-				objIid.idx[level] = ((idx = atoi(instNumStr)) > 255) ? 255 : idx;
-
-			level++;
-			instNumStrLen = 0;
-			memset(instNumStr, 0, sizeof(instNumStr));
-		}
-	}
-
-	//zcfgLog(ZCFG_LOG_INFO, "%s: parsed, %s\n", __FUNCTION__, pathName);
-
-	if(level >= SUPPORTED_INDEX_LEVEL) {
-		//zcfgLog(ZCFG_LOG_INFO, "%s: Object index error\n", __FUNCTION__);
-		return ZCFG_NO_SUCH_OBJECT;
-	}
-
-	objIid.level = level;
-	entry = (tr98NameObj_t *)json_object_object_get(tr98StaticNameTable, (const char *)pathName);
-	if(!entry)
-		return ZCFG_NO_SUCH_OBJECT;
-
-	if(!IS_SEQNUM_RIGHT((entry->nameSeqNum)))
-		return ZCFG_NO_SUCH_OBJECT;
-
-	//zcfgLog(ZCFG_LOG_INFO, "%s: seqnum, %u %hu,%hu,%hu,%hu,%hu,%hu\n", __FUNCTION__, entry->nameSeqNum,
-	//	objIid.idx[0], objIid.idx[1], objIid.idx[2], objIid.idx[3], objIid.idx[4], objIid.idx[5]);
-
-	*seqnum = (zcfg_name_t)entry->nameSeqNum;
-	memcpy(tr98ObjIid, &objIid, sizeof(objIndex_t));
-
-	return ZCFG_SUCCESS;
-}
-
-zcfgRet_t zcfgFe98SeqnumToName(zcfg_name_t seqnum, objIndex_t *objIid, char *tr98PathName)
-{
-	int nameListSeqnum = 0, n = 0, level = 0;
-	int tr98PathNameLen = 0;
-	const char *name = NULL;
-	char pathName[TR98_MAX_OBJ_NAME_LENGTH] = {0};
-	char instNumStr[5] = {0};
-	const char *pos = NULL;
-
-	zcfgLog(ZCFG_LOG_INFO, "%s\n", __FUNCTION__);
-
-	if(!(IS_SEQNUM_RIGHT(seqnum)) || !objIid || !tr98PathName)
-		return ZCFG_INTERNAL_ERROR;
-
-	nameListSeqnum = ARRAY_SEQNUM(seqnum);
-	name = (tr98NameObjList[nameListSeqnum].tr98Obj)->name;
-	strcpy(pathName, name);
-
-	pos = (pathName + n);
-	while(*pos != '\0') {
-		if(*pos == 'i' && (n != 0) && (*(pos - 1) == '.' && (*(pos + 1) == '.' || *(pos + 1) == '\0'))) {
-			if(level < SUPPORTED_INDEX_LEVEL)
-				sprintf(instNumStr, "%hhu", objIid->idx[level]);
-
-			level++;
-			strcat(tr98PathName, instNumStr);
-			tr98PathNameLen += strlen(instNumStr);
-			instNumStr[0] = '\0';
-		}
-		else {
-			*(tr98PathName + (tr98PathNameLen++)) = *pos;
-		}
-		pos = (pathName + (++n));
-	}
-	*(tr98PathName + tr98PathNameLen) = '\0';
-
-	if(level >= SUPPORTED_INDEX_LEVEL) {
-		zcfgLog(ZCFG_LOG_INFO, "%s: Object index error\n", __FUNCTION__);
-		return ZCFG_NO_SUCH_OBJECT;
-	}
-
-	zcfgLog(ZCFG_LOG_INFO, "%s: translated, %s\n", __FUNCTION__, tr98PathName);
-
-	return ZCFG_SUCCESS;
-}
-
-#ifdef ZCFG_PARM_NAMEMAPPING
-zcfgRet_t zcfgFe98ParmMappingToName(const char *notifyName, char *tr98NotifyName)
-{
-	char seqnumStr[30] = {0};
-	char idxstr[30] = {0}, instNumStr[5];
-	char parmName[MAX_PARMNAME_LEN] = {0};
-	uint32_t seqnum = 0;
-	char *c = NULL;
-	objIndex_t tr98ObjIid;
-	int n = 0, instNumStrLen = 0;
-
-	if(!notifyName || !tr98NotifyName)
-		return ZCFG_INTERNAL_ERROR;
-
-	*tr98NotifyName = '\0';
-
-	zcfgLog(ZCFG_LOG_INFO, "%s\n", __FUNCTION__);
-
-	sscanf(notifyName, "%[^_]_%[^_]_%s", seqnumStr, idxstr, parmName);
-
-	//printf("%s: %s\n", __FUNCTION__, notifyName);
-
-	seqnum = atoi(seqnumStr);
-	if(!(IS_SEQNUM_RIGHT(seqnum)))
-		return ZCFG_INTERNAL_ERROR;
-
-	IID_INIT(tr98ObjIid);
-	c = (idxstr + n);
-	while(*c != '\0') {
-			if(_isdigit(*c)) {
-				instNumStr[instNumStrLen++] = *c;
-				if((instNumStrLen+1) >= sizeof(instNumStr))
-					return ZCFG_NO_SUCH_OBJECT;
-			}
-		else if(*c == '.' && instNumStrLen) {
-			int idx = 0;
-			if(tr98ObjIid.level < SUPPORTED_INDEX_LEVEL)
-			tr98ObjIid.idx[tr98ObjIid.level++] = ((idx = atoi(instNumStr)) > 255) ? 255 : idx;
-			instNumStrLen = 0;
-			memset(instNumStr, 0, sizeof(instNumStr));
-		}
-		c = idxstr+(++n);
-		if((*c == '\0') && instNumStrLen) {
-			int idx = 0;
-			if(tr98ObjIid.level < SUPPORTED_INDEX_LEVEL)
-			tr98ObjIid.idx[tr98ObjIid.level++] = ((idx = atoi(instNumStr)) > 255) ? 255 : idx;
-			instNumStrLen = 0;
-			memset(instNumStr, 0, sizeof(instNumStr));
-		}
-	}
-
-	if(zcfgFe98SeqnumToName(seqnum, &tr98ObjIid, tr98NotifyName) != ZCFG_SUCCESS) {
-		zcfgLog(ZCFG_LOG_INFO, "%s: seqnum to name fail\n", __FUNCTION__);
-		return ZCFG_NO_SUCH_OBJECT;
-	}
-
-	if(strlen(parmName) > 0) {
-		n = strlen(tr98NotifyName);
-		*(tr98NotifyName + n++) = '.';
-		*(tr98NotifyName + n) = '\0';
-		strcat(tr98NotifyName, parmName);
-	}
-
-	zcfgLog(ZCFG_LOG_INFO, "%s: %s\n", __FUNCTION__, tr98NotifyName);
-
-	return ZCFG_SUCCESS;
-}
-#endif
-
-// Delete a term in csv string
-char *csvStringStripTerm(const char *csv, const char *term)
-{
-	char *new_Csv = NULL;
-	char *str_1 = NULL, *str_2 = NULL;
-	int csvLen = strlen(csv);
-
-	if(!csv || !term || (csvLen <= 0))
-		return NULL;
-
-	str_1 = strstr(csv, term);
-	if(!str_1) {
-		return NULL;
-	}
-
-	new_Csv = malloc(csvLen);
-	memset(new_Csv, 0, csvLen);
-
-	if(str_1 == csv) {
-		str_2 = str_1 + strlen(term);
-		if(str_2[0] != '\0') {
-			str_2++;
-			strcpy(new_Csv, str_2);
-		}
-	}
-	else {
-		str_2 = str_1 + strlen(term);
-		strncpy(new_Csv, csv, (str_1-csv)-1);
-		if(str_2[0] != '\0') {
-			strcat(new_Csv, str_2);
-		}
-	}
-
-	return new_Csv;
-}
-
-zcfgRet_t zcfgFeTr98ObjNameGet(char *tr98ObjName, struct json_object **value)
-{
-	zcfgRet_t ret;
-	char tr98ClassName[128] = {0};
-	int handler = 0;
-#ifdef SUNRISE_FIXED_WANDEV_INDEX_CUSTOMIZATION
-	char newtr98ObjName[256] = {0};
-#endif
-
-#if TR98_MAPPING_DEBUG
-	printf("Enter %s\n", __FUNCTION__);
-#endif
-	if((ret = zcfgFeTr98ClassNameGet(tr98ObjName, tr98ClassName)) != ZCFG_SUCCESS) {
-		return ret;
-	}
-
-#if TR98_MAPPING_DEBUG
-	printf("tr98ClassName %s\n", tr98ClassName);
-#endif
-	handler = zcfgFeTr98HandlerGet(tr98ClassName);
-
-	if(handler != -1) {
-#ifdef SUNRISE_FIXED_WANDEV_INDEX_CUSTOMIZATION
-		strcpy(newtr98ObjName, tr98ObjName);
-		if (strstr(tr98ObjName, "WANDevice.1")){
-			if (ReplaceWANDeviceIndex(newtr98ObjName) != ZCFG_SUCCESS)
-				return ZCFG_OBJECT_WITHOUT_PARAMETER;
-		}
-		
-		if(tr98Obj[handler].getObj != NULL)
-			return tr98Obj[handler].getObj(newtr98ObjName, handler, value, TR98_GET_WITHOUT_UPDATE);
-		else
-			return ZCFG_OBJECT_WITHOUT_PARAMETER;
-#else
-		if(tr98Obj[handler].getObj != NULL)
-			return tr98Obj[handler].getObj(tr98ObjName, handler, value, TR98_GET_WITHOUT_UPDATE);
-		else
-			return ZCFG_OBJECT_WITHOUT_PARAMETER;
-#endif
-	}
-	else {
-		return ZCFG_INVALID_OBJECT;
-	}
-
-	return ZCFG_SUCCESS;
-}
-
-zcfgRet_t zcfgFeTr98ObjNameObjGet(char *tr98ObjName, struct json_object **value)
-{
-	zcfgRet_t ret;
-	char tr98ClassName[128] = {0};
-	int handler = 0;
-	char result[256] = {0};
-	char tr98ObjNameTmp[128];
-	char *ptr;
-
-#if TR98_MAPPING_DEBUG
-	printf("Enter %s\n", __FUNCTION__);
-#endif
-
-	if((ret = zcfgFeTr98ClassNameGet(tr98ObjName, tr98ClassName)) != ZCFG_SUCCESS) {
-		return ret;
-	}
-
-#if TR98_MAPPING_DEBUG
-	printf("tr98ClassName %s\n", tr98ClassName);
-#endif
-
-	handler = zcfgFeTr98HandlerGet(tr98ClassName);
-	if(handler != -1) {
-		if(tr98Obj[handler].getObj != NULL){
-			//special case
-			strcpy( tr98ObjNameTmp, tr98ObjName );
-#ifdef SUNRISE_FIXED_WANDEV_INDEX_CUSTOMIZATION
-			if (strstr(tr98ObjNameTmp, "WANDevice.1")){
-				if (ReplaceWANDeviceIndex(tr98ObjNameTmp) != ZCFG_SUCCESS)
-					return ZCFG_INVALID_OBJECT;
-			}
-#endif
-			if( strcmp( tr98Obj[handler].name, TR98_LAN_HOST_CONF_MGMT) == 0 ){
-				ptr = strstr(tr98ObjNameTmp, ".LANHostConfigManagement");
-				*ptr = '\0';
-				return zcfgFe98To181MappingNameGet(tr98ObjNameTmp, result);
-			}
-			else if( strcmp( tr98Obj[handler].name, TR98_LAN_ETH_INTF_CONF_STAT)==0){
-				ptr = strstr(tr98ObjNameTmp, ".Stats");
-				*ptr = '\0';
-				return zcfgFe98To181MappingNameGet(tr98ObjNameTmp, result);
-			}
-			else if( strcmp( tr98Obj[handler].name, TR98_WLAN_CFG_STAT)==0){
-				ptr = strstr(tr98ObjNameTmp, ".Stats");
-				*ptr = '\0';
-				return zcfgFe98To181MappingNameGet(tr98ObjNameTmp, result);
-			}
-			else if( strcmp( tr98Obj[handler].name, TR98_WPS)==0){
-				ptr = strstr(tr98ObjNameTmp, ".WPS");
-				*ptr = '\0';
-				return zcfgFe98To181MappingNameGet(tr98ObjNameTmp, result);
-			}			
-			else if(strcmp(tr98Obj[handler].name, TR98_WAN_COMM_INTF_CONF)==0){
-				ptr = strstr(tr98ObjNameTmp, ".WANCommonInterfaceConfig");
-				*ptr = '\0';
-				return zcfgFe98To181MappingNameGet(tr98ObjNameTmp, result);
-			}			
-			else if( strcmp( tr98Obj[handler].name, TR98_WAN_DSL_INTF_CONF)==0){
-				ptr = strstr(tr98ObjNameTmp, ".WANDSLInterfaceConfig");
-				*ptr = '\0';
-				return zcfgFe98To181MappingNameGet(tr98ObjNameTmp, result);
-			}			
-			else if( strcmp( tr98Obj[handler].name, TR98_WAN_DSL_INTF_TEST_PARAM)==0){
-				ptr = strstr(tr98ObjNameTmp, ".WANDSLInterfaceConfig.TestParams");
-				*ptr = '\0';
-				return zcfgFe98To181MappingNameGet(tr98ObjNameTmp, result);
-			}			
-			else if( strcmp( tr98Obj[handler].name, TR98_WAN_DSL_DIAG)==0){
-				ptr = strstr(tr98ObjNameTmp, ".WANDSLDiagnostics");
-				*ptr = '\0';
-				return zcfgFe98To181MappingNameGet(tr98ObjNameTmp, result);
-			}			
-			else if( strcmp( tr98Obj[handler].name, TR98_WAN_DSL_LINK_CONF)==0){
-				ptr = strstr(tr98ObjNameTmp, ".WANDSLLinkConfig");
-				*ptr = '\0';
-				return zcfgFe98To181MappingNameGet(tr98ObjNameTmp, result);
-			}			
-			else if( strcmp( tr98Obj[handler].name, TR98_WAN_ATM_F5_LO_DIAG)==0){
-				ptr = strstr(tr98ObjNameTmp, ".WANATMF5LoopbackDiagnostics");
-				*ptr = '\0';
-				return zcfgFe98To181MappingNameGet(tr98ObjNameTmp, result);
-			}			
-			else if( strcmp( tr98Obj[handler].name, TR98_WAN_ATM_F4_LO_DIAG)==0){
-				ptr = strstr(tr98ObjNameTmp, ".X_ZYXEL_WANATMF4LoopbackDiagnostics");
-				*ptr = '\0';
-				return zcfgFe98To181MappingNameGet(tr98ObjNameTmp, result);
-			}			
-			else if( strcmp( tr98Obj[handler].name, TR98_DHCP_CLIENT)==0){
-				ptr = strstr(tr98ObjNameTmp, ".DHCPClient");
-				*ptr = '\0';
-				return zcfgFe98To181MappingNameGet(tr98ObjNameTmp, result);
-			}			
-			else if( strcmp( tr98Obj[handler].name, TR98_IP_INTF_ROUTERADVER)==0){
-				ptr = strstr(tr98ObjNameTmp, ".X_ZYXEL_RouterAdvertisement");
-				*ptr = '\0';
-				return zcfgFe98To181MappingNameGet(tr98ObjNameTmp, result);
-			}
-			else if( strcmp( tr98Obj[handler].name, TR98_IP_INTF_DHCPV6SRV)==0){
-				ptr = strstr(tr98ObjNameTmp, ".X_ZYXEL_DHCPv6Server");
-				*ptr = '\0';
-				return zcfgFe98To181MappingNameGet(tr98ObjNameTmp, result);
-			}
-			else if( strcmp( tr98Obj[handler].name, TR98_WAN_PTM_LINK_CONF)==0){
-				ptr = strstr(tr98ObjNameTmp, ".WANPTMLinkConfig");
-				*ptr = '\0';
-				if( zcfgFe98To181MappingNameGet(tr98ObjNameTmp, result) == ZCFG_SUCCESS ){					
-					if(strstr(result, "PTM") == NULL) {
-						return ZCFG_NO_SUCH_OBJECT;
-					}
-					return ZCFG_SUCCESS;
-				}
-				else
-					return ZCFG_NO_SUCH_OBJECT;
-			}
-			else if( strcmp( tr98Obj[handler].name, TR98_WAN_PTM_LINK_CONF_STAT)==0){
-				ptr = strstr(tr98ObjNameTmp, ".WANPTMLinkConfig.Stats");
-				*ptr = '\0';
-				if( zcfgFe98To181MappingNameGet(tr98ObjNameTmp, result) == ZCFG_SUCCESS ){					
-					if(strstr(result, "PTM") == NULL) {
-						return ZCFG_NO_SUCH_OBJECT;
-					}
-					return ZCFG_SUCCESS;
-				}
-				else
-					return ZCFG_NO_SUCH_OBJECT;
-					
-			}
-			else if( strcmp( tr98Obj[handler].name, TR98_WAN_ETH_LINK_CONF)==0){
-				ptr = strstr(tr98ObjNameTmp, ".WANEthernetLinkConfig");
-				*ptr = '\0';
-				if( zcfgFe98To181MappingNameGet(tr98ObjNameTmp, result) == ZCFG_SUCCESS ){					
-					if(strstr(result, "Ethernet") == NULL) {
-						return ZCFG_NO_SUCH_OBJECT;
-					}
-					return ZCFG_SUCCESS;
-				}
-				else
-					return ZCFG_NO_SUCH_OBJECT;
-			}
-			else if( strcmp( tr98Obj[handler].name, TR98_WAN_IP_CONN_STAT)==0){
-				ptr = strstr(tr98ObjNameTmp, ".Stats");
-				*ptr = '\0';
-				return zcfgFe98To181MappingNameGet(tr98ObjNameTmp, result);
-			}
-			else if( strcmp( tr98Obj[handler].name, TR98_WAN_PPP_CONN_STAT)==0){
-				ptr = strstr(tr98ObjNameTmp, ".Stats");
-				*ptr = '\0';
-				return zcfgFe98To181MappingNameGet(tr98ObjNameTmp, result);
-			}
-			else if( strcmp( tr98Obj[handler].name, TR98_WAN_IP_CONN_DHCPV6CLIENT)==0){
-				ptr = strstr(tr98ObjNameTmp, ".X_ZYXEL_DHCPv6Client");
-				*ptr = '\0';
-				return zcfgFe98To181MappingNameGet(tr98ObjNameTmp, result);
-			}			
-			else if( strcmp( tr98Obj[handler].name, TR98_WAN_PPP_CONN_DHCPV6CLIENT)==0){
-				ptr = strstr(tr98ObjNameTmp, ".X_ZYXEL_DHCPv6Client");
-				*ptr = '\0';
-				return zcfgFe98To181MappingNameGet(tr98ObjNameTmp, result);
-			}			
-			else if( strcmp( tr98Obj[handler].name, TR98_WAN_IP_CONN_IPV6RD)==0){
-				ptr = strstr(tr98ObjNameTmp, ".X_ZYXEL_IPv6rd");
-				*ptr = '\0';
-				return zcfgFe98To181MappingNameGet(tr98ObjNameTmp, result);
-			}			
-			else if( strcmp( tr98Obj[handler].name, TR98_WAN_PPP_CONN_IPV6RD)==0){
-				ptr = strstr(tr98ObjNameTmp, ".X_ZYXEL_IPv6rd");
-				*ptr = '\0';
-				return zcfgFe98To181MappingNameGet(tr98ObjNameTmp, result);
-			}			
-			else if( strcmp( tr98Obj[handler].name, TR98_WAN_ETH_INTF_CONF)==0){
-				ptr = strstr(tr98ObjNameTmp, ".WANEthernetInterfaceConfig");
-				*ptr = '\0';
-				return zcfgFe98To181MappingNameGet(tr98ObjNameTmp, result);
-			}
-			
-#ifdef SUNRISE_FIXED_WANDEV_INDEX_CUSTOMIZATION
-			strcpy( tr98ObjNameTmp, tr98ObjName );
-			if (strstr(tr98ObjNameTmp, "WANDevice.1")){
-				if (ReplaceWANDeviceIndex(tr98ObjNameTmp) != ZCFG_SUCCESS)
-					return ZCFG_INTERNAL_ERROR;
-			}
-			ret = zcfgFe98To181MappingNameGet(tr98ObjNameTmp, result);
-#else
-			ret = zcfgFe98To181MappingNameGet(tr98ObjName, result);
-#endif
-			if( (ret == ZCFG_SUCCESS))
-				return ret;
-			else {
-				return tr98Obj[handler].getObj(tr98ObjName, handler, value, TR98_GET_WITHOUT_UPDATE);
-			}
-		}
-		else
-			return ZCFG_OBJECT_WITHOUT_PARAMETER;
-
-	}
-	else {
-		return ZCFG_INVALID_OBJECT;
-	}
-
-	return ZCFG_SUCCESS;
-}
-
-zcfgRet_t zcfgFeTr98ObjParamSet(char *paramName, uint32_t type, struct json_object *setJobj, char *value)
-{
-	struct json_object *setValue = NULL;
-	
-	if(setJobj == NULL) {
-		zcfgLog(ZCFG_LOG_ERR, "The setJobj pointer is NULL value\n");
-		return ZCFG_INTERNAL_ERROR;
-	}
-
-	switch (type) {
-		case json_type_boolean:
-			setValue = json_object_new_boolean(atoi(value));
-			break;
-		case json_type_int:
-			setValue = json_object_new_int(atoi(value));
-			break;
-		case json_type_uint32:
-			setValue = json_object_new_int((uint32_t)atoi(value));
-			break;
-		case json_type_string:
-			setValue = json_object_new_string(value);
-			break;
-		case json_type_time:
-			setValue = json_object_new_string(value);
-			break;
-		default:
-			zcfgLog(ZCFG_LOG_ERR, "Type not support\n");
-			return ZCFG_ERROR_PARAMETER_TYPE;
-			break;
-	}
-
-	json_object_object_add(setJobj, paramName, setValue);
-	return ZCFG_SUCCESS;
-}
-
-zcfgRet_t zcfgFeTr98ObjSet(char *tr98ObjName, struct json_object *value, char *pfault)
-{
-	zcfgRet_t ret;
-	char tr98ClassName[128] = {0};
-	int handler = 0;
-#ifdef SUNRISE_FIXED_WANDEV_INDEX_CUSTOMIZATION
-	char newtr98ObjName[256] = {0};
-#endif
-
-#if TR98_MAPPING_DEBUG
-	printf("Enter %s\n", __FUNCTION__);
-#endif
-	if((ret = zcfgFeTr98ClassNameGet(tr98ObjName, tr98ClassName)) != ZCFG_SUCCESS) {
-		return ret;
-	}
-
-#if TR98_MAPPING_DEBUG
-	printf("tr98ClassName %s\n", tr98ClassName);
-#endif
-	//printf("value %s\n", json_object_to_json_string(value));
-
-	handler = zcfgFeTr98HandlerGet(tr98ClassName);
-	if(handler != -1) {
-#ifdef SUNRISE_FIXED_WANDEV_INDEX_CUSTOMIZATION
-		strcpy(newtr98ObjName, tr98ObjName);
-		if (strstr(tr98ObjName, "WANDevice.1")){
-			if (ReplaceWANDeviceIndex(newtr98ObjName) != ZCFG_SUCCESS)
-				return ZCFG_OBJECT_WITHOUT_PARAMETER;
-		}
-		if(tr98Obj[handler].setObj != NULL)
-			return tr98Obj[handler].setObj(newtr98ObjName, handler, value, NULL, pfault);
-		else
-			return ZCFG_SET_READ_ONLY_PARAM;
-#else
-
-		if(tr98Obj[handler].setObj != NULL)
-			return tr98Obj[handler].setObj(tr98ObjName, handler, value, NULL, pfault);
-		else
-			return ZCFG_SET_READ_ONLY_PARAM;
-#endif
-	}
-	else {
-		return ZCFG_INVALID_OBJECT;
-	}
-	
-	return ZCFG_SUCCESS;
-}
-
-zcfgRet_t zcfgFeTr98MultiObjSet(char *tr98ObjName, struct json_object *value, struct json_object *multiJobj, char *paramfault)
-{
-	zcfgRet_t ret;
-	char tr98ClassName[128] = {0};
-	int handler = 0;
-#ifdef SUNRISE_FIXED_WANDEV_INDEX_CUSTOMIZATION
-	char newtr98ObjName[256] = {0};
-#endif
-
-	if((ret = zcfgFeTr98ClassNameGet(tr98ObjName, tr98ClassName)) != ZCFG_SUCCESS) {
-		return ret;
-	}
-	
-	handler = zcfgFeTr98HandlerGet(tr98ClassName);
-	if(handler != -1) {
-#ifdef SUNRISE_FIXED_WANDEV_INDEX_CUSTOMIZATION
-		strcpy(newtr98ObjName, tr98ObjName);
-		if (strstr(tr98ObjName, "WANDevice.1")){
-			if (ReplaceWANDeviceIndex(newtr98ObjName) != ZCFG_SUCCESS)
-				return ZCFG_OBJECT_WITHOUT_PARAMETER;
-		}
-		if(tr98Obj[handler].setObj != NULL){
-			return tr98Obj[handler].setObj(newtr98ObjName, handler, value, multiJobj, paramfault);}
-		else
-			return ZCFG_SET_READ_ONLY_PARAM;
-#else
-		if(tr98Obj[handler].setObj != NULL){
-			return tr98Obj[handler].setObj(tr98ObjName, handler, value, multiJobj, paramfault);}
-		else
-			return ZCFG_SET_READ_ONLY_PARAM;
-#endif
-	}
-	else {
-		return ZCFG_INVALID_OBJECT;
-	}
-	
-	return ZCFG_SUCCESS;
-}
-
-zcfgRet_t zcfgFeTr98ObjAdd(char *tr98ObjName, int *idx)
-{
-	zcfgRet_t ret;
-	char tr98ClassName[128] = {0};
-	int handler = 0;
-#ifdef SUNRISE_FIXED_WANDEV_INDEX_CUSTOMIZATION
-	char newtr98ObjName[256] = {0};
-#endif
-
-#if TR98_MAPPING_DEBUG
-	printf("Enter %s\n", __FUNCTION__);
-#endif
-	if((ret = zcfgFeTr98ClassNameGet(tr98ObjName, tr98ClassName)) != ZCFG_SUCCESS) {
-		return ret;
-	}
-
-#if TR98_MAPPING_DEBUG
-	printf("tr98ClassName %s\n", tr98ClassName);
-#endif
-	handler = zcfgFeTr98HandlerGet(tr98ClassName);
-	if(handler != -1) {
-		if(!(tr98Obj[handler].attr & OBJECT_ATTR_CREATE)){
-			return ZCFG_INVALID_ARGUMENTS;
-		}
-#ifdef SUNRISE_FIXED_WANDEV_INDEX_CUSTOMIZATION
-		strcpy(newtr98ObjName, tr98ObjName);
-		if (strstr(tr98ObjName, "WANDevice.1")){
-			if (ReplaceWANDeviceIndex(newtr98ObjName) != ZCFG_SUCCESS)
-				return ZCFG_OBJECT_WITHOUT_PARAMETER;
-		}
-		if(tr98Obj[handler].addObj != NULL)
-			return tr98Obj[handler].addObj(newtr98ObjName, idx);
-		else
-			return ZCFG_INVALID_ARGUMENTS;
-#else
-
-		if(tr98Obj[handler].addObj != NULL)
-			return tr98Obj[handler].addObj(tr98ObjName, idx);
-		else
-			return ZCFG_INVALID_ARGUMENTS;
-#endif
-	}
-	else {
-		return ZCFG_INVALID_OBJECT;
-	}
-
-	return ZCFG_SUCCESS;	
-}
-
-zcfgRet_t zcfgFeTr98ObjDel(char *tr98ObjName)
-{
-	zcfgRet_t ret;
-	char tr98ClassName[128] = {0};
-	int handler = 0;
-#ifdef SUNRISE_FIXED_WANDEV_INDEX_CUSTOMIZATION
-	char newtr98ObjName[256] = {0};
-#endif
-
-
-#if TR98_MAPPING_DEBUG
-	printf("Enter %s\n", __FUNCTION__);
-#endif
-	if((ret = zcfgFeTr98ClassNameGet(tr98ObjName, tr98ClassName)) != ZCFG_SUCCESS) {
-		return ret;
-	}
-
-#if TR98_MAPPING_DEBUG
-	printf("tr98ClassName %s\n", tr98ClassName);
-#endif
-	handler = zcfgFeTr98HandlerGet(tr98ClassName);
-	if(handler != -1) {
-		if(!(tr98Obj[handler].attr & OBJECT_ATTR_CREATE)){
-			return ZCFG_INVALID_ARGUMENTS;
-		}
-#ifdef SUNRISE_FIXED_WANDEV_INDEX_CUSTOMIZATION
-		strcpy(newtr98ObjName, tr98ObjName);
-		if (strstr(tr98ObjName, "WANDevice.1")){
-			if (ReplaceWANDeviceIndex(newtr98ObjName) != ZCFG_SUCCESS)
-				return ZCFG_OBJECT_WITHOUT_PARAMETER;
-		}
-		if(tr98Obj[handler].delObj != NULL)
-			return tr98Obj[handler].delObj(newtr98ObjName);
-		else
-			return ZCFG_INVALID_ARGUMENTS;
-#else
-		if(tr98Obj[handler].delObj != NULL)
-			return tr98Obj[handler].delObj(tr98ObjName);
-		else
-			return ZCFG_INVALID_ARGUMENTS;
-#endif
-	}
-	else {
-		return ZCFG_INVALID_OBJECT;
-	}
-	
-	return ZCFG_SUCCESS;
-}
-
-zcfgRet_t zcfgFeTr98DefaultValueSet(struct json_object *tr98Jobj, char *paramName, int type)
-{
-	switch(type) {
-		case json_type_uint32:
-		case json_type_int:
-			json_object_object_add(tr98Jobj, paramName, json_object_new_int(0));
-			break;
-		case json_type_string:
-			json_object_object_add(tr98Jobj, paramName, json_object_new_string(""));
-			break;
-		case json_type_boolean:
-			json_object_object_add(tr98Jobj, paramName, json_object_new_boolean(false));
-			break;
-		default:
-			printf("%s : Unknown Type\n", __FUNCTION__);
-			break;
-	}
-
-	return ZCFG_SUCCESS;
-}
-
-int zcfgFeTr98ObjAttrGet(char *tr98ObjName)
-{
-	zcfgRet_t ret;
-	char tr98ClassName[128] = {0};
-	int handler = 0;
-
-#if TR98_MAPPING_DEBUG
-	printf("Enter %s\n", __FUNCTION__);
-#endif
-	if((ret = zcfgFeTr98ClassNameGet(tr98ObjName, tr98ClassName)) != ZCFG_SUCCESS) {
-		return ret;
-	}
-		
-	handler = zcfgFeTr98HandlerGet(tr98ClassName);
-	if(handler != -1) {
-		return tr98Obj[handler].attr;
-	}
-	else {
-		return ZCFG_INVALID_OBJECT;
-	}
-	
-}
-
-#if 1 //__ZYXEL__, Mark
-zcfgRet_t zcfgFeGetTr181NameParm(const char *notifyName, char *objName, char *objParm){
-	char *ptr = NULL;
-	const char *ptr2 = NULL;
-	int n_Len, n_Len2;
-	char *IpIntObjName = "IP.Interface";
-	char *PppIntObjName = "PPP.Interface";
-#if 1 //__ZYXEL__, Mark, 20140512	
-	objIndex_t ipInfIid;
-	rdm_IpIface_t *ipIntfObj = NULL;
-#endif
-	
-	printf("Enter %s\n", __FUNCTION__);
-	if(notifyName == NULL || objName== NULL || objParm == NULL) return ZCFG_INVALID_ARGUMENTS;
-	
-	*objName = '\0';
-	*objParm = '\0';
-	
-	ptr = strrchr(notifyName, '.');
-	if(ptr == NULL) {
-		printf("Invalid arguments of %s\n", notifyName);
-		return ZCFG_INVALID_ARGUMENTS;
-	}
-	strcpy(objParm, ptr+1);
-	
-	if(!strncmp(notifyName, "Device.", strlen("Device."))){
-		ptr2 = notifyName + strlen("Device.");
-		n_Len = ptr-ptr2;
-		if(n_Len) strncpy(objName, ptr2, n_Len);
-	}
-	else {
-		n_Len = ptr-notifyName;
-		if(n_Len) strncpy(objName, notifyName, n_Len);
-	}
-	
-	n_Len = strlen(IpIntObjName);
-	n_Len2 = strlen(PppIntObjName);
-	ptr = NULL;
-	if(!strncmp(objName, IpIntObjName, n_Len)){
-		if((ptr = strstr(objName+n_Len, "IPv4Address")) && *(ptr-1) == '.'){
-			*(ptr-1) = '\0';
-		}
-#if 1 //__ZYXEL__, Mark, 20140512, mapping IP.Interface.i.IPv4Address.IPAddress to PPP.Interface.i.IPCP.LocalIPAddress
-		if(!strcmp(objParm, "IPAddress")){
-			IID_INIT(ipInfIid);
-			ipInfIid.level = 1;
-			sscanf(objName, "IP.Interface.%hhu", &ipInfIid.idx[0]);
-			if( zcfgFeObjStructGetWithoutUpdate(RDM_OID_IP_IFACE, &ipInfIid, (void **)&ipIntfObj) == ZCFG_SUCCESS){
-				printf("%s: ipIntfObj->LowerLayers=%s\n",__FUNCTION__, ipIntfObj->LowerLayers);
-				if(!strncmp(ipIntfObj->LowerLayers, PppIntObjName, n_Len2)){
-					strcpy(objName, ipIntfObj->LowerLayers);
-					strcpy(objParm, "LocalIPAddress");
-				}
-				zcfgFeObjStructFree(ipIntfObj);
-			}
-		}
-#endif
-	}
-	else if(!strncmp(objName, PppIntObjName, n_Len2)){
-		if((ptr = strstr(objName+n_Len2, "IPCP")) && *(ptr-1) == '.'){
-			*(ptr-1) = '\0';
-		}
-	}
-	
-	printf("%s: notifyName=%s, objName=%s, objParm=%s\n", __FUNCTION__, notifyName, objName, objParm);
-	return ZCFG_SUCCESS;
-}
-#endif
-
-zcfgRet_t zcfgFeTr98Notify(struct json_object *tr181NotifyInfo, struct json_object **tr98NotifyInfo)
-{
-	zcfgRet_t ret = ZCFG_SUCCESS;
-	char tr98ObjName[TR98_MAX_OBJ_NAME_LENGTH] = {0};
-	char tr181ObjName[128] = {0};
-	char tr181ParamName[64] = {0};
-	char tr98ClassName[128] = {0};
-	char *token = NULL, *tmp = NULL;
-	int handler = 0;
-
-#if TR98_MAPPING_DEBUG
-	printf("Enter %s\n", __FUNCTION__);
-#endif
-	if(tr181NotifyInfo == NULL && tr98NotifyInfo == NULL) {
-		printf("Invalid arguments\n");
-		return ZCFG_INVALID_ARGUMENTS;
-	}
-
-	json_object_object_foreach(tr181NotifyInfo, tr181NotifyName, tr181ParamVal) {
-		/*Get object path name*/
-#if 0 //__ZYXEL__, Mark
-		strcpy(tr181ObjName, tr181NotifyName);
-		ptr = strrchr(tr181ObjName, '.');
-		if(ptr == NULL) {
-			printf("Invalid arguments of %s\n", tr181NotifyName);
-			return ZCFG_INVALID_ARGUMENTS;
-		}
-		strcpy(tr181ParamName, ptr+1);
-
-		*ptr = '\0';
-#else
-		if(!strncmp(tr181NotifyName, (const char *)"Device", strlen("Device"))) {
-		if(zcfgFeGetTr181NameParm(tr181NotifyName, tr181ObjName, tr181ParamName) != ZCFG_SUCCESS)
-			continue;
-			
-		printf("%s: tr181NotifyName=%s, tr181ObjName=%s, tr181ParamName=%s\n", __FUNCTION__, tr181NotifyName, tr181ObjName, tr181ParamName);
-#endif
-			if((ret = zcfgFe181To98MappingNameGet(tr181ObjName, tr98ObjName)) != ZCFG_SUCCESS)
-				continue;
-
-			printf("TR98 Object Name %s\n", tr98ObjName);
-	
-			if((ret = zcfgFeTr98ClassNameGet(tr98ObjName, tr98ClassName)) != ZCFG_SUCCESS) {
-				return ret;
-			}
-
-			handler = zcfgFeTr98HandlerGet(tr98ClassName);
-			if(handler != -1) {
-				if(tr98Obj[handler].notify != NULL)
-					ret = tr98Obj[handler].notify(tr98ObjName, tr181ParamName, tr181ParamVal, handler, tr98NotifyInfo);
-			}
-		}
-#ifdef ZCFG_PARM_NAMEMAPPING
-		else if(!strncmp(tr181NotifyName, (const char *)TR98MAPPING_PREFIX, strlen(TR98MAPPING_PREFIX))) {
-			const char *notifyName = tr181NotifyName + strlen(TR98MAPPING_PREFIX);
-			char *tr98NotifyName = (char *)malloc(TR98_MAX_OBJ_NAME_LENGTH + MAX_PARMNAME_LEN);
-
-			memset(tr98NotifyName, 0, TR98_MAX_OBJ_NAME_LENGTH + MAX_PARMNAME_LEN);
-			if((ret = zcfgFe98ParmMappingToName(notifyName, tr98NotifyName)) != ZCFG_SUCCESS) {
-
-				free(tr98NotifyName);
-				return ret;
-			}
-
-			if(strlen(tr98NotifyName) > 0) {
-				if(*tr98NotifyInfo == NULL)
-				*tr98NotifyInfo = json_object_new_object();
-
-			json_object_object_add(*tr98NotifyInfo, tr98NotifyName, JSON_OBJ_COPY(tr181ParamVal));
-			}
-
-			free(tr98NotifyName);
-		}
-#endif
-		else { /*Not found, maybe one by one mapping*/
-			/*Replace Device to InternetGatewayDevice */
-			token = strtok_r(tr181ObjName, ".", &tmp);
-			if(token != NULL && !strcmp(token, "Device")) {
-				strcpy(tr98ObjName, "InternetGatewayDevice.");
-				strcat(tr98ObjName, tmp);
-			}
-			else {
-				printf("Invalid arguments of %s\n", tr181NotifyName);
-				return ZCFG_INVALID_ARGUMENTS;
-			}
-			
-			if((ret = zcfgFeTr98ClassNameGet(tr98ObjName, tr98ClassName)) != ZCFG_SUCCESS) {
-				return ret;
-			}
-
-			handler = zcfgFeTr98HandlerGet(tr98ClassName);
-			if(handler != -1) {
-				if(tr98Obj[handler].notify != NULL)
-					ret = tr98Obj[handler].notify(tr98ObjName, tr181ParamName, tr181ParamVal, handler, tr98NotifyInfo);
-			}
-		}
-	}
-
-	return ret;
-}
-
-zcfgRet_t zcfgFeTr98ParamList(char *tr98ObjName)
-{
-	zcfgRet_t ret;
-	char tr98ClassName[128] = {0};
-	int handler = 0;
-	tr98Parameter_t *paramList = NULL;
-	
-	if((ret = zcfgFeTr98ClassNameGet(tr98ObjName, tr98ClassName)) != ZCFG_SUCCESS) {
-		return ret;
-	}
-#if TR98_MAPPING_DEBUG
-	printf("tr98ClassName %s\n", tr98ClassName);
-#endif	
-	handler = zcfgFeTr98HandlerGet(tr98ClassName);
-	if(handler != -1) {
-		paramList = tr98Obj[handler].parameter;
-		if(paramList == NULL)
-		{
-			return ZCFG_SUCCESS;
-		}
-		while(paramList->name != NULL) {
-			printf("parameter name %s\n", paramList->name);
-			paramList++;
-		}
-	}
-	
-	return ZCFG_SUCCESS;
-}
-
-int zcfgFeTr98ParamAttrChk(int paramAttr, int notification)
-{
-
-	if((paramAttr & PARAMETER_ATTR_DENY_ACTIVENOTIFY_REQUEST) && (notification == 2)) {
-		printf("%s: ActiveNotify request is denied!\n", __FUNCTION__);		
-		return ZCFG_REQUEST_REJECT;
-	}
-	else if((paramAttr & PARAMETER_ATTR_DENY_PASSIVENOTIFY_REQUEST) && (notification == 1)) {
-		printf("%s: PassiveNotify request is denied!\n", __FUNCTION__);		
-		return ZCFG_REQUEST_REJECT;
-	}
-	else if((paramAttr & PARAMETER_ATTR_DENY_DISABLENOTIFY_REQUEST) && (notification == 0)) {
-		printf("%s: DisableNotify request is denied!\n", __FUNCTION__);		
-		return ZCFG_REQUEST_REJECT;
-	}
-
-	return ZCFG_SUCCESS;
-}
-
-#ifdef ZCFG_PARM_NAMEMAPPING
-int zcfgFeTr98ObjParamAttrGetByName(const char *tr98ObjName, const char *name)
-{
-	zcfgRet_t ret;
-	zcfg_name_t seqnum = 0; 
-	zcfg_offset_t oid = 0;
-	objIndex_t tr98ObjIid, objIid;
-	char queriedParmName[MAX_PARMNAME_LEN] = {0}, tr98ClassName[128] = {0};
-	uint32_t attr = 0;
-	int handler = 0;
-	tr98Parameter_t *paramList = NULL;
-
-	//zcfgLog(ZCFG_LOG_INFO, "%s\n", __FUNCTION__);
-
-	if((ret = zcfgFeTr98ClassNameGet((char *)tr98ObjName, tr98ClassName)) != ZCFG_SUCCESS) {
-		return ret;
-	}
-
-	handler = zcfgFeTr98HandlerGet(tr98ClassName);
-	if(handler != -1) {
-		paramList = tr98Obj[handler].parameter;
-		if(paramList == NULL)
-		{
-			return ZCFG_NO_SUCH_PARAMETER;
-		}
-
-		while(paramList->name!= NULL) {
-			if(strcmp(paramList->name, name) == 0){
-				break;
-			}
-			paramList++;
-		}
-	}
-	else {
-		return ZCFG_NO_SUCH_PARAMETER;
-	}
-
-	if(!paramList->name) {
-		return ZCFG_NO_SUCH_PARAMETER;
-	}
-
-	if(paramList->attr & PARAMETER_ATTR_DEFAULTATTR) {
-		if((paramList->attr & PARAMETER_ATTR_DENY_DISABLENOTIFY_REQUEST) && 
-							(paramList->attr & PARAMETER_ATTR_DENY_ACTIVENOTIFY_REQUEST))
-			return 1;
-
-		if((paramList->attr & PARAMETER_ATTR_DENY_DISABLENOTIFY_REQUEST) && 
-							(paramList->attr & PARAMETER_ATTR_DENY_PASSIVENOTIFY_REQUEST))
-			return 2;
-
-		if((paramList->attr & PARAMETER_ATTR_DENY_PASSIVENOTIFY_REQUEST) && 
-							(paramList->attr & PARAMETER_ATTR_DENY_ACTIVENOTIFY_REQUEST))
-			return 0;
-	}
-
-	IID_INIT(tr98ObjIid);
-	if(zcfgFe98NameToSeqnum((const char *)tr98ObjName, &seqnum, &tr98ObjIid) == ZCFG_SUCCESS) {
-		if((ret = zcfgFeParmAttrQry(seqnum, &tr98ObjIid, name, &oid, &objIid, queriedParmName, &attr)) != ZCFG_SUCCESS) {
-			//zcfgLog(ZCFG_LOG_INFO, "%s: parm attr query fail, %u %s\n", __FUNCTION__, seqnum, name);
-			return ret;
-			//printf("%s: parm attr query fail, %u %s\n", __FUNCTION__, seqnum, name);
-			//return 0;
-		}
-			//confirm data if required
-		if(attr & PARAMETER_ATTR_NOATTR) {
-			return 0;
-			//return ZCFG_NO_SUCH_PARAMETER;
-		}
-		//printf("%s: attr 0x%x\n", __FUNCTION__, attr);
-		return PARAMETER_ATTR_NOTIFY_RETRIEVE(attr);
-	}
-
-	return ZCFG_NO_SUCH_PARAMETER;
-}
-#endif
-
-int zcfgFeTr98ParamAttrGetByName(char *tr98ObjName, char *name)
-{
-	zcfgRet_t ret;
-	char tr98ClassName[128] = {0};
-	int handler = 0;
-	tr98Parameter_t *paramList = NULL;
-	
-	if((ret = zcfgFeTr98ClassNameGet(tr98ObjName, tr98ClassName)) != ZCFG_SUCCESS) {
-		return ret;
-	}
-
-	handler = zcfgFeTr98HandlerGet(tr98ClassName);
-	if(handler != -1) {
-		if(tr98Obj[handler].getAttr != NULL){
-			//return tr98Obj[handler].getAttr(tr98ObjName, handler, name);
-			ret = tr98Obj[handler].getAttr(tr98ObjName, handler, name);
-#ifdef ZCFG_ABANDON_NO_TR181_MAPPING_PARM
-			if(ret == 0)
-				return ZCFG_NO_SUCH_PARAMETER;
-			else
-				return ret;
-#else
-			if(ret == 0) {
-				paramList = tr98Obj[handler].parameter;
-				if(paramList == NULL)
-					return ZCFG_NO_SUCH_PARAMETER;
-
-				while(paramList->name!= NULL) {
-					if(strcmp(paramList->name, name) == 0){
-						return paramList->attr;
-					}
-					paramList++;
-				}
-			}
-			else
-				return ret;
-#endif
-		}
-		else {
-#ifdef ZCFG_ABANDON_NO_TR181_MAPPING_PARM
-			int attrVal = zcfgFeTr98ObjParamAttrGetByName((const char *)tr98ObjName, (const char *)name);
-			if(attrVal < 0) {
-				return attrVal;
-			}
-#endif
-			paramList = tr98Obj[handler].parameter;
-			if(paramList == NULL)
-			{
-				return ZCFG_NO_SUCH_PARAMETER;
-			}
-
-			while(paramList->name!= NULL) {
-				if(strcmp(paramList->name, name) == 0){
-					return paramList->attr;
-				}
-				paramList++;
-			}
-		}
-	}
-	
-	return ZCFG_NO_SUCH_PARAMETER;
-}
-
-zcfgRet_t zcfgFeTr98AllParamAttrGetByObjName(const char *tr98ObjName, struct json_object *result)
-{
-	zcfgRet_t ret;
-	char tr98ClassName[256] = {0};
-	int handler = 0;
-	tr98Parameter_t *paramList = NULL;
-	//char paraName[64] = {0};
-
-	if((ret = zcfgFeTr98ClassNameGet(tr98ObjName, tr98ClassName)) != ZCFG_SUCCESS) {
-		return ret;
-	}
-
-	handler = zcfgFeTr98HandlerGet(tr98ClassName);
-	if(handler != -1) {
-		paramList = tr98Obj[handler].parameter;
-
-		if(paramList == NULL) {
-			return ZCFG_NO_SUCH_PARAMETER;
-		}
-
-		while(paramList->name != NULL) {
-			json_object_object_add(result, paramList->name, json_object_new_int(paramList->attr));
-			paramList++;
-		}
-	}
-	else {
-		return ZCFG_NO_SUCH_OBJECT;
-	}
-
-	return ZCFG_SUCCESS;
-}
-
-#ifdef ZCFG_PARM_NAMEMAPPING
-
-zcfgFeSetParmAttr_t *zcfgFeTr98ParamAttrSetByName(uint32_t objnum, objIndex_t *objIid, const char *parmName, uint32_t setAttrObjNum, objIndex_t *setAttrObjIid, const char *setAttrParmName, uint32_t attr)
-{
-	int n = 0;
-	zcfgFeSetParmAttr_t *setParmAttr = NULL;
-
-	zcfgLog(ZCFG_LOG_INFO, "%s\n", __FUNCTION__);
-
-	setParmAttr = (zcfgFeSetParmAttr_t *)malloc(sizeof(zcfgFeSetParmAttr_t));
-
-	printf("%s: obj %u %hu,%hu,%hu,%hu,%hu,%hu %s, attr 0x%x\n", __FUNCTION__, objnum, 
-			objIid->idx[0], objIid->idx[1], objIid->idx[2], objIid->idx[3], objIid->idx[4], objIid->idx[5], parmName, attr);
-
-	setParmAttr->parmSetAttr.objnum = objnum;
-	memcpy(&setParmAttr->parmSetAttr.objIid, objIid, sizeof(objIndex_t));
-	setParmAttr->parmSetAttr.attr = attr;
-	strncpy(setParmAttr->parmName, parmName, MAX_PARMNAME_LEN);
-	setParmAttr->parmSetAttr.parmNameLen += ((n = (setParmAttr->parmSetAttr.parmNameLen % UNITSIZE)) > 0) ? (UNITSIZE - n) : 0;
-	setParmAttr->parmSetAttr.parmNameLen = strlen(setParmAttr->parmName) + 1;
-
-
-	setParmAttr->parmSetAttr.setAttrObjNum = setAttrObjNum;
-	if(setAttrObjIid)
-		memcpy(&setParmAttr->parmSetAttr.setAttrObjIid, setAttrObjIid, sizeof(objIndex_t));
-	else
-		memset(&setParmAttr->parmSetAttr.setAttrObjIid, 0, sizeof(objIndex_t));
-	n = 0;
-	setParmAttr->parmSetAttr.setAttrParmNameLen = (setAttrParmName) ? strlen(setAttrParmName) : 0;
-	if(setParmAttr->parmSetAttr.setAttrParmNameLen > 0) {
-		strncpy(setParmAttr->setAttrParmName, setAttrParmName, MAX_PARMNAME_LEN);
-		setParmAttr->parmSetAttr.setAttrParmNameLen++;
-		setParmAttr->parmSetAttr.setAttrParmNameLen += ((n = (setParmAttr->parmSetAttr.setAttrParmNameLen % UNITSIZE)) > 0) ? (UNITSIZE - n) : 0;
-	}
-
-	return setParmAttr;
-}
-
-
-int zcfgFeTr98ParamAttrMultiSetByName(char *tr98ObjName, char *name, int notify, zcfgFeSetParmAttrLst_t *setParmAttrLst)
-{
-	zcfgRet_t ret;
-	char tr98ClassName[128] = {0};
-	int handler = 0;
-	zcfg_name_t seqnum = 0;
-	zcfg_offset_t oid = 0;
-	objIndex_t tr98ObjIid, objIid;
-	char queriedParmName[MAX_PARMNAME_LEN] = {0};
-	uint32_t queriedAttr = 0;
-	zcfgFeSetParmAttr_t *setParmAttr = NULL;
-	tr98Parameter_t *paramList = NULL;
-	bool qriedNoSuchParam = false;
-
-	zcfgLog(ZCFG_LOG_INFO, "%s\n", __FUNCTION__);
-
-	//if(!tr98ObjName || !name || !setParmAttrLst)
-	//	return ZCFG_INTERNAL_ERROR;
-
-	if((ret = zcfgFeTr98ClassNameGet(tr98ObjName, tr98ClassName)) != ZCFG_SUCCESS) {
-		return ret;
-	}
-
-	handler = zcfgFeTr98HandlerGet(tr98ClassName);
-	paramList = tr98Obj[handler].parameter;
-	if((handler == -1) || !paramList) {
-		return ZCFG_NO_SUCH_PARAMETER;
-	}
-
-	while(paramList->name) {
-		if(!strcmp(paramList->name, name)) {
-			if((ret = zcfgFeTr98ParamAttrChk(paramList->attr, notify)) != ZCFG_SUCCESS)
-				return ret;
-			
-			break;
-		}
-		paramList++;
-	}
-
-	if(!paramList->name) {
-		return ZCFG_NO_SUCH_PARAMETER;
-	}
-	else {
-		if(paramList->attr & PARAMETER_ATTR_DEFAULTATTR)
-			return ZCFG_SUCCESS;
-	}
-
-	IID_INIT(tr98ObjIid);
-	if(zcfgFe98NameToSeqnum((const char *)tr98ObjName, &seqnum, &tr98ObjIid) == ZCFG_SUCCESS) {
-		if((ret = zcfgFeParmAttrQry(seqnum, &tr98ObjIid, (const char *)name, &oid, &objIid, queriedParmName, &queriedAttr)) != ZCFG_SUCCESS) {
-			zcfgLog(ZCFG_LOG_INFO, "%s: tr98 objnum %u %s query fail\n", __FUNCTION__, seqnum, name);
-			qriedNoSuchParam = true;
-		}
-	}
-	else {
-
-		return ZCFG_NO_SUCH_PARAMETER;
-	}
-
-	queriedAttr = (queriedAttr & ~PARAMETER_ATTR_NOTIFY_MASK) | (notify & PARAMETER_ATTR_NOTIFY_MASK);
-
-#ifdef ZCFG_PARM_NAMEMAPPING_NOT_APPLIED
-	if(qriedNoSuchParam == true || !strcmp(queriedParmName, "notapplied")) {
-		// no tr98/tr181 mapping, not applicable, not implemented, and something as that
-		queriedAttr = PARAMETER_ATTR_NOT_APPLIED | PARAMETER_ATTR_TR98 | (notify & PARAMETER_ATTR_NOTIFY_MASK);
-		setParmAttr = zcfgFeTr98ParamAttrSetByName(seqnum, &tr98ObjIid, name, 0, NULL, NULL, queriedAttr);
-		zcfgSetParmAttrAdd(setParmAttrLst, setParmAttr);
-		return ZCFG_SUCCESS;
-	}
-#else
-	if(qriedNoSuchParam == true)
-		return ZCFG_NO_SUCH_PARAMETER;
-#endif
-
-	if(IS_HANDLE_ROUTINE_REQUIRED(queriedAttr)) {
-		struct json_object *multiJobj = NULL;
-		int nObj = 0, n = 0;
-
-		printf("%s: set parm attr handle routine is required\n", __FUNCTION__);
-		if(!tr98Obj[handler].setAttr) {
-			printf("%s: no set parm attr handle routine\n", __FUNCTION__);
-			return ZCFG_NO_SUCH_PARAMETER;
-		}
-
-		multiJobj = json_object_new_array();
-		if((ret = tr98Obj[handler].setAttr(tr98ObjName, handler, name, queriedAttr, multiJobj)) != ZCFG_SUCCESS) {
-			printf("%s: set parm attr handle routine fail\n", __FUNCTION__);
-		}
-		if((nObj = json_object_array_length(multiJobj))) {
-			printf("%s: there're %d set attr items\n", __FUNCTION__, nObj);
-
-			while(n < nObj) {
-				setParmAttr = (zcfgFeSetParmAttr_t *)json_object_get_int(json_object_array_get_idx(multiJobj, n));
-				if(!setParmAttr) {
-					n++;
-					continue;
-				}
-
-				if(ret == ZCFG_SUCCESS) {
-					zcfgSetParmAttrAdd(setParmAttrLst, setParmAttr);
-				}
-				else
-					free(setParmAttr);
-
-				n++;
-			}
-		}
-		json_object_put(multiJobj);
-		if(ret != ZCFG_SUCCESS)
-			return ret;
-	}
-	else {
-		setParmAttr = zcfgFeTr98ParamAttrSetByName(oid, &objIid, queriedParmName, 0, NULL, NULL, (queriedAttr & PARAMETER_ATTR_NOTIFY_MASK));
-		zcfgSetParmAttrAdd(setParmAttrLst, setParmAttr);
-	}
-
-	return ZCFG_SUCCESS;
-}
-#else
-int zcfgFeTr98ParamAttrMultiSetByName(char *tr98ObjName, char *name, int notify, struct json_object *multiJobj)
-{
-	zcfgRet_t ret;
-	char tr98ClassName[128] = {0};
-	int handler = 0;
-	
-	if((ret = zcfgFeTr98ClassNameGet(tr98ObjName, tr98ClassName)) != ZCFG_SUCCESS) {
-		return ret;
-	}
-
-	handler = zcfgFeTr98HandlerGet(tr98ClassName);
-	if(handler != -1) {
-		if(tr98Obj[handler].setAttr != NULL){
-			return tr98Obj[handler].setAttr(tr98ObjName, handler, name, notify, multiJobj);
-		}
-		else{
-			return ZCFG_REQUEST_REJECT;
-		}
-	}
-	
-	return ZCFG_NO_SUCH_PARAMETER;
-}
-#endif
-
-int zcfgFeTr98ParamTypeGetByName(char *tr98ObjName, char *name)
-{
-	zcfgRet_t ret;
-	char tr98ClassName[128] = {0};
-	int handler = 0;
-	tr98Parameter_t *paramList = NULL;
-	
-	if((ret = zcfgFeTr98ClassNameGet(tr98ObjName, tr98ClassName)) != ZCFG_SUCCESS) {
-		return ret;
-	}
-	
-	handler = zcfgFeTr98HandlerGet(tr98ClassName);
-	if(handler != -1) {
-		paramList = tr98Obj[handler].parameter;
-		if(paramList == NULL)
-		{
-			return ZCFG_NO_SUCH_PARAMETER;
-		}
-		while(paramList->name!= NULL) {
-			if(strcmp(paramList->name, name) == 0){
-				return paramList->type;
-			}
-			paramList++;
-		}
-	}
-	
-	return ZCFG_NO_SUCH_PARAMETER;
-}
-
-zcfgRet_t zcfgFeTr98ParamChk(char *tr98ObjName, char *name, char *value)
-{
-	zcfgRet_t ret;
-	char tr98ClassName[128] = {0};
-	int handler = 0;
-	tr98Parameter_t *paramList = NULL;
-	json_type type;
-	char *p = NULL;
-	bool found = FALSE;
-	int len = 0, index = 0;
-
-	if((ret = zcfgFeTr98ClassNameGet(tr98ObjName, tr98ClassName)) != ZCFG_SUCCESS) {
-		return ret;
-	}
-
-	handler = zcfgFeTr98HandlerGet(tr98ClassName);
-	if(handler != -1) {
-		paramList = tr98Obj[handler].parameter;
-		if(paramList == NULL)
-		{
-			return ZCFG_NO_SUCH_PARAMETER;
-		}
-		while(paramList->name!= NULL) {
-			if(strcmp(paramList->name, name) == 0){
-				found = TRUE;
-				break;
-			}
-			paramList++;
-		}
-	}
-	if(!found){
-		return ZCFG_NO_SUCH_PARAMETER;
-	}
-		
-	if(paramList->attr & PARAMETER_ATTR_READONLY) {
-		zcfgLog(ZCFG_LOG_ERR, "Can not set a read-only parameter %s\n", name);
-		return ZCFG_SET_READ_ONLY_PARAM;
-	}
-	
-	type = paramList->type;
-	if(type == json_type_string) {
-		if(strlen(value) >= paramList->len) {
-			return ZCFG_INVALID_PARAM_VALUE_LENGTH;
-		}
-	}
-	switch(type){
-		case json_type_int:
-			p = value;
-			if(atol(value)<0){
-				if(*p != '-'){
-					return ZCFG_INVALID_PARAM_VALUE;
-				}
-				p++;
-			}
-			while(*p!='\0'){
-				if(!isdigit(*p)){
-					return ZCFG_INVALID_PARAM_VALUE;
-				}
-				p++;
-			}
-			break;
-		case json_type_uint8:
-		case json_type_uint16:
-		case json_type_uint32:
-			p = value;
-			while(*p!='\0'){
-				if(!isdigit(*p)){
-					return ZCFG_INVALID_PARAM_VALUE;
-				}
-				p++;
-			}
-			break;
-		case json_type_boolean:
-			if(strcasecmp(value, "true")==0 ){
-				strcpy(value, "1");
-				break;
-			}
-			else if(strcasecmp(value, "false")==0 ){
-				strcpy(value, "0");
-				break;
-			}
-			if( (strcmp(value, "0")!=0) && (strcmp(value, "1")!=0)){
-				return ZCFG_INVALID_PARAM_VALUE;
-			}
-			break;
-		case json_type_time:/*0001-01-01T00:00:00Z*/
-			len = strlen(value);
-			if(len != 19 && len != 20){
-				return ZCFG_INVALID_PARAM_VALUE;
-			}
-			p = value;
-			for(index = 0; index<len; index++){
-				if(index==4 || index==7){
-					if(!(*p == '-')){
-						return ZCFG_INVALID_PARAM_VALUE;
-					}
-				}
-				else if(index == 10){
-					if(!(*p == 'T')){
-						return ZCFG_INVALID_PARAM_VALUE;
-					}
-				}
-				else if(index == 13 || index ==16){
-					if(!(*p == ':')){
-						return ZCFG_INVALID_PARAM_VALUE;
-					}
-				}
-				else if(index == 19){
-					if(!(*p == 'Z')){
-						return ZCFG_INVALID_PARAM_VALUE;
-					}
-				}
-				else{
-					if(!isdigit(*p)){
-						return ZCFG_INVALID_PARAM_VALUE;
-					}
-				}	
-				p++;
-			}
-			break;
-		default:
-			break;
-	}
-	
-	return ZCFG_SUCCESS;
-}
-
-zcfgSubObjNameList_t* zcfgFeTr98SubObjNameListGet(char *tr98ObjName){
-	zcfgSubObjNameList_t *head = NULL, *now = NULL, *node = NULL;
-	char tr98ClassName[128] = {0};
-	int c = 0;
-	char *subName = NULL;
-	char *ptr = NULL;
-	bool find = false;
-	bool hiddenVoIP = false;
-	objIndex_t objIid;
-	struct json_object *GuiCustoMization = NULL;
-	IID_INIT(objIid);
-	if(zcfgFeObjJsonGet(RDM_OID_GUI_CUSTOMIZATION, &objIid, &GuiCustoMization) != ZCFG_SUCCESS)
-		return NULL;
-
-	if(json_object_get_int(json_object_object_get(GuiCustoMization, "Flag1")) & HIDE_VOIP)
-		hiddenVoIP = true;		
-	
-	zcfgFeJsonObjFree(GuiCustoMization);
-
-	if(zcfgFeTr98ClassNameGet(tr98ObjName, tr98ClassName) != ZCFG_SUCCESS) {
-		return NULL;
-	}
-
-	while(tr98Obj[c].name != NULL) {
-		find = false;
-		if((strncmp(tr98Obj[c].name, tr98ClassName, strlen(tr98ClassName)) == 0) && (strlen(tr98Obj[c].name)>strlen(tr98ClassName))){
-			ptr = strchr(tr98Obj[c].name+strlen(tr98ClassName)+1, '.');
-			if( ptr == NULL ){
-				find = true;
-			}
-			else if( /*index*/ strcmp(ptr, ".i") == 0){
-				find = true;
-			}
-			if( !find){
-				c++;
-				continue;
-			}
-			
-			node = (zcfgSubObjNameList_t*)malloc(sizeof(zcfgSubObjNameList_t));
-			subName = tr98Obj[c].name + strlen(tr98ClassName) + 1;
-			if(!strcmp(subName, "Services")){
-				if(hiddenVoIP){
-					c++;
-					continue;
-				}
-			}
-
-			node->objName = (char *)malloc(strlen(subName)+1);
-			strcpy(node->objName, subName);
-			if(head == NULL) {
-				node->next = NULL;
-				head = node;
-				now = node;
-			}
-			else {
-				now->next = node;
-				now = node;
-				now->next = NULL;
-			}
-
-		}
-		c++;
-	}
-	
-	return head;
-}
-
-/*improve the performance of get object names*/
-zcfgRet_t feObjStructGet(zcfg_offset_t oid, objIndex_t *objIid, void **requestStruct, bool flag){
-	if(flag == TR98_GET_UPDATE) return zcfgFeObjStructGet(oid, objIid, requestStruct);
-	else return zcfgFeObjStructGetWithoutUpdate(oid, objIid, requestStruct);
-}
-
-zcfgRet_t feObjStructGetNext(zcfg_offset_t oid, objIndex_t *objIid, void **requestStruct, bool flag){
-	if(flag == TR98_GET_UPDATE) return zcfgFeObjStructGetNext(oid, objIid, requestStruct);
-	else return zcfgFeObjStructGetNextWithoutUpdate(oid, objIid, requestStruct);
-}
-
-zcfgRet_t feObjStructGetSubNext(zcfg_offset_t oid, objIndex_t *objIid, objIndex_t *insIid, void **requestStruct, bool flag){
-	if(flag == TR98_GET_UPDATE) return zcfgFeSubInStructGetNext(oid, objIid, insIid,requestStruct);
-	else return zcfgFeSubInStructGetNextWithoutUpdate(oid, objIid, insIid, requestStruct);
-}
-
-zcfgRet_t feObjJsonGet(zcfg_offset_t oid, objIndex_t *objIid, struct json_object **value, bool flag){
-	if(flag == TR98_GET_UPDATE) return zcfgFeObjJsonGet(oid, objIid, value);
-	else return zcfgFeObjJsonGetWithoutUpdate(oid, objIid, value);
-}
-	
-zcfgRet_t feObjJsonGetNext(zcfg_offset_t oid, objIndex_t *objIid, struct json_object **value, bool flag){
-	if(flag == TR98_GET_UPDATE) return zcfgFeObjJsonGetNext(oid, objIid, value);
-	else return zcfgFeObjJsonGetNextWithoutUpdate(oid, objIid, value);
-}
-		
-zcfgRet_t feObjJsonSubNext(zcfg_offset_t oid, objIndex_t *objIid, objIndex_t *insIid, struct json_object **value, bool flag){
-	if(flag == TR98_GET_UPDATE) return zcfgFeSubInObjJsonGetNext(oid, objIid, insIid, value);
-	else return zcfgFeSubInObjJsonGetNextWithoutUpdate(oid, objIid, insIid, value);
-}
+#include <ctype.h>
+
+#include "zcfg_fe_tr98.h"
+#include "wanDev.h"
+#include "devInfo.h"
+#include "devTime.h"
+#include "root.h"
+#include "mgmtSrv.h"
+#include "lanDev.h"
+#include "l2bridge.h"
+#include "l3fwd.h"
+#include "lanConfSec.h"
+#include "zyExt.h"
+#include "diag.h"
+#include "firewall.h"
+#include "schedule.h"
+#include "qos.h"
+#include "voice.h"
+#ifdef ONECONNECT
+#include "oneConnect.h"
+#endif
+
+#include "zcfg_fe_rdm_access.h"
+#include "zcfg_fe_rdm_string.h"
+#include "zcfg_fe_rdm_struct.h"
+#include "zcfg_rdm_oid.h"
+#include "zcfg_rdm_obj.h"
+#include "zcfg_debug.h"
+#include "zcfg_webgui_flag.h"
+#include "zcfg_fe_tr98_handle.h"
+#include "zcfg_tr98_common.h"
+
+#ifdef ZCFG_PARM_NAMEMAPPING
+#define TR98MAPPING_PREFIX "Tr98_"
+#define IS_HANDLE_ROUTINE_REQUIRED(attr) (attr & PARAMETER_ATTR_ROUTINE_REQ)
+#define ZCFG_PARM_NAMEMAPPING_NOT_APPLIED
+#endif
+
+static struct json_object *tr98StaticNameTable = NULL;
+
+
+tr98NameObj_t tr98NameObjList[] =
+{
+{e_TR98_IGD, &tr98Obj[e_TR98_IGD-e_TR98_START]}, 
+#ifdef CONFIG_PACKAGE_ZyIMS
+{e_TR98_SERVICE                             , &tr98Obj[e_TR98_SERVICE                             -e_TR98_START]},
+{e_TR98_VOICE_SRV                           , &tr98Obj[e_TR98_VOICE_SRV                           -e_TR98_START]},
+{e_TR98_VOICE_CAPB                          , &tr98Obj[e_TR98_VOICE_CAPB                          -e_TR98_START]},
+{e_TR98_VOICE_CAPB_SIP                      , &tr98Obj[e_TR98_VOICE_CAPB_SIP                      -e_TR98_START]},
+//{e_TR98_VOICE_CAPB_MGCP                     , &tr98Obj[e_TR98_VOICE_CAPB_MGCP                     -e_TR98_START]},
+//{e_TR98_VOICE_CAPB_H323                     , &tr98Obj[e_TR98_VOICE_CAPB_H323                     -e_TR98_START]},
+{e_TR98_VOICE_CAPB_CODEC                    , &tr98Obj[e_TR98_VOICE_CAPB_CODEC                    -e_TR98_START]},
+{e_TR98_VOICE_PROF                          , &tr98Obj[e_TR98_VOICE_PROF                          -e_TR98_START]},
+//{e_TR98_VOICE_PROF_SRV_PRO_INFO             , &tr98Obj[e_TR98_VOICE_PROF_SRV_PRO_INFO             -e_TR98_START]},
+{e_TR98_VOICE_PROF_SIP                      , &tr98Obj[e_TR98_VOICE_PROF_SIP                      -e_TR98_START]},
+//{e_TR98_VOICE_PROF_SIP_SUBSCRIBE_OBJ        , &tr98Obj[e_TR98_VOICE_PROF_SIP_SUBSCRIBE_OBJ        -e_TR98_START]},
+//{e_TR98_VOICE_PROF_SIP_RESP_MAP_OBJ         , &tr98Obj[e_TR98_VOICE_PROF_SIP_RESP_MAP_OBJ         -e_TR98_START]},
+//{e_TR98_VOICE_PROF_RTP                      , &tr98Obj[e_TR98_VOICE_PROF_RTP                      -e_TR98_START]},
+//{e_TR98_VOICE_PROF_RTP_RTCP                 , &tr98Obj[e_TR98_VOICE_PROF_RTP_RTCP                 -e_TR98_START]},
+//{e_TR98_VOICE_PROF_RTP_SRTP                 , &tr98Obj[e_TR98_VOICE_PROF_RTP_SRTP                 -e_TR98_START]},
+//{e_TR98_VOICE_PROF_RTP_REDUNDANCY           , &tr98Obj[e_TR98_VOICE_PROF_RTP_REDUNDANCY           -e_TR98_START]},
+{e_TR98_VOICE_PROF_NUM_PLAN                 , &tr98Obj[e_TR98_VOICE_PROF_NUM_PLAN                 -e_TR98_START]},
+//{e_TR98_VOICE_PROF_NUM_PLAN_PREFIX_INFO     , &tr98Obj[e_TR98_VOICE_PROF_NUM_PLAN_PREFIX_INFO     -e_TR98_START]},
+//{e_TR98_VOICE_PROF_TONE                     , &tr98Obj[e_TR98_VOICE_PROF_TONE                     -e_TR98_START]},
+//{e_TR98_VOICE_PROF_TONE_EVENT               , &tr98Obj[e_TR98_VOICE_PROF_TONE_EVENT               -e_TR98_START]},
+//{e_TR98_VOICE_PROF_TONE_DESCRIPTION         , &tr98Obj[e_TR98_VOICE_PROF_TONE_DESCRIPTION         -e_TR98_START]},
+//{e_TR98_VOICE_PROF_TONE_PATTERN             , &tr98Obj[e_TR98_VOICE_PROF_TONE_PATTERN             -e_TR98_START]},
+//{e_TR98_VOICE_PROF_FAX_T38                  , &tr98Obj[e_TR98_VOICE_PROF_FAX_T38                  -e_TR98_START]},
+{e_TR98_VOICE_LINE                          , &tr98Obj[e_TR98_VOICE_LINE                          -e_TR98_START]},
+{e_TR98_VOICE_LINE_SIP                      , &tr98Obj[e_TR98_VOICE_LINE_SIP                      -e_TR98_START]},
+//{e_TR98_VOICE_LINE_SIP_EVENT_SUBS           , &tr98Obj[e_TR98_VOICE_LINE_SIP_EVENT_SUBS           -e_TR98_START]},
+//{e_TR98_VOICE_LINE_RINGER                   , &tr98Obj[e_TR98_VOICE_LINE_RINGER                   -e_TR98_START]},
+//{e_TR98_VOICE_LINE_RINGER_EVENT             , &tr98Obj[e_TR98_VOICE_LINE_RINGER_EVENT             -e_TR98_START]},
+//{e_TR98_VOICE_LINE_RINGER_DESCRIPTION       , &tr98Obj[e_TR98_VOICE_LINE_RINGER_DESCRIPTION       -e_TR98_START]},
+//{e_TR98_VOICE_LINE_RINGER_PATTERN           , &tr98Obj[e_TR98_VOICE_LINE_RINGER_PATTERN           -e_TR98_START]},
+{e_TR98_VOICE_LINE_CALLING_FEATURE          , &tr98Obj[e_TR98_VOICE_LINE_CALLING_FEATURE          -e_TR98_START]},
+{e_TR98_VOICE_LINE_PROCESSING               , &tr98Obj[e_TR98_VOICE_LINE_PROCESSING               -e_TR98_START]},
+{e_TR98_VOICE_LINE_CODEC                    , &tr98Obj[e_TR98_VOICE_LINE_CODEC                    -e_TR98_START]},
+{e_TR98_VOICE_LINE_CODEC_LIST               , &tr98Obj[e_TR98_VOICE_LINE_CODEC_LIST               -e_TR98_START]},
+//{e_TR98_VOICE_LINE_SESSION                  , &tr98Obj[e_TR98_VOICE_LINE_SESSION                  -e_TR98_START]},
+{e_TR98_VOICE_LINE_STATS                    , &tr98Obj[e_TR98_VOICE_LINE_STATS                    -e_TR98_START]},
+{e_TR98_VOICE_PHY_INTF                      , &tr98Obj[e_TR98_VOICE_PHY_INTF                      -e_TR98_START]},
+//{e_TR98_VOICE_PSTN                          , &tr98Obj[e_TR98_VOICE_PSTN                          -e_TR98_START]},
+{e_TR98_VOICE_COMMON                        , &tr98Obj[e_TR98_VOICE_COMMON                        -e_TR98_START]},
+//{e_TR98_VOICE_PHONE_BOOK                    , &tr98Obj[e_TR98_VOICE_PHONE_BOOK                    -e_TR98_START]},
+//{e_TR98_VOICE_FXO                           , &tr98Obj[e_TR98_VOICE_FXO                           -e_TR98_START]},
+//{e_TR98_VOICE_FXO_PORT                      , &tr98Obj[e_TR98_VOICE_FXO_PORT                      -e_TR98_START]},
+#endif
+{e_TR98_CAPB                    , &tr98Obj[e_TR98_CAPB                    -e_TR98_START]},
+{e_TR98_PERF_DIAG               , &tr98Obj[e_TR98_PERF_DIAG               -e_TR98_START]},
+{e_TR98_DEV_INFO                , &tr98Obj[e_TR98_DEV_INFO                -e_TR98_START]},
+//{e_TR98_VEND_CONF_FILE          , &tr98Obj[e_TR98_VEND_CONF_FILE          -e_TR98_START]},
+//{e_TR98_DEV_CONF                , &tr98Obj[e_TR98_DEV_CONF                -e_TR98_START]},
+{e_TR98_MGMT_SRV                , &tr98Obj[e_TR98_MGMT_SRV                -e_TR98_START]},
+{e_TR98_MGAB_DEV                , &tr98Obj[e_TR98_MGAB_DEV                -e_TR98_START]},
+{e_TR98_TIME                    , &tr98Obj[e_TR98_TIME                    -e_TR98_START]},
+//{e_TR98_USR_INTF                , &tr98Obj[e_TR98_USR_INTF                -e_TR98_START]},
+//{e_TR98_CAPT_PORTAL             , &tr98Obj[e_TR98_CAPT_PORTAL             -e_TR98_START]},
+{e_TR98_L3_FWD                  , &tr98Obj[e_TR98_L3_FWD                  -e_TR98_START]},
+{e_TR98_FWD                     , &tr98Obj[e_TR98_FWD                     -e_TR98_START]},
+{e_TR98_L2_BR                   , &tr98Obj[e_TR98_L2_BR                   -e_TR98_START]},
+{e_TR98_BR                      , &tr98Obj[e_TR98_BR                      -e_TR98_START]},
+{e_TR98_PORT                    , &tr98Obj[e_TR98_PORT                    -e_TR98_START]},
+{e_TR98_VLAN                    , &tr98Obj[e_TR98_VLAN                    -e_TR98_START]},
+{e_TR98_FILTER                  , &tr98Obj[e_TR98_FILTER                  -e_TR98_START]},
+{e_TR98_MARK                    , &tr98Obj[e_TR98_MARK                    -e_TR98_START]},
+{e_TR98_AVAI_INTF               , &tr98Obj[e_TR98_AVAI_INTF               -e_TR98_START]},
+{e_TR98_QUE_MGMT                , &tr98Obj[e_TR98_QUE_MGMT                -e_TR98_START]},
+{e_TR98_CLS                     , &tr98Obj[e_TR98_CLS                     -e_TR98_START]},
+//{e_TR98_APP                     , &tr98Obj[e_TR98_APP                     -e_TR98_START]},
+//{e_TR98_FLOW                    , &tr98Obj[e_TR98_FLOW                    -e_TR98_START]},
+{e_TR98_POLICER                 , &tr98Obj[e_TR98_POLICER                 -e_TR98_START]},
+{e_TR98_QUE                     , &tr98Obj[e_TR98_QUE                     -e_TR98_START]},
+{e_TR98_SHAPER                  , &tr98Obj[e_TR98_SHAPER                  -e_TR98_START]},
+//{e_TR98_QUE_STAT                , &tr98Obj[e_TR98_QUE_STAT                -e_TR98_START]},
+{e_TR98_LAN_CONF_SEC            , &tr98Obj[e_TR98_LAN_CONF_SEC            -e_TR98_START]},
+{e_TR98_IP_PING_DIAG            , &tr98Obj[e_TR98_IP_PING_DIAG            -e_TR98_START]},
+{e_TR98_TRA_RT_DIAG             , &tr98Obj[e_TR98_TRA_RT_DIAG             -e_TR98_START]},
+{e_TR98_RT_HOP                  , &tr98Obj[e_TR98_RT_HOP                  -e_TR98_START]},
+{e_TR98_DL_DIAG                 , &tr98Obj[e_TR98_DL_DIAG                 -e_TR98_START]},
+{e_TR98_UL_DIAG                 , &tr98Obj[e_TR98_UL_DIAG                 -e_TR98_START]},
+{e_TR98_UDP_ECHO_CONF           , &tr98Obj[e_TR98_UDP_ECHO_CONF           -e_TR98_START]},
+{e_TR98_LAN_DEV                 , &tr98Obj[e_TR98_LAN_DEV                 -e_TR98_START]},
+{e_TR98_LAN_HOST_CONF_MGMT      , &tr98Obj[e_TR98_LAN_HOST_CONF_MGMT      -e_TR98_START]},
+{e_TR98_IP_INTF                 , &tr98Obj[e_TR98_IP_INTF                 -e_TR98_START]},
+#ifdef IPV6INTERFACE_PROFILE
+{e_TR98_IP_INTF_IPV6ADDR        , &tr98Obj[e_TR98_IP_INTF_IPV6ADDR        -e_TR98_START]},
+{e_TR98_IP_INTF_IPV6PREFIX      , &tr98Obj[e_TR98_IP_INTF_IPV6PREFIX      -e_TR98_START]},
+#endif
+#ifdef ROUTERADVERTISEMENT_PROFILE
+{e_TR98_IP_INTF_ROUTERADVER     , &tr98Obj[e_TR98_IP_INTF_ROUTERADVER     -e_TR98_START]},
+#endif
+#ifdef IPV6SERVER_PROFILE
+{e_TR98_IP_INTF_DHCPV6SRV       , &tr98Obj[e_TR98_IP_INTF_DHCPV6SRV       -e_TR98_START]},
+#endif
+{e_TR98_DHCP_STATIC_ADDR        , &tr98Obj[e_TR98_DHCP_STATIC_ADDR        -e_TR98_START]},
+{e_TR98_DHCP_OPT                , &tr98Obj[e_TR98_DHCP_OPT                -e_TR98_START]},
+#ifdef ZyXEL_DHCP_OPTION125
+{e_TR98_VENDOR_SPECIFIC             , &tr98Obj[e_TR98_VENDOR_SPECIFIC             -e_TR98_START]},
+{e_TR98_VENDOR_SPECIFIC_PROF            , &tr98Obj[e_TR98_VENDOR_SPECIFIC_PROF            -e_TR98_START]},
+#endif
+{e_TR98_DHCP_COND_SERVPOOL      , &tr98Obj[e_TR98_DHCP_COND_SERVPOOL      -e_TR98_START]},
+{e_TR98_SERVPOOL_DHCP_STATICADDR, &tr98Obj[e_TR98_SERVPOOL_DHCP_STATICADDR-e_TR98_START]},
+{e_TR98_SERVPOOL_DHCP_OPT       , &tr98Obj[e_TR98_SERVPOOL_DHCP_OPT       -e_TR98_START]},
+{e_TR98_LAN_ETH_INTF_CONF       , &tr98Obj[e_TR98_LAN_ETH_INTF_CONF       -e_TR98_START]},
+{e_TR98_LAN_ETH_INTF_CONF_STAT  , &tr98Obj[e_TR98_LAN_ETH_INTF_CONF_STAT  -e_TR98_START]},
+//{e_TR98_LAN_USB_INTF_CONF       , &tr98Obj[e_TR98_LAN_USB_INTF_CONF       -e_TR98_START]},
+//{e_TR98_LAN_USB_INTF_CONF_STAT  , &tr98Obj[e_TR98_LAN_USB_INTF_CONF_STAT  -e_TR98_START]},
+{e_TR98_LAN_DEV_WLAN_CFG        , &tr98Obj[e_TR98_LAN_DEV_WLAN_CFG        -e_TR98_START]},
+{e_TR98_WLAN_CFG_STAT           , &tr98Obj[e_TR98_WLAN_CFG_STAT           -e_TR98_START]},
+{e_TR98_WPS                     , &tr98Obj[e_TR98_WPS                     -e_TR98_START]},
+//{e_TR98_REG                     , &tr98Obj[e_TR98_REG                     -e_TR98_START]},
+{e_TR98_ASSOC_DEV               , &tr98Obj[e_TR98_ASSOC_DEV               -e_TR98_START]},
+{e_TR98_WEP_KEY                 , &tr98Obj[e_TR98_WEP_KEY                 -e_TR98_START]},
+{e_TR98_PSK                     , &tr98Obj[e_TR98_PSK                     -e_TR98_START]},
+//{e_TR98_AP_WMM_PARAM            , &tr98Obj[e_TR98_AP_WMM_PARAM            -e_TR98_START]},
+//{e_TR98_STA_WMM_PARAM           , &tr98Obj[e_TR98_STA_WMM_PARAM           -e_TR98_START]},
+{e_TR98_HOSTS                   , &tr98Obj[e_TR98_HOSTS                   -e_TR98_START]},
+{e_TR98_HOST                    , &tr98Obj[e_TR98_HOST                    -e_TR98_START]},
+//{e_TR98_LAN_INTF                , &tr98Obj[e_TR98_LAN_INTF                -e_TR98_START]},
+//{e_TR98_LAN_INTF_ETH_INTF_CONF  , &tr98Obj[e_TR98_LAN_INTF_ETH_INTF_CONF  -e_TR98_START]},
+//{e_TR98_USB_INTF_CONF           , &tr98Obj[e_TR98_USB_INTF_CONF           -e_TR98_START]},
+//{e_TR98_LAN_INTF_WLAN_CFG       , &tr98Obj[e_TR98_LAN_INTF_WLAN_CFG       -e_TR98_START]},
+{e_TR98_WAN_DEV                 , &tr98Obj[e_TR98_WAN_DEV                 -e_TR98_START]},
+{e_TR98_WAN_COMM_INTF_CONF      , &tr98Obj[e_TR98_WAN_COMM_INTF_CONF      -e_TR98_START]},
+//{e_TR98_WAN_COMM_INTF_CONNECT   , &tr98Obj[e_TR98_WAN_COMM_INTF_CONNECT   -e_TR98_START]},
+{e_TR98_WAN_DSL_INTF_CONF       , &tr98Obj[e_TR98_WAN_DSL_INTF_CONF       -e_TR98_START]},
+{e_TR98_WAN_DSL_INTF_TEST_PARAM , &tr98Obj[e_TR98_WAN_DSL_INTF_TEST_PARAM -e_TR98_START]},
+{e_TR98_WAN_DSL_INTF_CONF_STAT  , &tr98Obj[e_TR98_WAN_DSL_INTF_CONF_STAT  -e_TR98_START]},
+{e_TR98_TTL                     , &tr98Obj[e_TR98_TTL                     -e_TR98_START]},
+{e_TR98_ST                      , &tr98Obj[e_TR98_ST                      -e_TR98_START]},
+//{e_TR98_LST_SHOWTIME            , &tr98Obj[e_TR98_LST_SHOWTIME            -e_TR98_START]},
+{e_TR98_CURRENT_DAY             , &tr98Obj[e_TR98_CURRENT_DAY             -e_TR98_START]},
+//{e_TR98_QTR_HR                  , &tr98Obj[e_TR98_QTR_HR                  -e_TR98_START]},
+{e_TR98_WAN_ETH_INTF_CONF       , &tr98Obj[e_TR98_WAN_ETH_INTF_CONF       -e_TR98_START]},
+{e_TR98_WAN_ETH_INTF_CONF_STAT  , &tr98Obj[e_TR98_WAN_ETH_INTF_CONF_STAT  -e_TR98_START]},
+{e_TR98_WAN_DSL_DIAG            , &tr98Obj[e_TR98_WAN_DSL_DIAG            -e_TR98_START]},
+{e_TR98_WAN_CONN_DEV            , &tr98Obj[e_TR98_WAN_CONN_DEV            -e_TR98_START]},
+{e_TR98_WAN_DSL_LINK_CONF       , &tr98Obj[e_TR98_WAN_DSL_LINK_CONF       -e_TR98_START]},
+{e_TR98_WAN_ATM_F5_LO_DIAG      , &tr98Obj[e_TR98_WAN_ATM_F5_LO_DIAG      -e_TR98_START]},
+{e_TR98_WAN_ATM_F4_LO_DIAG      , &tr98Obj[e_TR98_WAN_ATM_F4_LO_DIAG      -e_TR98_START]},
+{e_TR98_WAN_PTM_LINK_CONF       , &tr98Obj[e_TR98_WAN_PTM_LINK_CONF       -e_TR98_START]},
+{e_TR98_WAN_PTM_LINK_CONF_STAT  , &tr98Obj[e_TR98_WAN_PTM_LINK_CONF_STAT  -e_TR98_START]},
+{e_TR98_WAN_ETH_LINK_CONF       , &tr98Obj[e_TR98_WAN_ETH_LINK_CONF       -e_TR98_START]},
+//{e_TR98_WAN_POTS_LINK_CONF      , &tr98Obj[e_TR98_WAN_POTS_LINK_CONF      -e_TR98_START]},
+{e_TR98_WAN_IP_CONN             , &tr98Obj[e_TR98_WAN_IP_CONN             -e_TR98_START]},
+{e_TR98_WAN_IP_CONN_MLD         , &tr98Obj[e_TR98_WAN_IP_CONN_MLD         -e_TR98_START]},
+{e_TR98_DHCP_CLIENT             , &tr98Obj[e_TR98_DHCP_CLIENT             -e_TR98_START]},
+{e_TR98_SENT_DHCP_OPT           , &tr98Obj[e_TR98_SENT_DHCP_OPT           -e_TR98_START]},
+{e_TR98_REQ_DHCP_OPT            , &tr98Obj[e_TR98_REQ_DHCP_OPT            -e_TR98_START]},
+{e_TR98_WAN_IP_PORT_MAP         , &tr98Obj[e_TR98_WAN_IP_PORT_MAP         -e_TR98_START]},
+{e_TR98_WAN_IP_PORT_TRIGGER     , &tr98Obj[e_TR98_WAN_IP_PORT_TRIGGER     -e_TR98_START]},
+{e_TR98_WAN_IP_ADDR_MAPPING     , &tr98Obj[e_TR98_WAN_IP_ADDR_MAPPING     -e_TR98_START]},
+{e_TR98_WAN_IP_CONN_STAT        , &tr98Obj[e_TR98_WAN_IP_CONN_STAT        -e_TR98_START]},
+#ifdef IPV6INTERFACE_PROFILE
+{e_TR98_WAN_IP_CONN_IPV6ADDR    , &tr98Obj[e_TR98_WAN_IP_CONN_IPV6ADDR    -e_TR98_START]},
+{e_TR98_WAN_IP_CONN_IPV6PREFIX	 , &tr98Obj[e_TR98_WAN_IP_CONN_IPV6PREFIX	 -e_TR98_START]},
+#endif
+#ifdef DHCPV6CLIENT_PROFILE
+{e_TR98_WAN_IP_CONN_DHCPV6CLIENT, &tr98Obj[e_TR98_WAN_IP_CONN_DHCPV6CLIENT-e_TR98_START]},
+#endif
+#ifdef IPV6RD_PROFILE
+{e_TR98_WAN_IP_CONN_IPV6RD	     , &tr98Obj[e_TR98_WAN_IP_CONN_IPV6RD	     -e_TR98_START]},
+#endif
+{e_TR98_WAN_PPP_CONN            , &tr98Obj[e_TR98_WAN_PPP_CONN            -e_TR98_START]},
+{e_TR98_WAN_PPP_PORT_MAP        , &tr98Obj[e_TR98_WAN_PPP_PORT_MAP        -e_TR98_START]},
+{e_TR98_WAN_PPP_PORT_TRIGGER    , &tr98Obj[e_TR98_WAN_PPP_PORT_TRIGGER    -e_TR98_START]},
+{e_TR98_WAN_PPP_ADDR_MAPPING    , &tr98Obj[e_TR98_WAN_PPP_ADDR_MAPPING    -e_TR98_START]},
+{e_TR98_WAN_PPP_CONN_STAT       , &tr98Obj[e_TR98_WAN_PPP_CONN_STAT       -e_TR98_START]},
+{e_TR98_WAN_PPP_CONN_MLD        , &tr98Obj[e_TR98_WAN_PPP_CONN_MLD        -e_TR98_START]},
+#ifdef IPV6INTERFACE_PROFILE
+{e_TR98_WAN_PPP_CONN_IPV6ADDR    , &tr98Obj[e_TR98_WAN_PPP_CONN_IPV6ADDR    -e_TR98_START]},
+{e_TR98_WAN_PPP_CONN_IPV6PREFIX  , &tr98Obj[e_TR98_WAN_PPP_CONN_IPV6PREFIX  -e_TR98_START]},
+#endif
+#ifdef DHCPV6CLIENT_PROFILE
+{e_TR98_WAN_PPP_CONN_DHCPV6CLIENT, &tr98Obj[e_TR98_WAN_PPP_CONN_DHCPV6CLIENT-e_TR98_START]},
+#endif
+#ifdef IPV6RD_PROFILE
+{e_TR98_WAN_PPP_CONN_IPV6RD      , &tr98Obj[e_TR98_WAN_PPP_CONN_IPV6RD      -e_TR98_START]},
+#endif
+#ifdef CONFIG_XPON_SUPPORT
+{e_TR98_WAN_PON_INTF_CONF      , &tr98Obj[e_TR98_WAN_PON_INTF_CONF            -e_TR98_START]},
+{e_TR98_WAN_PON_INTF_CONF_STAT      , &tr98Obj[e_TR98_WAN_PON_INTF_CONF_STAT  -e_TR98_START]},
+#endif
+{e_TR98_FIREWALL                , &tr98Obj[e_TR98_FIREWALL                -e_TR98_START]},
+{e_TR98_FIREWALL_LEVEL          , &tr98Obj[e_TR98_FIREWALL_LEVEL          -e_TR98_START]},
+{e_TR98_FIREWALL_CHAIN          , &tr98Obj[e_TR98_FIREWALL_CHAIN          -e_TR98_START]},
+{e_TR98_FIREWALL_CHAIN_RULE     , &tr98Obj[e_TR98_FIREWALL_CHAIN_RULE     -e_TR98_START]},
+#if ZYXEL_EXT
+{e_TR98_ZYXEL_EXT               , &tr98Obj[e_TR98_ZYXEL_EXT               -e_TR98_START]},
+{e_TR98_DNS_RT_ENTRY            , &tr98Obj[e_TR98_DNS_RT_ENTRY            -e_TR98_START]},
+{e_TR98_DNS_ENTRY    	        , &tr98Obj[e_TR98_DNS_ENTRY     	      -e_TR98_START]},
+{e_TR98_D_DNS                   , &tr98Obj[e_TR98_D_DNS                   -e_TR98_START]},
+{e_TR98_TR064	                , &tr98Obj[e_TR98_TR064	                  -e_TR98_START]},
+{e_TR98_VLAN_GROUP	            , &tr98Obj[e_TR98_VLAN_GROUP	          -e_TR98_START]},
+{e_TR98_EMAIL_NOTIFY            , &tr98Obj[e_TR98_EMAIL_NOTIFY            -e_TR98_START]},
+{e_TR98_EMAIL_SERVICE           , &tr98Obj[e_TR98_EMAIL_SERVICE	          -e_TR98_START]},
+{e_TR98_EMAIL_EVENT_CFG         , &tr98Obj[e_TR98_EMAIL_EVENT_CFG         -e_TR98_START]},
+{e_TR98_SYS_INFO                , &tr98Obj[e_TR98_SYS_INFO                -e_TR98_START]},
+{e_TR98_SNMP	                , &tr98Obj[e_TR98_SNMP					  -e_TR98_START]},
+{e_TR98_SNMP_TRAP               , &tr98Obj[e_TR98_SNMP_TRAP				  -e_TR98_START]},
+{e_TR98_SCHEDULE                , &tr98Obj[e_TR98_SCHEDULE                -e_TR98_START]},
+{e_TR98_REMO_MGMT               , &tr98Obj[e_TR98_REMO_MGMT               -e_TR98_START]},
+{e_TR98_REMO_SRV                , &tr98Obj[e_TR98_REMO_SRV                -e_TR98_START]},
+{e_TR98_IEEE8021AG              , &tr98Obj[e_TR98_IEEE8021AG              -e_TR98_START]},
+{e_TR98_SAMBA		            , &tr98Obj[e_TR98_SAMBA		              -e_TR98_START]},
+#ifdef SOL_TR69_TRUSTDOMAIN
+{e_TR98_REMO_TRUSTDOMAIN        , &tr98Obj[e_TR98_REMO_TRUSTDOMAIN        -e_TR98_START]},
+#endif
+{e_TR98_IGMP                    , &tr98Obj[e_TR98_IGMP                    -e_TR98_START]},
+#if defined(SUNRISE_RANDOM_PASSWORD) || defined(SOL_TR69_LOGINACCOUNT)
+{e_TR98_LOG_CFG           		 , &tr98Obj[e_TR98_LOG_CFG 				  -e_TR98_START]},
+{e_TR98_LOG_CFG_GP           	 , &tr98Obj[e_TR98_LOG_CFG_GP             -e_TR98_START]},
+{e_TR98_LOG_CFG_GP_ACCOUNT       , &tr98Obj[e_TR98_LOG_CFG_GP_ACCOUNT     -e_TR98_START]},
+#endif
+{e_TR98_LOG_SETTING             , &tr98Obj[e_TR98_LOG_SETTING             -e_TR98_START]},
+{e_TR98_LOG_CLASSIFY            , &tr98Obj[e_TR98_LOG_CLASSIFY            -e_TR98_START]},
+{e_TR98_LOG_CATEGORY	     	, &tr98Obj[e_TR98_LOG_CATEGORY	    	  -e_TR98_START]},
+{e_TR98_MACFILTER	     , &tr98Obj[e_TR98_MACFILTER	     			  -e_TR98_START]},
+{e_TR98_MACFILTER_WHITELIST	    , &tr98Obj[e_TR98_MACFILTER_WHITELIST	  -e_TR98_START]},
+{e_TR98_PAREN_CTL           	, &tr98Obj[e_TR98_PAREN_CTL            	  -e_TR98_START]},
+{e_TR98_PAREN_CTL_PROF          , &tr98Obj[e_TR98_PAREN_CTL_PROF     	  -e_TR98_START]},
+{e_TR98_SEC		          		, &tr98Obj[e_TR98_SEC		              -e_TR98_START]},
+{e_TR98_SEC_CERT		        , &tr98Obj[e_TR98_SEC_CERT		   		  -e_TR98_START]},
+#ifdef ONECONNECT
+{e_TR98_ONECONNECT_SPEEDTESTINFO            , &tr98Obj[e_TR98_ONECONNECT_SPEEDTESTINFO            -e_TR98_START]},
+#endif
+#endif
+#if OBSOLETED
+#else
+//{e_TR98_WAN_DSL_CONN_MGMT       , &tr98Obj[e_TR98_WAN_DSL_CONN_MGMT       -e_TR98_START]},
+//{e_TR98_WAN_DSL_CONN_SRVC       , &tr98Obj[e_TR98_WAN_DSL_CONN_SRVC       -e_TR98_START]},
+#endif
+#ifdef ONECONNECT
+{e_TR98_ONECONNECT_EXT	     , &tr98Obj[e_TR98_ONECONNECT_EXT	     -e_TR98_START]},
+#endif
+#ifdef ZyXEL_IPP_PRINTSERVER
+{e_TR98_PRINT_SERVER             , &tr98Obj[e_TR98_PRINT_SERVER             -e_TR98_START]}
+#endif
+};
+
+#ifdef SUNRISE_FIXED_WANDEV_INDEX_CUSTOMIZATION
+zcfgRet_t ReplaceWANDeviceIndex(char* pathname)
+{	
+	objIndex_t objIid;
+	rdm_MgmtSrv_t *MgmtSrvObj = NULL;
+	zcfgRet_t ret = ZCFG_INTERNAL_ERROR;
+	char *ptr1 = NULL, *ptr2 = NULL;
+	char tr69WANpath[128] = {0};
+
+	
+	printf("%s : Enter\n", __FUNCTION__);
+	printf("pathname=%s\n", pathname);
+
+	IID_INIT(objIid);
+	if(zcfgFeObjStructGetWithoutUpdate(RDM_OID_MGMT_SRV, &objIid, (void **)&MgmtSrvObj) == ZCFG_SUCCESS) {
+		printf("tr69WanIPName=%s\n", MgmtSrvObj->X_ZYXEL_ActiveBoundInterface);
+		if (strlen(MgmtSrvObj->X_ZYXEL_ActiveBoundInterface) > 0){
+			if(zcfgFe181To98MappingNameGet(MgmtSrvObj->X_ZYXEL_ActiveBoundInterface, tr69WANpath) == ZCFG_SUCCESS)
+				ret = ZCFG_SUCCESS;
+		}
+		zcfgFeObjStructFree(MgmtSrvObj);
+	}
+
+	if (ret == ZCFG_SUCCESS){
+		ret = ZCFG_INTERNAL_ERROR;
+		if (ptr1 = strstr(tr69WANpath, "WANDevice.")){
+			if (ptr2 = strstr(pathname, "WANDevice.")){
+				*(ptr2+10) = *(ptr1+10);
+				ret = ZCFG_SUCCESS;
+			}
+		}
+	}
+
+	printf("ret= %d, new pathname=%s\n", ret, pathname);
+	
+	return ret;	
+}
+#endif
+
+zcfgRet_t zcfgFeTr98AllIGDNameGet()
+{
+#if 0
+	zcfgRet_t ret;
+
+	if(tr98_names_array != NULL)
+		json_object_put(tr98_names_array);
+
+	tr98_names_array = NULL;
+
+	if((ret = zcfgFeAllIGDNameGet()) != ZCFG_SUCCESS) {
+		printf("%s : Error. ret %d\n", __FUNCTION__, ret);
+		return ret;
+	}
+
+	tr98_names_array = json_object_from_file("/tmp/ALL_IGD");
+
+	return ret;
+#else
+	return zcfgFeAllIGDNameGet();
+#endif
+}
+
+static zcfgRet_t zcfgFeTr98ClassNameGet(char *objName, char *className)
+{
+	char *token = NULL;
+	char *tmpName = NULL;
+	uint16_t len = 0, c = 0;
+
+	if(objName == NULL) {
+		zcfgLog(ZCFG_LOG_ERR, "Object Name is NULL\n");
+		return ZCFG_INVALID_OBJECT;
+	}
+
+	tmpName = (char *)malloc(strlen(objName)+1);
+	strcpy(tmpName, objName);
+
+	if(*(tmpName + strlen(tmpName) - 1) == '.') {
+		printf("%s : Invalid object Name %s ended with '.'\n", __FUNCTION__, objName);
+		free(tmpName);
+		return ZCFG_INVALID_OBJECT;
+	}
+
+	token = strtok(tmpName, ".");
+	/*InternetGatewayDevice*/
+	strcpy(className, token);
+	token = strtok(NULL, ".");
+
+	/* Replace number with "i" */
+	while(token != NULL) {
+		strcat(className, ".");
+
+		len = strlen(token);
+		for(c = 0; c < len; c++) {
+			if(!isdigit(*(token + c)))
+				break;
+		}
+
+		if(len == c)
+			strcat(className, "i");
+		else
+			strcat(className, token);
+
+		token = strtok(NULL, ".");
+	}
+
+	free(tmpName);
+	
+	return ZCFG_SUCCESS;
+}
+
+#if 0
+static int zcfgFeTr98HandlerGet(char *tr98FullPathName)
+{
+	static int last = 0;
+	int c = 0;
+
+	c = last;
+
+	do {
+		if(tr98Obj[c].name == NULL) {
+			c = 0;
+
+			if(c == last)
+				break;
+		}
+
+		if(!strcmp(tr98Obj[c].name, tr98FullPathName)) {
+			last = c;
+			return c;
+		}
+
+		c++;
+	} while(c != last);
+
+	return -1;
+}
+#endif
+
+static int zcfgFeTr98HandlerGet(char *tr98FullPathName)
+{
+	tr98NameObj_t *entry = NULL;
+	tr98Object_t *tr98Obj = NULL;
+	int seqnum = 0;
+	char pathName[TR98_MAX_OBJ_NAME_LENGTH] = {0};
+
+	if(!tr98FullPathName)
+		return -1;
+
+	entry = (tr98NameObj_t *)json_object_object_get(tr98StaticNameTable, (const char *)tr98FullPathName);
+	if(!entry)
+		return -1;
+
+	seqnum = (int)entry->nameSeqNum;
+	if(!IS_SEQNUM_RIGHT(seqnum)) {
+		zcfgLog(ZCFG_LOG_ERR, "%s: wrong sequence num\n", __FUNCTION__);
+		return -1;
+	}
+
+	tr98Obj = entry->tr98Obj;
+	strcpy(pathName, tr98Obj->name);
+	if(strcmp(tr98FullPathName, pathName)) {
+		zcfgLog(ZCFG_LOG_ERR, "%s: wrong tr98Obj entry\n", __FUNCTION__);
+		return -1;
+	}
+
+	return ARRAY_SEQNUM(seqnum);
+}
+
+zcfgRet_t zcfgFeTr181IfaceStackLowerLayerGet(char *higherLayer, char *result)
+{
+	objIndex_t objIid;
+	rdm_IfaceStack_t *ifaceStack = NULL;
+
+	IID_INIT(objIid);
+	while(zcfgFeObjStructGetNext(RDM_OID_IFACE_STACK, &objIid, (void **)&ifaceStack) == ZCFG_SUCCESS) {
+		if(strcmp(ifaceStack->HigherLayer, higherLayer) == 0) {
+			strcpy(result, ifaceStack->LowerLayer);
+			zcfgFeObjStructFree(ifaceStack);
+			return ZCFG_SUCCESS;
+		}
+		zcfgFeObjStructFree(ifaceStack);
+	}
+
+	return ZCFG_NO_SUCH_OBJECT;
+}
+
+zcfgRet_t zcfgFeTr181IfaceStackHigherLayerGet(char *lowerLayer, char *result)
+{
+	objIndex_t objIid;
+	rdm_IfaceStack_t *ifaceStack = NULL;
+
+	IID_INIT(objIid);
+	while(zcfgFeObjStructGetNext(RDM_OID_IFACE_STACK, &objIid, (void **)&ifaceStack) == ZCFG_SUCCESS) {
+		if(strcmp(ifaceStack->LowerLayer, lowerLayer) == 0) {
+			strcpy(result, ifaceStack->HigherLayer);
+			zcfgFeObjStructFree(ifaceStack);
+			return ZCFG_SUCCESS;
+		}
+		zcfgFeObjStructFree(ifaceStack);
+	}
+
+	return ZCFG_NO_SUCH_OBJECT;
+}
+
+zcfgRet_t zcfgFe98To181IpIface(const char *tr98IfaceName, char *ipIface)
+{
+	char tr98ObjName[300] = {0}, tr181ObjName[300] = {0};
+	char higherLayer[300] = {0};
+
+	if(!tr98IfaceName || !ipIface)
+		return ZCFG_INTERNAL_ERROR;
+
+	ipIface[0] = '\0';
+
+	if(!strcmp(tr98IfaceName, "")) {
+		return ZCFG_SUCCESS;
+	}
+
+	strncpy(tr98ObjName, tr98IfaceName, sizeof(tr98ObjName)-1);
+	if(strcmp(tr98ObjName, "") && (zcfgFe98To181MappingNameGet(tr98ObjName, tr181ObjName) != ZCFG_SUCCESS)) {
+		return ZCFG_NO_SUCH_OBJECT;
+	}
+
+	if(strstr(tr181ObjName, "PPP.Interface") != NULL) {
+		if((zcfgFeTr181IfaceStackHigherLayerGet(tr181ObjName, higherLayer)) != ZCFG_SUCCESS) {
+			return ZCFG_NO_SUCH_OBJECT;
+		}
+		memset(tr181ObjName, 0, sizeof(tr181ObjName));
+		strncpy(tr181ObjName, higherLayer, sizeof(tr98ObjName)-1);
+					
+		if(!strstr(tr181ObjName, "IP.Interface")) {
+			return ZCFG_NO_SUCH_OBJECT;
+		}
+	}
+
+	if(!strstr(tr181ObjName, "IP.Interface")) {
+		return ZCFG_NO_SUCH_OBJECT;
+	}
+
+	strncpy(ipIface, tr181ObjName, sizeof(tr181ObjName)-1);
+
+	return ZCFG_SUCCESS;
+}
+
+#define setLinkObjParm(linkObj, value) { \
+	struct json_object *obj = (struct json_object *)(linkObj); \
+	bool paramValue = value; \
+	json_object_object_add(obj, "Enable", json_object_new_boolean(paramValue)); }
+
+#define relObj(obj) {json_object_put((struct json_object *)(obj));}
+#define TR181_STATUS_UP "Up"
+
+/*
+ * zcfgFeTr181WanSetLink is generic interface object enable/disable routine
+ *
+ * wanLinkName: interface stack to enable/disable, 
+ *            as DSL.Channel.i, IP.Interface.i, Ethernet.Link.i, ATM.Link.i, PTM.Link.i
+ * set: true is enable, false is disable
+ * retObj: means it could return retrieved object, once !=0
+ * retObjIndex: means it could return object index, once !=0
+ * applied: return whether demand is applied
+ *
+ * Return: 'Object Identity' it is applied while not zero
+ */
+zcfg_offset_t zcfgFeTr181WanSetLink(char *wanLinkName, bool set, void **retObj, objIndex_t *retObjIndex, int *applied)
+{
+	objIndex_t *linkIid = NULL;
+	void *linkObj = NULL;
+	zcfg_offset_t linkOid = 0;
+	const char *paramStr = NULL;
+	bool linkParmStatus;
+	char hLIntfName[100];
+
+	if(!applied) {
+		zcfgLog(ZCFG_LOG_INFO, "%s : no 'applied' parameter\n", __FUNCTION__);
+		return 0;
+	}
+
+	if(retObj) *retObj = NULL;
+
+	*applied = 0;
+
+	if(retObjIndex) {
+		linkIid = retObjIndex;
+	}
+	else linkIid = (objIndex_t *)malloc(sizeof(objIndex_t));
+
+	memset(linkIid, 0, sizeof(objIndex_t));
+
+	if(strstr(wanLinkName, "DSL.Channel") || strstr(wanLinkName, "Ethernet.Link")) {
+		memset(hLIntfName, 0, sizeof(hLIntfName));
+		if(zcfgFeTr181IfaceStackHigherLayerGet(wanLinkName, hLIntfName) ==  ZCFG_SUCCESS) {
+			wanLinkName = hLIntfName;
+		}
+		else return 0;
+	}
+	else {
+		//might recognize another
+	}
+
+	if(strstr(wanLinkName, "IP.Interface")) {
+		sscanf(wanLinkName, "IP.Interface.%hhu", &linkIid->idx[0]);
+		linkOid = RDM_OID_IP_IFACE;
+		zcfgLog(ZCFG_LOG_INFO, "%s : set IP.Interface.%d\n", __FUNCTION__, linkIid->idx[0]);
+	}
+	else if(strstr(wanLinkName, "Ethernet.Link")) {
+		sscanf(wanLinkName, "Ethernet.Link.%hhu", &linkIid->idx[0]);
+		linkOid = RDM_OID_ETH_LINK;
+		zcfgLog(ZCFG_LOG_INFO, "%s : set Ethernet.Link.%d\n", __FUNCTION__, linkIid->idx[0]);
+	}
+	else if(strstr(wanLinkName, "ATM.Link")) {
+		sscanf(wanLinkName, "ATM.Link.%hhu", &linkIid->idx[0]);
+		linkOid = RDM_OID_ATM_LINK;
+		zcfgLog(ZCFG_LOG_INFO, "%s : set ATM.Link.%d\n", __FUNCTION__, linkIid->idx[0]);
+	}
+	else if(strstr(wanLinkName, "PTM.Link")) {
+		sscanf(wanLinkName, "PTM.Link.%hhu", &linkIid->idx[0]);
+		linkOid = RDM_OID_PTM_LINK;
+		zcfgLog(ZCFG_LOG_INFO, "%s : set PTM.Link.%d\n", __FUNCTION__, linkIid->idx[0]);
+	}
+	else {
+		//might recognize another
+
+		return 0;
+	}
+	linkIid->level = 1;
+
+	//if(zcfgFeObjStructGet(linkOid, linkIid, (void **)&linkObj) != ZCFG_SUCCESS) {
+	if(zcfgFeObjJsonGet(linkOid, linkIid, (struct json_object **)&linkObj) != ZCFG_SUCCESS) {
+		zcfgLog(ZCFG_LOG_ERR, "%s : Get Link Fail\n", __FUNCTION__);
+		if(!retObjIndex) free(linkIid);
+
+		return 0;
+	}
+
+	paramStr = json_object_get_string(json_object_object_get((struct json_object *)linkObj, "Status"));
+	linkParmStatus = (strstr(paramStr, TR181_STATUS_UP)) ? true : false;
+	printf("%s: set %s %d, %d\n", __FUNCTION__, wanLinkName, linkParmStatus, set);
+	
+	if(linkParmStatus == set) {
+		if(retObj) *retObj = linkObj;
+		else relObj(linkObj);
+
+		if(!retObjIndex) free(linkIid);
+
+	}
+	else {
+		zcfgRet_t ret = ZCFG_SUCCESS;
+		setLinkObjParm(linkObj, set);
+		//ret = zcfgFeObjStructSet(linkOid, linkIid, (void *)linkObj, NULL);
+		ret = zcfgFeObjJsonSet(linkOid, linkIid, (struct json_object *)linkObj, NULL);
+		if((ret != ZCFG_SUCCESS) && (ret != ZCFG_DELAY_APPLY)) {
+			zcfgLog(ZCFG_LOG_ERR, "%s : Set %s fail\n", __FUNCTION__, wanLinkName);
+			relObj(linkObj);
+			linkOid = 0;
+		}
+		else {
+			if(retObj) *retObj = linkObj;
+			else relObj(linkObj);
+			
+			*applied = 1;
+			zcfgLog(ZCFG_LOG_INFO, "%s : Set %s complete\n", __FUNCTION__, wanLinkName);
+		}
+		if(!retObjIndex) free(linkIid);
+	}
+
+	return linkOid;
+}
+
+zcfgRet_t zcfgFeTr98ObjGet(char *tr98ObjName, struct json_object **value)
+{
+	zcfgRet_t ret;
+	char tr98ClassName[257] = {0};
+	int handler = 0;
+#ifdef SUNRISE_FIXED_WANDEV_INDEX_CUSTOMIZATION
+	char newtr98ObjName[257] = {0};
+#endif
+
+#if TR98_MAPPING_DEBUG
+	printf("Enter %s\n", __FUNCTION__);
+#endif
+	if((ret = zcfgFeTr98ClassNameGet(tr98ObjName, tr98ClassName)) != ZCFG_SUCCESS) {
+		return ret;
+	}
+
+#if TR98_MAPPING_DEBUG
+	printf("tr98ClassName %s\n", tr98ClassName);
+#endif
+	handler = zcfgFeTr98HandlerGet(tr98ClassName);
+
+	if(handler != -1) {
+#ifdef SUNRISE_FIXED_WANDEV_INDEX_CUSTOMIZATION
+		strcpy(newtr98ObjName, tr98ObjName);
+		if (strstr(tr98ObjName, "WANDevice.1")){
+			if (ReplaceWANDeviceIndex(newtr98ObjName) != ZCFG_SUCCESS)
+				return ZCFG_OBJECT_WITHOUT_PARAMETER;
+		}
+		
+		if(tr98Obj[handler].getObj != NULL)
+			return tr98Obj[handler].getObj(newtr98ObjName, handler, value, TR98_GET_UPDATE);
+		else
+			return ZCFG_OBJECT_WITHOUT_PARAMETER;
+#else
+		if(tr98Obj[handler].getObj != NULL)
+			return tr98Obj[handler].getObj(tr98ObjName, handler, value, TR98_GET_UPDATE);
+		else
+			return ZCFG_OBJECT_WITHOUT_PARAMETER;
+#endif
+	}
+	else {
+		return ZCFG_INVALID_OBJECT;
+	}
+
+	return ZCFG_SUCCESS;
+}
+
+struct json_object *zcfgFe98ParamGuardInit(const char *parmList, void *addition)
+{
+	if(!parmList)
+		return NULL;
+
+	if(addition)
+		printf("%s: has addition\n", __FUNCTION__);
+
+	struct json_object *parmListObj = json_tokener_parse((const char *)parmList);
+	if(!parmListObj) {
+		printf("%s: parmList object build fail: %s\n", __FUNCTION__, parmList);
+		return NULL;
+	}
+
+	return parmListObj;
+}
+
+zcfgRet_t zcfgFe98ParamGuard(struct json_object *parmList, const char *parmName, struct json_object *param)
+{
+	struct json_object *paramValueObjs, *paramValueObj = NULL;
+	bool secured = false;
+	enum json_type parmtype = json_type_null;
+	const char *paramString = NULL;
+
+	if(!parmList || !parmName)
+		return ZCFG_INTERNAL_ERROR;
+
+	if(!param)
+		return ZCFG_NO_SUCH_PARAMETER;
+
+	parmtype = json_object_get_type(param);
+	if(parmtype == json_type_string)
+		paramString = json_object_get_string(param);
+
+
+	paramValueObjs = json_object_object_get(parmList, parmName);
+	if(!paramValueObjs)
+		return ZCFG_NO_SUCH_PARAMETER;
+
+	if((!paramString || !strlen(paramString)) && json_object_object_get(paramValueObjs, "Emp"))
+		secured = true;
+	else if(paramString && strlen(paramString)) {
+		paramValueObj = json_object_object_get(paramValueObjs, paramString);
+		secured = (paramValueObj) ? true : false;
+		if(paramValueObj)
+			printf("%s: has parameter %s %s\n", __FUNCTION__, parmName, paramString);
+	}
+
+	return (secured == true) ? ZCFG_SUCCESS : ZCFG_INVALID_PARAM_VALUE;
+}
+
+void zcfgFe98ParamGuardRelease(struct json_object *parmList)
+{
+	json_object_put(parmList);
+}
+
+zcfgRet_t zcfgFe98StaticNameTableInit(void)
+{
+	int maxTableEntries = e_TR98_LAST;
+	int n = 0, n_Entries;
+
+	zcfgLog(ZCFG_LOG_INFO, "%s\n", __FUNCTION__);
+
+	if(tr98StaticNameTable)
+		return ZCFG_SUCCESS;
+
+	if(!(tr98StaticNameTable = json_object_new_c_object(maxTableEntries))) {
+		zcfgLog(ZCFG_LOG_INFO, "%s: Tr98 static name table allocation fail\n", __FUNCTION__);
+		return ZCFG_INTERNAL_ERROR;
+	}
+
+	n_Entries = e_TR98_LAST-e_TR98_START;
+	while(n < n_Entries) {
+		json_object_object_add(tr98StaticNameTable, (const char *)tr98Obj[n].name, 
+			    (struct json_object *)&tr98NameObjList[n]);
+		n++;
+	}
+
+	return ZCFG_SUCCESS;
+}
+
+zcfgRet_t zcfgFe98To181ObjMappingNameAdd(const char *tr98PathName, const char *tr181PathName, zcfg_name_t *nameSeqNum, objIndex_t *tr98ObjIid)
+{
+	zcfgRet_t ret = ZCFG_SUCCESS;
+	objIndex_t tr181ObjIid, objIid;
+	zcfg_offset_t oid;
+	zcfg_name_t seqnum = 0;
+	char pathName[OBJ_NAME_BUFF_SIZE] = {0};
+	const char *tr181Name = NULL;
+
+#ifndef ZCFG_DYNAMIC_NAMEMAPPING
+	return ZCFG_SUCCESS;
+#endif
+
+	zcfgLog(ZCFG_LOG_INFO, "%s\n", __FUNCTION__);
+
+	if(!tr98PathName || !tr181PathName || !nameSeqNum || !tr98ObjIid)
+		return ZCFG_INTERNAL_ERROR;
+
+	*nameSeqNum = 0;
+	IID_INIT((*tr98ObjIid));
+
+	IID_INIT(objIid);
+	if((ret = zcfgFe98NameToSeqnum(tr98PathName, &seqnum, &objIid)) != ZCFG_SUCCESS) {
+		zcfgLog(ZCFG_LOG_INFO, "%s: NameToSeqnum fail!\n", __FUNCTION__);
+		return ret;
+	}
+
+	IID_INIT(tr181ObjIid);
+	if(strncmp(tr181PathName, "Device", 6)) {
+		sprintf(pathName, "Device.%s", tr181PathName);
+		tr181Name = pathName;
+	}
+	else {
+		tr181Name = tr181PathName;
+	}
+	if((oid = zcfgFeObjNameToObjId((char *)tr181Name, &tr181ObjIid)) == ZCFG_NO_SUCH_OBJECT) {
+		zcfgLog(ZCFG_LOG_INFO, "%s Name To ObjId fail!\n", __FUNCTION__);
+		return ZCFG_INTERNAL_ERROR;
+	}
+
+	if((ret = zcfg98To181ObjMappingAdd(seqnum, &objIid, oid, &tr181ObjIid)) != ZCFG_SUCCESS) {
+		zcfgLog(ZCFG_LOG_INFO, "%s 98To181 mapping add fail!\n", __FUNCTION__);
+		return ret;
+	}
+
+	*nameSeqNum = seqnum;
+	memcpy(tr98ObjIid, &objIid, sizeof(objIndex_t));
+
+	return ZCFG_SUCCESS;
+}
+
+zcfgRet_t zcfgFe98To181ObjMappingNameGet(const char *tr98PathName, char *tr181PathName)
+{
+	zcfgRet_t ret = ZCFG_SUCCESS;
+	zcfg_name_t nameSeqNum = 0;
+	objIndex_t tr181ObjIid, objIid;
+	zcfg_offset_t oid;
+	char queriedTr181PathName[OBJ_NAME_BUFF_SIZE] = {0};
+
+#ifndef ZCFG_DYNAMIC_NAMEMAPPING
+	return ZCFG_SUCCESS;
+#endif
+
+	//zcfgLog(ZCFG_LOG_INFO, "%s\n", __FUNCTION__);
+	//printf("Enter %s()\n", __FUNCTION__);
+
+	if(!tr98PathName || !tr181PathName || strlen(tr98PathName) == 0)
+		return ZCFG_INTERNAL_ERROR;
+
+	//printf("*** query tr98PathName=%s\n", tr98PathName);
+	
+ 	IID_INIT(objIid);
+	if((ret = zcfgFe98NameToSeqnum(tr98PathName, &nameSeqNum, &objIid)) != ZCFG_SUCCESS) {
+		zcfgLog(ZCFG_LOG_INFO, "%s: NameToSeqnum fail!\n", __FUNCTION__);
+		return ret;
+	}
+	//printf("e_TR98_LAN_DEV=%d\n", e_TR98_LAN_DEV);
+
+
+	IID_INIT(tr181ObjIid);
+	if((ret = zcfgObjMappingGet(ZCFG_MSG_REQUEST_TR98_OBJMAPPING, nameSeqNum, &objIid, &oid, &tr181ObjIid)) != ZCFG_SUCCESS) {
+		//zcfgLog(ZCFG_LOG_INFO, "%s: 98To181 mapping query fail\n", __FUNCTION__);
+		return ret;
+	}
+
+	if((ret = zcfgFeObjIdToName(oid, &tr181ObjIid, queriedTr181PathName)) != ZCFG_SUCCESS) {
+		//zcfgLog(ZCFG_LOG_INFO, "%s: ObjId to Name fail\n", __FUNCTION__);
+		return ret;	
+	}
+
+	tr181PathName[0] = '\0';
+	if (!strncmp(queriedTr181PathName, "Device.", strlen("Device.")))
+		strcpy(tr181PathName, queriedTr181PathName + strlen("Device."));
+	else
+		strcpy(tr181PathName, queriedTr181PathName);
+	
+	printf("18198mapqried: %s %s\n", tr98PathName, tr181PathName);
+
+	return ZCFG_SUCCESS;
+}
+
+zcfgRet_t zcfgFe181To98ObjMappingNameGet(const char *tr181PathName, char *tr98PathName)
+{
+	zcfgRet_t ret = ZCFG_SUCCESS;
+	zcfg_name_t nameSeqNum = 0;
+	objIndex_t tr181ObjIid, objIid;
+	zcfg_offset_t oid;
+
+#ifndef ZCFG_DYNAMIC_NAMEMAPPING
+	return ZCFG_SUCCESS;
+#endif
+
+	zcfgLog(ZCFG_LOG_INFO, "%s\n", __FUNCTION__);
+
+	//printf("*** tr181PathName=%s\n", tr181PathName);
+
+	if(!tr98PathName || !tr181PathName)
+		return ZCFG_INTERNAL_ERROR;
+
+	IID_INIT(tr181ObjIid);
+	if((oid = zcfgFeObjNameToObjId((char *)tr181PathName, &tr181ObjIid)) == ZCFG_NO_SUCH_OBJECT) {
+		zcfgLog(ZCFG_LOG_INFO, "%s\n", __FUNCTION__);
+		return ZCFG_INTERNAL_ERROR;
+	}
+
+	IID_INIT(objIid);
+	if((ret = zcfgObjMappingGet(ZCFG_MSG_REQUEST_TR181_OBJMAPPING, oid, &tr181ObjIid, &nameSeqNum, &objIid)) != ZCFG_SUCCESS) {
+		zcfgLog(ZCFG_LOG_INFO, "%s: 181To98 mapping query fail\n", __FUNCTION__);
+		return ret;
+	}
+
+ 	//IID_INIT(objIid);
+	if((ret = zcfgFe98SeqnumToName(nameSeqNum, &objIid, tr98PathName)) != ZCFG_SUCCESS) {
+		zcfgLog(ZCFG_LOG_INFO, "%s: SeqnumToName fail\n", __FUNCTION__);
+		return ret;
+	}
+
+	printf("98181mapqried: %s %s\n", tr181PathName, tr98PathName);
+
+	return ZCFG_SUCCESS;
+}
+
+zcfgRet_t zcfgFe98NameToSeqnum(const char *tr98PathName, zcfg_name_t *seqnum, objIndex_t *tr98ObjIid)
+{
+	const char *pos = NULL;
+	int n = 0, level = 0;
+	bool subpathname = false;
+	char instNumStr[5] = {0};
+	char pathName[TR98_MAX_OBJ_NAME_LENGTH] = {0};
+	int pathNameLen = 0, instNumStrLen = 0;
+	objIndex_t objIid;
+	tr98NameObj_t *entry = NULL;
+
+	//zcfgLog(ZCFG_LOG_INFO, "%s\n", __FUNCTION__);
+
+	if(!tr98PathName || !seqnum || !tr98ObjIid || (strlen(tr98PathName) <= 0))
+		return ZCFG_INTERNAL_ERROR;
+
+	*seqnum = 0;
+	IID_INIT(*tr98ObjIid);
+
+	IID_INIT(objIid);
+	pos = (tr98PathName + n);
+	while(*pos != '\0') {
+		if(*pos == '.') {
+			subpathname = (_isdigit(*(pos + 1)) && !subpathname) ? true : false;
+			pathName[pathNameLen++] = *pos;
+		}
+		else if(subpathname == true) {
+			if(_isdigit(*pos)) {
+				if(instNumStrLen == 0) {
+					pathName[pathNameLen++] = 'i';
+				}
+				instNumStr[instNumStrLen++] = *pos;
+				if((instNumStrLen+1) >= sizeof(instNumStr))
+					return ZCFG_NO_SUCH_OBJECT;
+			}
+			else {
+				subpathname = false;
+				if(instNumStrLen && pathName[pathNameLen-1] == 'i') {
+					strcat(&pathName[pathNameLen-1], instNumStr);
+					pathNameLen += (instNumStrLen-1);
+					memset(instNumStr, 0, sizeof(instNumStr));
+					instNumStrLen = 0;
+				}
+				else
+				pathName[pathNameLen++] = *pos;
+			}
+		}
+		else {
+			pathName[pathNameLen++] = *pos;
+		}
+		pos = tr98PathName+(++n);
+		if(((subpathname == false) && instNumStrLen) || ((*pos == '\0') && instNumStrLen)) {
+			int idx = 0;
+			if(level < SUPPORTED_INDEX_LEVEL)
+				objIid.idx[level] = ((idx = atoi(instNumStr)) > 255) ? 255 : idx;
+
+			level++;
+			instNumStrLen = 0;
+			memset(instNumStr, 0, sizeof(instNumStr));
+		}
+	}
+
+	//zcfgLog(ZCFG_LOG_INFO, "%s: parsed, %s\n", __FUNCTION__, pathName);
+
+	if(level >= SUPPORTED_INDEX_LEVEL) {
+		//zcfgLog(ZCFG_LOG_INFO, "%s: Object index error\n", __FUNCTION__);
+		return ZCFG_NO_SUCH_OBJECT;
+	}
+
+	objIid.level = level;
+	entry = (tr98NameObj_t *)json_object_object_get(tr98StaticNameTable, (const char *)pathName);
+	if(!entry)
+		return ZCFG_NO_SUCH_OBJECT;
+
+	if(!IS_SEQNUM_RIGHT((entry->nameSeqNum)))
+		return ZCFG_NO_SUCH_OBJECT;
+
+	//zcfgLog(ZCFG_LOG_INFO, "%s: seqnum, %u %hu,%hu,%hu,%hu,%hu,%hu\n", __FUNCTION__, entry->nameSeqNum,
+	//	objIid.idx[0], objIid.idx[1], objIid.idx[2], objIid.idx[3], objIid.idx[4], objIid.idx[5]);
+
+	*seqnum = (zcfg_name_t)entry->nameSeqNum;
+	memcpy(tr98ObjIid, &objIid, sizeof(objIndex_t));
+
+	return ZCFG_SUCCESS;
+}
+
+zcfgRet_t zcfgFe98SeqnumToName(zcfg_name_t seqnum, objIndex_t *objIid, char *tr98PathName)
+{
+	int nameListSeqnum = 0, n = 0, level = 0;
+	int tr98PathNameLen = 0;
+	const char *name = NULL;
+	char pathName[TR98_MAX_OBJ_NAME_LENGTH] = {0};
+	char instNumStr[5] = {0};
+	const char *pos = NULL;
+
+	zcfgLog(ZCFG_LOG_INFO, "%s\n", __FUNCTION__);
+
+	if(!(IS_SEQNUM_RIGHT(seqnum)) || !objIid || !tr98PathName)
+		return ZCFG_INTERNAL_ERROR;
+
+	nameListSeqnum = ARRAY_SEQNUM(seqnum);
+	name = (tr98NameObjList[nameListSeqnum].tr98Obj)->name;
+	strcpy(pathName, name);
+
+	pos = (pathName + n);
+	while(*pos != '\0') {
+		if(*pos == 'i' && (n != 0) && (*(pos - 1) == '.' && (*(pos + 1) == '.' || *(pos + 1) == '\0'))) {
+			if(level < SUPPORTED_INDEX_LEVEL)
+				sprintf(instNumStr, "%hhu", objIid->idx[level]);
+
+			level++;
+			strcat(tr98PathName, instNumStr);
+			tr98PathNameLen += strlen(instNumStr);
+			instNumStr[0] = '\0';
+		}
+		else {
+			*(tr98PathName + (tr98PathNameLen++)) = *pos;
+		}
+		pos = (pathName + (++n));
+	}
+	*(tr98PathName + tr98PathNameLen) = '\0';
+
+	if(level >= SUPPORTED_INDEX_LEVEL) {
+		zcfgLog(ZCFG_LOG_INFO, "%s: Object index error\n", __FUNCTION__);
+		return ZCFG_NO_SUCH_OBJECT;
+	}
+
+	zcfgLog(ZCFG_LOG_INFO, "%s: translated, %s\n", __FUNCTION__, tr98PathName);
+
+	return ZCFG_SUCCESS;
+}
+
+#ifdef ZCFG_PARM_NAMEMAPPING
+zcfgRet_t zcfgFe98ParmMappingToName(const char *notifyName, char *tr98NotifyName)
+{
+	char seqnumStr[30] = {0};
+	char idxstr[30] = {0}, instNumStr[5];
+	char parmName[MAX_PARMNAME_LEN] = {0};
+	uint32_t seqnum = 0;
+	char *c = NULL;
+	objIndex_t tr98ObjIid;
+	int n = 0, instNumStrLen = 0;
+
+	if(!notifyName || !tr98NotifyName)
+		return ZCFG_INTERNAL_ERROR;
+
+	*tr98NotifyName = '\0';
+
+	zcfgLog(ZCFG_LOG_INFO, "%s\n", __FUNCTION__);
+
+	sscanf(notifyName, "%[^_]_%[^_]_%s", seqnumStr, idxstr, parmName);
+
+	//printf("%s: %s\n", __FUNCTION__, notifyName);
+
+	seqnum = atoi(seqnumStr);
+	if(!(IS_SEQNUM_RIGHT(seqnum)))
+		return ZCFG_INTERNAL_ERROR;
+
+	IID_INIT(tr98ObjIid);
+	c = (idxstr + n);
+	while(*c != '\0') {
+			if(_isdigit(*c)) {
+				instNumStr[instNumStrLen++] = *c;
+				if((instNumStrLen+1) >= sizeof(instNumStr))
+					return ZCFG_NO_SUCH_OBJECT;
+			}
+		else if(*c == '.' && instNumStrLen) {
+			int idx = 0;
+			if(tr98ObjIid.level < SUPPORTED_INDEX_LEVEL)
+			tr98ObjIid.idx[tr98ObjIid.level++] = ((idx = atoi(instNumStr)) > 255) ? 255 : idx;
+			instNumStrLen = 0;
+			memset(instNumStr, 0, sizeof(instNumStr));
+		}
+		c = idxstr+(++n);
+		if((*c == '\0') && instNumStrLen) {
+			int idx = 0;
+			if(tr98ObjIid.level < SUPPORTED_INDEX_LEVEL)
+			tr98ObjIid.idx[tr98ObjIid.level++] = ((idx = atoi(instNumStr)) > 255) ? 255 : idx;
+			instNumStrLen = 0;
+			memset(instNumStr, 0, sizeof(instNumStr));
+		}
+	}
+
+	if(zcfgFe98SeqnumToName(seqnum, &tr98ObjIid, tr98NotifyName) != ZCFG_SUCCESS) {
+		zcfgLog(ZCFG_LOG_INFO, "%s: seqnum to name fail\n", __FUNCTION__);
+		return ZCFG_NO_SUCH_OBJECT;
+	}
+
+	if(strlen(parmName) > 0) {
+		n = strlen(tr98NotifyName);
+		*(tr98NotifyName + n++) = '.';
+		*(tr98NotifyName + n) = '\0';
+		strcat(tr98NotifyName, parmName);
+	}
+
+	zcfgLog(ZCFG_LOG_INFO, "%s: %s\n", __FUNCTION__, tr98NotifyName);
+
+	return ZCFG_SUCCESS;
+}
+#endif
+
+// Delete a term in csv string
+char *csvStringStripTerm(const char *csv, const char *term)
+{
+	char *new_Csv = NULL;
+	char *str_1 = NULL, *str_2 = NULL;
+	int csvLen = strlen(csv);
+
+	if(!csv || !term || (csvLen <= 0))
+		return NULL;
+
+	str_1 = strstr(csv, term);
+	if(!str_1) {
+		return NULL;
+	}
+
+	new_Csv = malloc(csvLen);
+	memset(new_Csv, 0, csvLen);
+
+	if(str_1 == csv) {
+		str_2 = str_1 + strlen(term);
+		if(str_2[0] != '\0') {
+			str_2++;
+			strcpy(new_Csv, str_2);
+		}
+	}
+	else {
+		str_2 = str_1 + strlen(term);
+		strncpy(new_Csv, csv, (str_1-csv)-1);
+		if(str_2[0] != '\0') {
+			strcat(new_Csv, str_2);
+		}
+	}
+
+	return new_Csv;
+}
+
+zcfgRet_t zcfgFeTr98ObjNameGet(char *tr98ObjName, struct json_object **value)
+{
+	zcfgRet_t ret;
+	char tr98ClassName[128] = {0};
+	int handler = 0;
+#ifdef SUNRISE_FIXED_WANDEV_INDEX_CUSTOMIZATION
+	char newtr98ObjName[256] = {0};
+#endif
+
+#if TR98_MAPPING_DEBUG
+	printf("Enter %s\n", __FUNCTION__);
+#endif
+	if((ret = zcfgFeTr98ClassNameGet(tr98ObjName, tr98ClassName)) != ZCFG_SUCCESS) {
+		return ret;
+	}
+
+#if TR98_MAPPING_DEBUG
+	printf("tr98ClassName %s\n", tr98ClassName);
+#endif
+	handler = zcfgFeTr98HandlerGet(tr98ClassName);
+
+	if(handler != -1) {
+#ifdef SUNRISE_FIXED_WANDEV_INDEX_CUSTOMIZATION
+		strcpy(newtr98ObjName, tr98ObjName);
+		if (strstr(tr98ObjName, "WANDevice.1")){
+			if (ReplaceWANDeviceIndex(newtr98ObjName) != ZCFG_SUCCESS)
+				return ZCFG_OBJECT_WITHOUT_PARAMETER;
+		}
+		
+		if(tr98Obj[handler].getObj != NULL)
+			return tr98Obj[handler].getObj(newtr98ObjName, handler, value, TR98_GET_WITHOUT_UPDATE);
+		else
+			return ZCFG_OBJECT_WITHOUT_PARAMETER;
+#else
+		if(tr98Obj[handler].getObj != NULL)
+			return tr98Obj[handler].getObj(tr98ObjName, handler, value, TR98_GET_WITHOUT_UPDATE);
+		else
+			return ZCFG_OBJECT_WITHOUT_PARAMETER;
+#endif
+	}
+	else {
+		return ZCFG_INVALID_OBJECT;
+	}
+
+	return ZCFG_SUCCESS;
+}
+
+zcfgRet_t zcfgFeTr98ObjNameObjGet(char *tr98ObjName, struct json_object **value)
+{
+	zcfgRet_t ret;
+	char tr98ClassName[128] = {0};
+	int handler = 0;
+	char result[256] = {0};
+	char tr98ObjNameTmp[128];
+	char *ptr;
+
+#if TR98_MAPPING_DEBUG
+	printf("Enter %s\n", __FUNCTION__);
+#endif
+
+	if((ret = zcfgFeTr98ClassNameGet(tr98ObjName, tr98ClassName)) != ZCFG_SUCCESS) {
+		return ret;
+	}
+
+#if TR98_MAPPING_DEBUG
+	printf("tr98ClassName %s\n", tr98ClassName);
+#endif
+
+	handler = zcfgFeTr98HandlerGet(tr98ClassName);
+	if(handler != -1) {
+		if(tr98Obj[handler].getObj != NULL){
+			//special case
+			strcpy( tr98ObjNameTmp, tr98ObjName );
+#ifdef SUNRISE_FIXED_WANDEV_INDEX_CUSTOMIZATION
+			if (strstr(tr98ObjNameTmp, "WANDevice.1")){
+				if (ReplaceWANDeviceIndex(tr98ObjNameTmp) != ZCFG_SUCCESS)
+					return ZCFG_INVALID_OBJECT;
+			}
+#endif
+			if( strcmp( tr98Obj[handler].name, TR98_LAN_HOST_CONF_MGMT) == 0 ){
+				ptr = strstr(tr98ObjNameTmp, ".LANHostConfigManagement");
+				*ptr = '\0';
+				return zcfgFe98To181MappingNameGet(tr98ObjNameTmp, result);
+			}
+			else if( strcmp( tr98Obj[handler].name, TR98_LAN_ETH_INTF_CONF_STAT)==0){
+				ptr = strstr(tr98ObjNameTmp, ".Stats");
+				*ptr = '\0';
+				return zcfgFe98To181MappingNameGet(tr98ObjNameTmp, result);
+			}
+			else if( strcmp( tr98Obj[handler].name, TR98_WLAN_CFG_STAT)==0){
+				ptr = strstr(tr98ObjNameTmp, ".Stats");
+				*ptr = '\0';
+				return zcfgFe98To181MappingNameGet(tr98ObjNameTmp, result);
+			}
+			else if( strcmp( tr98Obj[handler].name, TR98_WPS)==0){
+				ptr = strstr(tr98ObjNameTmp, ".WPS");
+				*ptr = '\0';
+				return zcfgFe98To181MappingNameGet(tr98ObjNameTmp, result);
+			}			
+			else if(strcmp(tr98Obj[handler].name, TR98_WAN_COMM_INTF_CONF)==0){
+				ptr = strstr(tr98ObjNameTmp, ".WANCommonInterfaceConfig");
+				*ptr = '\0';
+				return zcfgFe98To181MappingNameGet(tr98ObjNameTmp, result);
+			}			
+			else if( strcmp( tr98Obj[handler].name, TR98_WAN_DSL_INTF_CONF)==0){
+				ptr = strstr(tr98ObjNameTmp, ".WANDSLInterfaceConfig");
+				*ptr = '\0';
+				return zcfgFe98To181MappingNameGet(tr98ObjNameTmp, result);
+			}			
+			else if( strcmp( tr98Obj[handler].name, TR98_WAN_DSL_INTF_TEST_PARAM)==0){
+				ptr = strstr(tr98ObjNameTmp, ".WANDSLInterfaceConfig.TestParams");
+				*ptr = '\0';
+				return zcfgFe98To181MappingNameGet(tr98ObjNameTmp, result);
+			}			
+			else if( strcmp( tr98Obj[handler].name, TR98_WAN_DSL_DIAG)==0){
+				ptr = strstr(tr98ObjNameTmp, ".WANDSLDiagnostics");
+				*ptr = '\0';
+				return zcfgFe98To181MappingNameGet(tr98ObjNameTmp, result);
+			}			
+			else if( strcmp( tr98Obj[handler].name, TR98_WAN_DSL_LINK_CONF)==0){
+				ptr = strstr(tr98ObjNameTmp, ".WANDSLLinkConfig");
+				*ptr = '\0';
+				return zcfgFe98To181MappingNameGet(tr98ObjNameTmp, result);
+			}			
+			else if( strcmp( tr98Obj[handler].name, TR98_WAN_ATM_F5_LO_DIAG)==0){
+				ptr = strstr(tr98ObjNameTmp, ".WANATMF5LoopbackDiagnostics");
+				*ptr = '\0';
+				return zcfgFe98To181MappingNameGet(tr98ObjNameTmp, result);
+			}			
+			else if( strcmp( tr98Obj[handler].name, TR98_WAN_ATM_F4_LO_DIAG)==0){
+				ptr = strstr(tr98ObjNameTmp, ".X_ZYXEL_WANATMF4LoopbackDiagnostics");
+				*ptr = '\0';
+				return zcfgFe98To181MappingNameGet(tr98ObjNameTmp, result);
+			}			
+			else if( strcmp( tr98Obj[handler].name, TR98_DHCP_CLIENT)==0){
+				ptr = strstr(tr98ObjNameTmp, ".DHCPClient");
+				*ptr = '\0';
+				return zcfgFe98To181MappingNameGet(tr98ObjNameTmp, result);
+			}			
+			else if( strcmp( tr98Obj[handler].name, TR98_IP_INTF_ROUTERADVER)==0){
+				ptr = strstr(tr98ObjNameTmp, ".X_ZYXEL_RouterAdvertisement");
+				*ptr = '\0';
+				return zcfgFe98To181MappingNameGet(tr98ObjNameTmp, result);
+			}
+			else if( strcmp( tr98Obj[handler].name, TR98_IP_INTF_DHCPV6SRV)==0){
+				ptr = strstr(tr98ObjNameTmp, ".X_ZYXEL_DHCPv6Server");
+				*ptr = '\0';
+				return zcfgFe98To181MappingNameGet(tr98ObjNameTmp, result);
+			}
+			else if( strcmp( tr98Obj[handler].name, TR98_WAN_PTM_LINK_CONF)==0){
+				ptr = strstr(tr98ObjNameTmp, ".WANPTMLinkConfig");
+				*ptr = '\0';
+				if( zcfgFe98To181MappingNameGet(tr98ObjNameTmp, result) == ZCFG_SUCCESS ){					
+					if(strstr(result, "PTM") == NULL) {
+						return ZCFG_NO_SUCH_OBJECT;
+					}
+					return ZCFG_SUCCESS;
+				}
+				else
+					return ZCFG_NO_SUCH_OBJECT;
+			}
+			else if( strcmp( tr98Obj[handler].name, TR98_WAN_PTM_LINK_CONF_STAT)==0){
+				ptr = strstr(tr98ObjNameTmp, ".WANPTMLinkConfig.Stats");
+				*ptr = '\0';
+				if( zcfgFe98To181MappingNameGet(tr98ObjNameTmp, result) == ZCFG_SUCCESS ){					
+					if(strstr(result, "PTM") == NULL) {
+						return ZCFG_NO_SUCH_OBJECT;
+					}
+					return ZCFG_SUCCESS;
+				}
+				else
+					return ZCFG_NO_SUCH_OBJECT;
+					
+			}
+			else if( strcmp( tr98Obj[handler].name, TR98_WAN_ETH_LINK_CONF)==0){
+				ptr = strstr(tr98ObjNameTmp, ".WANEthernetLinkConfig");
+				*ptr = '\0';
+				if( zcfgFe98To181MappingNameGet(tr98ObjNameTmp, result) == ZCFG_SUCCESS ){					
+					if(strstr(result, "Ethernet") == NULL) {
+						return ZCFG_NO_SUCH_OBJECT;
+					}
+					return ZCFG_SUCCESS;
+				}
+				else
+					return ZCFG_NO_SUCH_OBJECT;
+			}
+			else if( strcmp( tr98Obj[handler].name, TR98_WAN_IP_CONN_STAT)==0){
+				ptr = strstr(tr98ObjNameTmp, ".Stats");
+				*ptr = '\0';
+				return zcfgFe98To181MappingNameGet(tr98ObjNameTmp, result);
+			}
+			else if( strcmp( tr98Obj[handler].name, TR98_WAN_PPP_CONN_STAT)==0){
+				ptr = strstr(tr98ObjNameTmp, ".Stats");
+				*ptr = '\0';
+				return zcfgFe98To181MappingNameGet(tr98ObjNameTmp, result);
+			}
+			else if( strcmp( tr98Obj[handler].name, TR98_WAN_IP_CONN_DHCPV6CLIENT)==0){
+				ptr = strstr(tr98ObjNameTmp, ".X_ZYXEL_DHCPv6Client");
+				*ptr = '\0';
+				return zcfgFe98To181MappingNameGet(tr98ObjNameTmp, result);
+			}			
+			else if( strcmp( tr98Obj[handler].name, TR98_WAN_PPP_CONN_DHCPV6CLIENT)==0){
+				ptr = strstr(tr98ObjNameTmp, ".X_ZYXEL_DHCPv6Client");
+				*ptr = '\0';
+				return zcfgFe98To181MappingNameGet(tr98ObjNameTmp, result);
+			}			
+			else if( strcmp( tr98Obj[handler].name, TR98_WAN_IP_CONN_IPV6RD)==0){
+				ptr = strstr(tr98ObjNameTmp, ".X_ZYXEL_IPv6rd");
+				*ptr = '\0';
+				return zcfgFe98To181MappingNameGet(tr98ObjNameTmp, result);
+			}			
+			else if( strcmp( tr98Obj[handler].name, TR98_WAN_PPP_CONN_IPV6RD)==0){
+				ptr = strstr(tr98ObjNameTmp, ".X_ZYXEL_IPv6rd");
+				*ptr = '\0';
+				return zcfgFe98To181MappingNameGet(tr98ObjNameTmp, result);
+			}			
+			else if( strcmp( tr98Obj[handler].name, TR98_WAN_ETH_INTF_CONF)==0){
+				ptr = strstr(tr98ObjNameTmp, ".WANEthernetInterfaceConfig");
+				*ptr = '\0';
+				return zcfgFe98To181MappingNameGet(tr98ObjNameTmp, result);
+			}
+			
+#ifdef SUNRISE_FIXED_WANDEV_INDEX_CUSTOMIZATION
+			strcpy( tr98ObjNameTmp, tr98ObjName );
+			if (strstr(tr98ObjNameTmp, "WANDevice.1")){
+				if (ReplaceWANDeviceIndex(tr98ObjNameTmp) != ZCFG_SUCCESS)
+					return ZCFG_INTERNAL_ERROR;
+			}
+			ret = zcfgFe98To181MappingNameGet(tr98ObjNameTmp, result);
+#else
+			ret = zcfgFe98To181MappingNameGet(tr98ObjName, result);
+#endif
+			if( (ret == ZCFG_SUCCESS))
+				return ret;
+			else {
+				return tr98Obj[handler].getObj(tr98ObjName, handler, value, TR98_GET_WITHOUT_UPDATE);
+			}
+		}
+		else
+			return ZCFG_OBJECT_WITHOUT_PARAMETER;
+
+	}
+	else {
+		return ZCFG_INVALID_OBJECT;
+	}
+
+	return ZCFG_SUCCESS;
+}
+
+zcfgRet_t zcfgFeTr98ObjParamSet(char *paramName, uint32_t type, struct json_object *setJobj, char *value)
+{
+	struct json_object *setValue = NULL;
+	
+	if(setJobj == NULL) {
+		zcfgLog(ZCFG_LOG_ERR, "The setJobj pointer is NULL value\n");
+		return ZCFG_INTERNAL_ERROR;
+	}
+
+	switch (type) {
+		case json_type_boolean:
+			setValue = json_object_new_boolean(atoi(value));
+			break;
+		case json_type_int:
+			setValue = json_object_new_int(atoi(value));
+			break;
+		case json_type_uint32:
+			setValue = json_object_new_int((uint32_t)atoi(value));
+			break;
+		case json_type_string:
+			setValue = json_object_new_string(value);
+			break;
+		case json_type_time:
+			setValue = json_object_new_string(value);
+			break;
+		default:
+			zcfgLog(ZCFG_LOG_ERR, "Type not support\n");
+			return ZCFG_ERROR_PARAMETER_TYPE;
+			break;
+	}
+
+	json_object_object_add(setJobj, paramName, setValue);
+	return ZCFG_SUCCESS;
+}
+
+zcfgRet_t zcfgFeTr98ObjSet(char *tr98ObjName, struct json_object *value, char *pfault)
+{
+	zcfgRet_t ret;
+	char tr98ClassName[128] = {0};
+	int handler = 0;
+#ifdef SUNRISE_FIXED_WANDEV_INDEX_CUSTOMIZATION
+	char newtr98ObjName[256] = {0};
+#endif
+
+#if TR98_MAPPING_DEBUG
+	printf("Enter %s\n", __FUNCTION__);
+#endif
+	if((ret = zcfgFeTr98ClassNameGet(tr98ObjName, tr98ClassName)) != ZCFG_SUCCESS) {
+		return ret;
+	}
+
+#if TR98_MAPPING_DEBUG
+	printf("tr98ClassName %s\n", tr98ClassName);
+#endif
+	//printf("value %s\n", json_object_to_json_string(value));
+
+	handler = zcfgFeTr98HandlerGet(tr98ClassName);
+	if(handler != -1) {
+#ifdef SUNRISE_FIXED_WANDEV_INDEX_CUSTOMIZATION
+		strcpy(newtr98ObjName, tr98ObjName);
+		if (strstr(tr98ObjName, "WANDevice.1")){
+			if (ReplaceWANDeviceIndex(newtr98ObjName) != ZCFG_SUCCESS)
+				return ZCFG_OBJECT_WITHOUT_PARAMETER;
+		}
+		if(tr98Obj[handler].setObj != NULL)
+			return tr98Obj[handler].setObj(newtr98ObjName, handler, value, NULL, pfault);
+		else
+			return ZCFG_SET_READ_ONLY_PARAM;
+#else
+
+		if(tr98Obj[handler].setObj != NULL)
+			return tr98Obj[handler].setObj(tr98ObjName, handler, value, NULL, pfault);
+		else
+			return ZCFG_SET_READ_ONLY_PARAM;
+#endif
+	}
+	else {
+		return ZCFG_INVALID_OBJECT;
+	}
+	
+	return ZCFG_SUCCESS;
+}
+
+zcfgRet_t zcfgFeTr98MultiObjSet(char *tr98ObjName, struct json_object *value, struct json_object *multiJobj, char *paramfault)
+{
+	zcfgRet_t ret;
+	char tr98ClassName[128] = {0};
+	int handler = 0;
+#ifdef SUNRISE_FIXED_WANDEV_INDEX_CUSTOMIZATION
+	char newtr98ObjName[256] = {0};
+#endif
+
+	if((ret = zcfgFeTr98ClassNameGet(tr98ObjName, tr98ClassName)) != ZCFG_SUCCESS) {
+		return ret;
+	}
+	
+	handler = zcfgFeTr98HandlerGet(tr98ClassName);
+	if(handler != -1) {
+#ifdef SUNRISE_FIXED_WANDEV_INDEX_CUSTOMIZATION
+		strcpy(newtr98ObjName, tr98ObjName);
+		if (strstr(tr98ObjName, "WANDevice.1")){
+			if (ReplaceWANDeviceIndex(newtr98ObjName) != ZCFG_SUCCESS)
+				return ZCFG_OBJECT_WITHOUT_PARAMETER;
+		}
+		if(tr98Obj[handler].setObj != NULL){
+			return tr98Obj[handler].setObj(newtr98ObjName, handler, value, multiJobj, paramfault);}
+		else
+			return ZCFG_SET_READ_ONLY_PARAM;
+#else
+		if(tr98Obj[handler].setObj != NULL){
+			return tr98Obj[handler].setObj(tr98ObjName, handler, value, multiJobj, paramfault);}
+		else
+			return ZCFG_SET_READ_ONLY_PARAM;
+#endif
+	}
+	else {
+		return ZCFG_INVALID_OBJECT;
+	}
+	
+	return ZCFG_SUCCESS;
+}
+
+zcfgRet_t zcfgFeTr98ObjAdd(char *tr98ObjName, int *idx)
+{
+	zcfgRet_t ret;
+	char tr98ClassName[128] = {0};
+	int handler = 0;
+#ifdef SUNRISE_FIXED_WANDEV_INDEX_CUSTOMIZATION
+	char newtr98ObjName[256] = {0};
+#endif
+
+#if TR98_MAPPING_DEBUG
+	printf("Enter %s\n", __FUNCTION__);
+#endif
+	if((ret = zcfgFeTr98ClassNameGet(tr98ObjName, tr98ClassName)) != ZCFG_SUCCESS) {
+		return ret;
+	}
+
+#if TR98_MAPPING_DEBUG
+	printf("tr98ClassName %s\n", tr98ClassName);
+#endif
+	handler = zcfgFeTr98HandlerGet(tr98ClassName);
+	if(handler != -1) {
+		if(!(tr98Obj[handler].attr & OBJECT_ATTR_CREATE)){
+			return ZCFG_INVALID_ARGUMENTS;
+		}
+#ifdef SUNRISE_FIXED_WANDEV_INDEX_CUSTOMIZATION
+		strcpy(newtr98ObjName, tr98ObjName);
+		if (strstr(tr98ObjName, "WANDevice.1")){
+			if (ReplaceWANDeviceIndex(newtr98ObjName) != ZCFG_SUCCESS)
+				return ZCFG_OBJECT_WITHOUT_PARAMETER;
+		}
+		if(tr98Obj[handler].addObj != NULL)
+			return tr98Obj[handler].addObj(newtr98ObjName, idx);
+		else
+			return ZCFG_INVALID_ARGUMENTS;
+#else
+
+		if(tr98Obj[handler].addObj != NULL)
+			return tr98Obj[handler].addObj(tr98ObjName, idx);
+		else
+			return ZCFG_INVALID_ARGUMENTS;
+#endif
+	}
+	else {
+		return ZCFG_INVALID_OBJECT;
+	}
+
+	return ZCFG_SUCCESS;	
+}
+
+zcfgRet_t zcfgFeTr98ObjDel(char *tr98ObjName)
+{
+	zcfgRet_t ret;
+	char tr98ClassName[128] = {0};
+	int handler = 0;
+#ifdef SUNRISE_FIXED_WANDEV_INDEX_CUSTOMIZATION
+	char newtr98ObjName[256] = {0};
+#endif
+
+
+#if TR98_MAPPING_DEBUG
+	printf("Enter %s\n", __FUNCTION__);
+#endif
+	if((ret = zcfgFeTr98ClassNameGet(tr98ObjName, tr98ClassName)) != ZCFG_SUCCESS) {
+		return ret;
+	}
+
+#if TR98_MAPPING_DEBUG
+	printf("tr98ClassName %s\n", tr98ClassName);
+#endif
+	handler = zcfgFeTr98HandlerGet(tr98ClassName);
+	if(handler != -1) {
+		if(!(tr98Obj[handler].attr & OBJECT_ATTR_CREATE)){
+			return ZCFG_INVALID_ARGUMENTS;
+		}
+#ifdef SUNRISE_FIXED_WANDEV_INDEX_CUSTOMIZATION
+		strcpy(newtr98ObjName, tr98ObjName);
+		if (strstr(tr98ObjName, "WANDevice.1")){
+			if (ReplaceWANDeviceIndex(newtr98ObjName) != ZCFG_SUCCESS)
+				return ZCFG_OBJECT_WITHOUT_PARAMETER;
+		}
+		if(tr98Obj[handler].delObj != NULL)
+			return tr98Obj[handler].delObj(newtr98ObjName);
+		else
+			return ZCFG_INVALID_ARGUMENTS;
+#else
+		if(tr98Obj[handler].delObj != NULL)
+			return tr98Obj[handler].delObj(tr98ObjName);
+		else
+			return ZCFG_INVALID_ARGUMENTS;
+#endif
+	}
+	else {
+		return ZCFG_INVALID_OBJECT;
+	}
+	
+	return ZCFG_SUCCESS;
+}
+
+zcfgRet_t zcfgFeTr98DefaultValueSet(struct json_object *tr98Jobj, char *paramName, int type)
+{
+	switch(type) {
+		case json_type_uint32:
+		case json_type_int:
+			json_object_object_add(tr98Jobj, paramName, json_object_new_int(0));
+			break;
+		case json_type_string:
+			json_object_object_add(tr98Jobj, paramName, json_object_new_string(""));
+			break;
+		case json_type_boolean:
+			json_object_object_add(tr98Jobj, paramName, json_object_new_boolean(false));
+			break;
+		default:
+			printf("%s : Unknown Type\n", __FUNCTION__);
+			break;
+	}
+
+	return ZCFG_SUCCESS;
+}
+
+int zcfgFeTr98ObjAttrGet(char *tr98ObjName)
+{
+	zcfgRet_t ret;
+	char tr98ClassName[128] = {0};
+	int handler = 0;
+
+#if TR98_MAPPING_DEBUG
+	printf("Enter %s\n", __FUNCTION__);
+#endif
+	if((ret = zcfgFeTr98ClassNameGet(tr98ObjName, tr98ClassName)) != ZCFG_SUCCESS) {
+		return ret;
+	}
+		
+	handler = zcfgFeTr98HandlerGet(tr98ClassName);
+	if(handler != -1) {
+		return tr98Obj[handler].attr;
+	}
+	else {
+		return ZCFG_INVALID_OBJECT;
+	}
+	
+}
+
+#if 1 //__ZYXEL__, Mark
+zcfgRet_t zcfgFeGetTr181NameParm(const char *notifyName, char *objName, char *objParm){
+	char *ptr = NULL;
+	const char *ptr2 = NULL;
+	int n_Len, n_Len2;
+	char *IpIntObjName = "IP.Interface";
+	char *PppIntObjName = "PPP.Interface";
+#if 1 //__ZYXEL__, Mark, 20140512	
+	objIndex_t ipInfIid;
+	rdm_IpIface_t *ipIntfObj = NULL;
+#endif
+	
+	printf("Enter %s\n", __FUNCTION__);
+	if(notifyName == NULL || objName== NULL || objParm == NULL) return ZCFG_INVALID_ARGUMENTS;
+	
+	*objName = '\0';
+	*objParm = '\0';
+	
+	ptr = strrchr(notifyName, '.');
+	if(ptr == NULL) {
+		printf("Invalid arguments of %s\n", notifyName);
+		return ZCFG_INVALID_ARGUMENTS;
+	}
+	strcpy(objParm, ptr+1);
+	
+	if(!strncmp(notifyName, "Device.", strlen("Device."))){
+		ptr2 = notifyName + strlen("Device.");
+		n_Len = ptr-ptr2;
+		if(n_Len) strncpy(objName, ptr2, n_Len);
+	}
+	else {
+		n_Len = ptr-notifyName;
+		if(n_Len) strncpy(objName, notifyName, n_Len);
+	}
+	
+	n_Len = strlen(IpIntObjName);
+	n_Len2 = strlen(PppIntObjName);
+	ptr = NULL;
+	if(!strncmp(objName, IpIntObjName, n_Len)){
+		if((ptr = strstr(objName+n_Len, "IPv4Address")) && *(ptr-1) == '.'){
+			*(ptr-1) = '\0';
+		}
+#if 1 //__ZYXEL__, Mark, 20140512, mapping IP.Interface.i.IPv4Address.IPAddress to PPP.Interface.i.IPCP.LocalIPAddress
+		if(!strcmp(objParm, "IPAddress")){
+			IID_INIT(ipInfIid);
+			ipInfIid.level = 1;
+			sscanf(objName, "IP.Interface.%hhu", &ipInfIid.idx[0]);
+			if( zcfgFeObjStructGetWithoutUpdate(RDM_OID_IP_IFACE, &ipInfIid, (void **)&ipIntfObj) == ZCFG_SUCCESS){
+				printf("%s: ipIntfObj->LowerLayers=%s\n",__FUNCTION__, ipIntfObj->LowerLayers);
+				if(!strncmp(ipIntfObj->LowerLayers, PppIntObjName, n_Len2)){
+					strcpy(objName, ipIntfObj->LowerLayers);
+					strcpy(objParm, "LocalIPAddress");
+				}
+				zcfgFeObjStructFree(ipIntfObj);
+			}
+		}
+#endif
+	}
+	else if(!strncmp(objName, PppIntObjName, n_Len2)){
+		if((ptr = strstr(objName+n_Len2, "IPCP")) && *(ptr-1) == '.'){
+			*(ptr-1) = '\0';
+		}
+	}
+	
+	printf("%s: notifyName=%s, objName=%s, objParm=%s\n", __FUNCTION__, notifyName, objName, objParm);
+	return ZCFG_SUCCESS;
+}
+#endif
+
+zcfgRet_t zcfgFeTr98Notify(struct json_object *tr181NotifyInfo, struct json_object **tr98NotifyInfo)
+{
+	zcfgRet_t ret = ZCFG_SUCCESS;
+	char tr98ObjName[TR98_MAX_OBJ_NAME_LENGTH] = {0};
+	char tr181ObjName[128] = {0};
+	char tr181ParamName[64] = {0};
+	char tr98ClassName[128] = {0};
+	char *token = NULL, *tmp = NULL;
+	int handler = 0;
+
+#if TR98_MAPPING_DEBUG
+	printf("Enter %s\n", __FUNCTION__);
+#endif
+	if(tr181NotifyInfo == NULL && tr98NotifyInfo == NULL) {
+		printf("Invalid arguments\n");
+		return ZCFG_INVALID_ARGUMENTS;
+	}
+
+	json_object_object_foreach(tr181NotifyInfo, tr181NotifyName, tr181ParamVal) {
+		/*Get object path name*/
+#if 0 //__ZYXEL__, Mark
+		strcpy(tr181ObjName, tr181NotifyName);
+		ptr = strrchr(tr181ObjName, '.');
+		if(ptr == NULL) {
+			printf("Invalid arguments of %s\n", tr181NotifyName);
+			return ZCFG_INVALID_ARGUMENTS;
+		}
+		strcpy(tr181ParamName, ptr+1);
+
+		*ptr = '\0';
+#else
+		if(!strncmp(tr181NotifyName, (const char *)"Device", strlen("Device"))) {
+		if(zcfgFeGetTr181NameParm(tr181NotifyName, tr181ObjName, tr181ParamName) != ZCFG_SUCCESS)
+			continue;
+			
+		printf("%s: tr181NotifyName=%s, tr181ObjName=%s, tr181ParamName=%s\n", __FUNCTION__, tr181NotifyName, tr181ObjName, tr181ParamName);
+#endif
+			if((ret = zcfgFe181To98MappingNameGet(tr181ObjName, tr98ObjName)) != ZCFG_SUCCESS)
+				continue;
+
+			printf("TR98 Object Name %s\n", tr98ObjName);
+	
+			if((ret = zcfgFeTr98ClassNameGet(tr98ObjName, tr98ClassName)) != ZCFG_SUCCESS) {
+				return ret;
+			}
+
+			handler = zcfgFeTr98HandlerGet(tr98ClassName);
+			if(handler != -1) {
+				if(tr98Obj[handler].notify != NULL)
+					ret = tr98Obj[handler].notify(tr98ObjName, tr181ParamName, tr181ParamVal, handler, tr98NotifyInfo);
+			}
+		}
+#ifdef ZCFG_PARM_NAMEMAPPING
+		else if(!strncmp(tr181NotifyName, (const char *)TR98MAPPING_PREFIX, strlen(TR98MAPPING_PREFIX))) {
+			const char *notifyName = tr181NotifyName + strlen(TR98MAPPING_PREFIX);
+			char *tr98NotifyName = (char *)malloc(TR98_MAX_OBJ_NAME_LENGTH + MAX_PARMNAME_LEN);
+
+			memset(tr98NotifyName, 0, TR98_MAX_OBJ_NAME_LENGTH + MAX_PARMNAME_LEN);
+			if((ret = zcfgFe98ParmMappingToName(notifyName, tr98NotifyName)) != ZCFG_SUCCESS) {
+
+				free(tr98NotifyName);
+				return ret;
+			}
+
+			if(strlen(tr98NotifyName) > 0) {
+				if(*tr98NotifyInfo == NULL)
+				*tr98NotifyInfo = json_object_new_object();
+
+			json_object_object_add(*tr98NotifyInfo, tr98NotifyName, JSON_OBJ_COPY(tr181ParamVal));
+			}
+
+			free(tr98NotifyName);
+		}
+#endif
+		else { /*Not found, maybe one by one mapping*/
+			/*Replace Device to InternetGatewayDevice */
+			token = strtok_r(tr181ObjName, ".", &tmp);
+			if(token != NULL && !strcmp(token, "Device")) {
+				strcpy(tr98ObjName, "InternetGatewayDevice.");
+				strcat(tr98ObjName, tmp);
+			}
+			else {
+				printf("Invalid arguments of %s\n", tr181NotifyName);
+				return ZCFG_INVALID_ARGUMENTS;
+			}
+			
+			if((ret = zcfgFeTr98ClassNameGet(tr98ObjName, tr98ClassName)) != ZCFG_SUCCESS) {
+				return ret;
+			}
+
+			handler = zcfgFeTr98HandlerGet(tr98ClassName);
+			if(handler != -1) {
+				if(tr98Obj[handler].notify != NULL)
+					ret = tr98Obj[handler].notify(tr98ObjName, tr181ParamName, tr181ParamVal, handler, tr98NotifyInfo);
+			}
+		}
+	}
+
+	return ret;
+}
+
+zcfgRet_t zcfgFeTr98ParamList(char *tr98ObjName)
+{
+	zcfgRet_t ret;
+	char tr98ClassName[128] = {0};
+	int handler = 0;
+	tr98Parameter_t *paramList = NULL;
+	
+	if((ret = zcfgFeTr98ClassNameGet(tr98ObjName, tr98ClassName)) != ZCFG_SUCCESS) {
+		return ret;
+	}
+#if TR98_MAPPING_DEBUG
+	printf("tr98ClassName %s\n", tr98ClassName);
+#endif	
+	handler = zcfgFeTr98HandlerGet(tr98ClassName);
+	if(handler != -1) {
+		paramList = tr98Obj[handler].parameter;
+		if(paramList == NULL)
+		{
+			return ZCFG_SUCCESS;
+		}
+		while(paramList->name != NULL) {
+			printf("parameter name %s\n", paramList->name);
+			paramList++;
+		}
+	}
+	
+	return ZCFG_SUCCESS;
+}
+
+int zcfgFeTr98ParamAttrChk(int paramAttr, int notification)
+{
+
+	if((paramAttr & PARAMETER_ATTR_DENY_ACTIVENOTIFY_REQUEST) && (notification == 2)) {
+		printf("%s: ActiveNotify request is denied!\n", __FUNCTION__);		
+		return ZCFG_REQUEST_REJECT;
+	}
+	else if((paramAttr & PARAMETER_ATTR_DENY_PASSIVENOTIFY_REQUEST) && (notification == 1)) {
+		printf("%s: PassiveNotify request is denied!\n", __FUNCTION__);		
+		return ZCFG_REQUEST_REJECT;
+	}
+	else if((paramAttr & PARAMETER_ATTR_DENY_DISABLENOTIFY_REQUEST) && (notification == 0)) {
+		printf("%s: DisableNotify request is denied!\n", __FUNCTION__);		
+		return ZCFG_REQUEST_REJECT;
+	}
+
+	return ZCFG_SUCCESS;
+}
+
+#ifdef ZCFG_PARM_NAMEMAPPING
+int zcfgFeTr98ObjParamAttrGetByName(const char *tr98ObjName, const char *name)
+{
+	zcfgRet_t ret;
+	zcfg_name_t seqnum = 0; 
+	zcfg_offset_t oid = 0;
+	objIndex_t tr98ObjIid, objIid;
+	char queriedParmName[MAX_PARMNAME_LEN] = {0}, tr98ClassName[128] = {0};
+	uint32_t attr = 0;
+	int handler = 0;
+	tr98Parameter_t *paramList = NULL;
+
+	//zcfgLog(ZCFG_LOG_INFO, "%s\n", __FUNCTION__);
+
+	if((ret = zcfgFeTr98ClassNameGet((char *)tr98ObjName, tr98ClassName)) != ZCFG_SUCCESS) {
+		return ret;
+	}
+
+	handler = zcfgFeTr98HandlerGet(tr98ClassName);
+	if(handler != -1) {
+		paramList = tr98Obj[handler].parameter;
+		if(paramList == NULL)
+		{
+			return ZCFG_NO_SUCH_PARAMETER;
+		}
+
+		while(paramList->name!= NULL) {
+			if(strcmp(paramList->name, name) == 0){
+				break;
+			}
+			paramList++;
+		}
+	}
+	else {
+		return ZCFG_NO_SUCH_PARAMETER;
+	}
+
+	if(!paramList->name) {
+		return ZCFG_NO_SUCH_PARAMETER;
+	}
+
+	if(paramList->attr & PARAMETER_ATTR_DEFAULTATTR) {
+		if((paramList->attr & PARAMETER_ATTR_DENY_DISABLENOTIFY_REQUEST) && 
+							(paramList->attr & PARAMETER_ATTR_DENY_ACTIVENOTIFY_REQUEST))
+			return 1;
+
+		if((paramList->attr & PARAMETER_ATTR_DENY_DISABLENOTIFY_REQUEST) && 
+							(paramList->attr & PARAMETER_ATTR_DENY_PASSIVENOTIFY_REQUEST))
+			return 2;
+
+		if((paramList->attr & PARAMETER_ATTR_DENY_PASSIVENOTIFY_REQUEST) && 
+							(paramList->attr & PARAMETER_ATTR_DENY_ACTIVENOTIFY_REQUEST))
+			return 0;
+	}
+
+	IID_INIT(tr98ObjIid);
+	if(zcfgFe98NameToSeqnum((const char *)tr98ObjName, &seqnum, &tr98ObjIid) == ZCFG_SUCCESS) {
+		if((ret = zcfgFeParmAttrQry(seqnum, &tr98ObjIid, name, &oid, &objIid, queriedParmName, &attr)) != ZCFG_SUCCESS) {
+			//zcfgLog(ZCFG_LOG_INFO, "%s: parm attr query fail, %u %s\n", __FUNCTION__, seqnum, name);
+			return ret;
+			//printf("%s: parm attr query fail, %u %s\n", __FUNCTION__, seqnum, name);
+			//return 0;
+		}
+			//confirm data if required
+		if(attr & PARAMETER_ATTR_NOATTR) {
+			return 0;
+			//return ZCFG_NO_SUCH_PARAMETER;
+		}
+		//printf("%s: attr 0x%x\n", __FUNCTION__, attr);
+		return PARAMETER_ATTR_NOTIFY_RETRIEVE(attr);
+	}
+
+	return ZCFG_NO_SUCH_PARAMETER;
+}
+#endif
+
+int zcfgFeTr98ParamAttrGetByName(char *tr98ObjName, char *name)
+{
+	zcfgRet_t ret;
+	char tr98ClassName[128] = {0};
+	int handler = 0;
+	tr98Parameter_t *paramList = NULL;
+	
+	if((ret = zcfgFeTr98ClassNameGet(tr98ObjName, tr98ClassName)) != ZCFG_SUCCESS) {
+		return ret;
+	}
+
+	handler = zcfgFeTr98HandlerGet(tr98ClassName);
+	if(handler != -1) {
+		if(tr98Obj[handler].getAttr != NULL){
+			//return tr98Obj[handler].getAttr(tr98ObjName, handler, name);
+			ret = tr98Obj[handler].getAttr(tr98ObjName, handler, name);
+#ifdef ZCFG_ABANDON_NO_TR181_MAPPING_PARM
+			if(ret == 0)
+				return ZCFG_NO_SUCH_PARAMETER;
+			else
+				return ret;
+#else
+			if(ret == 0) {
+				paramList = tr98Obj[handler].parameter;
+				if(paramList == NULL)
+					return ZCFG_NO_SUCH_PARAMETER;
+
+				while(paramList->name!= NULL) {
+					if(strcmp(paramList->name, name) == 0){
+						return paramList->attr;
+					}
+					paramList++;
+				}
+			}
+			else
+				return ret;
+#endif
+		}
+		else {
+#ifdef ZCFG_ABANDON_NO_TR181_MAPPING_PARM
+			int attrVal = zcfgFeTr98ObjParamAttrGetByName((const char *)tr98ObjName, (const char *)name);
+			if(attrVal < 0) {
+				return attrVal;
+			}
+#endif
+			paramList = tr98Obj[handler].parameter;
+			if(paramList == NULL)
+			{
+				return ZCFG_NO_SUCH_PARAMETER;
+			}
+
+			while(paramList->name!= NULL) {
+				if(strcmp(paramList->name, name) == 0){
+					return paramList->attr;
+				}
+				paramList++;
+			}
+		}
+	}
+	
+	return ZCFG_NO_SUCH_PARAMETER;
+}
+
+zcfgRet_t zcfgFeTr98AllParamAttrGetByObjName(const char *tr98ObjName, struct json_object *result)
+{
+	zcfgRet_t ret;
+	char tr98ClassName[256] = {0};
+	int handler = 0;
+	tr98Parameter_t *paramList = NULL;
+	//char paraName[64] = {0};
+
+	if((ret = zcfgFeTr98ClassNameGet(tr98ObjName, tr98ClassName)) != ZCFG_SUCCESS) {
+		return ret;
+	}
+
+	handler = zcfgFeTr98HandlerGet(tr98ClassName);
+	if(handler != -1) {
+		paramList = tr98Obj[handler].parameter;
+
+		if(paramList == NULL) {
+			return ZCFG_NO_SUCH_PARAMETER;
+		}
+
+		while(paramList->name != NULL) {
+			json_object_object_add(result, paramList->name, json_object_new_int(paramList->attr));
+			paramList++;
+		}
+	}
+	else {
+		return ZCFG_NO_SUCH_OBJECT;
+	}
+
+	return ZCFG_SUCCESS;
+}
+
+#ifdef ZCFG_PARM_NAMEMAPPING
+
+zcfgFeSetParmAttr_t *zcfgFeTr98ParamAttrSetByName(uint32_t objnum, objIndex_t *objIid, const char *parmName, uint32_t setAttrObjNum, objIndex_t *setAttrObjIid, const char *setAttrParmName, uint32_t attr)
+{
+	int n = 0;
+	zcfgFeSetParmAttr_t *setParmAttr = NULL;
+
+	zcfgLog(ZCFG_LOG_INFO, "%s\n", __FUNCTION__);
+
+	setParmAttr = (zcfgFeSetParmAttr_t *)malloc(sizeof(zcfgFeSetParmAttr_t));
+
+	printf("%s: obj %u %hu,%hu,%hu,%hu,%hu,%hu %s, attr 0x%x\n", __FUNCTION__, objnum, 
+			objIid->idx[0], objIid->idx[1], objIid->idx[2], objIid->idx[3], objIid->idx[4], objIid->idx[5], parmName, attr);
+
+	setParmAttr->parmSetAttr.objnum = objnum;
+	memcpy(&setParmAttr->parmSetAttr.objIid, objIid, sizeof(objIndex_t));
+	setParmAttr->parmSetAttr.attr = attr;
+	strncpy(setParmAttr->parmName, parmName, MAX_PARMNAME_LEN);
+	setParmAttr->parmSetAttr.parmNameLen += ((n = (setParmAttr->parmSetAttr.parmNameLen % UNITSIZE)) > 0) ? (UNITSIZE - n) : 0;
+	setParmAttr->parmSetAttr.parmNameLen = strlen(setParmAttr->parmName) + 1;
+
+
+	setParmAttr->parmSetAttr.setAttrObjNum = setAttrObjNum;
+	if(setAttrObjIid)
+		memcpy(&setParmAttr->parmSetAttr.setAttrObjIid, setAttrObjIid, sizeof(objIndex_t));
+	else
+		memset(&setParmAttr->parmSetAttr.setAttrObjIid, 0, sizeof(objIndex_t));
+	n = 0;
+	setParmAttr->parmSetAttr.setAttrParmNameLen = (setAttrParmName) ? strlen(setAttrParmName) : 0;
+	if(setParmAttr->parmSetAttr.setAttrParmNameLen > 0) {
+		strncpy(setParmAttr->setAttrParmName, setAttrParmName, MAX_PARMNAME_LEN);
+		setParmAttr->parmSetAttr.setAttrParmNameLen++;
+		setParmAttr->parmSetAttr.setAttrParmNameLen += ((n = (setParmAttr->parmSetAttr.setAttrParmNameLen % UNITSIZE)) > 0) ? (UNITSIZE - n) : 0;
+	}
+
+	return setParmAttr;
+}
+
+
+int zcfgFeTr98ParamAttrMultiSetByName(char *tr98ObjName, char *name, int notify, zcfgFeSetParmAttrLst_t *setParmAttrLst)
+{
+	zcfgRet_t ret;
+	char tr98ClassName[128] = {0};
+	int handler = 0;
+	zcfg_name_t seqnum = 0;
+	zcfg_offset_t oid = 0;
+	objIndex_t tr98ObjIid, objIid;
+	char queriedParmName[MAX_PARMNAME_LEN] = {0};
+	uint32_t queriedAttr = 0;
+	zcfgFeSetParmAttr_t *setParmAttr = NULL;
+	tr98Parameter_t *paramList = NULL;
+	bool qriedNoSuchParam = false;
+
+	zcfgLog(ZCFG_LOG_INFO, "%s\n", __FUNCTION__);
+
+	//if(!tr98ObjName || !name || !setParmAttrLst)
+	//	return ZCFG_INTERNAL_ERROR;
+
+	if((ret = zcfgFeTr98ClassNameGet(tr98ObjName, tr98ClassName)) != ZCFG_SUCCESS) {
+		return ret;
+	}
+
+	handler = zcfgFeTr98HandlerGet(tr98ClassName);
+	paramList = tr98Obj[handler].parameter;
+	if((handler == -1) || !paramList) {
+		return ZCFG_NO_SUCH_PARAMETER;
+	}
+
+	while(paramList->name) {
+		if(!strcmp(paramList->name, name)) {
+			if((ret = zcfgFeTr98ParamAttrChk(paramList->attr, notify)) != ZCFG_SUCCESS)
+				return ret;
+			
+			break;
+		}
+		paramList++;
+	}
+
+	if(!paramList->name) {
+		return ZCFG_NO_SUCH_PARAMETER;
+	}
+	else {
+		if(paramList->attr & PARAMETER_ATTR_DEFAULTATTR)
+			return ZCFG_SUCCESS;
+	}
+
+	IID_INIT(tr98ObjIid);
+	if(zcfgFe98NameToSeqnum((const char *)tr98ObjName, &seqnum, &tr98ObjIid) == ZCFG_SUCCESS) {
+		if((ret = zcfgFeParmAttrQry(seqnum, &tr98ObjIid, (const char *)name, &oid, &objIid, queriedParmName, &queriedAttr)) != ZCFG_SUCCESS) {
+			zcfgLog(ZCFG_LOG_INFO, "%s: tr98 objnum %u %s query fail\n", __FUNCTION__, seqnum, name);
+			qriedNoSuchParam = true;
+		}
+	}
+	else {
+
+		return ZCFG_NO_SUCH_PARAMETER;
+	}
+
+	queriedAttr = (queriedAttr & ~PARAMETER_ATTR_NOTIFY_MASK) | (notify & PARAMETER_ATTR_NOTIFY_MASK);
+
+#ifdef ZCFG_PARM_NAMEMAPPING_NOT_APPLIED
+	if(qriedNoSuchParam == true || !strcmp(queriedParmName, "notapplied")) {
+		// no tr98/tr181 mapping, not applicable, not implemented, and something as that
+		queriedAttr = PARAMETER_ATTR_NOT_APPLIED | PARAMETER_ATTR_TR98 | (notify & PARAMETER_ATTR_NOTIFY_MASK);
+		setParmAttr = zcfgFeTr98ParamAttrSetByName(seqnum, &tr98ObjIid, name, 0, NULL, NULL, queriedAttr);
+		zcfgSetParmAttrAdd(setParmAttrLst, setParmAttr);
+		return ZCFG_SUCCESS;
+	}
+#else
+	if(qriedNoSuchParam == true)
+		return ZCFG_NO_SUCH_PARAMETER;
+#endif
+
+	if(IS_HANDLE_ROUTINE_REQUIRED(queriedAttr)) {
+		struct json_object *multiJobj = NULL;
+		int nObj = 0, n = 0;
+
+		printf("%s: set parm attr handle routine is required\n", __FUNCTION__);
+		if(!tr98Obj[handler].setAttr) {
+			printf("%s: no set parm attr handle routine\n", __FUNCTION__);
+			return ZCFG_NO_SUCH_PARAMETER;
+		}
+
+		multiJobj = json_object_new_array();
+		if((ret = tr98Obj[handler].setAttr(tr98ObjName, handler, name, queriedAttr, multiJobj)) != ZCFG_SUCCESS) {
+			printf("%s: set parm attr handle routine fail\n", __FUNCTION__);
+		}
+		if((nObj = json_object_array_length(multiJobj))) {
+			printf("%s: there're %d set attr items\n", __FUNCTION__, nObj);
+
+			while(n < nObj) {
+				setParmAttr = (zcfgFeSetParmAttr_t *)json_object_get_int(json_object_array_get_idx(multiJobj, n));
+				if(!setParmAttr) {
+					n++;
+					continue;
+				}
+
+				if(ret == ZCFG_SUCCESS) {
+					zcfgSetParmAttrAdd(setParmAttrLst, setParmAttr);
+				}
+				else
+					free(setParmAttr);
+
+				n++;
+			}
+		}
+		json_object_put(multiJobj);
+		if(ret != ZCFG_SUCCESS)
+			return ret;
+	}
+	else {
+		setParmAttr = zcfgFeTr98ParamAttrSetByName(oid, &objIid, queriedParmName, 0, NULL, NULL, (queriedAttr & PARAMETER_ATTR_NOTIFY_MASK));
+		zcfgSetParmAttrAdd(setParmAttrLst, setParmAttr);
+	}
+
+	return ZCFG_SUCCESS;
+}
+#else
+int zcfgFeTr98ParamAttrMultiSetByName(char *tr98ObjName, char *name, int notify, struct json_object *multiJobj)
+{
+	zcfgRet_t ret;
+	char tr98ClassName[128] = {0};
+	int handler = 0;
+	
+	if((ret = zcfgFeTr98ClassNameGet(tr98ObjName, tr98ClassName)) != ZCFG_SUCCESS) {
+		return ret;
+	}
+
+	handler = zcfgFeTr98HandlerGet(tr98ClassName);
+	if(handler != -1) {
+		if(tr98Obj[handler].setAttr != NULL){
+			return tr98Obj[handler].setAttr(tr98ObjName, handler, name, notify, multiJobj);
+		}
+		else{
+			return ZCFG_REQUEST_REJECT;
+		}
+	}
+	
+	return ZCFG_NO_SUCH_PARAMETER;
+}
+#endif
+
+int zcfgFeTr98ParamTypeGetByName(char *tr98ObjName, char *name)
+{
+	zcfgRet_t ret;
+	char tr98ClassName[128] = {0};
+	int handler = 0;
+	tr98Parameter_t *paramList = NULL;
+	
+	if((ret = zcfgFeTr98ClassNameGet(tr98ObjName, tr98ClassName)) != ZCFG_SUCCESS) {
+		return ret;
+	}
+	
+	handler = zcfgFeTr98HandlerGet(tr98ClassName);
+	if(handler != -1) {
+		paramList = tr98Obj[handler].parameter;
+		if(paramList == NULL)
+		{
+			return ZCFG_NO_SUCH_PARAMETER;
+		}
+		while(paramList->name!= NULL) {
+			if(strcmp(paramList->name, name) == 0){
+				return paramList->type;
+			}
+			paramList++;
+		}
+	}
+	
+	return ZCFG_NO_SUCH_PARAMETER;
+}
+
+zcfgRet_t zcfgFeTr98ParamChk(char *tr98ObjName, char *name, char *value)
+{
+	zcfgRet_t ret;
+	char tr98ClassName[128] = {0};
+	int handler = 0;
+	tr98Parameter_t *paramList = NULL;
+	json_type type;
+	char *p = NULL;
+	bool found = FALSE;
+	int len = 0, index = 0;
+
+	if((ret = zcfgFeTr98ClassNameGet(tr98ObjName, tr98ClassName)) != ZCFG_SUCCESS) {
+		return ret;
+	}
+
+	handler = zcfgFeTr98HandlerGet(tr98ClassName);
+	if(handler != -1) {
+		paramList = tr98Obj[handler].parameter;
+		if(paramList == NULL)
+		{
+			return ZCFG_NO_SUCH_PARAMETER;
+		}
+		while(paramList->name!= NULL) {
+			if(strcmp(paramList->name, name) == 0){
+				found = TRUE;
+				break;
+			}
+			paramList++;
+		}
+	}
+	if(!found){
+		return ZCFG_NO_SUCH_PARAMETER;
+	}
+		
+	if(paramList->attr & PARAMETER_ATTR_READONLY) {
+		zcfgLog(ZCFG_LOG_ERR, "Can not set a read-only parameter %s\n", name);
+		return ZCFG_SET_READ_ONLY_PARAM;
+	}
+	
+	type = paramList->type;
+	if(type == json_type_string) {
+		if(strlen(value) >= paramList->len) {
+			return ZCFG_INVALID_PARAM_VALUE_LENGTH;
+		}
+	}
+	switch(type){
+		case json_type_int:
+			p = value;
+			if(atol(value)<0){
+				if(*p != '-'){
+					return ZCFG_INVALID_PARAM_VALUE;
+				}
+				p++;
+			}
+			while(*p!='\0'){
+				if(!isdigit(*p)){
+					return ZCFG_INVALID_PARAM_VALUE;
+				}
+				p++;
+			}
+			break;
+		case json_type_uint8:
+		case json_type_uint16:
+		case json_type_uint32:
+			p = value;
+			while(*p!='\0'){
+				if(!isdigit(*p)){
+					return ZCFG_INVALID_PARAM_VALUE;
+				}
+				p++;
+			}
+			break;
+		case json_type_boolean:
+			if(strcasecmp(value, "true")==0 ){
+				strcpy(value, "1");
+				break;
+			}
+			else if(strcasecmp(value, "false")==0 ){
+				strcpy(value, "0");
+				break;
+			}
+			if( (strcmp(value, "0")!=0) && (strcmp(value, "1")!=0)){
+				return ZCFG_INVALID_PARAM_VALUE;
+			}
+			break;
+		case json_type_time:/*0001-01-01T00:00:00Z*/
+			len = strlen(value);
+			if(len != 19 && len != 20){
+				return ZCFG_INVALID_PARAM_VALUE;
+			}
+			p = value;
+			for(index = 0; index<len; index++){
+				if(index==4 || index==7){
+					if(!(*p == '-')){
+						return ZCFG_INVALID_PARAM_VALUE;
+					}
+				}
+				else if(index == 10){
+					if(!(*p == 'T')){
+						return ZCFG_INVALID_PARAM_VALUE;
+					}
+				}
+				else if(index == 13 || index ==16){
+					if(!(*p == ':')){
+						return ZCFG_INVALID_PARAM_VALUE;
+					}
+				}
+				else if(index == 19){
+					if(!(*p == 'Z')){
+						return ZCFG_INVALID_PARAM_VALUE;
+					}
+				}
+				else{
+					if(!isdigit(*p)){
+						return ZCFG_INVALID_PARAM_VALUE;
+					}
+				}	
+				p++;
+			}
+			break;
+		default:
+			break;
+	}
+	
+	return ZCFG_SUCCESS;
+}
+
+zcfgSubObjNameList_t* zcfgFeTr98SubObjNameListGet(char *tr98ObjName){
+	zcfgSubObjNameList_t *head = NULL, *now = NULL, *node = NULL;
+	char tr98ClassName[128] = {0};
+	int c = 0;
+	char *subName = NULL;
+	char *ptr = NULL;
+	bool find = false;
+	bool hiddenVoIP = false;
+	objIndex_t objIid;
+	struct json_object *GuiCustoMization = NULL;
+	IID_INIT(objIid);
+	if(zcfgFeObjJsonGet(RDM_OID_GUI_CUSTOMIZATION, &objIid, &GuiCustoMization) != ZCFG_SUCCESS)
+		return NULL;
+
+	if(json_object_get_int(json_object_object_get(GuiCustoMization, "Flag1")) & HIDE_VOIP)
+		hiddenVoIP = true;		
+	
+	zcfgFeJsonObjFree(GuiCustoMization);
+
+	if(zcfgFeTr98ClassNameGet(tr98ObjName, tr98ClassName) != ZCFG_SUCCESS) {
+		return NULL;
+	}
+
+	while(tr98Obj[c].name != NULL) {
+		find = false;
+		if((strncmp(tr98Obj[c].name, tr98ClassName, strlen(tr98ClassName)) == 0) && (strlen(tr98Obj[c].name)>strlen(tr98ClassName))){
+			ptr = strchr(tr98Obj[c].name+strlen(tr98ClassName)+1, '.');
+			if( ptr == NULL ){
+				find = true;
+			}
+			else if( /*index*/ strcmp(ptr, ".i") == 0){
+				find = true;
+			}
+			if( !find){
+				c++;
+				continue;
+			}
+			
+			node = (zcfgSubObjNameList_t*)malloc(sizeof(zcfgSubObjNameList_t));
+			subName = tr98Obj[c].name + strlen(tr98ClassName) + 1;
+			if(!strcmp(subName, "Services")){
+				if(hiddenVoIP){
+					c++;
+					continue;
+				}
+			}
+
+			node->objName = (char *)malloc(strlen(subName)+1);
+			strcpy(node->objName, subName);
+			if(head == NULL) {
+				node->next = NULL;
+				head = node;
+				now = node;
+			}
+			else {
+				now->next = node;
+				now = node;
+				now->next = NULL;
+			}
+
+		}
+		c++;
+	}
+	
+	return head;
+}
+
+/*improve the performance of get object names*/
+zcfgRet_t feObjStructGet(zcfg_offset_t oid, objIndex_t *objIid, void **requestStruct, bool flag){
+	if(flag == TR98_GET_UPDATE) return zcfgFeObjStructGet(oid, objIid, requestStruct);
+	else return zcfgFeObjStructGetWithoutUpdate(oid, objIid, requestStruct);
+}
+
+zcfgRet_t feObjStructGetNext(zcfg_offset_t oid, objIndex_t *objIid, void **requestStruct, bool flag){
+	if(flag == TR98_GET_UPDATE) return zcfgFeObjStructGetNext(oid, objIid, requestStruct);
+	else return zcfgFeObjStructGetNextWithoutUpdate(oid, objIid, requestStruct);
+}
+
+zcfgRet_t feObjStructGetSubNext(zcfg_offset_t oid, objIndex_t *objIid, objIndex_t *insIid, void **requestStruct, bool flag){
+	if(flag == TR98_GET_UPDATE) return zcfgFeSubInStructGetNext(oid, objIid, insIid,requestStruct);
+	else return zcfgFeSubInStructGetNextWithoutUpdate(oid, objIid, insIid, requestStruct);
+}
+
+zcfgRet_t feObjJsonGet(zcfg_offset_t oid, objIndex_t *objIid, struct json_object **value, bool flag){
+	if(flag == TR98_GET_UPDATE) return zcfgFeObjJsonGet(oid, objIid, value);
+	else return zcfgFeObjJsonGetWithoutUpdate(oid, objIid, value);
+}
+	
+zcfgRet_t feObjJsonGetNext(zcfg_offset_t oid, objIndex_t *objIid, struct json_object **value, bool flag){
+	if(flag == TR98_GET_UPDATE) return zcfgFeObjJsonGetNext(oid, objIid, value);
+	else return zcfgFeObjJsonGetNextWithoutUpdate(oid, objIid, value);
+}
+		
+zcfgRet_t feObjJsonSubNext(zcfg_offset_t oid, objIndex_t *objIid, objIndex_t *insIid, struct json_object **value, bool flag){
+	if(flag == TR98_GET_UPDATE) return zcfgFeSubInObjJsonGetNext(oid, objIid, insIid, value);
+	else return zcfgFeSubInObjJsonGetNextWithoutUpdate(oid, objIid, insIid, value);
+}
Index: libzcfg_fe_tr98-1.0/zcfg_fe_tr98_handle.h
===================================================================
--- libzcfg_fe_tr98-1.0.orig/zcfg_fe_tr98_handle.h	2015-12-02 18:08:48.000000000 +0800
+++ libzcfg_fe_tr98-1.0/zcfg_fe_tr98_handle.h	2015-12-02 18:19:08.065698018 +0800
@@ -1,485 +1,485 @@
-/*All TR98 Full Path Name*/
-#define TR98_IGD								"InternetGatewayDevice"
-#define TR98_SERVICE                              "InternetGatewayDevice.Services"
-#define TR98_VOICE_SRV                            "InternetGatewayDevice.Services.VoiceService.i"
-#define TR98_VOICE_CAPB                           "InternetGatewayDevice.Services.VoiceService.i.Capabilities"
-#define TR98_VOICE_CAPB_SIP                       "InternetGatewayDevice.Services.VoiceService.i.Capabilities.SIP"
-#define TR98_VOICE_CAPB_MGCP                      "InternetGatewayDevice.Services.VoiceService.i.Capabilities.MGCP"
-#define TR98_VOICE_CAPB_H323                      "InternetGatewayDevice.Services.VoiceService.i.Capabilities.H323"
-#define TR98_VOICE_CAPB_CODEC                     "InternetGatewayDevice.Services.VoiceService.i.Capabilities.Codec.i"
-#define TR98_VOICE_PROF                           "InternetGatewayDevice.Services.VoiceService.i.VoiceProfile.i"
-#define TR98_VOICE_PROF_SRV_PRO_INFO              "InternetGatewayDevice.Services.VoiceService.i.VoiceProfile.i.ServiceProviderInfo"
-#define TR98_VOICE_PROF_SIP                       "InternetGatewayDevice.Services.VoiceService.i.VoiceProfile.i.SIP"
-#define TR98_VOICE_PROF_SIP_SUBSCRIBE_OBJ         "InternetGatewayDevice.Services.VoiceService.i.VoiceProfile.i.SIP.EventSubscribe.i"
-#define TR98_VOICE_PROF_SIP_RESP_MAP_OBJ          "InternetGatewayDevice.Services.VoiceService.i.VoiceProfile.i.SIP.ResponseMap.i"
-#define TR98_VOICE_PROF_RTP                       "InternetGatewayDevice.Services.VoiceService.i.VoiceProfile.i.RTP"
-#define TR98_VOICE_PROF_RTP_RTCP                  "InternetGatewayDevice.Services.VoiceService.i.VoiceProfile.i.RTP.RTCP"
-#define TR98_VOICE_PROF_RTP_SRTP                  "InternetGatewayDevice.Services.VoiceService.i.VoiceProfile.i.RTP.SRTP"
-#define TR98_VOICE_PROF_RTP_REDUNDANCY            "InternetGatewayDevice.Services.VoiceService.i.VoiceProfile.i.RTP.Redundancy"
-#define TR98_VOICE_PROF_NUM_PLAN                  "InternetGatewayDevice.Services.VoiceService.i.VoiceProfile.i.NumberingPlan"
-#define TR98_VOICE_PROF_NUM_PLAN_PREFIX_INFO      "InternetGatewayDevice.Services.VoiceService.i.VoiceProfile.i.NumberingPlan.PrefixInfo.i"
-#define TR98_VOICE_PROF_TONE                      "InternetGatewayDevice.Services.VoiceService.i.VoiceProfile.i.Tone"
-#define TR98_VOICE_PROF_TONE_EVENT                "InternetGatewayDevice.Services.VoiceService.i.VoiceProfile.i.Tone.Event.i"
-#define TR98_VOICE_PROF_TONE_DESCRIPTION          "InternetGatewayDevice.Services.VoiceService.i.VoiceProfile.i.Tone.Description.i"
-#define TR98_VOICE_PROF_TONE_PATTERN              "InternetGatewayDevice.Services.VoiceService.i.VoiceProfile.i.Tone.Pattern.i"
-#define TR98_VOICE_PROF_FAX_T38                   "InternetGatewayDevice.Services.VoiceService.i.VoiceProfile.i.FaxT38"
-#define TR98_VOICE_LINE                           "InternetGatewayDevice.Services.VoiceService.i.VoiceProfile.i.Line.i"
-#define TR98_VOICE_LINE_SIP                       "InternetGatewayDevice.Services.VoiceService.i.VoiceProfile.i.Line.i.SIP"
-#define TR98_VOICE_LINE_SIP_EVENT_SUBS            "InternetGatewayDevice.Services.VoiceService.i.VoiceProfile.i.Line.i.SIP.EventSubscribe.i"
-#define TR98_VOICE_LINE_RINGER                    "InternetGatewayDevice.Services.VoiceService.i.VoiceProfile.i.Line.i.Ringer"
-#define TR98_VOICE_LINE_RINGER_EVENT              "InternetGatewayDevice.Services.VoiceService.i.VoiceProfile.i.Line.i.Ringer.Event.i"
-#define TR98_VOICE_LINE_RINGER_DESCRIPTION        "InternetGatewayDevice.Services.VoiceService.i.VoiceProfile.i.Line.i.Ringer.Description.i"
-#define TR98_VOICE_LINE_RINGER_PATTERN            "InternetGatewayDevice.Services.VoiceService.i.VoiceProfile.i.Line.i.Ringer.Pattern.i"
-#define TR98_VOICE_LINE_CALLING_FEATURE           "InternetGatewayDevice.Services.VoiceService.i.VoiceProfile.i.Line.i.CallingFeatures"
-#define TR98_VOICE_LINE_PROCESSING                "InternetGatewayDevice.Services.VoiceService.i.VoiceProfile.i.Line.i.VoiceProcessing"
-#define TR98_VOICE_LINE_CODEC                     "InternetGatewayDevice.Services.VoiceService.i.VoiceProfile.i.Line.i.Codec"
-#define TR98_VOICE_LINE_CODEC_LIST                "InternetGatewayDevice.Services.VoiceService.i.VoiceProfile.i.Line.i.Codec.List.i"
-#define TR98_VOICE_LINE_SESSION                   "InternetGatewayDevice.Services.VoiceService.i.VoiceProfile.i.Line.i.Session.i"
-#define TR98_VOICE_LINE_STATS                     "InternetGatewayDevice.Services.VoiceService.i.VoiceProfile.i.Line.i.Stats"
-#define TR98_VOICE_PHY_INTF                       "InternetGatewayDevice.Services.VoiceService.i.PhyInterface.i"
-#define TR98_VOICE_PSTN                           "InternetGatewayDevice.Services.VoiceService.i.X_ZyXEL_COM_PSTN.i"
-#define TR98_VOICE_COMMON                         "InternetGatewayDevice.Services.VoiceService.i.X_ZyXEL_COM_Common"
-#define TR98_VOICE_PHONE_BOOK                     "InternetGatewayDevice.Services.VoiceService.i.X_ZyXEL_COM_VoicePhoneBook.i"
-#define TR98_VOICE_FXO                            "InternetGatewayDevice.Services.VoiceService.i.X_ZyXEL_COM_FXO"
-#define TR98_VOICE_FXO_PORT                       "InternetGatewayDevice.Services.VoiceService.i.X_ZyXEL_COM_FXO.Port.i"
-#define TR98_CAPB                     "InternetGatewayDevice.Capabilities"
-#define TR98_PERF_DIAG                "InternetGatewayDevice.Capabilities.PerformanceDiagnostic"
-#define TR98_DEV_INFO                 "InternetGatewayDevice.DeviceInfo"
-#define TR98_VEND_CONF_FILE           "InternetGatewayDevice.DeviceInfo.VendorConfigFile.i"
-#define TR98_DEV_CONF                 "InternetGatewayDevice.DeviceConfig"
-#define TR98_MGMT_SRV                 "InternetGatewayDevice.ManagementServer"
-#define TR98_MGAB_DEV                 "InternetGatewayDevice.ManagementServer.ManageableDevice.i"
-#define TR98_TIME                     "InternetGatewayDevice.Time"
-#define TR98_USR_INTF                 "InternetGatewayDevice.UserInterface"
-#define TR98_CAPT_PORTAL              "InternetGatewayDevice.CaptivePortal"
-#define TR98_L3_FWD                   "InternetGatewayDevice.Layer3Forwarding"
-#define TR98_FWD                      "InternetGatewayDevice.Layer3Forwarding.Forwarding.i"
-#define TR98_L2_BR                    "InternetGatewayDevice.Layer2Bridging"
-#define TR98_BR                       "InternetGatewayDevice.Layer2Bridging.Bridge.i"
-#define TR98_PORT                     "InternetGatewayDevice.Layer2Bridging.Bridge.i.Port.i"
-#define TR98_VLAN                     "InternetGatewayDevice.Layer2Bridging.Bridge.i.VLAN.i"
-#define TR98_FILTER                   "InternetGatewayDevice.Layer2Bridging.Filter.i"
-#define TR98_MARK                     "InternetGatewayDevice.Layer2Bridging.Marking.i"
-#define TR98_AVAI_INTF                "InternetGatewayDevice.Layer2Bridging.AvailableInterface.i"
-#define TR98_QUE_MGMT                 "InternetGatewayDevice.QueueManagement"
-#define TR98_CLS                      "InternetGatewayDevice.QueueManagement.Classification.i"
-#define TR98_APP                      "InternetGatewayDevice.QueueManagement.App.i"
-#define TR98_FLOW                     "InternetGatewayDevice.QueueManagement.Flow.i"
-#define TR98_POLICER                  "InternetGatewayDevice.QueueManagement.Policer.i"
-#define TR98_QUE                      "InternetGatewayDevice.QueueManagement.Queue.i"
-#define TR98_SHAPER					  "InternetGatewayDevice.QueueManagement.X_ZYXEL_Shaper.i"
-#define TR98_QUE_STAT                 "InternetGatewayDevice.QueueManagement.QueueStats.i"
-#define TR98_LAN_CONF_SEC             "InternetGatewayDevice.LANConfigSecurity"
-#define TR98_IP_PING_DIAG             "InternetGatewayDevice.IPPingDiagnostics"
-#define TR98_TRA_RT_DIAG              "InternetGatewayDevice.TraceRouteDiagnostics"
-#define TR98_RT_HOP                   "InternetGatewayDevice.TraceRouteDiagnostics.RouteHops.i"
-#define TR98_DL_DIAG                  "InternetGatewayDevice.DownloadDiagnostics"
-#define TR98_UL_DIAG                  "InternetGatewayDevice.UploadDiagnostics"
-#define TR98_UDP_ECHO_CONF            "InternetGatewayDevice.UDPEchoConfig"
-#define TR98_LAN_DEV                  "InternetGatewayDevice.LANDevice.i"
-#define TR98_LAN_HOST_CONF_MGMT       "InternetGatewayDevice.LANDevice.i.LANHostConfigManagement"
-#define TR98_IP_INTF                  "InternetGatewayDevice.LANDevice.i.LANHostConfigManagement.IPInterface.i"
-#ifdef IPV6INTERFACE_PROFILE
-#define TR98_IP_INTF_IPV6ADDR         "InternetGatewayDevice.LANDevice.i.LANHostConfigManagement.IPInterface.i.X_ZYXEL_IPv6Address.i"
-#define TR98_IP_INTF_IPV6PREFIX       "InternetGatewayDevice.LANDevice.i.LANHostConfigManagement.IPInterface.i.X_ZYXEL_IPv6Prefix.i"
-#endif
-#ifdef ROUTERADVERTISEMENT_PROFILE
-#define TR98_IP_INTF_ROUTERADVER      "InternetGatewayDevice.LANDevice.i.LANHostConfigManagement.IPInterface.i.X_ZYXEL_RouterAdvertisement"
-#endif
-#ifdef IPV6SERVER_PROFILE
-#define TR98_IP_INTF_DHCPV6SRV        "InternetGatewayDevice.LANDevice.i.LANHostConfigManagement.IPInterface.i.X_ZYXEL_DHCPv6Server"
-#endif
-#define TR98_DHCP_STATIC_ADDR         "InternetGatewayDevice.LANDevice.i.LANHostConfigManagement.DHCPStaticAddress.i"
-#define TR98_DHCP_OPT                 "InternetGatewayDevice.LANDevice.i.LANHostConfigManagement.DHCPOption.i"
-#ifdef ZyXEL_DHCP_OPTION125
-#define TR98_VENDOR_SPECIFIC          "InternetGatewayDevice.LANDevice.i.LANHostConfigManagement.X_ZYXEL_VendorSpecific"
-#define TR98_VENDOR_SPECIFIC_PROF     "InternetGatewayDevice.LANDevice.i.LANHostConfigManagement.X_ZYXEL_VendorSpecific.Profile.i"
-#endif
-#define TR98_DHCP_COND_SERVPOOL       "InternetGatewayDevice.LANDevice.i.LANHostConfigManagement.DHCPConditionalServingPool.i"
-#define TR98_SERVPOOL_DHCP_STATICADDR "InternetGatewayDevice.LANDevice.i.LANHostConfigManagement.DHCPConditionalServingPool.i.DHCPStaticAddress.i"
-#define TR98_SERVPOOL_DHCP_OPT        "InternetGatewayDevice.LANDevice.i.LANHostConfigManagement.DHCPConditionalServingPool.i.DHCPOption.i"
-#define TR98_LAN_ETH_INTF_CONF        "InternetGatewayDevice.LANDevice.i.LANEthernetInterfaceConfig.i"
-#define TR98_LAN_ETH_INTF_CONF_STAT   "InternetGatewayDevice.LANDevice.i.LANEthernetInterfaceConfig.i.Stats"
-#define TR98_LAN_USB_INTF_CONF        "InternetGatewayDevice.LANDevice.i.LANUSBInterfaceConfig.i"
-#define TR98_LAN_USB_INTF_CONF_STAT   "InternetGatewayDevice.LANDevice.i.LANUSBInterfaceConfig.i.Stats"
-#define TR98_LAN_DEV_WLAN_CFG         "InternetGatewayDevice.LANDevice.i.WLANConfiguration.i"
-#define TR98_WLAN_CFG_STAT            "InternetGatewayDevice.LANDevice.i.WLANConfiguration.i.Stats"
-#define TR98_WPS                      "InternetGatewayDevice.LANDevice.i.WLANConfiguration.i.WPS"
-#define TR98_REG                      "InternetGatewayDevice.LANDevice.i.WLANConfiguration.i.WPS.Registrar.i"
-#define TR98_ASSOC_DEV                "InternetGatewayDevice.LANDevice.i.WLANConfiguration.i.AssociatedDevice.i"
-#define TR98_WEP_KEY                  "InternetGatewayDevice.LANDevice.i.WLANConfiguration.i.WEPKey.i"
-#define TR98_PSK                      "InternetGatewayDevice.LANDevice.i.WLANConfiguration.i.PreSharedKey.i"
-#define TR98_AP_WMM_PARAM             "InternetGatewayDevice.LANDevice.i.WLANConfiguration.i.APWMMParameter.i"
-#define TR98_STA_WMM_PARAM            "InternetGatewayDevice.LANDevice.i.WLANConfiguration.i.STAWMMParameter.i"
-#define TR98_HOSTS                    "InternetGatewayDevice.LANDevice.i.Hosts"
-#define TR98_HOST                     "InternetGatewayDevice.LANDevice.i.Hosts.Host.i"
-#define TR98_LAN_INTF                 "InternetGatewayDevice.LANInterfaces"
-#define TR98_LAN_INTF_ETH_INTF_CONF   "InternetGatewayDevice.LANInterfaces.LANEthernetInterfaceConfig.i"
-#define TR98_USB_INTF_CONF            "InternetGatewayDevice.LANInterfaces.USBInterfaceConfig.i"
-#define TR98_LAN_INTF_WLAN_CFG        "InternetGatewayDevice.LANInterfaces.WLANConfiguration.i"
-#define TR98_WAN_DEV                  "InternetGatewayDevice.WANDevice.i"
-#define TR98_WAN_COMM_INTF_CONF       "InternetGatewayDevice.WANDevice.i.WANCommonInterfaceConfig"
-#define TR98_WAN_COMM_INTF_CONNECT    "InternetGatewayDevice.WANDevice.i.WANCommonInterfaceConfig.Connection.i"
-#define TR98_WAN_DSL_INTF_CONF        "InternetGatewayDevice.WANDevice.i.WANDSLInterfaceConfig"
-#define TR98_WAN_DSL_INTF_TEST_PARAM  "InternetGatewayDevice.WANDevice.i.WANDSLInterfaceConfig.TestParams"
-#define TR98_WAN_DSL_INTF_CONF_STAT   "InternetGatewayDevice.WANDevice.i.WANDSLInterfaceConfig.Stats"
-#define TR98_TTL                      "InternetGatewayDevice.WANDevice.i.WANDSLInterfaceConfig.Stats.Total"
-#define TR98_ST                       "InternetGatewayDevice.WANDevice.i.WANDSLInterfaceConfig.Stats.Showtime"
-#define TR98_LST_SHOWTIME             "InternetGatewayDevice.WANDevice.i.WANDSLInterfaceConfig.Stats.LastShowtime"
-#define TR98_CURRENT_DAY              "InternetGatewayDevice.WANDevice.i.WANDSLInterfaceConfig.Stats.CurrentDay"
-#define TR98_QTR_HR                   "InternetGatewayDevice.WANDevice.i.WANDSLInterfaceConfig.Stats.QuarterHour"
-#define TR98_WAN_ETH_INTF_CONF        "InternetGatewayDevice.WANDevice.i.WANEthernetInterfaceConfig"
-#define TR98_WAN_ETH_INTF_CONF_STAT   "InternetGatewayDevice.WANDevice.i.WANEthernetInterfaceConfig.Stats"
-#define TR98_WAN_DSL_CONN_MGMT        "InternetGatewayDevice.WANDevice.i.WANDSLConnectionManagement"
-#define TR98_WAN_DSL_CONN_SRVC        "InternetGatewayDevice.WANDevice.i.WANDSLConnectionManagement.ConnectionService.i"
-#define TR98_WAN_DSL_DIAG             "InternetGatewayDevice.WANDevice.i.WANDSLDiagnostics"
-#define TR98_WAN_CONN_DEV             "InternetGatewayDevice.WANDevice.i.WANConnectionDevice.i"
-#define TR98_WAN_DSL_LINK_CONF        "InternetGatewayDevice.WANDevice.i.WANConnectionDevice.i.WANDSLLinkConfig"
-#define TR98_WAN_ATM_F5_LO_DIAG       "InternetGatewayDevice.WANDevice.i.WANConnectionDevice.i.WANATMF5LoopbackDiagnostics"
-#define TR98_WAN_ATM_F4_LO_DIAG       "InternetGatewayDevice.WANDevice.i.WANConnectionDevice.i.X_ZYXEL_WANATMF4LoopbackDiagnostics"
-#define TR98_WAN_PTM_LINK_CONF        "InternetGatewayDevice.WANDevice.i.WANConnectionDevice.i.WANPTMLinkConfig"
-#define TR98_WAN_PTM_LINK_CONF_STAT   "InternetGatewayDevice.WANDevice.i.WANConnectionDevice.i.WANPTMLinkConfig.Stats"
-#define TR98_WAN_ETH_LINK_CONF        "InternetGatewayDevice.WANDevice.i.WANConnectionDevice.i.WANEthernetLinkConfig"
-#define TR98_WAN_POTS_LINK_CONF       "InternetGatewayDevice.WANDevice.i.WANConnectionDevice.i.WANPOTSLinkConfig"
-#define TR98_WAN_IP_CONN              "InternetGatewayDevice.WANDevice.i.WANConnectionDevice.i.WANIPConnection.i"
-#define TR98_DHCP_CLIENT              "InternetGatewayDevice.WANDevice.i.WANConnectionDevice.i.WANIPConnection.i.DHCPClient"
-#define TR98_SENT_DHCP_OPT            "InternetGatewayDevice.WANDevice.i.WANConnectionDevice.i.WANIPConnection.i.DHCPClient.SentDHCPOption.i"
-#define TR98_REQ_DHCP_OPT             "InternetGatewayDevice.WANDevice.i.WANConnectionDevice.i.WANIPConnection.i.DHCPClient.ReqDHCPOption.i"
-#define TR98_WAN_IP_PORT_MAP          "InternetGatewayDevice.WANDevice.i.WANConnectionDevice.i.WANIPConnection.i.PortMapping.i"
-#define TR98_WAN_IP_PORT_TRIGGER      "InternetGatewayDevice.WANDevice.i.WANConnectionDevice.i.WANIPConnection.i.X_ZYXEL_PortTriggering.i"
-#define TR98_WAN_IP_ADDR_MAPPING      "InternetGatewayDevice.WANDevice.i.WANConnectionDevice.i.WANIPConnection.i.X_ZYXEL_AddrMapping.i"
-#define TR98_WAN_IP_CONN_STAT         "InternetGatewayDevice.WANDevice.i.WANConnectionDevice.i.WANIPConnection.i.Stats"
-#define TR98_WAN_IP_CONN_MLD		  "InternetGatewayDevice.WANDevice.i.WANConnectionDevice.i.WANIPConnection.i.X_ZYXEL_MLD"
-#ifdef IPV6INTERFACE_PROFILE
-#define TR98_WAN_IP_CONN_IPV6ADDR     "InternetGatewayDevice.WANDevice.i.WANConnectionDevice.i.WANIPConnection.i.X_ZYXEL_IPv6Address.i"
-#define TR98_WAN_IP_CONN_IPV6PREFIX	  "InternetGatewayDevice.WANDevice.i.WANConnectionDevice.i.WANIPConnection.i.X_ZYXEL_IPv6Prefix.i"
-#endif
-#ifdef DHCPV6CLIENT_PROFILE
-#define TR98_WAN_IP_CONN_DHCPV6CLIENT "InternetGatewayDevice.WANDevice.i.WANConnectionDevice.i.WANIPConnection.i.X_ZYXEL_DHCPv6Client"
-#endif
-#ifdef IPV6RD_PROFILE
-#define TR98_WAN_IP_CONN_IPV6RD	      "InternetGatewayDevice.WANDevice.i.WANConnectionDevice.i.WANIPConnection.i.X_ZYXEL_IPv6rd"
-#endif
-#define TR98_WAN_PPP_CONN             "InternetGatewayDevice.WANDevice.i.WANConnectionDevice.i.WANPPPConnection.i"
-#define TR98_WAN_PPP_PORT_MAP         "InternetGatewayDevice.WANDevice.i.WANConnectionDevice.i.WANPPPConnection.i.PortMapping.i"
-#define TR98_WAN_PPP_PORT_TRIGGER     "InternetGatewayDevice.WANDevice.i.WANConnectionDevice.i.WANPPPConnection.i.X_ZYXEL_PortTriggering.i"
-#define TR98_WAN_PPP_ADDR_MAPPING     "InternetGatewayDevice.WANDevice.i.WANConnectionDevice.i.WANPPPConnection.i.X_ZYXEL_AddrMapping.i"
-#define TR98_WAN_PPP_CONN_STAT        "InternetGatewayDevice.WANDevice.i.WANConnectionDevice.i.WANPPPConnection.i.Stats"
-#define TR98_WAN_PPP_CONN_MLD		  "InternetGatewayDevice.WANDevice.i.WANConnectionDevice.i.WANPPPConnection.i.X_ZYXEL_MLD"
-#ifdef IPV6INTERFACE_PROFILE
-#define TR98_WAN_PPP_CONN_IPV6ADDR     "InternetGatewayDevice.WANDevice.i.WANConnectionDevice.i.WANPPPConnection.i.X_ZYXEL_IPv6Address.i"
-#define TR98_WAN_PPP_CONN_IPV6PREFIX   "InternetGatewayDevice.WANDevice.i.WANConnectionDevice.i.WANPPPConnection.i.X_ZYXEL_IPv6Prefix.i"
-#endif
-#ifdef DHCPV6CLIENT_PROFILE
-#define TR98_WAN_PPP_CONN_DHCPV6CLIENT "InternetGatewayDevice.WANDevice.i.WANConnectionDevice.i.WANPPPConnection.i.X_ZYXEL_DHCPv6Client"
-#endif
-#ifdef IPV6RD_PROFILE
-#define TR98_WAN_PPP_CONN_IPV6RD       "InternetGatewayDevice.WANDevice.i.WANConnectionDevice.i.WANPPPConnection.i.X_ZYXEL_IPv6rd"
-#endif
-#ifdef CONFIG_XPON_SUPPORT
-#define TR98_WAN_PON_INTF_CONF        "InternetGatewayDevice.WANDevice.i.X_ZYZEL_WANPonInterfaceConfig"
-#define TR98_WAN_PON_INTF_CONF_STAT   "InternetGatewayDevice.WANDevice.i.X_ZYZEL_WANPonInterfaceConfig.Stats"
-#endif
-#define TR98_ZYXEL_EXT                "InternetGatewayDevice.X_ZYXEL_EXT"
-#define TR98_DNS_RT_ENTRY             "InternetGatewayDevice.X_ZYXEL_EXT.DNSRouteEntry.i"
-#define TR98_DNS_ENTRY     		      "InternetGatewayDevice.X_ZYXEL_EXT.DNSEntry.i"
-#define TR98_D_DNS                    "InternetGatewayDevice.X_ZYXEL_EXT.DynamicDNS"
-#define TR98_TR064	                  "InternetGatewayDevice.X_ZYXEL_EXT.TR064"
-#define TR98_VLAN_GROUP	              "InternetGatewayDevice.X_ZYXEL_EXT.VlanGroup.i"
-#define TR98_EMAIL_NOTIFY             "InternetGatewayDevice.X_ZYXEL_EXT.EmailNotification"
-#define TR98_EMAIL_SERVICE            "InternetGatewayDevice.X_ZYXEL_EXT.EmailNotification.EmailService.i"
-#define TR98_EMAIL_EVENT_CFG          "InternetGatewayDevice.X_ZYXEL_EXT.EmailNotification.EmailEventConfig.i"
-#define TR98_SYS_INFO                 "InternetGatewayDevice.X_ZYXEL_EXT.System_Info"
-#define TR98_SNMP	                  "InternetGatewayDevice.X_ZYXEL_EXT.SNMP"
-#define TR98_SNMP_TRAP                "InternetGatewayDevice.X_ZYXEL_EXT.SNMP.TrapAddr.i"
-#define TR98_REMO_MGMT                "InternetGatewayDevice.X_ZYXEL_EXT.RemoteManagement"
-#define TR98_REMO_SRV                 "InternetGatewayDevice.X_ZYXEL_EXT.RemoteManagement.Service.i"
-#define TR98_IEEE8021AG               "InternetGatewayDevice.X_ZYXEL_EXT.IEEE8021ag"
-#define TR98_SAMBA		              "InternetGatewayDevice.X_ZYXEL_EXT.SAMBA"
-#ifdef SOL_TR69_TRUSTDOMAIN
-#define TR98_REMO_TRUSTDOMAIN		"InternetGatewayDevice.X_ZYXEL_EXT.RemoteManagement.TrustDomain.i"
-#endif
-#define TR98_IGMP                     "InternetGatewayDevice.X_ZYXEL_EXT.IGMP"
-#define TR98_LOG_SETTING              "InternetGatewayDevice.X_ZYXEL_EXT.Log_Setting"
-#define TR98_LOG_CLASSIFY             "InternetGatewayDevice.X_ZYXEL_EXT.Log_Setting.LogClassify.i"
-#define TR98_LOG_CATEGORY		      "InternetGatewayDevice.X_ZYXEL_EXT.Log_Setting.LogClassify.i.Category.i"
-
-#if defined(SUNRISE_RANDOM_PASSWORD) || defined(SOL_TR69_LOGINACCOUNT)
-#define TR98_LOG_CFG           		  "InternetGatewayDevice.X_ZYXEL_EXT.LoginCfg"
-#define TR98_LOG_CFG_GP           	  "InternetGatewayDevice.X_ZYXEL_EXT.LoginCfg.LogGp.i"
-#define TR98_LOG_CFG_GP_ACCOUNT       "InternetGatewayDevice.X_ZYXEL_EXT.LoginCfg.LogGp.i.Account.i"
-#endif
-
-#define TR98_FIREWALL                 "InternetGatewayDevice.Firewall"
-#define TR98_FIREWALL_LEVEL           "InternetGatewayDevice.Firewall.Level.i"
-#define TR98_FIREWALL_CHAIN           "InternetGatewayDevice.Firewall.Chain.i"
-#define TR98_FIREWALL_CHAIN_RULE      "InternetGatewayDevice.Firewall.Chain.i.Rule.i"
-#define TR98_SCHEDULE                 "InternetGatewayDevice.X_ZYXEL_EXT.Schedule.i"
-
-#define TR98_MACFILTER		  		  "InternetGatewayDevice.X_ZYXEL_EXT.MacFilter"
-#define TR98_MACFILTER_WHITELIST	  "InternetGatewayDevice.X_ZYXEL_EXT.MacFilter.WhiteList.i"
-#define TR98_PAREN_CTL                "InternetGatewayDevice.X_ZYXEL_EXT.ParentalControl"
-#define TR98_PAREN_CTL_PROF           "InternetGatewayDevice.X_ZYXEL_EXT.ParentalControl.Profile.i"
-#define TR98_SEC		              "InternetGatewayDevice.X_ZYXEL_EXT.Security"
-#define TR98_SEC_CERT		          "InternetGatewayDevice.X_ZYXEL_EXT.Security.Certificate.i"
-
-#ifdef ONECONNECT
-#define TR98_ONECONNECT_EXT            	   "InternetGatewayDevice.LANDevice.i.Hosts.Host.i.X_ZYXEL_EXT"
-#define TR98_ONECONNECT_SPEEDTESTINFO          "InternetGatewayDevice.X_ZYXEL_EXT.SpeedTestInfo"
-#endif
-#ifdef ZyXEL_IPP_PRINTSERVER
-#define TR98_PRINT_SERVER           "InternetGatewayDevice.X_ZYXEL_EXT.PrintServer"
-#endif
-#define OBSOLETED 1
-//#define ZYXEL_EXT 1
-
-#define ATTR_INDEX_CREA ATTR_INDEXNODE|OBJECT_ATTR_CREATE
-
-/* TR98 Full Path Name          Attribute	    Parameter List          Get func                 Set func                Add func          Del func         Notify func	Get Attr func		Set Attr func*/
-tr98Object_t tr98Obj[] = {
-{TR98_IGD,                      0,              para_Root,              rootObjGet,              NULL,                   NULL,             NULL,            NULL},
-#ifdef CONFIG_PACKAGE_ZyIMS
-{TR98_SERVICE,					0,				para_Service,			NULL,					 NULL,					 NULL,			   NULL,			NULL},
-{TR98_VOICE_SRV,				ATTR_INDEXNODE,	para_VoiceSrv,			voiceSrvObjGet,			 NULL,					 NULL,			   NULL, voiceNotify, voiceSrvAttrGet, voiceSrvAttrSet},
-{TR98_VOICE_CAPB,				0,				para_VoiceCapb,			voiceCapbObjGet,			 NULL,					 NULL,			   NULL, voiceNotify, voiceCapbAttrGet, voiceCapbAttrSet},
-{TR98_VOICE_CAPB_SIP,			0,				para_VoiceCapbSip,		voiceCapbSipObjGet,		 NULL,					 NULL,			   NULL, voiceNotify, voiceCapbSipAttrGet, voiceCapbSipAttrSet},
-//{TR98_VOICE_CAPB_MGCP                     },
-//{TR98_VOICE_CAPB_H323     },
-{TR98_VOICE_CAPB_CODEC,			ATTR_INDEXNODE,	para_VoiceCapbCodec,	voiceCapbCodecObjGet,		 NULL,					 NULL,			   NULL, voiceNotify, voiceCapbCodecAttrGet, voiceCapbCodecAttrSet},
-{TR98_VOICE_PROF,				ATTR_INDEX_CREA,para_VoiceProf,			voiceProfObjGet,			 voiceProfSet,			 voiceProfAdd,	   voiceProfDel, voiceNotify, voiceProfAttrGet, voiceProfAttrSet},
-//{TR98_VOICE_PROF_SRV_PRO_INFO         },
-{TR98_VOICE_PROF_SIP,			0,				para_VoiceProfSip,		voiceProfSipObjGet,		 voiceProfSipSet,		 NULL,			   NULL, voiceNotify, voiceProfSipAttrGet, voiceProfSipAttrSet},
-//{TR98_VOICE_PROF_SIP_SUBSCRIBE_OBJ      },
-//{TR98_VOICE_PROF_SIP_RESP_MAP_OBJ       },
-//{TR98_VOICE_PROF_RTP                    },
-//{TR98_VOICE_PROF_RTP_RTCP               },
-//{TR98_VOICE_PROF_RTP_SRTP               },
-//{TR98_VOICE_PROF_RTP_REDUNDANCY         },
-{TR98_VOICE_PROF_NUM_PLAN, 0 ,	para_VoiceProfNumPlan, voiceProfNumPlanObjGet, voiceProfNumPlanObjSet,	NULL,	NULL, voiceNotify, voiceProfNumPlanAttrGet, voiceProfNumPlanAttrSet},
-//{TR98_VOICE_PROF_NUM_PLAN_PREFIX_INFO   },
-//{TR98_VOICE_PROF_TONE                   },
-//{TR98_VOICE_PROF_TONE_EVENT             },
-//{TR98_VOICE_PROF_TONE_DESCRIPTION       },
-//{TR98_VOICE_PROF_TONE_PATTERN           },
-//{TR98_VOICE_PROF_FAX_T38                },
-{TR98_VOICE_LINE,				ATTR_INDEX_CREA,para_VoiceLine,			voiceLineObjGet,			 voiceLineSet,			 voiceLineAdd,	   voiceLineDel,	voiceNotify, voiceLineAttrGet, voiceLineAttrSet},
-{TR98_VOICE_LINE_SIP,			0,				para_VoiceLineSip,		voiceLineSipObjGet,		 voiceLineSipSet,		 NULL,			   NULL,	voiceNotify, voiceLineSipAttrGet, voiceLineSipAttrSet},
-//{TR98_VOICE_LINE_SIP_EVENT_SUBS         },
-//{TR98_VOICE_LINE_RINGER                 },
-//{TR98_VOICE_LINE_RINGER_EVENT           },
-//{TR98_VOICE_LINE_RINGER_DESCRIPTION     },
-//{TR98_VOICE_LINE_RINGER_PATTERN         },
-{TR98_VOICE_LINE_CALLING_FEATURE,			0 ,  para_VoiceLineCallingFeature , voiceLineCallingFeatureObjGet  , voiceLineCallingFeatureObjSet , NULL ,NULL , voiceNotify, voiceLineCallingFeatureAttrGet ,voiceLineCallingFeatureAttrSet },
-{TR98_VOICE_LINE_PROCESSING,	0,				para_VoiceLineProcessing, voiceLineProcObjGet,		 voiceLineProcSet,		 NULL,			   NULL,	voiceNotify, voiceLineProcAttrGet, voiceLineProcAttrSet},
-{TR98_VOICE_LINE_CODEC,			0, 				para_VoiceLineCodec, 	voiceLineCodecObjGet,       NULL,					 NULL,			   NULL,	voiceNotify, voiceLineCodecAttrGet, voiceLineCodecAttrSet},
-{TR98_VOICE_LINE_CODEC_LIST,	ATTR_INDEXNODE,	para_VoiceLineCodecList, voiceLineCodecListObjGet,	 voiceLineCodecListObjSet,					 NULL,			   NULL,	voiceNotify, voiceLineCodecListAttrGet, voiceLineCodecListAttrSet},
-//{TR98_VOICE_LINE_SESSION                },
-{TR98_VOICE_LINE_STATS,			0,              para_VoiceLineStats,    voiceLineStatsObjGet,       NULL,                   NULL,       NULL,	voiceNotify,voiceLineStatsAttrGet,voiceLineStatsAttrSet},
-{TR98_VOICE_PHY_INTF,			ATTR_INDEXNODE,	para_VoicePhyIntf,		voicePhyIntfObjGet,		 voicePhyIntfSet,		 NULL,			   NULL,	voiceNotify, voicePhyIntfAttrGet, voicePhyIntfAttrSet},
-//{TR98_VOICE_PSTN                        },
-{TR98_VOICE_COMMON,				0,				para_VoiceCommon, 		voiceCommonObjGet,			 voiceCommonSet, 	NULL, 		NULL, 	NULL},
-//{TR98_VOICE_PHONE_BOOK                  },
-//{TR98_VOICE_FXO                         },
-//{TR98_VOICE_FXO_PORT                    },
-#endif
-{TR98_CAPB,                     0,              NULL,                   NULL,                    NULL,                   NULL,             NULL,            NULL},
-{TR98_PERF_DIAG,                0,              para_PerpDiag,          perfDiagObjGet,          NULL,                   NULL,             NULL,            NULL},
-{TR98_DEV_INFO,                 0,              para_DevInfo,           devInfoObjGet,           devInfoObjSet,          NULL,             NULL,            devInfoObjNotify, devInfoObjAttrGet, devInfoObjAttrSet},
-//{TR98_VEND_CONF_FILE,           ATTR_INDEXNODE, NULL,                   NULL,                    NULL,                   NULL,             NULL,            NULL},
-//{TR98_DEV_CONF,                 0,              NULL,                   NULL,                    NULL,                   NULL,             NULL,            NULL},
-{TR98_MGMT_SRV,                 0,              para_MgmtSrv,           mgmtSrvObjGet,           mgmtSrvObjSet,          NULL,             NULL,            mgmtSrvObjNotify, mgmtSrvObjAttrGet, mgmtSrvObjAttrSet},
-{TR98_MGAB_DEV,                 ATTR_INDEXNODE, para_MgabDev,           mgabDevObjGet,           NULL,                   NULL,             NULL,            NULL},
-{TR98_TIME,                     0,              para_Time,              timeObjGet,              timeObjSet,             NULL,             NULL,            NULL},
-//{TR98_USR_INTF,                 0,              NULL,                   NULL,                    NULL,                   NULL,             NULL,            NULL},
-//{TR98_CAPT_PORTAL,              0,              NULL,                   NULL,                    NULL,                   NULL,             NULL,            NULL},
-{TR98_L3_FWD,                   0,              para_L3Fwd,             l3fwdObjGet,             l3fwdObjSet,                   NULL,             NULL,            NULL, NULL, NULL},
-{TR98_FWD,                      ATTR_INDEX_CREA,para_Fwd,               l3fwdFwdTbObjGet,        l3fwdFwdTbObjSet,       l3fwdFwdTbObjAdd, l3fwdFwdTbObjDel,  NULL, NULL, l3fwdFwdTbObjAttrSet},
-{TR98_L2_BR,                    0,               para_L2Br,              l2BridingObjGet,         NULL,                   NULL,             NULL,            l2BridingObjNotify, l2BridingObjAttrGet, l2BridingObjAttrSet},
-{TR98_BR,                       ATTR_INDEX_CREA, para_Br,                l2BrObjGet,              l2BrObjSet,             l2BrObjAdd,       l2BrObjDel,      l2BrObjNotify, l2BrObjAttrGet, l2BrObjAttrSet},
-{TR98_PORT,                     ATTR_INDEX_CREA, para_Port,              l2BrPortObjGet,           l2BrPortObjSet,         l2BrPortObjAdd,   l2BrPortObjDel,   NULL,         NULL,           NULL},
-{TR98_VLAN,                     ATTR_INDEX_CREA,  para_Vlan,              l2BrVlanObjGet,          l2BrVlanObjSet,        l2BrVlanObjAdd,   l2BrVlanObjDel,  l2BrVlanObjNotify, l2BrVlanObjAttrGet, l2BrVlanObjAttrSet},
-{TR98_FILTER,                   ATTR_INDEX_CREA, para_Filter,            l2BrFilterObjGet,        l2BrFilterObjSet,       l2BrFilterObjAdd, l2BrFilterObjDel,l2BrFilterObjNotify, l2BrFilterObjAttrGet, l2BrFilterObjAttrSet},
-{TR98_MARK,                     ATTR_INDEX_CREA, para_Mark,              NULL,                    NULL,                   NULL,             NULL,            NULL},
-{TR98_AVAI_INTF,                ATTR_INDEXNODE,  para_AvaiIntf,          l2BrAvailableIntfObjGet, NULL,                   NULL,             NULL,            l2BrAvailableIntfObjNotify, l2BrAvailableIntfObjAttrGet, l2BrAvailableIntfObjAttrSet},
-{TR98_QUE_MGMT,                 0,               para_qMgmt,          	qMgmtObjGet,     		   qMgmtSet,               NULL,             NULL,            qMgmtNotify, qMgmtAttrGet, qMgmtAttrSet},
-{TR98_CLS,                      ATTR_INDEX_CREA, para_Cls,          	qMgmtClsObjGet,			   qMgmtClsSet,            qMgmtClsAdd,      qMgmtClsDel,     qMgmtClsNotify, qMgmtClsAttrGet, qMgmtClsAttrSet},
-//{TR98_APP,                      ATTR_INDEX_CREA, NULL,                   NULL,                    NULL,                   NULL,             NULL,            NULL},
-//{TR98_FLOW,                     ATTR_INDEX_CREA, NULL,                   NULL,                    NULL,                   NULL,             NULL,            NULL},
-{TR98_POLICER,                  ATTR_INDEX_CREA, NULL,                   NULL,                    NULL,                   NULL,             NULL,            NULL},
-{TR98_QUE,                      ATTR_INDEX_CREA, para_Que,              qMgmtQueObjGet,			   qMgmtQueSet,            qMgmtQueAdd,      qMgmtQueDel,     qMgmtQueNotify, qMgmtQueAttrGet, qMgmtQueAttrSet},
-{TR98_SHAPER,                   ATTR_INDEX_CREA, para_Shaper,			qMgmtShaperObjGet,	   	   qMgmtShaperSet,         qMgmtShaperAdd,   qMgmtShaperDel,  qMgmtShaperNotify, qMgmtShaperAttrGet, qMgmtShaperAttrSet},
-//{TR98_QUE_STAT,                 ATTR_INDEXNODE, NULL,                   NULL,                    NULL,                   NULL,             NULL,            NULL},
-{TR98_LAN_CONF_SEC,             0,               para_LanConfSec,        lanConfSecObjGet,        lanConfSecObjSet,       NULL,             NULL,            lanConfSecObjNotify, lanConfSecObjAttrGet, lanConfSecObjAttrSet},
-{TR98_IP_PING_DIAG,             0,              para_IpPingDiag,        ipPingDiagObjGet,        ipPingDiagObjSet,       NULL,             NULL,            NULL},
-{TR98_TRA_RT_DIAG,              0,              para_TraceRtDiag,       traceRtDiagObjGet,       traceRtDiagObjSet,      NULL,             NULL,            NULL},
-{TR98_RT_HOP,                   ATTR_INDEXNODE, para_RtHop,		        routeHopsObjGet,         NULL,                   NULL,             NULL,            NULL},
-{TR98_DL_DIAG,                  0,              para_DlDiag,			dlDiagObjGet,            dlDiagObjSet,           NULL,             NULL,            NULL},
-{TR98_UL_DIAG,                  0,              para_UlDiag,			ulDiagObjGet,            ulDiagObjSet,           NULL,             NULL,            NULL},
-{TR98_UDP_ECHO_CONF,            0,              para_UdpEchoCfg,        udpEchoCfgObjGet,        udpEchoCfgObjSet,       NULL,             NULL,            NULL},
-{TR98_LAN_DEV,                  ATTR_INDEX_CREA,para_LanDev,            lanDevObjGet,            NULL,                   lanDevObjAdd,     lanDevObjDel,    NULL},
-{TR98_LAN_HOST_CONF_MGMT,       0,              para_LanHostConfMgmt,   lanHostConfMgmtObjGet,   lanHostConfMgmtObjSet,  NULL,             NULL,            NULL},
-{TR98_IP_INTF,                  ATTR_INDEX_CREA,para_IpIntf,		    lanIpIntfObjGet,         lanIpIntfObjSet,        lanIpIntfObjAdd,  lanIpIntfObjDel,	NULL},
-#ifdef IPV6INTERFACE_PROFILE
-{TR98_IP_INTF_IPV6ADDR,         ATTR_INDEX_CREA,para_IpIntfV6Addr,		lanIpIntfV6AddrObjGet,   lanIpIntfV6AddrObjSet,  lanIpIntfV6AddrObjAdd,  lanIpIntfV6AddrObjDel,	NULL},
-{TR98_IP_INTF_IPV6PREFIX,		ATTR_INDEX_CREA,para_IpIntfV6Prefix,	lanIpIntfV6PrefixObjGet, lanIpIntfV6PrefixObjSet,lanIpIntfV6PrefixObjAdd,lanIpIntfV6PrefixObjDel, NULL},
-#endif
-#ifdef ROUTERADVERTISEMENT_PROFILE
-{TR98_IP_INTF_ROUTERADVER,      0,				para_IpIntfRouterAdver, lanIpIntfRouterAdverObjGet, lanIpIntfRouterAdverObjSet,        NULL,  NULL,	NULL},
-#endif
-#ifdef IPV6SERVER_PROFILE
-{TR98_IP_INTF_DHCPV6SRV,        0,				para_IpIntfV6Srv,		lanIpIntfV6SrvObjGet,    lanIpIntfV6SrvObjSet,        NULL,  NULL,	NULL},
-#endif
-{TR98_DHCP_STATIC_ADDR,         ATTR_INDEX_CREA,para_DhcpStaticAddr,    lanDhcpStaticAddrObjGet, lanDhcpStaticAddrObjSet,lanDhcpStaticAddrObjAdd,lanDhcpStaticAddrObjDel, lanDhcpStaticAddrObjNotify, lanDhcpStaticAddrObjAttrGet, lanDhcpStaticAddrObjAttrSet},
-{TR98_DHCP_OPT,                 ATTR_INDEX_CREA,para_DhcpOpt,           lanDhcpOptObjGet,        lanDhcpOptObjSet,       lanDhcpOptObjAdd, lanDhcpOptObjDel,lanDhcpOptObjNotify, lanDhcpOptObjAttrGet, lanDhcpOptObjAttrSet},
-#ifdef ZyXEL_DHCP_OPTION125
-{TR98_VENDOR_SPECIFIC,                 0,              para_VendorSpecific,          zyExtVendorSpecObjGet,          zyExtVendorSpecObjSet,         NULL,             NULL,            NULL, NULL, NULL},
-{TR98_VENDOR_SPECIFIC_PROF,           ATTR_INDEX_CREA, para_VendorSpecificProf,     zyExtVendorSpecProfObjGet,     zyExtVendorSpecProfObjSet,    zyExtVendorSpecProfObjAdd,zyExtVendorSpecProfObjDel,NULL, NULL, NULL},
-#endif
-{TR98_DHCP_COND_SERVPOOL,       ATTR_INDEX_CREA,para_DhcpCondServPool,  lanDhcpCondServPoolObjGet,  lanDhcpCondServPoolObjSet,  lanDhcpCondServPoolObjAdd,  lanDhcpCondServPoolObjDel, lanDhcpCondServPoolObjNotify, lanDhcpCondServPoolObjAttrGet, lanDhcpCondServPoolObjAttrSet},
-{TR98_SERVPOOL_DHCP_STATICADDR, ATTR_INDEX_CREA,para_DhcpCondServPoolDhcpStaticAddr,NULL, NULL, NULL, NULL, NULL, NULL, NULL},
-{TR98_SERVPOOL_DHCP_OPT,        ATTR_INDEX_CREA,para_DhcpCondServPoolDhcpOpt,NULL,  NULL,  NULL,  NULL, NULL, NULL, NULL},
-{TR98_LAN_ETH_INTF_CONF,        ATTR_INDEXNODE, para_LanEthIntfConf,    lanEthIntfConfObjGet,    lanEthIntfConfObjSet,   NULL,             NULL,            lanEthIntfConfObjNotify, lanEthIntfConfObjAttrGet, lanEthIntfConfObjAttrSet},
-{TR98_LAN_ETH_INTF_CONF_STAT,   0,              para_LanEthIntfConfStat,lanEthIntfConfStatObjGet,NULL,                   NULL,             NULL,            NULL},
-//{TR98_LAN_USB_INTF_CONF,        ATTR_INDEXNODE, NULL,                   NULL,                    NULL,                   NULL,             NULL,            NULL},
-//{TR98_LAN_USB_INTF_CONF_STAT,   0,              NULL,                   NULL,                    NULL,                   NULL,             NULL,            NULL},
-{TR98_LAN_DEV_WLAN_CFG,         ATTR_INDEXNODE,	para_LanDevWlanCfg,     lanDevWlanCfgObjGet,     lanDevWlanCfgObjSet, NULL, NULL, lanDevWlanCfgObjNotify, lanDevWlanCfgObjAttrGet, lanDevWlanCfgObjAttrSet},
-{TR98_WLAN_CFG_STAT,            0,              para_LanDevWlanCfgStat, lanDevWlanCfgStatObjGet,        NULL,                   NULL,             NULL,            NULL},
-{TR98_WPS,                      0,              para_LanDevWlanCfgWps,  lanDevWlanCfgWpsObjGet,  lanDevWlanCfgWpsObjSet, NULL,             NULL,            NULL},
-//{TR98_REG,                      ATTR_INDEXNODE, NULL,                   NULL,                    NULL,                   NULL,             NULL,            NULL},
-{TR98_ASSOC_DEV,                ATTR_INDEXNODE, para_LanDevWlanCfgAssocDev,          lanDevWlanCfgAssocDevObjGet,                    NULL,                   NULL,             NULL,            NULL},
-{TR98_WEP_KEY,                  ATTR_INDEXNODE, para_WepKey,            lanDevWlanCfgWEPKeyObjGet,lanDevWlanCfgWEPKeyObjSet,                   NULL,             NULL,            NULL},
-{TR98_PSK,                      ATTR_INDEXNODE, para_Psk,               lanDevWlanCfgPskObjGet,  lanDevWlanCfgPskObjSet, NULL,             NULL,            NULL},
-//{TR98_AP_WMM_PARAM,             ATTR_INDEXNODE, NULL,                   NULL,                    NULL,                   NULL,             NULL,            NULL},
-//{TR98_STA_WMM_PARAM,            ATTR_INDEXNODE, NULL,                   NULL,                    NULL,                   NULL,             NULL,            NULL},
-{TR98_HOSTS,                    ATTR_INDEXNODE, para_Hosts,				lanDevHostsObjGet,			NULL,                   NULL,             NULL,            lanDevHostsObjNotify, lanDevHostsObjAttrGet, lanDevHostsObjAttrSet},
-{TR98_HOST,                     ATTR_INDEXNODE, para_Host,				lanDevHostObjGet,			NULL,                   NULL,             NULL,            lanDevHostObjNotify, lanDevHostObjAttrGet, lanDevHostObjAttrSet},
-//{TR98_LAN_INTF,                 0,              NULL,                   NULL,                    NULL,                   NULL,             NULL,            NULL},
-//{TR98_LAN_INTF_ETH_INTF_CONF,   ATTR_INDEXNODE, NULL,                   NULL,                    NULL,                   NULL,             NULL,            NULL},
-//{TR98_USB_INTF_CONF,            ATTR_INDEXNODE, NULL,                   NULL,                    NULL,                   NULL,             NULL,            NULL},
-//{TR98_LAN_INTF_WLAN_CFG,        ATTR_INDEXNODE, NULL,                   NULL,                    NULL,                   NULL,             NULL,            NULL},
-#ifdef SOL_TR69_3G_Backup
-{TR98_WAN_DEV,                  ATTR_INDEXNODE,	para_WanDev,            WANDeviceObjGet,         WANDeviceObjSet,                   NULL,             NULL,            NULL},
-#else
-{TR98_WAN_DEV,                  ATTR_INDEXNODE, para_WanDev,            WANDeviceObjGet,         NULL,                   NULL,             NULL,            NULL},
-#endif
-{TR98_WAN_COMM_INTF_CONF,       0,              para_WANCommIfaceCfg,   WANCommIfaceCfgObjGet,   NULL,                   NULL,             NULL,            NULL},
-//{TR98_WAN_COMM_INTF_CONNECT,    ATTR_INDEXNODE, NULL,                   NULL,                    NULL,                   NULL,             NULL,            NULL},
-{TR98_WAN_DSL_INTF_CONF,        0,              para_WANDslIfaceCfg,    WANDslIfaceCfgObjGet,    WANDslIfaceCfgObjSet,   NULL,             NULL,            NULL},
-{TR98_WAN_DSL_INTF_TEST_PARAM,  0,              para_WANDslIfTestParam, WANDslIfTestParamObjGet,    NULL,                   NULL,             NULL,            NULL},
-{TR98_WAN_DSL_INTF_CONF_STAT,   0,              NULL,                   NULL,                    NULL,                   NULL,             NULL,            NULL},
-{TR98_TTL,                      0,              para_WANDslIfaceCfgStatTotal,  WANDslIfaceCfgTtlObjGet,                    NULL,                   NULL,             NULL,            NULL},
-{TR98_ST,                       0,              para_WANDslIfaceCfgStatSt,     WANDslIfaceCfgStObjGet,                    NULL,                   NULL,             NULL,            NULL},
-//{TR98_LST_SHOWTIME,             0,              NULL,                   NULL,                    NULL,                   NULL,             NULL,            NULL},
-{TR98_CURRENT_DAY,              0,              para_WANDslIfaceCfgStatObjs,   WANDslIfaceCfgStatsSubObjGet,                    NULL,                   NULL,             NULL,            NULL, NULL, NULL},
-//{TR98_QTR_HR,                   0,              NULL,                   NULL,                    NULL,                   NULL,             NULL,            NULL},
-{TR98_WAN_ETH_INTF_CONF,        0,              para_WANEthIntfConf,    WANEthIfaceCfgObjGet,	 WANEthIfaceCfgObjSet,   NULL,             NULL,            NULL},
-{TR98_WAN_ETH_INTF_CONF_STAT,   0,              para_WANEthIntfConfStat,WANEthIfaceCfgStObjGet,  NULL,                   NULL,             NULL,            NULL},
-{TR98_WAN_DSL_DIAG,             0,              para_WANDslDiag,        WANDslDiagObjGet,        WANDslDiagObjSet,       NULL,             NULL,            NULL},
-{TR98_WAN_CONN_DEV,             ATTR_INDEX_CREA,para_WANConnDev,        WANConnDevObjGet,        NULL,                   WANConnDevObjAdd, WANConnDevObjDel,NULL},
-{TR98_WAN_DSL_LINK_CONF,        0,              para_WANDslLinkConf,    WANDslLinkConfObjGet,    WANDslLinkConfObjSet,   NULL,             NULL,            NULL},
-{TR98_WAN_ATM_F5_LO_DIAG,       0,              para_WanAtmF5LoDiag,    WANAtmF5LoConfObjGet,    WANAtmF5LoConfObjSet,   NULL,             NULL,            NULL},
-{TR98_WAN_ATM_F4_LO_DIAG,		0,				para_WanAtmF4LoDiag,	WANAtmF4LoConfObjGet,	 WANAtmF4LoConfObjSet,	 NULL,			   NULL,			NULL},
-{TR98_WAN_PTM_LINK_CONF,        0,              para_WANPtmLinkConf,    WANPtmLinkConfObjGet,    WANPtmLinkConfObjSet,   NULL,             NULL,            NULL},
-{TR98_WAN_PTM_LINK_CONF_STAT,   0,              para_WANPtmLinkConfStat,WANPtmLinkConfStObjGet,  NULL,                   NULL,             NULL,            NULL},
-{TR98_WAN_ETH_LINK_CONF,        0,              para_WANEthLinkConf,    WANEthLinkConfObjGet,    NULL,                   NULL,             NULL,            NULL},
-//{TR98_WAN_POTS_LINK_CONF,       0,              NULL,                   NULL,                    NULL,                   NULL,             NULL,            NULL},
-{TR98_WAN_IP_CONN,              ATTR_INDEX_CREA,para_WANIpConn,         WANIpConnObjGet,         WANIpConnObjSet,        WANIpConnObjAdd,  WANIpConnObjDel, WANIpConnObjNotify, WANIpConnObjAttrGet, WANIpPppConnObjAttrSet},
-{TR98_WAN_IP_CONN_MLD,	        0,              para_WANIpConnMld,      WANConnMldObjGet,        WANConnMldObjSet,       NULL, 			   NULL, 			WANConnMldObjNotify, WANConnMldObjAttrGet, WANConnMldObjAttrSet},
-{TR98_DHCP_CLIENT,              0,              para_DhcpClient,        DhcpClientObjGet,        NULL,                   NULL,             NULL, DhcpClientObjNotify, DhcpClientObjAttrGet, DhcpClientObjAttrSet},
-{TR98_SENT_DHCP_OPT,            ATTR_INDEX_CREA, para_SentDhcpOpt,      DhcpClientSentOptObjGet, DhcpClientSentOptObjSet, DhcpClientSentOptObjAdd, DhcpClientSentOptObjDel, DhcpClientOptObjNotify, DhcpClientSentOptObjAttrGet, DhcpClientSentOptObjAttrSet},
-{TR98_REQ_DHCP_OPT,             ATTR_INDEX_CREA, para_ReqDhcpOpt,       DhcpClientReqOptObjGet,  DhcpClientReqOptObjSet, DhcpClientReqOptObjAdd, DhcpClientReqOptObjDel, DhcpClientOptObjNotify, DhcpClientReqOptObjAttrGet, DhcpClientReqOptObjAttrSet},
-{TR98_WAN_IP_PORT_MAP,          ATTR_INDEX_CREA, para_WANIpPortMap,      WANPortMappingObjGet,       WANPortMappingSet,      WANPortMappingAdd, WANPortMappingDel, WANPortMappingNotify, WANPortMappingAttrGet, WANPortMappingAttrSet},
-{TR98_WAN_IP_PORT_TRIGGER,      ATTR_INDEX_CREA, para_WANIpPortTrigger, WANPortTriggerObjGet,    WANPortTriggerSet,      WANPortTriggerAdd, WANPortTriggerDel, WANPortTriggerNotify, WANPortTriggerAttrGet, WANPortTriggerAttrSet},
-{TR98_WAN_IP_ADDR_MAPPING,      ATTR_INDEX_CREA, para_WANIpAddrMapping, WANAddrMappingObjGet,    WANAddrMappingSet,      WANAddrMappingAdd, WANAddrMappingDel, WANAddrMappingNotify, WANAddrMappingAttrGet, WANAddrMappingAttrSet},
-{TR98_WAN_IP_CONN_STAT,         0,              para_WANIpConnStat,     WANConnStObjGet,         NULL,                   NULL,     NULL, WANConnStObjNotify, WANConnStObjAttrGet, WANConnStObjAttrSet},
-#ifdef IPV6INTERFACE_PROFILE
-{TR98_WAN_IP_CONN_IPV6ADDR,     ATTR_INDEX_CREA, para_WANIpv6Addr,      WANIpv6AddrObjGet,        WANIpv6AddrObjSet,     WANIpv6AddrObjAdd, WANIpv6AddrObjDel,            NULL},
-{TR98_WAN_IP_CONN_IPV6PREFIX, 	ATTR_INDEX_CREA, para_WANIpv6Prefix, 	WANIpv6PrefixObjGet,	 WANIpv6PrefixObjSet,   WANIpv6PrefixObjAdd, WANIpv6PrefixObjDel,			NULL},
-#endif
-#ifdef DHCPV6CLIENT_PROFILE
-{TR98_WAN_IP_CONN_DHCPV6CLIENT, 0, 				para_WANIpDhcpV6Client,     WANIpv6DhcpV6ObjGet, WANIpv6DhcpV6ObjSet,    NULL,             NULL,            NULL},
-#endif
-#ifdef IPV6RD_PROFILE
-{TR98_WAN_IP_CONN_IPV6RD,       0,              para_WANIpv6Rd,     	WANIpv6RdObjGet,         WANIpv6RdObjSet,        NULL,             NULL,            NULL},
-#endif
-{TR98_WAN_PPP_CONN,             ATTR_INDEX_CREA,para_WANPppConn,        WANPppConnObjGet,        WANPppConnObjSet,       WANPppConnObjAdd, WANPppConnObjDel, WANPppConnObjNotify, WANPppConnObjAttrGet, WANIpPppConnObjAttrSet},
-{TR98_WAN_PPP_PORT_MAP,         ATTR_INDEX_CREA,para_WANPppPortMap,     WANPortMappingObjGet,    WANPortMappingSet,      WANPortMappingAdd, WANPortMappingDel, WANPortMappingNotify, WANPortMappingAttrGet, WANPortMappingAttrSet},	
-{TR98_WAN_PPP_PORT_TRIGGER,     ATTR_INDEX_CREA,para_WANPppPortTrigger, WANPortTriggerObjGet,    WANPortTriggerSet,      WANPortTriggerAdd, WANPortTriggerDel, WANPortTriggerNotify, WANPortTriggerAttrGet, WANPortTriggerAttrSet},
-{TR98_WAN_PPP_ADDR_MAPPING,     ATTR_INDEX_CREA,para_WANPppAddrMapping, WANAddrMappingObjGet,    WANAddrMappingSet,      WANAddrMappingAdd, WANAddrMappingDel, WANAddrMappingNotify, WANAddrMappingAttrGet, WANAddrMappingAttrSet},
-{TR98_WAN_PPP_CONN_STAT,        0,              para_WANPppConnStat,    WANConnStObjGet,         NULL,                   NULL,   NULL, WANConnStObjNotify, WANConnStObjAttrGet, WANConnStObjAttrSet},
-{TR98_WAN_PPP_CONN_MLD,	        0,              para_WANPppConnMld,     WANConnMldObjGet,        WANConnMldObjSet,       NULL, 			   NULL, 			WANConnMldObjNotify, WANConnMldObjAttrGet, WANConnMldObjAttrSet},
-#ifdef IPV6INTERFACE_PROFILE
-{TR98_WAN_PPP_CONN_IPV6ADDR,    ATTR_INDEX_CREA, para_WANPppv6Addr,     WANPppv6AddrObjGet,        WANPppv6AddrObjSet,     WANPppv6AddrObjAdd, WANPppv6AddrObjDel,            NULL},
-{TR98_WAN_PPP_CONN_IPV6PREFIX, 	ATTR_INDEX_CREA, para_WANPppv6Prefix,	WANPppv6PrefixObjGet,	 WANPppv6PrefixObjSet,   WANPppv6PrefixObjAdd, WANPppv6PrefixObjDel,			NULL},
-#endif
-#ifdef DHCPV6CLIENT_PROFILE
-{TR98_WAN_PPP_CONN_DHCPV6CLIENT, 0, 			para_WANPppDhcpV6Client, WANPppv6DhcpV6ObjGet, WANPppv6DhcpV6ObjSet,    NULL,             NULL,            NULL},
-#endif
-#ifdef IPV6RD_PROFILE
-{TR98_WAN_PPP_CONN_IPV6RD,      0,				para_WANPppv6Rd,        WANPppv6RdObjGet,         WANPppv6RdObjSet,        NULL,             NULL,            NULL},
-#endif
-#ifdef CONFIG_XPON_SUPPORT
-{TR98_WAN_PON_INTF_CONF,        0,				para_WANPonIntfConf,     WANPonIfaceCfgObjGet,   WANPonIfaceCfgObjSet,   NULL,             NULL,            NULL},
-{TR98_WAN_PON_INTF_CONF_STAT,   0,			    para_WANPonIntfConfStat, WANPonIfaceCfgStObjGet, NULL,                   NULL,             NULL,            NULL},
-#endif
-{TR98_FIREWALL,                 0,              para_Firewall,          firewallObjGet,          firewallObjSet,         NULL,             NULL,            firewallObjNotify, firewallObjAttrGet, firewallObjAttrSet},
-{TR98_FIREWALL_LEVEL,           ATTR_INDEX_CREA,para_FirewallLevel,     firewallLevelObjGet,     firewallLevelObjSet,    firewallLevelObjAdd,firewallLevelObjDel,firewallLevelObjNotify, firewallLevelObjAttrGet, firewallLevelObjAttrSet},
-{TR98_FIREWALL_CHAIN,           ATTR_INDEX_CREA,para_FirewallChain,     firewallChainObjGet,     firewallChainObjSet,    firewallChainObjAdd,firewallChainObjDel,firewallChainObjNotify, firewallChainObjAttrGet, firewallChainObjAttrSet},
-{TR98_FIREWALL_CHAIN_RULE,      ATTR_INDEX_CREA,para_FirewallChainRule, firewallRuleObjGet,      firewallRuleObjSet,     firewallRuleObjAdd,firewallRuleObjDel,firewallRuleObjNotify, firewallRuleObjAttrGet, firewallRuleObjAttrSet},
-#if ZYXEL_EXT
-{TR98_ZYXEL_EXT,             	0,				NULL,        			NULL,        			 NULL,       			 NULL, 				NULL,			NULL},
-{TR98_DNS_RT_ENTRY,             ATTR_INDEX_CREA,para_DnsRtEntry,        zyExtDnsRtObjGet,        zyExtDnsRtObjSet,       zyExtDnsRtObjAdd, zyExtDnsRtObjDel,zyExtDnsRtObjNotify, zyExtDnsRtObjAttrGet, zyExtDnsRtObjAttrSet},
-{TR98_DNS_ENTRY, 	            ATTR_INDEX_CREA,para_DnsEntry, 		    zyExtDnsEntryObjGet,     zyExtDnsEntryObjSet,    zyExtDnsEntryObjAdd, zyExtDnsEntryObjDel,zyExtDnsEntryObjNotify, zyExtDnsEntryObjAttrGet, zyExtDnsEntryObjAttrSet},
-{TR98_D_DNS,                    0,              para_DDns,              zyExtDDnsObjGet,         zyExtDDnsObjSet,        NULL,             NULL,            zyExtDDnsObjNotify, zyExtDDnsObjAttrGet, zyExtDDnsObjAttrSet},
-{TR98_TR064, 	                0,              para_Tr064,	            zyExtTr064ObjGet,	     zyExtTr064ObjSet,	     NULL,             NULL,            zyExtTr064ObjNotify, zyExtTr064ObjAttrGet, zyExtTr064ObjAttrSet},
-{TR98_VLAN_GROUP,               ATTR_INDEX_CREA,para_VlanGroup,         zyExtVlanGroupObjGet,	 zyExtVlanGroupObjSet,	 zyExtVlanGroupObjAdd, zyExtVlanGroupObjDel, zyExtVlanGroupObjNotify, zyExtVlanGroupObjAttrGet, zyExtVlanGroupObjAttrSet},
-{TR98_EMAIL_NOTIFY,             0,              NULL,       			NULL,  					 NULL, 					 NULL,             NULL,            NULL, NULL, NULL},
-{TR98_EMAIL_SERVICE,            ATTR_INDEX_CREA,para_EmailSrv,	        zyExtEmailSrvObjGet,     zyExtEmailSrvObjSet,	 zyExtEmailSrvObjAdd, zyExtEmailSrvObjDel,  zyExtEmailSrvObjNotify, zyExtEmailSrvObjAttrGet, zyExtEmailSrvObjAttrSet},
-{TR98_EMAIL_EVENT_CFG,          ATTR_INDEX_CREA,para_EmailEvent,	    zyExtEmailEventObjGet,   zyExtEmailEventObjSet,	 zyExtEmailEventObjAdd, zyExtEmailEventObjDel, zyExtEmailEventObjNotify, zyExtEmailEventObjAttrGet, zyExtEmailEventObjAttrSet},
-{TR98_SYS_INFO,                 0,              para_SysInfo,           zyExtSysInfoObjGet,      zyExtSysInfoObjSet,     NULL,             NULL,            zyExtSysInfoObjNotify, zyExtSysInfoObjAttrGet, zyExtSysInfoObjAttrSet},
-{TR98_SNMP, 	                0,              para_Snmp,	            zyExtSnmpObjGet, 	     zyExtSnmpObjSet,     NULL,             NULL,            zyExtSnmpObjNotify, zyExtSnmpObjAttrGet, zyExtSnmpObjAttrSet},
-{TR98_SNMP_TRAP,                ATTR_INDEX_CREA,para_SnmpTrap,          zyExtSnmpTrapObjGet,     zyExtSnmpTrapObjSet,    zyExtSnmpTrapObjAdd,	zyExtSnmpTrapObjDel,	zyExtSnmpTrapObjNotify, zyExtSnmpTrapObjAttrGet, zyExtSnmpTrapObjAttrSet},
-{TR98_SCHEDULE,                 ATTR_INDEX_CREA,para_Schedule,          scheduleObjGet,          scheduleObjSet,         scheduleObjAdd,   scheduleObjDel,  scheduleObjNotify, scheduleObjAttrGet, scheduleObjAttrSet},
-{TR98_REMO_MGMT,				0,				NULL,					NULL,					 NULL,					 NULL,				NULL,			NULL},
-{TR98_REMO_SRV, 			    ATTR_INDEX_CREA,para_RemoSrv,		    zyExtRemoteMgmtSrvObjGet,		 zyExtRemoteMgmtSrvObjSet,		 zyExtRemoteMgmtSrvObjAdd, zyExtRemoteMgmtSrvObjDel, zyExtRemoteMgmtSrvObjNotify, zyExtRemoteMgmtSrvObjAttrGet, zyExtRemoteMgmtSrvObjAttrSet},
-{TR98_IEEE8021AG,               0,              para_8021ag,	        zyExt8021agObjGet, 	     zyExt8021agObjSet,		NULL,             NULL,            zyExt8021agObjNotify, zyExt8021agObjAttrGet, zyExt8021agObjAttrSet},
-{TR98_SAMBA,         		    0,              para_Samba,	   		    zyExtSambaObjGet, 	     zyExtSambaObjSet,		NULL,             NULL,            zyExtSambaObjNotify, zyExtSambaObjAttrGet, zyExtSambaObjAttrSet},
-#ifdef SOL_TR69_TRUSTDOMAIN
-{TR98_REMO_TRUSTDOMAIN,         ATTR_INDEX_CREA,para_RemoTrustDomain,   zyExtRemoteMgmtTrustDomainObjGet,                    zyExtRemoteMgmtTrustDomainObjSet,                   zyExtRemoteMgmtTrustDomainObjAdd,            zyExtRemoteMgmtTrustDomainObjDel,            NULL},
-#endif
-{TR98_IGMP,                     0,              para_Igmp,              zyExtIgmpObjGet,         zyExtIgmpObjSet,        NULL,             NULL,            zyExtIgmpObjNotify, NULL, NULL},
-#if defined(SUNRISE_RANDOM_PASSWORD) || defined(SOL_TR69_LOGINACCOUNT)
-{TR98_LOG_CFG,                  0,              NULL,              NULL,         NULL,        NULL,             NULL,            NULL, NULL, NULL},
-{TR98_LOG_CFG_GP,               ATTR_INDEX_CREA,para_LogCfgGp,          zyExtLogCfgGpObjGet,       zyExtLogCfgGpObjSet,        NULL,             NULL,            NULL,   NULL,    NULL},
-#ifdef SOL_TR69_LOGINACCOUNT
-{TR98_LOG_CFG_GP_ACCOUNT,       ATTR_INDEX_CREA,para_LogCfgGpAccount,   zyExtLogCfgGpAccountObjGet,		zyExtLogCfgGpAccountObjSet,        zyExtLogCfgGpAccountObjAdd,             zyExtLogCfgGpAccountObjDel,            NULL, NULL, NULL},
-#else
-{TR98_LOG_CFG_GP_ACCOUNT,       ATTR_INDEX_CREA,para_LogCfgGpAccount,   zyExtLogCfgGpAccountObjGet,		zyExtLogCfgGpAccountObjSet,        zyExtLogCfgGpAccountObjAdd,             NULL,            NULL, NULL, NULL},
-#endif
-#endif
-{TR98_LOG_SETTING,              ATTR_INDEX_CREA,para_LogSetting,        zyExtLogSettingObjGet,			zyExtLogSettingObjSet,		NULL,             NULL,            zyExtLogSettingObjNotify, zyExtLogSettingObjAttrGet, zyExtLogSettingObjAttrSet},
-{TR98_LOG_CLASSIFY,				ATTR_INDEX_CREA,para_LogClassify,		zyExtLogClassifyObjGet,			NULL, 						zyExtLogClassifyObjAdd,	zyExtLogClassifyObjDel,	zyExtLogClassifyObjNotify, zyExtLogClassifyObjAttrGet, zyExtLogClassifyObjAttrSet},
-{TR98_LOG_CATEGORY,             ATTR_INDEX_CREA,para_LogCategory,       zyExtLogCategoryObjGet,         zyExtLogCategoryObjSet,		zyExtLogCategoryObjAdd,	zyExtLogCategoryObjDel,	zyExtLogCategoryObjNotify, zyExtLogCategoryObjAttrGet, zyExtLogCategoryObjAttrSet},
-{TR98_MACFILTER,		    	0, 				para_MacFilter,			zyExtMacFilterObjGet,			zyExtMacFilterObjSet,		NULL,             NULL,            zyExtMacFilterObjNotify, zyExtMacFilterObjAttrGet, zyExtMacFilterObjAttrSet},
-{TR98_MACFILTER_WHITELIST,		ATTR_INDEX_CREA,para_MacFilter_WhiteList, zyExtMacFilterWhiteListObjGet,zyExtMacFilterWhiteListObjSet, zyExtMacFilterWhiteListObjAdd, zyExtMacFilterWhiteListObjDel, zyExtMacFilterWhiteListObjNotify, zyExtMacFilterWhiteListObjAttrGet, zyExtMacFilterWhiteListObjAttrSet},
-{TR98_PAREN_CTL,                0,              para_ParenCtl,          zyExtParenCtlObjGet,         	zyExtParenCtlObjSet,        NULL,             NULL,            zyExtParenCtlObjNotify, zyExtParenCtlObjAttrGet, zyExtParenCtlObjAttrSet},
-{TR98_PAREN_CTL_PROF,           ATTR_INDEX_CREA,para_ParenCtlProf,      zyExtParenCtlProfObjGet,		zyExtParenCtlProfObjSet,    zyExtParenCtlProfObjAdd, zyExtParenCtlProfObjDel, zyExtParenCtlProfObjNotify, zyExtParenCtlProfObjAttrGet, zyExtParenCtlProfObjAttrSet},
-{TR98_SEC,    		            0,              para_Sec,    		    zyExtSecObjGet,         		NULL,     			  		NULL,             NULL,            zyExtSecObjNotify, zyExtSecObjAttrGet, zyExtSecObjAttrSet},
-{TR98_SEC_CERT,  		        ATTR_INDEX_CREA,para_SecCert, 		    zyExtSecCertObjGet,				zyExtSecCertObjSet,  		zyExtSecCertObjAdd, zyExtSecCertObjDel, zyExtSecCertObjNotify, zyExtSecCertObjAttrGet, zyExtSecCertObjAttrSet},
-#ifdef ONECONNECT
-{TR98_ONECONNECT_SPEEDTESTINFO,	0, 				para_SpeedTestInfo,		zyExtSpeedTestInfoObjGet,		 zyExtSpeedTestInfoObjSet,		   NULL,             NULL,            NULL},
-#endif
-#endif
-#if OBSOLETED
-#else
-//{TR98_WAN_DSL_CONN_MGMT,        0,              NULL,                   NULL,                    NULL,                   NULL,             NULL,            NULL},
-//{TR98_WAN_DSL_CONN_SRVC,        ATTR_INDEXNODE, NULL,                   NULL,                    NULL,                   NULL,             NULL,            NULL},
-#endif
-#ifdef ONECONNECT
-{TR98_ONECONNECT_EXT,		    0, 				para_OneConnectExt,		oneConnectExtObjGet,		 oneConnectExtObjSet,		   NULL,             NULL,            NULL},
-#endif
-#ifdef ZyXEL_IPP_PRINTSERVER
-{TR98_PRINT_SERVER,             0,              para_Ipp_PrintServer,   zyExtIppPrintServObjGet,          zyExtIppPrintServObjSet,         NULL,             NULL,            NULL, NULL, NULL},
-#endif
-{NULL,                          0,              NULL,                   NULL,                    NULL,                   NULL,             NULL,            NULL}
-};
+/*All TR98 Full Path Name*/
+#define TR98_IGD								"InternetGatewayDevice"
+#define TR98_SERVICE                              "InternetGatewayDevice.Services"
+#define TR98_VOICE_SRV                            "InternetGatewayDevice.Services.VoiceService.i"
+#define TR98_VOICE_CAPB                           "InternetGatewayDevice.Services.VoiceService.i.Capabilities"
+#define TR98_VOICE_CAPB_SIP                       "InternetGatewayDevice.Services.VoiceService.i.Capabilities.SIP"
+#define TR98_VOICE_CAPB_MGCP                      "InternetGatewayDevice.Services.VoiceService.i.Capabilities.MGCP"
+#define TR98_VOICE_CAPB_H323                      "InternetGatewayDevice.Services.VoiceService.i.Capabilities.H323"
+#define TR98_VOICE_CAPB_CODEC                     "InternetGatewayDevice.Services.VoiceService.i.Capabilities.Codec.i"
+#define TR98_VOICE_PROF                           "InternetGatewayDevice.Services.VoiceService.i.VoiceProfile.i"
+#define TR98_VOICE_PROF_SRV_PRO_INFO              "InternetGatewayDevice.Services.VoiceService.i.VoiceProfile.i.ServiceProviderInfo"
+#define TR98_VOICE_PROF_SIP                       "InternetGatewayDevice.Services.VoiceService.i.VoiceProfile.i.SIP"
+#define TR98_VOICE_PROF_SIP_SUBSCRIBE_OBJ         "InternetGatewayDevice.Services.VoiceService.i.VoiceProfile.i.SIP.EventSubscribe.i"
+#define TR98_VOICE_PROF_SIP_RESP_MAP_OBJ          "InternetGatewayDevice.Services.VoiceService.i.VoiceProfile.i.SIP.ResponseMap.i"
+#define TR98_VOICE_PROF_RTP                       "InternetGatewayDevice.Services.VoiceService.i.VoiceProfile.i.RTP"
+#define TR98_VOICE_PROF_RTP_RTCP                  "InternetGatewayDevice.Services.VoiceService.i.VoiceProfile.i.RTP.RTCP"
+#define TR98_VOICE_PROF_RTP_SRTP                  "InternetGatewayDevice.Services.VoiceService.i.VoiceProfile.i.RTP.SRTP"
+#define TR98_VOICE_PROF_RTP_REDUNDANCY            "InternetGatewayDevice.Services.VoiceService.i.VoiceProfile.i.RTP.Redundancy"
+#define TR98_VOICE_PROF_NUM_PLAN                  "InternetGatewayDevice.Services.VoiceService.i.VoiceProfile.i.NumberingPlan"
+#define TR98_VOICE_PROF_NUM_PLAN_PREFIX_INFO      "InternetGatewayDevice.Services.VoiceService.i.VoiceProfile.i.NumberingPlan.PrefixInfo.i"
+#define TR98_VOICE_PROF_TONE                      "InternetGatewayDevice.Services.VoiceService.i.VoiceProfile.i.Tone"
+#define TR98_VOICE_PROF_TONE_EVENT                "InternetGatewayDevice.Services.VoiceService.i.VoiceProfile.i.Tone.Event.i"
+#define TR98_VOICE_PROF_TONE_DESCRIPTION          "InternetGatewayDevice.Services.VoiceService.i.VoiceProfile.i.Tone.Description.i"
+#define TR98_VOICE_PROF_TONE_PATTERN              "InternetGatewayDevice.Services.VoiceService.i.VoiceProfile.i.Tone.Pattern.i"
+#define TR98_VOICE_PROF_FAX_T38                   "InternetGatewayDevice.Services.VoiceService.i.VoiceProfile.i.FaxT38"
+#define TR98_VOICE_LINE                           "InternetGatewayDevice.Services.VoiceService.i.VoiceProfile.i.Line.i"
+#define TR98_VOICE_LINE_SIP                       "InternetGatewayDevice.Services.VoiceService.i.VoiceProfile.i.Line.i.SIP"
+#define TR98_VOICE_LINE_SIP_EVENT_SUBS            "InternetGatewayDevice.Services.VoiceService.i.VoiceProfile.i.Line.i.SIP.EventSubscribe.i"
+#define TR98_VOICE_LINE_RINGER                    "InternetGatewayDevice.Services.VoiceService.i.VoiceProfile.i.Line.i.Ringer"
+#define TR98_VOICE_LINE_RINGER_EVENT              "InternetGatewayDevice.Services.VoiceService.i.VoiceProfile.i.Line.i.Ringer.Event.i"
+#define TR98_VOICE_LINE_RINGER_DESCRIPTION        "InternetGatewayDevice.Services.VoiceService.i.VoiceProfile.i.Line.i.Ringer.Description.i"
+#define TR98_VOICE_LINE_RINGER_PATTERN            "InternetGatewayDevice.Services.VoiceService.i.VoiceProfile.i.Line.i.Ringer.Pattern.i"
+#define TR98_VOICE_LINE_CALLING_FEATURE           "InternetGatewayDevice.Services.VoiceService.i.VoiceProfile.i.Line.i.CallingFeatures"
+#define TR98_VOICE_LINE_PROCESSING                "InternetGatewayDevice.Services.VoiceService.i.VoiceProfile.i.Line.i.VoiceProcessing"
+#define TR98_VOICE_LINE_CODEC                     "InternetGatewayDevice.Services.VoiceService.i.VoiceProfile.i.Line.i.Codec"
+#define TR98_VOICE_LINE_CODEC_LIST                "InternetGatewayDevice.Services.VoiceService.i.VoiceProfile.i.Line.i.Codec.List.i"
+#define TR98_VOICE_LINE_SESSION                   "InternetGatewayDevice.Services.VoiceService.i.VoiceProfile.i.Line.i.Session.i"
+#define TR98_VOICE_LINE_STATS                     "InternetGatewayDevice.Services.VoiceService.i.VoiceProfile.i.Line.i.Stats"
+#define TR98_VOICE_PHY_INTF                       "InternetGatewayDevice.Services.VoiceService.i.PhyInterface.i"
+#define TR98_VOICE_PSTN                           "InternetGatewayDevice.Services.VoiceService.i.X_ZyXEL_COM_PSTN.i"
+#define TR98_VOICE_COMMON                         "InternetGatewayDevice.Services.VoiceService.i.X_ZyXEL_COM_Common"
+#define TR98_VOICE_PHONE_BOOK                     "InternetGatewayDevice.Services.VoiceService.i.X_ZyXEL_COM_VoicePhoneBook.i"
+#define TR98_VOICE_FXO                            "InternetGatewayDevice.Services.VoiceService.i.X_ZyXEL_COM_FXO"
+#define TR98_VOICE_FXO_PORT                       "InternetGatewayDevice.Services.VoiceService.i.X_ZyXEL_COM_FXO.Port.i"
+#define TR98_CAPB                     "InternetGatewayDevice.Capabilities"
+#define TR98_PERF_DIAG                "InternetGatewayDevice.Capabilities.PerformanceDiagnostic"
+#define TR98_DEV_INFO                 "InternetGatewayDevice.DeviceInfo"
+#define TR98_VEND_CONF_FILE           "InternetGatewayDevice.DeviceInfo.VendorConfigFile.i"
+#define TR98_DEV_CONF                 "InternetGatewayDevice.DeviceConfig"
+#define TR98_MGMT_SRV                 "InternetGatewayDevice.ManagementServer"
+#define TR98_MGAB_DEV                 "InternetGatewayDevice.ManagementServer.ManageableDevice.i"
+#define TR98_TIME                     "InternetGatewayDevice.Time"
+#define TR98_USR_INTF                 "InternetGatewayDevice.UserInterface"
+#define TR98_CAPT_PORTAL              "InternetGatewayDevice.CaptivePortal"
+#define TR98_L3_FWD                   "InternetGatewayDevice.Layer3Forwarding"
+#define TR98_FWD                      "InternetGatewayDevice.Layer3Forwarding.Forwarding.i"
+#define TR98_L2_BR                    "InternetGatewayDevice.Layer2Bridging"
+#define TR98_BR                       "InternetGatewayDevice.Layer2Bridging.Bridge.i"
+#define TR98_PORT                     "InternetGatewayDevice.Layer2Bridging.Bridge.i.Port.i"
+#define TR98_VLAN                     "InternetGatewayDevice.Layer2Bridging.Bridge.i.VLAN.i"
+#define TR98_FILTER                   "InternetGatewayDevice.Layer2Bridging.Filter.i"
+#define TR98_MARK                     "InternetGatewayDevice.Layer2Bridging.Marking.i"
+#define TR98_AVAI_INTF                "InternetGatewayDevice.Layer2Bridging.AvailableInterface.i"
+#define TR98_QUE_MGMT                 "InternetGatewayDevice.QueueManagement"
+#define TR98_CLS                      "InternetGatewayDevice.QueueManagement.Classification.i"
+#define TR98_APP                      "InternetGatewayDevice.QueueManagement.App.i"
+#define TR98_FLOW                     "InternetGatewayDevice.QueueManagement.Flow.i"
+#define TR98_POLICER                  "InternetGatewayDevice.QueueManagement.Policer.i"
+#define TR98_QUE                      "InternetGatewayDevice.QueueManagement.Queue.i"
+#define TR98_SHAPER					  "InternetGatewayDevice.QueueManagement.X_ZYXEL_Shaper.i"
+#define TR98_QUE_STAT                 "InternetGatewayDevice.QueueManagement.QueueStats.i"
+#define TR98_LAN_CONF_SEC             "InternetGatewayDevice.LANConfigSecurity"
+#define TR98_IP_PING_DIAG             "InternetGatewayDevice.IPPingDiagnostics"
+#define TR98_TRA_RT_DIAG              "InternetGatewayDevice.TraceRouteDiagnostics"
+#define TR98_RT_HOP                   "InternetGatewayDevice.TraceRouteDiagnostics.RouteHops.i"
+#define TR98_DL_DIAG                  "InternetGatewayDevice.DownloadDiagnostics"
+#define TR98_UL_DIAG                  "InternetGatewayDevice.UploadDiagnostics"
+#define TR98_UDP_ECHO_CONF            "InternetGatewayDevice.UDPEchoConfig"
+#define TR98_LAN_DEV                  "InternetGatewayDevice.LANDevice.i"
+#define TR98_LAN_HOST_CONF_MGMT       "InternetGatewayDevice.LANDevice.i.LANHostConfigManagement"
+#define TR98_IP_INTF                  "InternetGatewayDevice.LANDevice.i.LANHostConfigManagement.IPInterface.i"
+#ifdef IPV6INTERFACE_PROFILE
+#define TR98_IP_INTF_IPV6ADDR         "InternetGatewayDevice.LANDevice.i.LANHostConfigManagement.IPInterface.i.X_ZYXEL_IPv6Address.i"
+#define TR98_IP_INTF_IPV6PREFIX       "InternetGatewayDevice.LANDevice.i.LANHostConfigManagement.IPInterface.i.X_ZYXEL_IPv6Prefix.i"
+#endif
+#ifdef ROUTERADVERTISEMENT_PROFILE
+#define TR98_IP_INTF_ROUTERADVER      "InternetGatewayDevice.LANDevice.i.LANHostConfigManagement.IPInterface.i.X_ZYXEL_RouterAdvertisement"
+#endif
+#ifdef IPV6SERVER_PROFILE
+#define TR98_IP_INTF_DHCPV6SRV        "InternetGatewayDevice.LANDevice.i.LANHostConfigManagement.IPInterface.i.X_ZYXEL_DHCPv6Server"
+#endif
+#define TR98_DHCP_STATIC_ADDR         "InternetGatewayDevice.LANDevice.i.LANHostConfigManagement.DHCPStaticAddress.i"
+#define TR98_DHCP_OPT                 "InternetGatewayDevice.LANDevice.i.LANHostConfigManagement.DHCPOption.i"
+#ifdef ZyXEL_DHCP_OPTION125
+#define TR98_VENDOR_SPECIFIC          "InternetGatewayDevice.LANDevice.i.LANHostConfigManagement.X_ZYXEL_VendorSpecific"
+#define TR98_VENDOR_SPECIFIC_PROF     "InternetGatewayDevice.LANDevice.i.LANHostConfigManagement.X_ZYXEL_VendorSpecific.Profile.i"
+#endif
+#define TR98_DHCP_COND_SERVPOOL       "InternetGatewayDevice.LANDevice.i.LANHostConfigManagement.DHCPConditionalServingPool.i"
+#define TR98_SERVPOOL_DHCP_STATICADDR "InternetGatewayDevice.LANDevice.i.LANHostConfigManagement.DHCPConditionalServingPool.i.DHCPStaticAddress.i"
+#define TR98_SERVPOOL_DHCP_OPT        "InternetGatewayDevice.LANDevice.i.LANHostConfigManagement.DHCPConditionalServingPool.i.DHCPOption.i"
+#define TR98_LAN_ETH_INTF_CONF        "InternetGatewayDevice.LANDevice.i.LANEthernetInterfaceConfig.i"
+#define TR98_LAN_ETH_INTF_CONF_STAT   "InternetGatewayDevice.LANDevice.i.LANEthernetInterfaceConfig.i.Stats"
+#define TR98_LAN_USB_INTF_CONF        "InternetGatewayDevice.LANDevice.i.LANUSBInterfaceConfig.i"
+#define TR98_LAN_USB_INTF_CONF_STAT   "InternetGatewayDevice.LANDevice.i.LANUSBInterfaceConfig.i.Stats"
+#define TR98_LAN_DEV_WLAN_CFG         "InternetGatewayDevice.LANDevice.i.WLANConfiguration.i"
+#define TR98_WLAN_CFG_STAT            "InternetGatewayDevice.LANDevice.i.WLANConfiguration.i.Stats"
+#define TR98_WPS                      "InternetGatewayDevice.LANDevice.i.WLANConfiguration.i.WPS"
+#define TR98_REG                      "InternetGatewayDevice.LANDevice.i.WLANConfiguration.i.WPS.Registrar.i"
+#define TR98_ASSOC_DEV                "InternetGatewayDevice.LANDevice.i.WLANConfiguration.i.AssociatedDevice.i"
+#define TR98_WEP_KEY                  "InternetGatewayDevice.LANDevice.i.WLANConfiguration.i.WEPKey.i"
+#define TR98_PSK                      "InternetGatewayDevice.LANDevice.i.WLANConfiguration.i.PreSharedKey.i"
+#define TR98_AP_WMM_PARAM             "InternetGatewayDevice.LANDevice.i.WLANConfiguration.i.APWMMParameter.i"
+#define TR98_STA_WMM_PARAM            "InternetGatewayDevice.LANDevice.i.WLANConfiguration.i.STAWMMParameter.i"
+#define TR98_HOSTS                    "InternetGatewayDevice.LANDevice.i.Hosts"
+#define TR98_HOST                     "InternetGatewayDevice.LANDevice.i.Hosts.Host.i"
+#define TR98_LAN_INTF                 "InternetGatewayDevice.LANInterfaces"
+#define TR98_LAN_INTF_ETH_INTF_CONF   "InternetGatewayDevice.LANInterfaces.LANEthernetInterfaceConfig.i"
+#define TR98_USB_INTF_CONF            "InternetGatewayDevice.LANInterfaces.USBInterfaceConfig.i"
+#define TR98_LAN_INTF_WLAN_CFG        "InternetGatewayDevice.LANInterfaces.WLANConfiguration.i"
+#define TR98_WAN_DEV                  "InternetGatewayDevice.WANDevice.i"
+#define TR98_WAN_COMM_INTF_CONF       "InternetGatewayDevice.WANDevice.i.WANCommonInterfaceConfig"
+#define TR98_WAN_COMM_INTF_CONNECT    "InternetGatewayDevice.WANDevice.i.WANCommonInterfaceConfig.Connection.i"
+#define TR98_WAN_DSL_INTF_CONF        "InternetGatewayDevice.WANDevice.i.WANDSLInterfaceConfig"
+#define TR98_WAN_DSL_INTF_TEST_PARAM  "InternetGatewayDevice.WANDevice.i.WANDSLInterfaceConfig.TestParams"
+#define TR98_WAN_DSL_INTF_CONF_STAT   "InternetGatewayDevice.WANDevice.i.WANDSLInterfaceConfig.Stats"
+#define TR98_TTL                      "InternetGatewayDevice.WANDevice.i.WANDSLInterfaceConfig.Stats.Total"
+#define TR98_ST                       "InternetGatewayDevice.WANDevice.i.WANDSLInterfaceConfig.Stats.Showtime"
+#define TR98_LST_SHOWTIME             "InternetGatewayDevice.WANDevice.i.WANDSLInterfaceConfig.Stats.LastShowtime"
+#define TR98_CURRENT_DAY              "InternetGatewayDevice.WANDevice.i.WANDSLInterfaceConfig.Stats.CurrentDay"
+#define TR98_QTR_HR                   "InternetGatewayDevice.WANDevice.i.WANDSLInterfaceConfig.Stats.QuarterHour"
+#define TR98_WAN_ETH_INTF_CONF        "InternetGatewayDevice.WANDevice.i.WANEthernetInterfaceConfig"
+#define TR98_WAN_ETH_INTF_CONF_STAT   "InternetGatewayDevice.WANDevice.i.WANEthernetInterfaceConfig.Stats"
+#define TR98_WAN_DSL_CONN_MGMT        "InternetGatewayDevice.WANDevice.i.WANDSLConnectionManagement"
+#define TR98_WAN_DSL_CONN_SRVC        "InternetGatewayDevice.WANDevice.i.WANDSLConnectionManagement.ConnectionService.i"
+#define TR98_WAN_DSL_DIAG             "InternetGatewayDevice.WANDevice.i.WANDSLDiagnostics"
+#define TR98_WAN_CONN_DEV             "InternetGatewayDevice.WANDevice.i.WANConnectionDevice.i"
+#define TR98_WAN_DSL_LINK_CONF        "InternetGatewayDevice.WANDevice.i.WANConnectionDevice.i.WANDSLLinkConfig"
+#define TR98_WAN_ATM_F5_LO_DIAG       "InternetGatewayDevice.WANDevice.i.WANConnectionDevice.i.WANATMF5LoopbackDiagnostics"
+#define TR98_WAN_ATM_F4_LO_DIAG       "InternetGatewayDevice.WANDevice.i.WANConnectionDevice.i.X_ZYXEL_WANATMF4LoopbackDiagnostics"
+#define TR98_WAN_PTM_LINK_CONF        "InternetGatewayDevice.WANDevice.i.WANConnectionDevice.i.WANPTMLinkConfig"
+#define TR98_WAN_PTM_LINK_CONF_STAT   "InternetGatewayDevice.WANDevice.i.WANConnectionDevice.i.WANPTMLinkConfig.Stats"
+#define TR98_WAN_ETH_LINK_CONF        "InternetGatewayDevice.WANDevice.i.WANConnectionDevice.i.WANEthernetLinkConfig"
+#define TR98_WAN_POTS_LINK_CONF       "InternetGatewayDevice.WANDevice.i.WANConnectionDevice.i.WANPOTSLinkConfig"
+#define TR98_WAN_IP_CONN              "InternetGatewayDevice.WANDevice.i.WANConnectionDevice.i.WANIPConnection.i"
+#define TR98_DHCP_CLIENT              "InternetGatewayDevice.WANDevice.i.WANConnectionDevice.i.WANIPConnection.i.DHCPClient"
+#define TR98_SENT_DHCP_OPT            "InternetGatewayDevice.WANDevice.i.WANConnectionDevice.i.WANIPConnection.i.DHCPClient.SentDHCPOption.i"
+#define TR98_REQ_DHCP_OPT             "InternetGatewayDevice.WANDevice.i.WANConnectionDevice.i.WANIPConnection.i.DHCPClient.ReqDHCPOption.i"
+#define TR98_WAN_IP_PORT_MAP          "InternetGatewayDevice.WANDevice.i.WANConnectionDevice.i.WANIPConnection.i.PortMapping.i"
+#define TR98_WAN_IP_PORT_TRIGGER      "InternetGatewayDevice.WANDevice.i.WANConnectionDevice.i.WANIPConnection.i.X_ZYXEL_PortTriggering.i"
+#define TR98_WAN_IP_ADDR_MAPPING      "InternetGatewayDevice.WANDevice.i.WANConnectionDevice.i.WANIPConnection.i.X_ZYXEL_AddrMapping.i"
+#define TR98_WAN_IP_CONN_STAT         "InternetGatewayDevice.WANDevice.i.WANConnectionDevice.i.WANIPConnection.i.Stats"
+#define TR98_WAN_IP_CONN_MLD		  "InternetGatewayDevice.WANDevice.i.WANConnectionDevice.i.WANIPConnection.i.X_ZYXEL_MLD"
+#ifdef IPV6INTERFACE_PROFILE
+#define TR98_WAN_IP_CONN_IPV6ADDR     "InternetGatewayDevice.WANDevice.i.WANConnectionDevice.i.WANIPConnection.i.X_ZYXEL_IPv6Address.i"
+#define TR98_WAN_IP_CONN_IPV6PREFIX	  "InternetGatewayDevice.WANDevice.i.WANConnectionDevice.i.WANIPConnection.i.X_ZYXEL_IPv6Prefix.i"
+#endif
+#ifdef DHCPV6CLIENT_PROFILE
+#define TR98_WAN_IP_CONN_DHCPV6CLIENT "InternetGatewayDevice.WANDevice.i.WANConnectionDevice.i.WANIPConnection.i.X_ZYXEL_DHCPv6Client"
+#endif
+#ifdef IPV6RD_PROFILE
+#define TR98_WAN_IP_CONN_IPV6RD	      "InternetGatewayDevice.WANDevice.i.WANConnectionDevice.i.WANIPConnection.i.X_ZYXEL_IPv6rd"
+#endif
+#define TR98_WAN_PPP_CONN             "InternetGatewayDevice.WANDevice.i.WANConnectionDevice.i.WANPPPConnection.i"
+#define TR98_WAN_PPP_PORT_MAP         "InternetGatewayDevice.WANDevice.i.WANConnectionDevice.i.WANPPPConnection.i.PortMapping.i"
+#define TR98_WAN_PPP_PORT_TRIGGER     "InternetGatewayDevice.WANDevice.i.WANConnectionDevice.i.WANPPPConnection.i.X_ZYXEL_PortTriggering.i"
+#define TR98_WAN_PPP_ADDR_MAPPING     "InternetGatewayDevice.WANDevice.i.WANConnectionDevice.i.WANPPPConnection.i.X_ZYXEL_AddrMapping.i"
+#define TR98_WAN_PPP_CONN_STAT        "InternetGatewayDevice.WANDevice.i.WANConnectionDevice.i.WANPPPConnection.i.Stats"
+#define TR98_WAN_PPP_CONN_MLD		  "InternetGatewayDevice.WANDevice.i.WANConnectionDevice.i.WANPPPConnection.i.X_ZYXEL_MLD"
+#ifdef IPV6INTERFACE_PROFILE
+#define TR98_WAN_PPP_CONN_IPV6ADDR     "InternetGatewayDevice.WANDevice.i.WANConnectionDevice.i.WANPPPConnection.i.X_ZYXEL_IPv6Address.i"
+#define TR98_WAN_PPP_CONN_IPV6PREFIX   "InternetGatewayDevice.WANDevice.i.WANConnectionDevice.i.WANPPPConnection.i.X_ZYXEL_IPv6Prefix.i"
+#endif
+#ifdef DHCPV6CLIENT_PROFILE
+#define TR98_WAN_PPP_CONN_DHCPV6CLIENT "InternetGatewayDevice.WANDevice.i.WANConnectionDevice.i.WANPPPConnection.i.X_ZYXEL_DHCPv6Client"
+#endif
+#ifdef IPV6RD_PROFILE
+#define TR98_WAN_PPP_CONN_IPV6RD       "InternetGatewayDevice.WANDevice.i.WANConnectionDevice.i.WANPPPConnection.i.X_ZYXEL_IPv6rd"
+#endif
+#ifdef CONFIG_XPON_SUPPORT
+#define TR98_WAN_PON_INTF_CONF        "InternetGatewayDevice.WANDevice.i.X_ZYZEL_WANPonInterfaceConfig"
+#define TR98_WAN_PON_INTF_CONF_STAT   "InternetGatewayDevice.WANDevice.i.X_ZYZEL_WANPonInterfaceConfig.Stats"
+#endif
+#define TR98_ZYXEL_EXT                "InternetGatewayDevice.X_ZYXEL_EXT"
+#define TR98_DNS_RT_ENTRY             "InternetGatewayDevice.X_ZYXEL_EXT.DNSRouteEntry.i"
+#define TR98_DNS_ENTRY     		      "InternetGatewayDevice.X_ZYXEL_EXT.DNSEntry.i"
+#define TR98_D_DNS                    "InternetGatewayDevice.X_ZYXEL_EXT.DynamicDNS"
+#define TR98_TR064	                  "InternetGatewayDevice.X_ZYXEL_EXT.TR064"
+#define TR98_VLAN_GROUP	              "InternetGatewayDevice.X_ZYXEL_EXT.VlanGroup.i"
+#define TR98_EMAIL_NOTIFY             "InternetGatewayDevice.X_ZYXEL_EXT.EmailNotification"
+#define TR98_EMAIL_SERVICE            "InternetGatewayDevice.X_ZYXEL_EXT.EmailNotification.EmailService.i"
+#define TR98_EMAIL_EVENT_CFG          "InternetGatewayDevice.X_ZYXEL_EXT.EmailNotification.EmailEventConfig.i"
+#define TR98_SYS_INFO                 "InternetGatewayDevice.X_ZYXEL_EXT.System_Info"
+#define TR98_SNMP	                  "InternetGatewayDevice.X_ZYXEL_EXT.SNMP"
+#define TR98_SNMP_TRAP                "InternetGatewayDevice.X_ZYXEL_EXT.SNMP.TrapAddr.i"
+#define TR98_REMO_MGMT                "InternetGatewayDevice.X_ZYXEL_EXT.RemoteManagement"
+#define TR98_REMO_SRV                 "InternetGatewayDevice.X_ZYXEL_EXT.RemoteManagement.Service.i"
+#define TR98_IEEE8021AG               "InternetGatewayDevice.X_ZYXEL_EXT.IEEE8021ag"
+#define TR98_SAMBA		              "InternetGatewayDevice.X_ZYXEL_EXT.SAMBA"
+#ifdef SOL_TR69_TRUSTDOMAIN
+#define TR98_REMO_TRUSTDOMAIN		"InternetGatewayDevice.X_ZYXEL_EXT.RemoteManagement.TrustDomain.i"
+#endif
+#define TR98_IGMP                     "InternetGatewayDevice.X_ZYXEL_EXT.IGMP"
+#define TR98_LOG_SETTING              "InternetGatewayDevice.X_ZYXEL_EXT.Log_Setting"
+#define TR98_LOG_CLASSIFY             "InternetGatewayDevice.X_ZYXEL_EXT.Log_Setting.LogClassify.i"
+#define TR98_LOG_CATEGORY		      "InternetGatewayDevice.X_ZYXEL_EXT.Log_Setting.LogClassify.i.Category.i"
+
+#if defined(SUNRISE_RANDOM_PASSWORD) || defined(SOL_TR69_LOGINACCOUNT)
+#define TR98_LOG_CFG           		  "InternetGatewayDevice.X_ZYXEL_EXT.LoginCfg"
+#define TR98_LOG_CFG_GP           	  "InternetGatewayDevice.X_ZYXEL_EXT.LoginCfg.LogGp.i"
+#define TR98_LOG_CFG_GP_ACCOUNT       "InternetGatewayDevice.X_ZYXEL_EXT.LoginCfg.LogGp.i.Account.i"
+#endif
+
+#define TR98_FIREWALL                 "InternetGatewayDevice.Firewall"
+#define TR98_FIREWALL_LEVEL           "InternetGatewayDevice.Firewall.Level.i"
+#define TR98_FIREWALL_CHAIN           "InternetGatewayDevice.Firewall.Chain.i"
+#define TR98_FIREWALL_CHAIN_RULE      "InternetGatewayDevice.Firewall.Chain.i.Rule.i"
+#define TR98_SCHEDULE                 "InternetGatewayDevice.X_ZYXEL_EXT.Schedule.i"
+
+#define TR98_MACFILTER		  		  "InternetGatewayDevice.X_ZYXEL_EXT.MacFilter"
+#define TR98_MACFILTER_WHITELIST	  "InternetGatewayDevice.X_ZYXEL_EXT.MacFilter.WhiteList.i"
+#define TR98_PAREN_CTL                "InternetGatewayDevice.X_ZYXEL_EXT.ParentalControl"
+#define TR98_PAREN_CTL_PROF           "InternetGatewayDevice.X_ZYXEL_EXT.ParentalControl.Profile.i"
+#define TR98_SEC		              "InternetGatewayDevice.X_ZYXEL_EXT.Security"
+#define TR98_SEC_CERT		          "InternetGatewayDevice.X_ZYXEL_EXT.Security.Certificate.i"
+
+#ifdef ONECONNECT
+#define TR98_ONECONNECT_EXT            	   "InternetGatewayDevice.LANDevice.i.Hosts.Host.i.X_ZYXEL_EXT"
+#define TR98_ONECONNECT_SPEEDTESTINFO          "InternetGatewayDevice.X_ZYXEL_EXT.SpeedTestInfo"
+#endif
+#ifdef ZyXEL_IPP_PRINTSERVER
+#define TR98_PRINT_SERVER           "InternetGatewayDevice.X_ZYXEL_EXT.PrintServer"
+#endif
+#define OBSOLETED 1
+//#define ZYXEL_EXT 1
+
+#define ATTR_INDEX_CREA ATTR_INDEXNODE|OBJECT_ATTR_CREATE
+
+/* TR98 Full Path Name          Attribute	    Parameter List          Get func                 Set func                Add func          Del func         Notify func	Get Attr func		Set Attr func*/
+tr98Object_t tr98Obj[] = {
+{TR98_IGD,                      0,              para_Root,              rootObjGet,              NULL,                   NULL,             NULL,            NULL},
+#ifdef CONFIG_PACKAGE_ZyIMS
+{TR98_SERVICE,					0,				para_Service,			NULL,					 NULL,					 NULL,			   NULL,			NULL},
+{TR98_VOICE_SRV,				ATTR_INDEXNODE,	para_VoiceSrv,			voiceSrvObjGet,			 NULL,					 NULL,			   NULL, voiceNotify, voiceSrvAttrGet, voiceSrvAttrSet},
+{TR98_VOICE_CAPB,				0,				para_VoiceCapb,			voiceCapbObjGet,			 NULL,					 NULL,			   NULL, voiceNotify, voiceCapbAttrGet, voiceCapbAttrSet},
+{TR98_VOICE_CAPB_SIP,			0,				para_VoiceCapbSip,		voiceCapbSipObjGet,		 NULL,					 NULL,			   NULL, voiceNotify, voiceCapbSipAttrGet, voiceCapbSipAttrSet},
+//{TR98_VOICE_CAPB_MGCP                     },
+//{TR98_VOICE_CAPB_H323     },
+{TR98_VOICE_CAPB_CODEC,			ATTR_INDEXNODE,	para_VoiceCapbCodec,	voiceCapbCodecObjGet,		 NULL,					 NULL,			   NULL, voiceNotify, voiceCapbCodecAttrGet, voiceCapbCodecAttrSet},
+{TR98_VOICE_PROF,				ATTR_INDEX_CREA,para_VoiceProf,			voiceProfObjGet,			 voiceProfSet,			 voiceProfAdd,	   voiceProfDel, voiceNotify, voiceProfAttrGet, voiceProfAttrSet},
+//{TR98_VOICE_PROF_SRV_PRO_INFO         },
+{TR98_VOICE_PROF_SIP,			0,				para_VoiceProfSip,		voiceProfSipObjGet,		 voiceProfSipSet,		 NULL,			   NULL, voiceNotify, voiceProfSipAttrGet, voiceProfSipAttrSet},
+//{TR98_VOICE_PROF_SIP_SUBSCRIBE_OBJ      },
+//{TR98_VOICE_PROF_SIP_RESP_MAP_OBJ       },
+//{TR98_VOICE_PROF_RTP                    },
+//{TR98_VOICE_PROF_RTP_RTCP               },
+//{TR98_VOICE_PROF_RTP_SRTP               },
+//{TR98_VOICE_PROF_RTP_REDUNDANCY         },
+{TR98_VOICE_PROF_NUM_PLAN, 0 ,	para_VoiceProfNumPlan, voiceProfNumPlanObjGet, voiceProfNumPlanObjSet,	NULL,	NULL, voiceNotify, voiceProfNumPlanAttrGet, voiceProfNumPlanAttrSet},
+//{TR98_VOICE_PROF_NUM_PLAN_PREFIX_INFO   },
+//{TR98_VOICE_PROF_TONE                   },
+//{TR98_VOICE_PROF_TONE_EVENT             },
+//{TR98_VOICE_PROF_TONE_DESCRIPTION       },
+//{TR98_VOICE_PROF_TONE_PATTERN           },
+//{TR98_VOICE_PROF_FAX_T38                },
+{TR98_VOICE_LINE,				ATTR_INDEX_CREA,para_VoiceLine,			voiceLineObjGet,			 voiceLineSet,			 voiceLineAdd,	   voiceLineDel,	voiceNotify, voiceLineAttrGet, voiceLineAttrSet},
+{TR98_VOICE_LINE_SIP,			0,				para_VoiceLineSip,		voiceLineSipObjGet,		 voiceLineSipSet,		 NULL,			   NULL,	voiceNotify, voiceLineSipAttrGet, voiceLineSipAttrSet},
+//{TR98_VOICE_LINE_SIP_EVENT_SUBS         },
+//{TR98_VOICE_LINE_RINGER                 },
+//{TR98_VOICE_LINE_RINGER_EVENT           },
+//{TR98_VOICE_LINE_RINGER_DESCRIPTION     },
+//{TR98_VOICE_LINE_RINGER_PATTERN         },
+{TR98_VOICE_LINE_CALLING_FEATURE,			0 ,  para_VoiceLineCallingFeature , voiceLineCallingFeatureObjGet  , voiceLineCallingFeatureObjSet , NULL ,NULL , voiceNotify, voiceLineCallingFeatureAttrGet ,voiceLineCallingFeatureAttrSet },
+{TR98_VOICE_LINE_PROCESSING,	0,				para_VoiceLineProcessing, voiceLineProcObjGet,		 voiceLineProcSet,		 NULL,			   NULL,	voiceNotify, voiceLineProcAttrGet, voiceLineProcAttrSet},
+{TR98_VOICE_LINE_CODEC,			0, 				para_VoiceLineCodec, 	voiceLineCodecObjGet,       NULL,					 NULL,			   NULL,	voiceNotify, voiceLineCodecAttrGet, voiceLineCodecAttrSet},
+{TR98_VOICE_LINE_CODEC_LIST,	ATTR_INDEXNODE,	para_VoiceLineCodecList, voiceLineCodecListObjGet,	 voiceLineCodecListObjSet,					 NULL,			   NULL,	voiceNotify, voiceLineCodecListAttrGet, voiceLineCodecListAttrSet},
+//{TR98_VOICE_LINE_SESSION                },
+{TR98_VOICE_LINE_STATS,			0,              para_VoiceLineStats,    voiceLineStatsObjGet,       NULL,                   NULL,       NULL,	voiceNotify,voiceLineStatsAttrGet,voiceLineStatsAttrSet},
+{TR98_VOICE_PHY_INTF,			ATTR_INDEXNODE,	para_VoicePhyIntf,		voicePhyIntfObjGet,		 voicePhyIntfSet,		 NULL,			   NULL,	voiceNotify, voicePhyIntfAttrGet, voicePhyIntfAttrSet},
+//{TR98_VOICE_PSTN                        },
+{TR98_VOICE_COMMON,				0,				para_VoiceCommon, 		voiceCommonObjGet,			 voiceCommonSet, 	NULL, 		NULL, 	NULL},
+//{TR98_VOICE_PHONE_BOOK                  },
+//{TR98_VOICE_FXO                         },
+//{TR98_VOICE_FXO_PORT                    },
+#endif
+{TR98_CAPB,                     0,              NULL,                   NULL,                    NULL,                   NULL,             NULL,            NULL},
+{TR98_PERF_DIAG,                0,              para_PerpDiag,          perfDiagObjGet,          NULL,                   NULL,             NULL,            NULL},
+{TR98_DEV_INFO,                 0,              para_DevInfo,           devInfoObjGet,           devInfoObjSet,          NULL,             NULL,            devInfoObjNotify, devInfoObjAttrGet, devInfoObjAttrSet},
+//{TR98_VEND_CONF_FILE,           ATTR_INDEXNODE, NULL,                   NULL,                    NULL,                   NULL,             NULL,            NULL},
+//{TR98_DEV_CONF,                 0,              NULL,                   NULL,                    NULL,                   NULL,             NULL,            NULL},
+{TR98_MGMT_SRV,                 0,              para_MgmtSrv,           mgmtSrvObjGet,           mgmtSrvObjSet,          NULL,             NULL,            mgmtSrvObjNotify, mgmtSrvObjAttrGet, mgmtSrvObjAttrSet},
+{TR98_MGAB_DEV,                 ATTR_INDEXNODE, para_MgabDev,           mgabDevObjGet,           NULL,                   NULL,             NULL,            NULL},
+{TR98_TIME,                     0,              para_Time,              timeObjGet,              timeObjSet,             NULL,             NULL,            NULL},
+//{TR98_USR_INTF,                 0,              NULL,                   NULL,                    NULL,                   NULL,             NULL,            NULL},
+//{TR98_CAPT_PORTAL,              0,              NULL,                   NULL,                    NULL,                   NULL,             NULL,            NULL},
+{TR98_L3_FWD,                   0,              para_L3Fwd,             l3fwdObjGet,             l3fwdObjSet,                   NULL,             NULL,            NULL, NULL, NULL},
+{TR98_FWD,                      ATTR_INDEX_CREA,para_Fwd,               l3fwdFwdTbObjGet,        l3fwdFwdTbObjSet,       l3fwdFwdTbObjAdd, l3fwdFwdTbObjDel,  NULL, NULL, l3fwdFwdTbObjAttrSet},
+{TR98_L2_BR,                    0,               para_L2Br,              l2BridingObjGet,         NULL,                   NULL,             NULL,            l2BridingObjNotify, l2BridingObjAttrGet, l2BridingObjAttrSet},
+{TR98_BR,                       ATTR_INDEX_CREA, para_Br,                l2BrObjGet,              l2BrObjSet,             l2BrObjAdd,       l2BrObjDel,      l2BrObjNotify, l2BrObjAttrGet, l2BrObjAttrSet},
+{TR98_PORT,                     ATTR_INDEX_CREA, para_Port,              l2BrPortObjGet,           l2BrPortObjSet,         l2BrPortObjAdd,   l2BrPortObjDel,   NULL,         NULL,           NULL},
+{TR98_VLAN,                     ATTR_INDEX_CREA,  para_Vlan,              l2BrVlanObjGet,          l2BrVlanObjSet,        l2BrVlanObjAdd,   l2BrVlanObjDel,  l2BrVlanObjNotify, l2BrVlanObjAttrGet, l2BrVlanObjAttrSet},
+{TR98_FILTER,                   ATTR_INDEX_CREA, para_Filter,            l2BrFilterObjGet,        l2BrFilterObjSet,       l2BrFilterObjAdd, l2BrFilterObjDel,l2BrFilterObjNotify, l2BrFilterObjAttrGet, l2BrFilterObjAttrSet},
+{TR98_MARK,                     ATTR_INDEX_CREA, para_Mark,              NULL,                    NULL,                   NULL,             NULL,            NULL},
+{TR98_AVAI_INTF,                ATTR_INDEXNODE,  para_AvaiIntf,          l2BrAvailableIntfObjGet, NULL,                   NULL,             NULL,            l2BrAvailableIntfObjNotify, l2BrAvailableIntfObjAttrGet, l2BrAvailableIntfObjAttrSet},
+{TR98_QUE_MGMT,                 0,               para_qMgmt,          	qMgmtObjGet,     		   qMgmtSet,               NULL,             NULL,            qMgmtNotify, qMgmtAttrGet, qMgmtAttrSet},
+{TR98_CLS,                      ATTR_INDEX_CREA, para_Cls,          	qMgmtClsObjGet,			   qMgmtClsSet,            qMgmtClsAdd,      qMgmtClsDel,     qMgmtClsNotify, qMgmtClsAttrGet, qMgmtClsAttrSet},
+//{TR98_APP,                      ATTR_INDEX_CREA, NULL,                   NULL,                    NULL,                   NULL,             NULL,            NULL},
+//{TR98_FLOW,                     ATTR_INDEX_CREA, NULL,                   NULL,                    NULL,                   NULL,             NULL,            NULL},
+{TR98_POLICER,                  ATTR_INDEX_CREA, NULL,                   NULL,                    NULL,                   NULL,             NULL,            NULL},
+{TR98_QUE,                      ATTR_INDEX_CREA, para_Que,              qMgmtQueObjGet,			   qMgmtQueSet,            qMgmtQueAdd,      qMgmtQueDel,     qMgmtQueNotify, qMgmtQueAttrGet, qMgmtQueAttrSet},
+{TR98_SHAPER,                   ATTR_INDEX_CREA, para_Shaper,			qMgmtShaperObjGet,	   	   qMgmtShaperSet,         qMgmtShaperAdd,   qMgmtShaperDel,  qMgmtShaperNotify, qMgmtShaperAttrGet, qMgmtShaperAttrSet},
+//{TR98_QUE_STAT,                 ATTR_INDEXNODE, NULL,                   NULL,                    NULL,                   NULL,             NULL,            NULL},
+{TR98_LAN_CONF_SEC,             0,               para_LanConfSec,        lanConfSecObjGet,        lanConfSecObjSet,       NULL,             NULL,            lanConfSecObjNotify, lanConfSecObjAttrGet, lanConfSecObjAttrSet},
+{TR98_IP_PING_DIAG,             0,              para_IpPingDiag,        ipPingDiagObjGet,        ipPingDiagObjSet,       NULL,             NULL,            NULL},
+{TR98_TRA_RT_DIAG,              0,              para_TraceRtDiag,       traceRtDiagObjGet,       traceRtDiagObjSet,      NULL,             NULL,            NULL},
+{TR98_RT_HOP,                   ATTR_INDEXNODE, para_RtHop,		        routeHopsObjGet,         NULL,                   NULL,             NULL,            NULL},
+{TR98_DL_DIAG,                  0,              para_DlDiag,			dlDiagObjGet,            dlDiagObjSet,           NULL,             NULL,            NULL},
+{TR98_UL_DIAG,                  0,              para_UlDiag,			ulDiagObjGet,            ulDiagObjSet,           NULL,             NULL,            NULL},
+{TR98_UDP_ECHO_CONF,            0,              para_UdpEchoCfg,        udpEchoCfgObjGet,        udpEchoCfgObjSet,       NULL,             NULL,            NULL},
+{TR98_LAN_DEV,                  ATTR_INDEX_CREA,para_LanDev,            lanDevObjGet,            NULL,                   lanDevObjAdd,     lanDevObjDel,    NULL},
+{TR98_LAN_HOST_CONF_MGMT,       0,              para_LanHostConfMgmt,   lanHostConfMgmtObjGet,   lanHostConfMgmtObjSet,  NULL,             NULL,            NULL},
+{TR98_IP_INTF,                  ATTR_INDEX_CREA,para_IpIntf,		    lanIpIntfObjGet,         lanIpIntfObjSet,        lanIpIntfObjAdd,  lanIpIntfObjDel,	NULL},
+#ifdef IPV6INTERFACE_PROFILE
+{TR98_IP_INTF_IPV6ADDR,         ATTR_INDEX_CREA,para_IpIntfV6Addr,		lanIpIntfV6AddrObjGet,   lanIpIntfV6AddrObjSet,  lanIpIntfV6AddrObjAdd,  lanIpIntfV6AddrObjDel,	NULL},
+{TR98_IP_INTF_IPV6PREFIX,		ATTR_INDEX_CREA,para_IpIntfV6Prefix,	lanIpIntfV6PrefixObjGet, lanIpIntfV6PrefixObjSet,lanIpIntfV6PrefixObjAdd,lanIpIntfV6PrefixObjDel, NULL},
+#endif
+#ifdef ROUTERADVERTISEMENT_PROFILE
+{TR98_IP_INTF_ROUTERADVER,      0,				para_IpIntfRouterAdver, lanIpIntfRouterAdverObjGet, lanIpIntfRouterAdverObjSet,        NULL,  NULL,	NULL},
+#endif
+#ifdef IPV6SERVER_PROFILE
+{TR98_IP_INTF_DHCPV6SRV,        0,				para_IpIntfV6Srv,		lanIpIntfV6SrvObjGet,    lanIpIntfV6SrvObjSet,        NULL,  NULL,	NULL},
+#endif
+{TR98_DHCP_STATIC_ADDR,         ATTR_INDEX_CREA,para_DhcpStaticAddr,    lanDhcpStaticAddrObjGet, lanDhcpStaticAddrObjSet,lanDhcpStaticAddrObjAdd,lanDhcpStaticAddrObjDel, lanDhcpStaticAddrObjNotify, lanDhcpStaticAddrObjAttrGet, lanDhcpStaticAddrObjAttrSet},
+{TR98_DHCP_OPT,                 ATTR_INDEX_CREA,para_DhcpOpt,           lanDhcpOptObjGet,        lanDhcpOptObjSet,       lanDhcpOptObjAdd, lanDhcpOptObjDel,lanDhcpOptObjNotify, lanDhcpOptObjAttrGet, lanDhcpOptObjAttrSet},
+#ifdef ZyXEL_DHCP_OPTION125
+{TR98_VENDOR_SPECIFIC,                 0,              para_VendorSpecific,          zyExtVendorSpecObjGet,          zyExtVendorSpecObjSet,         NULL,             NULL,            NULL, NULL, NULL},
+{TR98_VENDOR_SPECIFIC_PROF,           ATTR_INDEX_CREA, para_VendorSpecificProf,     zyExtVendorSpecProfObjGet,     zyExtVendorSpecProfObjSet,    zyExtVendorSpecProfObjAdd,zyExtVendorSpecProfObjDel,NULL, NULL, NULL},
+#endif
+{TR98_DHCP_COND_SERVPOOL,       ATTR_INDEX_CREA,para_DhcpCondServPool,  lanDhcpCondServPoolObjGet,  lanDhcpCondServPoolObjSet,  lanDhcpCondServPoolObjAdd,  lanDhcpCondServPoolObjDel, lanDhcpCondServPoolObjNotify, lanDhcpCondServPoolObjAttrGet, lanDhcpCondServPoolObjAttrSet},
+{TR98_SERVPOOL_DHCP_STATICADDR, ATTR_INDEX_CREA,para_DhcpCondServPoolDhcpStaticAddr,NULL, NULL, NULL, NULL, NULL, NULL, NULL},
+{TR98_SERVPOOL_DHCP_OPT,        ATTR_INDEX_CREA,para_DhcpCondServPoolDhcpOpt,NULL,  NULL,  NULL,  NULL, NULL, NULL, NULL},
+{TR98_LAN_ETH_INTF_CONF,        ATTR_INDEXNODE, para_LanEthIntfConf,    lanEthIntfConfObjGet,    lanEthIntfConfObjSet,   NULL,             NULL,            lanEthIntfConfObjNotify, lanEthIntfConfObjAttrGet, lanEthIntfConfObjAttrSet},
+{TR98_LAN_ETH_INTF_CONF_STAT,   0,              para_LanEthIntfConfStat,lanEthIntfConfStatObjGet,NULL,                   NULL,             NULL,            NULL},
+//{TR98_LAN_USB_INTF_CONF,        ATTR_INDEXNODE, NULL,                   NULL,                    NULL,                   NULL,             NULL,            NULL},
+//{TR98_LAN_USB_INTF_CONF_STAT,   0,              NULL,                   NULL,                    NULL,                   NULL,             NULL,            NULL},
+{TR98_LAN_DEV_WLAN_CFG,         ATTR_INDEXNODE,	para_LanDevWlanCfg,     lanDevWlanCfgObjGet,     lanDevWlanCfgObjSet, NULL, NULL, lanDevWlanCfgObjNotify, lanDevWlanCfgObjAttrGet, lanDevWlanCfgObjAttrSet},
+{TR98_WLAN_CFG_STAT,            0,              para_LanDevWlanCfgStat, lanDevWlanCfgStatObjGet,        NULL,                   NULL,             NULL,            NULL},
+{TR98_WPS,                      0,              para_LanDevWlanCfgWps,  lanDevWlanCfgWpsObjGet,  lanDevWlanCfgWpsObjSet, NULL,             NULL,            NULL},
+//{TR98_REG,                      ATTR_INDEXNODE, NULL,                   NULL,                    NULL,                   NULL,             NULL,            NULL},
+{TR98_ASSOC_DEV,                ATTR_INDEXNODE, para_LanDevWlanCfgAssocDev,          lanDevWlanCfgAssocDevObjGet,                    NULL,                   NULL,             NULL,            NULL},
+{TR98_WEP_KEY,                  ATTR_INDEXNODE, para_WepKey,            lanDevWlanCfgWEPKeyObjGet,lanDevWlanCfgWEPKeyObjSet,                   NULL,             NULL,            NULL},
+{TR98_PSK,                      ATTR_INDEXNODE, para_Psk,               lanDevWlanCfgPskObjGet,  lanDevWlanCfgPskObjSet, NULL,             NULL,            NULL},
+//{TR98_AP_WMM_PARAM,             ATTR_INDEXNODE, NULL,                   NULL,                    NULL,                   NULL,             NULL,            NULL},
+//{TR98_STA_WMM_PARAM,            ATTR_INDEXNODE, NULL,                   NULL,                    NULL,                   NULL,             NULL,            NULL},
+{TR98_HOSTS,                    ATTR_INDEXNODE, para_Hosts,				lanDevHostsObjGet,			NULL,                   NULL,             NULL,            lanDevHostsObjNotify, lanDevHostsObjAttrGet, lanDevHostsObjAttrSet},
+{TR98_HOST,                     ATTR_INDEXNODE, para_Host,				lanDevHostObjGet,			NULL,                   NULL,             NULL,            lanDevHostObjNotify, lanDevHostObjAttrGet, lanDevHostObjAttrSet},
+//{TR98_LAN_INTF,                 0,              NULL,                   NULL,                    NULL,                   NULL,             NULL,            NULL},
+//{TR98_LAN_INTF_ETH_INTF_CONF,   ATTR_INDEXNODE, NULL,                   NULL,                    NULL,                   NULL,             NULL,            NULL},
+//{TR98_USB_INTF_CONF,            ATTR_INDEXNODE, NULL,                   NULL,                    NULL,                   NULL,             NULL,            NULL},
+//{TR98_LAN_INTF_WLAN_CFG,        ATTR_INDEXNODE, NULL,                   NULL,                    NULL,                   NULL,             NULL,            NULL},
+#ifdef SOL_TR69_3G_Backup
+{TR98_WAN_DEV,                  ATTR_INDEXNODE,	para_WanDev,            WANDeviceObjGet,         WANDeviceObjSet,                   NULL,             NULL,            NULL},
+#else
+{TR98_WAN_DEV,                  ATTR_INDEXNODE, para_WanDev,            WANDeviceObjGet,         NULL,                   NULL,             NULL,            NULL},
+#endif
+{TR98_WAN_COMM_INTF_CONF,       0,              para_WANCommIfaceCfg,   WANCommIfaceCfgObjGet,   NULL,                   NULL,             NULL,            NULL},
+//{TR98_WAN_COMM_INTF_CONNECT,    ATTR_INDEXNODE, NULL,                   NULL,                    NULL,                   NULL,             NULL,            NULL},
+{TR98_WAN_DSL_INTF_CONF,        0,              para_WANDslIfaceCfg,    WANDslIfaceCfgObjGet,    WANDslIfaceCfgObjSet,   NULL,             NULL,            NULL},
+{TR98_WAN_DSL_INTF_TEST_PARAM,  0,              para_WANDslIfTestParam, WANDslIfTestParamObjGet,    NULL,                   NULL,             NULL,            NULL},
+{TR98_WAN_DSL_INTF_CONF_STAT,   0,              NULL,                   NULL,                    NULL,                   NULL,             NULL,            NULL},
+{TR98_TTL,                      0,              para_WANDslIfaceCfgStatTotal,  WANDslIfaceCfgTtlObjGet,                    NULL,                   NULL,             NULL,            NULL},
+{TR98_ST,                       0,              para_WANDslIfaceCfgStatSt,     WANDslIfaceCfgStObjGet,                    NULL,                   NULL,             NULL,            NULL},
+//{TR98_LST_SHOWTIME,             0,              NULL,                   NULL,                    NULL,                   NULL,             NULL,            NULL},
+{TR98_CURRENT_DAY,              0,              para_WANDslIfaceCfgStatObjs,   WANDslIfaceCfgStatsSubObjGet,                    NULL,                   NULL,             NULL,            NULL, NULL, NULL},
+//{TR98_QTR_HR,                   0,              NULL,                   NULL,                    NULL,                   NULL,             NULL,            NULL},
+{TR98_WAN_ETH_INTF_CONF,        0,              para_WANEthIntfConf,    WANEthIfaceCfgObjGet,	 WANEthIfaceCfgObjSet,   NULL,             NULL,            NULL},
+{TR98_WAN_ETH_INTF_CONF_STAT,   0,              para_WANEthIntfConfStat,WANEthIfaceCfgStObjGet,  NULL,                   NULL,             NULL,            NULL},
+{TR98_WAN_DSL_DIAG,             0,              para_WANDslDiag,        WANDslDiagObjGet,        WANDslDiagObjSet,       NULL,             NULL,            NULL},
+{TR98_WAN_CONN_DEV,             ATTR_INDEX_CREA,para_WANConnDev,        WANConnDevObjGet,        NULL,                   WANConnDevObjAdd, WANConnDevObjDel,NULL},
+{TR98_WAN_DSL_LINK_CONF,        0,              para_WANDslLinkConf,    WANDslLinkConfObjGet,    WANDslLinkConfObjSet,   NULL,             NULL,            NULL},
+{TR98_WAN_ATM_F5_LO_DIAG,       0,              para_WanAtmF5LoDiag,    WANAtmF5LoConfObjGet,    WANAtmF5LoConfObjSet,   NULL,             NULL,            NULL},
+{TR98_WAN_ATM_F4_LO_DIAG,		0,				para_WanAtmF4LoDiag,	WANAtmF4LoConfObjGet,	 WANAtmF4LoConfObjSet,	 NULL,			   NULL,			NULL},
+{TR98_WAN_PTM_LINK_CONF,        0,              para_WANPtmLinkConf,    WANPtmLinkConfObjGet,    WANPtmLinkConfObjSet,   NULL,             NULL,            NULL},
+{TR98_WAN_PTM_LINK_CONF_STAT,   0,              para_WANPtmLinkConfStat,WANPtmLinkConfStObjGet,  NULL,                   NULL,             NULL,            NULL},
+{TR98_WAN_ETH_LINK_CONF,        0,              para_WANEthLinkConf,    WANEthLinkConfObjGet,    NULL,                   NULL,             NULL,            NULL},
+//{TR98_WAN_POTS_LINK_CONF,       0,              NULL,                   NULL,                    NULL,                   NULL,             NULL,            NULL},
+{TR98_WAN_IP_CONN,              ATTR_INDEX_CREA,para_WANIpConn,         WANIpConnObjGet,         WANIpConnObjSet,        WANIpConnObjAdd,  WANIpConnObjDel, WANIpConnObjNotify, WANIpConnObjAttrGet, WANIpPppConnObjAttrSet},
+{TR98_WAN_IP_CONN_MLD,	        0,              para_WANIpConnMld,      WANConnMldObjGet,        WANConnMldObjSet,       NULL, 			   NULL, 			WANConnMldObjNotify, WANConnMldObjAttrGet, WANConnMldObjAttrSet},
+{TR98_DHCP_CLIENT,              0,              para_DhcpClient,        DhcpClientObjGet,        NULL,                   NULL,             NULL, DhcpClientObjNotify, DhcpClientObjAttrGet, DhcpClientObjAttrSet},
+{TR98_SENT_DHCP_OPT,            ATTR_INDEX_CREA, para_SentDhcpOpt,      DhcpClientSentOptObjGet, DhcpClientSentOptObjSet, DhcpClientSentOptObjAdd, DhcpClientSentOptObjDel, DhcpClientOptObjNotify, DhcpClientSentOptObjAttrGet, DhcpClientSentOptObjAttrSet},
+{TR98_REQ_DHCP_OPT,             ATTR_INDEX_CREA, para_ReqDhcpOpt,       DhcpClientReqOptObjGet,  DhcpClientReqOptObjSet, DhcpClientReqOptObjAdd, DhcpClientReqOptObjDel, DhcpClientOptObjNotify, DhcpClientReqOptObjAttrGet, DhcpClientReqOptObjAttrSet},
+{TR98_WAN_IP_PORT_MAP,          ATTR_INDEX_CREA, para_WANIpPortMap,      WANPortMappingObjGet,       WANPortMappingSet,      WANPortMappingAdd, WANPortMappingDel, WANPortMappingNotify, WANPortMappingAttrGet, WANPortMappingAttrSet},
+{TR98_WAN_IP_PORT_TRIGGER,      ATTR_INDEX_CREA, para_WANIpPortTrigger, WANPortTriggerObjGet,    WANPortTriggerSet,      WANPortTriggerAdd, WANPortTriggerDel, WANPortTriggerNotify, WANPortTriggerAttrGet, WANPortTriggerAttrSet},
+{TR98_WAN_IP_ADDR_MAPPING,      ATTR_INDEX_CREA, para_WANIpAddrMapping, WANAddrMappingObjGet,    WANAddrMappingSet,      WANAddrMappingAdd, WANAddrMappingDel, WANAddrMappingNotify, WANAddrMappingAttrGet, WANAddrMappingAttrSet},
+{TR98_WAN_IP_CONN_STAT,         0,              para_WANIpConnStat,     WANConnStObjGet,         NULL,                   NULL,     NULL, WANConnStObjNotify, WANConnStObjAttrGet, WANConnStObjAttrSet},
+#ifdef IPV6INTERFACE_PROFILE
+{TR98_WAN_IP_CONN_IPV6ADDR,     ATTR_INDEX_CREA, para_WANIpv6Addr,      WANIpv6AddrObjGet,        WANIpv6AddrObjSet,     WANIpv6AddrObjAdd, WANIpv6AddrObjDel,            NULL},
+{TR98_WAN_IP_CONN_IPV6PREFIX, 	ATTR_INDEX_CREA, para_WANIpv6Prefix, 	WANIpv6PrefixObjGet,	 WANIpv6PrefixObjSet,   WANIpv6PrefixObjAdd, WANIpv6PrefixObjDel,			NULL},
+#endif
+#ifdef DHCPV6CLIENT_PROFILE
+{TR98_WAN_IP_CONN_DHCPV6CLIENT, 0, 				para_WANIpDhcpV6Client,     WANIpv6DhcpV6ObjGet, WANIpv6DhcpV6ObjSet,    NULL,             NULL,            NULL},
+#endif
+#ifdef IPV6RD_PROFILE
+{TR98_WAN_IP_CONN_IPV6RD,       0,              para_WANIpv6Rd,     	WANIpv6RdObjGet,         WANIpv6RdObjSet,        NULL,             NULL,            NULL},
+#endif
+{TR98_WAN_PPP_CONN,             ATTR_INDEX_CREA,para_WANPppConn,        WANPppConnObjGet,        WANPppConnObjSet,       WANPppConnObjAdd, WANPppConnObjDel, WANPppConnObjNotify, WANPppConnObjAttrGet, WANIpPppConnObjAttrSet},
+{TR98_WAN_PPP_PORT_MAP,         ATTR_INDEX_CREA,para_WANPppPortMap,     WANPortMappingObjGet,    WANPortMappingSet,      WANPortMappingAdd, WANPortMappingDel, WANPortMappingNotify, WANPortMappingAttrGet, WANPortMappingAttrSet},	
+{TR98_WAN_PPP_PORT_TRIGGER,     ATTR_INDEX_CREA,para_WANPppPortTrigger, WANPortTriggerObjGet,    WANPortTriggerSet,      WANPortTriggerAdd, WANPortTriggerDel, WANPortTriggerNotify, WANPortTriggerAttrGet, WANPortTriggerAttrSet},
+{TR98_WAN_PPP_ADDR_MAPPING,     ATTR_INDEX_CREA,para_WANPppAddrMapping, WANAddrMappingObjGet,    WANAddrMappingSet,      WANAddrMappingAdd, WANAddrMappingDel, WANAddrMappingNotify, WANAddrMappingAttrGet, WANAddrMappingAttrSet},
+{TR98_WAN_PPP_CONN_STAT,        0,              para_WANPppConnStat,    WANConnStObjGet,         NULL,                   NULL,   NULL, WANConnStObjNotify, WANConnStObjAttrGet, WANConnStObjAttrSet},
+{TR98_WAN_PPP_CONN_MLD,	        0,              para_WANPppConnMld,     WANConnMldObjGet,        WANConnMldObjSet,       NULL, 			   NULL, 			WANConnMldObjNotify, WANConnMldObjAttrGet, WANConnMldObjAttrSet},
+#ifdef IPV6INTERFACE_PROFILE
+{TR98_WAN_PPP_CONN_IPV6ADDR,    ATTR_INDEX_CREA, para_WANPppv6Addr,     WANPppv6AddrObjGet,        WANPppv6AddrObjSet,     WANPppv6AddrObjAdd, WANPppv6AddrObjDel,            NULL},
+{TR98_WAN_PPP_CONN_IPV6PREFIX, 	ATTR_INDEX_CREA, para_WANPppv6Prefix,	WANPppv6PrefixObjGet,	 WANPppv6PrefixObjSet,   WANPppv6PrefixObjAdd, WANPppv6PrefixObjDel,			NULL},
+#endif
+#ifdef DHCPV6CLIENT_PROFILE
+{TR98_WAN_PPP_CONN_DHCPV6CLIENT, 0, 			para_WANPppDhcpV6Client, WANPppv6DhcpV6ObjGet, WANPppv6DhcpV6ObjSet,    NULL,             NULL,            NULL},
+#endif
+#ifdef IPV6RD_PROFILE
+{TR98_WAN_PPP_CONN_IPV6RD,      0,				para_WANPppv6Rd,        WANPppv6RdObjGet,         WANPppv6RdObjSet,        NULL,             NULL,            NULL},
+#endif
+#ifdef CONFIG_XPON_SUPPORT
+{TR98_WAN_PON_INTF_CONF,        0,				para_WANPonIntfConf,     WANPonIfaceCfgObjGet,   WANPonIfaceCfgObjSet,   NULL,             NULL,            NULL},
+{TR98_WAN_PON_INTF_CONF_STAT,   0,			    para_WANPonIntfConfStat, WANPonIfaceCfgStObjGet, NULL,                   NULL,             NULL,            NULL},
+#endif
+{TR98_FIREWALL,                 0,              para_Firewall,          firewallObjGet,          firewallObjSet,         NULL,             NULL,            firewallObjNotify, firewallObjAttrGet, firewallObjAttrSet},
+{TR98_FIREWALL_LEVEL,           ATTR_INDEX_CREA,para_FirewallLevel,     firewallLevelObjGet,     firewallLevelObjSet,    firewallLevelObjAdd,firewallLevelObjDel,firewallLevelObjNotify, firewallLevelObjAttrGet, firewallLevelObjAttrSet},
+{TR98_FIREWALL_CHAIN,           ATTR_INDEX_CREA,para_FirewallChain,     firewallChainObjGet,     firewallChainObjSet,    firewallChainObjAdd,firewallChainObjDel,firewallChainObjNotify, firewallChainObjAttrGet, firewallChainObjAttrSet},
+{TR98_FIREWALL_CHAIN_RULE,      ATTR_INDEX_CREA,para_FirewallChainRule, firewallRuleObjGet,      firewallRuleObjSet,     firewallRuleObjAdd,firewallRuleObjDel,firewallRuleObjNotify, firewallRuleObjAttrGet, firewallRuleObjAttrSet},
+#if ZYXEL_EXT
+{TR98_ZYXEL_EXT,             	0,				NULL,        			NULL,        			 NULL,       			 NULL, 				NULL,			NULL},
+{TR98_DNS_RT_ENTRY,             ATTR_INDEX_CREA,para_DnsRtEntry,        zyExtDnsRtObjGet,        zyExtDnsRtObjSet,       zyExtDnsRtObjAdd, zyExtDnsRtObjDel,zyExtDnsRtObjNotify, zyExtDnsRtObjAttrGet, zyExtDnsRtObjAttrSet},
+{TR98_DNS_ENTRY, 	            ATTR_INDEX_CREA,para_DnsEntry, 		    zyExtDnsEntryObjGet,     zyExtDnsEntryObjSet,    zyExtDnsEntryObjAdd, zyExtDnsEntryObjDel,zyExtDnsEntryObjNotify, zyExtDnsEntryObjAttrGet, zyExtDnsEntryObjAttrSet},
+{TR98_D_DNS,                    0,              para_DDns,              zyExtDDnsObjGet,         zyExtDDnsObjSet,        NULL,             NULL,            zyExtDDnsObjNotify, zyExtDDnsObjAttrGet, zyExtDDnsObjAttrSet},
+{TR98_TR064, 	                0,              para_Tr064,	            zyExtTr064ObjGet,	     zyExtTr064ObjSet,	     NULL,             NULL,            zyExtTr064ObjNotify, zyExtTr064ObjAttrGet, zyExtTr064ObjAttrSet},
+{TR98_VLAN_GROUP,               ATTR_INDEX_CREA,para_VlanGroup,         zyExtVlanGroupObjGet,	 zyExtVlanGroupObjSet,	 zyExtVlanGroupObjAdd, zyExtVlanGroupObjDel, zyExtVlanGroupObjNotify, zyExtVlanGroupObjAttrGet, zyExtVlanGroupObjAttrSet},
+{TR98_EMAIL_NOTIFY,             0,              NULL,       			NULL,  					 NULL, 					 NULL,             NULL,            NULL, NULL, NULL},
+{TR98_EMAIL_SERVICE,            ATTR_INDEX_CREA,para_EmailSrv,	        zyExtEmailSrvObjGet,     zyExtEmailSrvObjSet,	 zyExtEmailSrvObjAdd, zyExtEmailSrvObjDel,  zyExtEmailSrvObjNotify, zyExtEmailSrvObjAttrGet, zyExtEmailSrvObjAttrSet},
+{TR98_EMAIL_EVENT_CFG,          ATTR_INDEX_CREA,para_EmailEvent,	    zyExtEmailEventObjGet,   zyExtEmailEventObjSet,	 zyExtEmailEventObjAdd, zyExtEmailEventObjDel, zyExtEmailEventObjNotify, zyExtEmailEventObjAttrGet, zyExtEmailEventObjAttrSet},
+{TR98_SYS_INFO,                 0,              para_SysInfo,           zyExtSysInfoObjGet,      zyExtSysInfoObjSet,     NULL,             NULL,            zyExtSysInfoObjNotify, zyExtSysInfoObjAttrGet, zyExtSysInfoObjAttrSet},
+{TR98_SNMP, 	                0,              para_Snmp,	            zyExtSnmpObjGet, 	     zyExtSnmpObjSet,     NULL,             NULL,            zyExtSnmpObjNotify, zyExtSnmpObjAttrGet, zyExtSnmpObjAttrSet},
+{TR98_SNMP_TRAP,                ATTR_INDEX_CREA,para_SnmpTrap,          zyExtSnmpTrapObjGet,     zyExtSnmpTrapObjSet,    zyExtSnmpTrapObjAdd,	zyExtSnmpTrapObjDel,	zyExtSnmpTrapObjNotify, zyExtSnmpTrapObjAttrGet, zyExtSnmpTrapObjAttrSet},
+{TR98_SCHEDULE,                 ATTR_INDEX_CREA,para_Schedule,          scheduleObjGet,          scheduleObjSet,         scheduleObjAdd,   scheduleObjDel,  scheduleObjNotify, scheduleObjAttrGet, scheduleObjAttrSet},
+{TR98_REMO_MGMT,				0,				NULL,					NULL,					 NULL,					 NULL,				NULL,			NULL},
+{TR98_REMO_SRV, 			    ATTR_INDEX_CREA,para_RemoSrv,		    zyExtRemoteMgmtSrvObjGet,		 zyExtRemoteMgmtSrvObjSet,		 zyExtRemoteMgmtSrvObjAdd, zyExtRemoteMgmtSrvObjDel, zyExtRemoteMgmtSrvObjNotify, zyExtRemoteMgmtSrvObjAttrGet, zyExtRemoteMgmtSrvObjAttrSet},
+{TR98_IEEE8021AG,               0,              para_8021ag,	        zyExt8021agObjGet, 	     zyExt8021agObjSet,		NULL,             NULL,            zyExt8021agObjNotify, zyExt8021agObjAttrGet, zyExt8021agObjAttrSet},
+{TR98_SAMBA,         		    0,              para_Samba,	   		    zyExtSambaObjGet, 	     zyExtSambaObjSet,		NULL,             NULL,            zyExtSambaObjNotify, zyExtSambaObjAttrGet, zyExtSambaObjAttrSet},
+#ifdef SOL_TR69_TRUSTDOMAIN
+{TR98_REMO_TRUSTDOMAIN,         ATTR_INDEX_CREA,para_RemoTrustDomain,   zyExtRemoteMgmtTrustDomainObjGet,                    zyExtRemoteMgmtTrustDomainObjSet,                   zyExtRemoteMgmtTrustDomainObjAdd,            zyExtRemoteMgmtTrustDomainObjDel,            NULL},
+#endif
+{TR98_IGMP,                     0,              para_Igmp,              zyExtIgmpObjGet,         zyExtIgmpObjSet,        NULL,             NULL,            zyExtIgmpObjNotify, NULL, NULL},
+#if defined(SUNRISE_RANDOM_PASSWORD) || defined(SOL_TR69_LOGINACCOUNT)
+{TR98_LOG_CFG,                  0,              NULL,              NULL,         NULL,        NULL,             NULL,            NULL, NULL, NULL},
+{TR98_LOG_CFG_GP,               ATTR_INDEX_CREA,para_LogCfgGp,          zyExtLogCfgGpObjGet,       zyExtLogCfgGpObjSet,        NULL,             NULL,            NULL,   NULL,    NULL},
+#ifdef SOL_TR69_LOGINACCOUNT
+{TR98_LOG_CFG_GP_ACCOUNT,       ATTR_INDEX_CREA,para_LogCfgGpAccount,   zyExtLogCfgGpAccountObjGet,		zyExtLogCfgGpAccountObjSet,        zyExtLogCfgGpAccountObjAdd,             zyExtLogCfgGpAccountObjDel,            NULL, NULL, NULL},
+#else
+{TR98_LOG_CFG_GP_ACCOUNT,       ATTR_INDEX_CREA,para_LogCfgGpAccount,   zyExtLogCfgGpAccountObjGet,		zyExtLogCfgGpAccountObjSet,        zyExtLogCfgGpAccountObjAdd,             NULL,            NULL, NULL, NULL},
+#endif
+#endif
+{TR98_LOG_SETTING,              ATTR_INDEX_CREA,para_LogSetting,        zyExtLogSettingObjGet,			zyExtLogSettingObjSet,		NULL,             NULL,            zyExtLogSettingObjNotify, zyExtLogSettingObjAttrGet, zyExtLogSettingObjAttrSet},
+{TR98_LOG_CLASSIFY,				ATTR_INDEX_CREA,para_LogClassify,		zyExtLogClassifyObjGet,			NULL, 						zyExtLogClassifyObjAdd,	zyExtLogClassifyObjDel,	zyExtLogClassifyObjNotify, zyExtLogClassifyObjAttrGet, zyExtLogClassifyObjAttrSet},
+{TR98_LOG_CATEGORY,             ATTR_INDEX_CREA,para_LogCategory,       zyExtLogCategoryObjGet,         zyExtLogCategoryObjSet,		zyExtLogCategoryObjAdd,	zyExtLogCategoryObjDel,	zyExtLogCategoryObjNotify, zyExtLogCategoryObjAttrGet, zyExtLogCategoryObjAttrSet},
+{TR98_MACFILTER,		    	0, 				para_MacFilter,			zyExtMacFilterObjGet,			zyExtMacFilterObjSet,		NULL,             NULL,            zyExtMacFilterObjNotify, zyExtMacFilterObjAttrGet, zyExtMacFilterObjAttrSet},
+{TR98_MACFILTER_WHITELIST,		ATTR_INDEX_CREA,para_MacFilter_WhiteList, zyExtMacFilterWhiteListObjGet,zyExtMacFilterWhiteListObjSet, zyExtMacFilterWhiteListObjAdd, zyExtMacFilterWhiteListObjDel, zyExtMacFilterWhiteListObjNotify, zyExtMacFilterWhiteListObjAttrGet, zyExtMacFilterWhiteListObjAttrSet},
+{TR98_PAREN_CTL,                0,              para_ParenCtl,          zyExtParenCtlObjGet,         	zyExtParenCtlObjSet,        NULL,             NULL,            zyExtParenCtlObjNotify, zyExtParenCtlObjAttrGet, zyExtParenCtlObjAttrSet},
+{TR98_PAREN_CTL_PROF,           ATTR_INDEX_CREA,para_ParenCtlProf,      zyExtParenCtlProfObjGet,		zyExtParenCtlProfObjSet,    zyExtParenCtlProfObjAdd, zyExtParenCtlProfObjDel, zyExtParenCtlProfObjNotify, zyExtParenCtlProfObjAttrGet, zyExtParenCtlProfObjAttrSet},
+{TR98_SEC,    		            0,              para_Sec,    		    zyExtSecObjGet,         		NULL,     			  		NULL,             NULL,            zyExtSecObjNotify, zyExtSecObjAttrGet, zyExtSecObjAttrSet},
+{TR98_SEC_CERT,  		        ATTR_INDEX_CREA,para_SecCert, 		    zyExtSecCertObjGet,				zyExtSecCertObjSet,  		zyExtSecCertObjAdd, zyExtSecCertObjDel, zyExtSecCertObjNotify, zyExtSecCertObjAttrGet, zyExtSecCertObjAttrSet},
+#ifdef ONECONNECT
+{TR98_ONECONNECT_SPEEDTESTINFO,	0, 				para_SpeedTestInfo,		zyExtSpeedTestInfoObjGet,		 zyExtSpeedTestInfoObjSet,		   NULL,             NULL,            NULL},
+#endif
+#endif
+#if OBSOLETED
+#else
+//{TR98_WAN_DSL_CONN_MGMT,        0,              NULL,                   NULL,                    NULL,                   NULL,             NULL,            NULL},
+//{TR98_WAN_DSL_CONN_SRVC,        ATTR_INDEXNODE, NULL,                   NULL,                    NULL,                   NULL,             NULL,            NULL},
+#endif
+#ifdef ONECONNECT
+{TR98_ONECONNECT_EXT,		    0, 				para_OneConnectExt,		oneConnectExtObjGet,		 oneConnectExtObjSet,		   NULL,             NULL,            NULL},
+#endif
+#ifdef ZyXEL_IPP_PRINTSERVER
+{TR98_PRINT_SERVER,             0,              para_Ipp_PrintServer,   zyExtIppPrintServObjGet,          zyExtIppPrintServObjSet,         NULL,             NULL,            NULL, NULL, NULL},
+#endif
+{NULL,                          0,              NULL,                   NULL,                    NULL,                   NULL,             NULL,            NULL}
+};
