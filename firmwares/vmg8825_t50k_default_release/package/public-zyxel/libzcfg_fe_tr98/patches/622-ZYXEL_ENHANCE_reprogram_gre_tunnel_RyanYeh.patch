Index: libzcfg_fe_tr98-1.0/Makefile
===================================================================
--- libzcfg_fe_tr98-1.0.orig/Makefile	2019-05-02 14:12:07.155086370 +0800
+++ libzcfg_fe_tr98-1.0/Makefile	2019-05-02 14:12:07.203086372 +0800
@@ -259,7 +259,7 @@
 
 #Support tr98 GRE
 ifeq ($(CONFIG_ZYXEL_GRE),y)
-CFLAGS += -DZYXEL_X_GRE
+CFLAGS += -DZYXEL_GRE_SUPPORT
 endif
 
 ifeq ($(CONFIG_ZCFG_RPC_REQUEST_ADDITIONS),y)
Index: libzcfg_fe_tr98-1.0/zcfg_fe_tr98.c
===================================================================
--- libzcfg_fe_tr98-1.0.orig/zcfg_fe_tr98.c	2019-05-02 14:12:07.191086371 +0800
+++ libzcfg_fe_tr98-1.0/zcfg_fe_tr98.c	2019-05-02 14:12:07.207086372 +0800
@@ -26,7 +26,7 @@
 #include "oneConnect.h"
 #endif
 #include "ipv6Spec.h"
-#ifdef ZYXEL_X_GRE
+#ifdef ZYXEL_GRE_SUPPORT
 #include "xgre.h"
 #endif
 #include "zcfg_fe_rdm_access.h"
@@ -308,7 +308,7 @@
 {e_TR98_IPV6_DHCPV6_SERVER_CNT_OPT	,&tr98Obj[e_TR98_IPV6_DHCPV6_SERVER_CNT_OPT -e_TR98_START]},
 {e_TR98_IPV6_DHCPV6_SERVER_OPT	, &tr98Obj[e_TR98_IPV6_DHCPV6_SERVER_OPT -e_TR98_START]},
 #endif
-#ifdef ZYXEL_X_GRE
+#ifdef ZYXEL_GRE_SUPPORT
 {e_TR98_GRE						,&tr98Obj[e_TR98_GRE 					-e_TR98_START]},
 {e_TR98_GRE_TUNNEL				,&tr98Obj[e_TR98_GRE_TUNNEL 			-e_TR98_START]},
 {e_TR98_GRE_TUNNEL_STATS		,&tr98Obj[e_TR98_GRE_TUNNEL_STATS 		-e_TR98_START]},
Index: libzcfg_fe_tr98-1.0/zcfg_fe_tr98_handle.h
===================================================================
--- libzcfg_fe_tr98-1.0.orig/zcfg_fe_tr98_handle.h	2019-05-02 14:12:07.127086369 +0800
+++ libzcfg_fe_tr98-1.0/zcfg_fe_tr98_handle.h	2019-05-02 14:12:07.207086372 +0800
@@ -349,7 +349,7 @@
 #define TR98_IPV6_DHCPV6_SERVER_OPT		"InternetGatewayDevice.IPv6Specific.DHCPv6.Server.Pool.i.Option.i"
 #endif
 
-#ifdef ZYXEL_X_GRE
+#ifdef ZYXEL_GRE_SUPPORT
 #define TR98_XGRE						"InternetGatewayDevice.X_GRE"
 #define TR98_XGRE_TUNNEL				"InternetGatewayDevice.X_GRE.Tunnel.i"
 #define TR98_XGRE_TUNNEL_STATS			"InternetGatewayDevice.X_GRE.Tunnel.i.Stats"
@@ -620,10 +620,10 @@
 {TR98_IPV6_DHCPV6_SERVER_CNT_OPT,		ATTR_INDEXNODE,	para_Ipv6Dhcpv6SrvCntOpt,	zyIpv6Dhcpv6SrvCntOptObjGet, NULL, NULL, NULL,	NULL,	NULL,	NULL},
 {TR98_IPV6_DHCPV6_SERVER_OPT,	ATTR_INDEX_CREA,para_Ipv6Dhcpv6SrvOpt, 		zyIpv6Dhcpv6SrvOptObjGet,	zyIpv6Dhcpv6SrvOptObjSet, zyIpv6Dhcpv6SrvOptObjAdd, zyIpv6Dhcpv6SrvOptObjDel,	NULL,	NULL,	NULL},
 #endif
-#ifdef ZYXEL_X_GRE
-{TR98_XGRE,						0,				para_XGRE,					zyXGREObjGet, 			 NULL, NULL, NULL,	NULL,	NULL,	NULL},
-{TR98_XGRE_TUNNEL, 				ATTR_INDEX_CREA,para_XGRETunnel,			zyXGRETunnelObjGet, 	 zyXGRETunnelObjSet, zyXGRETunnelObjAdd,	zyXGRETunnelObjDel,	NULL,	NULL,	NULL},
-{TR98_XGRE_TUNNEL_STATS,		0, 				para_XGRETunnelStats,		zyXGRETunnelStatsObjGet, NULL, NULL, NULL,	NULL,	NULL,	NULL},
+#ifdef ZYXEL_GRE_SUPPORT
+{TR98_XGRE,                     0,              para_XGRE,                  zyXGREObjGet,               NULL,               NULL,               NULL,               NULL,   NULL,   NULL},
+{TR98_XGRE_TUNNEL,              ATTR_INDEX_CREA,para_XGRETunnel,            zyXGRETunnelObjGet,         zyXGRETunnelObjSet, zyXGRETunnelObjAdd, zyXGRETunnelObjDel, NULL,   NULL,   NULL},
+{TR98_XGRE_TUNNEL_STATS,        0,              para_XGRETunnelStats,       zyXGRETunnelStatsObjGet,    NULL,               NULL,               NULL,               NULL,   NULL,   NULL},
 #endif
 #if ZYXEL_EXT
 {TR98_ZYXEL_EXT,                0,              para_extend,            zyExtObjGet,             zyExtObjSet, NULL, NULL, NULL, NULL, NULL},
Index: libzcfg_fe_tr98-1.0/l2bridge.c
===================================================================
--- libzcfg_fe_tr98-1.0.orig/l2bridge.c	2019-05-02 14:12:06.547086345 +0800
+++ libzcfg_fe_tr98-1.0/l2bridge.c	2019-05-02 14:12:07.207086372 +0800
@@ -1843,7 +1843,7 @@
 		return ret;
 	}
 
-#if ZYXEL_X_GRE
+#if ZYXEL_GRE_SUPPORT
 	/*check it is gre br or not*/
 	rdm_BridgingBr_t *brBdgObj = NULL;
 	IID_INIT(objIid);
@@ -1934,7 +1934,7 @@
 		return ZCFG_INTERNAL_ERROR;
 	}
 	
-#if ZYXEL_X_GRE
+#if ZYXEL_GRE_SUPPORT
 	/*check it is gre br or not*/
 	rdm_BridgingBr_t *brBdgObj = NULL;
 	IID_INIT(objIid);
@@ -1942,7 +1942,7 @@
 	objIid.level = 1;
 	if((ret = zcfgFeObjStructGet(RDM_OID_BRIDGING_BR, &objIid, (void **)&brBdgObj)) == ZCFG_SUCCESS)
 	{
-		if(strstr(brBdgObj->X_ZYXEL_BridgeName, "brgre"))
+		if(strstr(brBdgObj->X_ZYXEL_BridgeName, "GRE_BR"))
 		{
 			printf("%s: can not modify gre br\n", __FUNCTION__);
 			return ZCFG_INVALID_PARAM_VALUE;
Index: libzcfg_fe_tr98-1.0/xgre.c
===================================================================
--- libzcfg_fe_tr98-1.0.orig/xgre.c	2019-05-02 14:12:06.543086345 +0800
+++ libzcfg_fe_tr98-1.0/xgre.c	2019-05-02 14:11:31.758421700 +0800
@@ -17,542 +17,516 @@
 
 zcfgRet_t zyXGREObjGet(char *tr98FullPathName, int handler, struct json_object **tr98Jobj, bool updateFlag)
 {
-	zcfgRet_t ret;
-	objIndex_t objIid;
-	struct json_object *GREObj = NULL;
-	struct json_object *paramValue = NULL;
-	struct json_object *tr181ParamValue = NULL;
-	tr98Parameter_t *paramList = NULL;
-	//printf("%s enter\n",__FUNCTION__);
-
-	IID_INIT(objIid);
-	if((ret = feObjJsonGet(RDM_OID_GRE, &objIid, &GREObj, updateFlag)) != ZCFG_SUCCESS){
-		return ret;
-	}
-
-	/*fill up tr98 object from related tr181 objects*/
-	*tr98Jobj = json_object_new_object();
-	paramList = tr98Obj[handler].parameter;
-	while(paramList->name != NULL){
-		if(!strcmp(paramList->name, "TunnelNumberOfEntries")) {
-			uint32_t tunnelNum = 0;
-			objIndex_t GRETunnelIid;
-			struct json_object *GRETunnelObj = NULL;
-			IID_INIT(GRETunnelIid);
-			while((ret = feObjJsonGetNext(RDM_OID_GRE_TUNNEL, &GRETunnelIid, &GRETunnelObj, TR98_GET_WITHOUT_UPDATE)) == ZCFG_SUCCESS) 
-			{
-				tunnelNum++;
-				json_object_put(GRETunnelObj);
-			}
-			json_object_object_add(*tr98Jobj, "TunnelNumberOfEntries", json_object_new_int(tunnelNum));
-			paramList++;
-			continue;
-		}
-
-		/*Write parameter value from tr181 objects to tr98 object*/ 	
-		paramValue = json_object_object_get(GREObj, paramList->name);
-		if(paramValue != NULL){
-			json_object_object_add(*tr98Jobj, paramList->name, JSON_OBJ_COPY(paramValue));
-			paramList++;
-			continue;
-		}
-
-		/*Not defined in tr181, give it a default value*/
-		printf("Can't find parameter %s in TR181\n", paramList->name);
-		paramList++;	
-	}
-	
-	json_object_put(GREObj);
-	return ZCFG_SUCCESS;
-}
+    zcfgRet_t ret = ZCFG_SUCCESS;
+    objIndex_t objIid = {0};
+    struct json_object *greObj = NULL;
+    struct json_object *paramValue = NULL;
+    tr98Parameter_t *paramList = NULL;
+
+    printf("%s : Enter\n", __FUNCTION__);
+
+    IID_INIT(objIid);
+    if((ret = feObjJsonGet(RDM_OID_GRE, &objIid, &greObj, updateFlag)) != ZCFG_SUCCESS) {
+        return ret;
+    }
+
+    /* Fill up tr98 object from related tr181 objects */
+    *tr98Jobj = json_object_new_object();
+    paramList = tr98Obj[handler].parameter;
+    while(paramList->name != NULL) {
+        /* Write parameter value from tr181 objects to tr98 object */
+        paramValue = json_object_object_get(greObj, paramList->name);
+        if(paramValue != NULL) {
+            json_object_object_add(*tr98Jobj, paramList->name, JSON_OBJ_COPY(paramValue));
+            paramList++;
+            continue;
+        }
+
+        /* Not defined in tr181, give it a default value */
+        printf("Can't find parameter %s in TR181\n", paramList->name);
+        paramList++;
+    }
 
-zcfgRet_t zyXGRETunnelObjGet(char *tr98FullPathName, int handler, struct json_object **tr98Jobj, bool updateFlag)
-{
-	zcfgRet_t ret;
-	objIndex_t objIid;
-	struct json_object *GRETunnelObj = NULL;
-	struct json_object *tr181ParamValue = NULL;
-	struct json_object *paramValue = NULL;
-	tr98Parameter_t *paramList = NULL;
-	//printf("%s enter\n",__FUNCTION__);
-
-	IID_INIT(objIid);
-	objIid.level = 1;
-	sscanf(tr98FullPathName, "InternetGatewayDevice.X_GRE.Tunnel.%hhu", &objIid.idx[0]);
-
-	if((ret = zcfgFeObjJsonGet(RDM_OID_GRE_TUNNEL, &objIid, &GRETunnelObj)) != ZCFG_SUCCESS){
-		printf("%s: fail to get GRE tunnel obj codec object ret=%d\n", __FUNCTION__, ret);
-		return ret;
-	}
-	
-	/*fill up tr98 object from related tr181 objects*/
-	*tr98Jobj = json_object_new_object();
-	paramList = tr98Obj[handler].parameter;
-	while(paramList->name != NULL){
-		if(!strcmp(paramList->name, "LowerLayers")) {
-			paramValue = json_object_object_get(GRETunnelObj, "X_ZYXEL_LowerLayers");
-			if(paramValue != NULL){
-				json_object_object_add(*tr98Jobj, "LowerLayers", JSON_OBJ_COPY(paramValue));
-				paramList++;
-				continue;
-			}
-		}
-
-		if(!strcmp(paramList->name, "InterfaceGroup")) {
-			paramValue = json_object_object_get(GRETunnelObj, "X_ZYXEL_InterfaceGroup");
-			if(paramValue != NULL){
-				json_object_object_add(*tr98Jobj, "InterfaceGroup", JSON_OBJ_COPY(paramValue));
-				paramList++;
-				continue;
-			}
-		}
-
-		if(!strcmp(paramList->name, "RemoteEndpoint")) {
-			paramValue = json_object_object_get(GRETunnelObj, "RemoteEndpoints");
-			if(paramValue != NULL){
-				json_object_object_add(*tr98Jobj, "RemoteEndpoint", JSON_OBJ_COPY(paramValue));
-				paramList++;
-				continue;
-			}
-		}
-
-		if(!strcmp(paramList->name, "RemoteEndpoint2")) {
-			paramValue = json_object_object_get(GRETunnelObj, "X_ZYXEL_RemoteEndpoint2");
-			if(paramValue != NULL){
-				json_object_object_add(*tr98Jobj, "RemoteEndpoint2", JSON_OBJ_COPY(paramValue));
-				paramList++;
-				continue;
-			}
-		}
-
-		if(!strcmp(paramList->name, "ConnRemoteEndpoint")) {
-			paramValue = json_object_object_get(GRETunnelObj, "ConnectedRemoteEndpoint");
-			if(paramValue != NULL){
-				json_object_object_add(*tr98Jobj, "ConnRemoteEndpoint", JSON_OBJ_COPY(paramValue));
-				paramList++;
-				continue;
-			}
-		}
-
-		if(!strcmp(paramList->name, "Checksum")) {
-			paramValue = json_object_object_get(GRETunnelObj, "X_ZYXEL_Checksum");
-			if(paramValue != NULL){
-				json_object_object_add(*tr98Jobj, "Checksum", JSON_OBJ_COPY(paramValue));
-				paramList++;
-				continue;
-			}
-		}
-
-		if(!strcmp(paramList->name, "Seq")) {
-			paramValue = json_object_object_get(GRETunnelObj, "X_ZYXEL_SequenceNumber");
-			if(paramValue != NULL){
-				json_object_object_add(*tr98Jobj, "Seq", JSON_OBJ_COPY(paramValue));
-				paramList++;
-				continue;
-			}
-		}
-
-		if(!strcmp(paramList->name, "Key")) {
-			paramValue = json_object_object_get(GRETunnelObj, "X_ZYXEL_SequenceNumber");
-			if(paramValue != NULL){
-				json_object_object_add(*tr98Jobj, "Key", JSON_OBJ_COPY(paramValue));
-				paramList++;
-				continue;
-			}
-		}
-
-		if(!strcmp(paramList->name, "ShapingRate")) {
-			paramValue = json_object_object_get(GRETunnelObj, "X_ZYXEL_ShapingRate");
-			if(paramValue != NULL){
-				json_object_object_add(*tr98Jobj, "ShapingRate", JSON_OBJ_COPY(paramValue));
-				paramList++;
-				continue;
-			}
-		}
-
-		if(!strcmp(paramList->name, "DownstreamShapingRate")) {
-			paramValue = json_object_object_get(GRETunnelObj, "X_ZYXEL_DownstreamShapingRate");
-			if(paramValue != NULL){
-				json_object_object_add(*tr98Jobj, "DownstreamShapingRate", JSON_OBJ_COPY(paramValue));
-				paramList++;
-				continue;
-			}
-		}
-
-		if(!strcmp(paramList->name, "DSCP")) {
-			paramValue = json_object_object_get(GRETunnelObj, "X_ZYXEL_DSCP");
-			if(paramValue != NULL){
-				json_object_object_add(*tr98Jobj, "DSCP", JSON_OBJ_COPY(paramValue));
-				paramList++;
-				continue;
-			}
-		}
-
-		if(!strcmp(paramList->name, "VlanGroupNumberOfEntriesxsi")) {
-			paramValue = json_object_object_get(GRETunnelObj, "X_ZYXEL_VlanGroupNumberOfEntriesxsi");
-			if(paramValue != NULL){
-				json_object_object_add(*tr98Jobj, "VlanGroupNumberOfEntriesxsi", JSON_OBJ_COPY(paramValue));
-				paramList++;
-				continue;
-			}
-		}
-
-		if(!strcmp(paramList->name, "MaxAssociatedDevices")) {
-			paramValue = json_object_object_get(GRETunnelObj, "X_ZYXEL_MaxAssociatedDevices");
-			if(paramValue != NULL){
-				json_object_object_add(*tr98Jobj, "MaxAssociatedDevices", JSON_OBJ_COPY(paramValue));
-				paramList++;
-				continue;
-			}
-		}
-
-		/*Write parameter value from tr181 objects to tr98 object*/		
-		paramValue = json_object_object_get(GRETunnelObj, paramList->name);
-		if(paramValue != NULL){
-			json_object_object_add(*tr98Jobj, paramList->name, JSON_OBJ_COPY(paramValue));
-			paramList++;
-			continue;
-		}
-
-		/*Not defined in tr181, give it a default value*/
-		printf("Can't find parameter %s in TR181\n", paramList->name);
-		paramList++;	
-	}
-	
-	json_object_put(GRETunnelObj);
+    zcfgFeJsonObjFree(greObj);
 
-	return ZCFG_SUCCESS;
+    return ZCFG_SUCCESS;
 }
 
-int zyXGRETunnelObjCheckBr(char *pchLowerLayers)
+zcfgRet_t zyXGRETunnelObjGet(char *tr98FullPathName, int handler, struct json_object **tr98Jobj, bool updateFlag)
 {
-	bool brFound = false;
-	objIndex_t brIid, brPortIid;;
-	struct json_object *brPortJobj = NULL;
-	char brLowerLayers[257];
-	struct json_object *brLowerLayersParamValue = NULL;
-
-	IID_INIT(brIid);
-	brIid.level=1;
-	brIid.idx[0]=1;
-	brFound=false;
-	IID_INIT(brPortIid);
-	while((zcfgFeSubInObjJsonGetNext(RDM_OID_BRIDGING_BR_PORT, &brIid, &brPortIid, &brPortJobj)) == ZCFG_SUCCESS)
-	{
-		brLowerLayersParamValue=json_object_object_get(brPortJobj, "LowerLayers");
-		memset(brLowerLayers, 0, sizeof(brLowerLayers));
-		strcpy(brLowerLayers, json_object_get_string(brLowerLayersParamValue));
-		if(strcmp(pchLowerLayers, brLowerLayers)==0)
-		{
-			brFound = true;
-		}
-		json_object_put(brPortJobj);
-	}
+    zcfgRet_t ret = ZCFG_SUCCESS;
+    objIndex_t greTunnelIid = {0};
+    objIndex_t greIfaceIid = {0};
+    objIndex_t brPortIid = {0};
+    struct json_object *greTunnelObj = NULL;
+    struct json_object *greIfaceObj = NULL;
+    struct json_object *brPortObj = NULL;
+    struct json_object *paramValue = NULL;
+    tr98Parameter_t *paramList = NULL;
+    char mapping98ObjName[128] = {0};
+    char result[1024] = {0};
+    const char *strPtr = NULL;
+    char *strBuf = NULL;
+    char *strToken = NULL;
+    char *tmp = NULL;
+
+    printf("%s : Enter\n", __FUNCTION__);
+
+    IID_INIT(greTunnelIid);
+    greTunnelIid.level = 1;
+    sscanf(tr98FullPathName, "InternetGatewayDevice.X_GRE.Tunnel.%hhu", &greTunnelIid.idx[0]);
+    if((ret = zcfgFeObjJsonGet(RDM_OID_GRE_TUNNEL, &greTunnelIid, &greTunnelObj)) != ZCFG_SUCCESS) {
+        printf("%s : Get RDM_OID_GRE_TUNNEL fail, ret = %d\n", __FUNCTION__, ret);
+        return ret;
+    }
+
+    /* Fill up tr98 object from related tr181 objects */
+    *tr98Jobj = json_object_new_object();
+    paramList = tr98Obj[handler].parameter;
+    while(paramList->name != NULL) {
+        if(!strcmp(paramList->name, "BoundWanInterfaces")) {
+            /* Collect bound WAN interfaces and convert to TR-098 parameter name */
+            paramValue = json_object_object_get(greTunnelObj, "X_ZYXEL_BoundIfList");
+            if(paramValue != NULL) {
+                memset(result, 0, sizeof(result));
+                strPtr = json_object_get_string(paramValue);
+                if(strlen(strPtr) > 0) {
+                    strBuf = strdup(strPtr);
+                    strToken = strtok_r(strBuf, ",", &tmp);
+                    while(strToken != NULL) {
+                        memset(mapping98ObjName, 0, sizeof(mapping98ObjName));
+                        if(zcfgFe181To98MappingNameGet(strToken, mapping98ObjName) == ZCFG_SUCCESS)
+                            sprintf(result + strlen(result), "%s,", mapping98ObjName);
+                        else
+                            printf("%s : zcfgFe181To98MappingNameGet fail\n", __FUNCTION__);
+                        strToken = strtok_r(NULL, ",", &tmp);
+                    }
+                    if(strlen(result) > 0)
+                        result[strlen(result)-1] = '\0';
+                    free(strBuf);
+                }
+
+                json_object_object_add(*tr98Jobj, "BoundWanInterfaces", json_object_new_string(result));
+                paramList++;
+                continue;
+            }
+        }
+
+        if(!strcmp(paramList->name, "BoundLanInterfaces")) {
+            /* Collect bound LAN interfaces and convert to TR-098 parameter name */
+            memset(result, 0, sizeof(result));
+            IID_INIT(greIfaceIid);
+            while(zcfgFeSubInObjJsonGetNextWithoutUpdate(RDM_OID_GRE_TUNNEL_IFACE, &greTunnelIid, &greIfaceIid, &greIfaceObj) == ZCFG_SUCCESS) {
+                paramValue = json_object_object_get(greIfaceObj, "LowerLayers");
+                if(paramValue != NULL) {
+                    strPtr = json_object_get_string(paramValue);
+                    if(strlen(strPtr) > 0) {
+                        IID_INIT(brPortIid);
+                        brPortIid.level = 2;
+                        sscanf(strPtr, "Bridging.Bridge.%hhu.Port.%hhu", &brPortIid.idx[0], &brPortIid.idx[1]);
+                        if(zcfgFeObjJsonGetWithoutUpdate(RDM_OID_BRIDGING_BR_PORT, &brPortIid, &brPortObj) == ZCFG_SUCCESS) {
+                            strPtr = json_object_get_string(json_object_object_get(brPortObj, "LowerLayers"));
+                            memset(mapping98ObjName, 0, sizeof(mapping98ObjName));
+                            if(zcfgFe181To98MappingNameGet(strPtr, mapping98ObjName) == ZCFG_SUCCESS)
+                                sprintf(result + strlen(result), "%s,", mapping98ObjName);
+                            else
+                                printf("%s : zcfgFe181To98MappingNameGet fail\n", __FUNCTION__);
+                            zcfgFeJsonObjFree(brPortObj);
+                        }
+                    }
+                }
+                zcfgFeJsonObjFree(greIfaceObj);
+            }
+            if(strlen(result) > 0)
+                result[strlen(result)-1] = '\0';
+
+            json_object_object_add(*tr98Jobj, "BoundLanInterfaces", json_object_new_string(result));
+            paramList++;
+            continue;
+        }
+
+        if(!strcmp(paramList->name, "VlanId")) {
+            paramValue = json_object_object_get(greTunnelObj, "X_ZYXEL_VLANID");
+            if(paramValue != NULL) {
+                json_object_object_add(*tr98Jobj, "VlanId", JSON_OBJ_COPY(paramValue));
+                paramList++;
+                continue;
+            }
+        }
+
+        if(!strcmp(paramList->name, "UpRate")) {
+            paramValue = json_object_object_get(greTunnelObj, "X_ZYXEL_UpRate");
+            if(paramValue != NULL) {
+                json_object_object_add(*tr98Jobj, "UpRate", JSON_OBJ_COPY(paramValue));
+                paramList++;
+                continue;
+            }
+        }
+
+        if(!strcmp(paramList->name, "DownRate")) {
+            paramValue = json_object_object_get(greTunnelObj, "X_ZYXEL_DownRate");
+            if(paramValue != NULL) {
+                json_object_object_add(*tr98Jobj, "DownRate", JSON_OBJ_COPY(paramValue));
+                paramList++;
+                continue;
+            }
+        }
+
+        if(!strcmp(paramList->name, "DSCP")) {
+            paramValue = json_object_object_get(greTunnelObj, "X_ZYXEL_DSCP");
+            if(paramValue != NULL) {
+                json_object_object_add(*tr98Jobj, "DSCP", JSON_OBJ_COPY(paramValue));
+                paramList++;
+                continue;
+            }
+        }
+
+        /*Write parameter value from tr181 objects to tr98 object*/
+        paramValue = json_object_object_get(greTunnelObj, paramList->name);
+        if(paramValue != NULL) {
+            json_object_object_add(*tr98Jobj, paramList->name, JSON_OBJ_COPY(paramValue));
+            paramList++;
+            continue;
+        }
+
+        /*Not defined in tr181, give it a default value*/
+        printf("Can't find parameter %s in TR181\n", paramList->name);
+        paramList++;
+    }
+
+    zcfgFeJsonObjFree(greTunnelObj);
 
-	//printf("beGRETunnelCheckBr: brFound=%d\n",brFound);
-	return brFound;
+    return ZCFG_SUCCESS;
 }
 
 zcfgRet_t zyXGRETunnelObjSet(char *tr98FullPathName, int handler, struct json_object *tr98Jobj, struct json_object *multiJobj, char *paramfault)
 {
-	zcfgRet_t ret;
-	objIndex_t objIid;
-	struct json_object *GRETunnelObj = NULL;
-	struct json_object *tmpObj = NULL;
-	struct json_object *paramValue = NULL;
-	struct json_object *tr181ParamValue = NULL;
-	tr98Parameter_t *paramList = NULL;
-	//printf("%s : Enter\n", __FUNCTION__);
-
-	IID_INIT(objIid);
-	objIid.level = 1;
-	sscanf(tr98FullPathName, "InternetGatewayDevice.X_GRE.Tunnel.%hhu", &objIid.idx[0]);
-
-	/*Get related tr181 objects*/
-	if((ret = zcfgFeObjJsonGet(RDM_OID_GRE_TUNNEL, &objIid, &GRETunnelObj)) != ZCFG_SUCCESS){
-		printf("%s: fail to get GRE tunnel obj codec object ret=%d\n", __FUNCTION__, ret);
-		return ret;
-	}
-
-	if(multiJobj){
-		tmpObj = GRETunnelObj;
-		GRETunnelObj = NULL;
-		GRETunnelObj = zcfgFeJsonMultiObjAppend(RDM_OID_GRE_TUNNEL, &objIid, multiJobj, tmpObj);
-	}
-
-	paramList = tr98Obj[handler].parameter;
-	while(paramList->name != NULL){
-		if(!strcmp(paramList->name, "LowerLayers")) {
-			paramValue = json_object_object_get(tr98Jobj, paramList->name);
-			if(paramValue != NULL){
-				/*check LowerLayers in default bridge or not*/
-				char inputLowerLayers[1024];
-				struct json_object *brLowerLayersParamValue = NULL;
-				struct json_object *greLowerLayersParamValue = NULL;
-				bool brFound = false;
-				bool brFail = false;
-				char LowerLayers[64] = {0};
-				char *delim = ",";
-				char *pch, *pchGRE;
-				objIndex_t brIid, brPortIid;
-				struct json_object *brPortJobj = NULL;
-				char brLowerLayers[200];
-				char greLowerLayers[512];
-				char pchLowerLayers[64];
-				char pchGreLowerLayers[64];
-
-				strcpy(inputLowerLayers, json_object_get_string(paramValue));
-				pch = strtok(inputLowerLayers,delim);
-				while (pch != NULL)
-				{
-					memset(pchLowerLayers, 0, sizeof(pchLowerLayers));
-					strcpy(pchLowerLayers, pch);
-					brFound=zyXGRETunnelObjCheckBr(pchLowerLayers);
-					greLowerLayersParamValue=json_object_object_get(GRETunnelObj, "X_ZYXEL_LowerLayers");
-					memset(greLowerLayers, 0, sizeof(greLowerLayers));
-					strcpy(greLowerLayers, json_object_get_string(greLowerLayersParamValue));
-					if(strstr(greLowerLayers, pchLowerLayers)!=NULL)
-					{
-						brFound = true;
-					}
-					if(!brFound)
-					{
-						brFail = true;
-					}
-
-					pch = strtok (NULL, delim);
-				}
-				if(brFail)
-					return ZCFG_INVALID_PARAM_VALUE;
-				
-				tr181ParamValue = json_object_object_get(GRETunnelObj, "X_ZYXEL_LowerLayers");
-				if(tr181ParamValue != NULL){
-					json_object_object_add(GRETunnelObj, "X_ZYXEL_LowerLayers", JSON_OBJ_COPY(paramValue));
-					paramList++;
-					continue;
-				}
-			}
-		}
-
-		if(!strcmp(paramList->name, "RemoteEndpoint")) {
-			paramValue = json_object_object_get(tr98Jobj, paramList->name);
-			if(paramValue != NULL){
-				tr181ParamValue = json_object_object_get(GRETunnelObj, "RemoteEndpoints");
-				if(tr181ParamValue != NULL){
-					json_object_object_add(GRETunnelObj, "RemoteEndpoints", JSON_OBJ_COPY(paramValue));
-					paramList++;
-					continue;
-				}
-			}
-		}
-
-		if(!strcmp(paramList->name, "RemoteEndpoint2")) {
-			paramValue = json_object_object_get(tr98Jobj, paramList->name);
-			if(paramValue != NULL){
-				tr181ParamValue = json_object_object_get(GRETunnelObj, "X_ZYXEL_RemoteEndpoint2");
-				if(tr181ParamValue != NULL){
-					json_object_object_add(GRETunnelObj, "X_ZYXEL_RemoteEndpoint2", JSON_OBJ_COPY(paramValue));
-					paramList++;
-					continue;
-				}
-			}
-		}
-
-		if(!strcmp(paramList->name, "ConnRemoteEndpoint")) {
-			paramValue = json_object_object_get(tr98Jobj, paramList->name);
-			if(paramValue != NULL){
-				tr181ParamValue = json_object_object_get(GRETunnelObj, "ConnectedRemoteEndpoint");
-				if(tr181ParamValue != NULL){
-					json_object_object_add(GRETunnelObj, "ConnectedRemoteEndpoint", JSON_OBJ_COPY(paramValue));
-					paramList++;
-					continue;
-				}
-			}
-		}
-
-		if(!strcmp(paramList->name, "Checksum")) {
-			paramValue = json_object_object_get(tr98Jobj, paramList->name);
-			if(paramValue != NULL){
-				tr181ParamValue = json_object_object_get(GRETunnelObj, "X_ZYXEL_Checksum");
-				if(tr181ParamValue != NULL){
-					json_object_object_add(GRETunnelObj, "X_ZYXEL_Checksum", JSON_OBJ_COPY(paramValue));
-					paramList++;
-					continue;
-				}
-			}
-		}
-
-		if(!strcmp(paramList->name, "Seq")) {
-			paramValue = json_object_object_get(tr98Jobj, paramList->name);
-			if(paramValue != NULL){
-				tr181ParamValue = json_object_object_get(GRETunnelObj, "X_ZYXEL_SequenceNumber");
-				if(tr181ParamValue != NULL){
-					json_object_object_add(GRETunnelObj, "X_ZYXEL_SequenceNumber", JSON_OBJ_COPY(paramValue));
-					paramList++;
-					continue;
-				}
-			}
-		}
-
-		if(!strcmp(paramList->name, "Key")) {
-			paramValue = json_object_object_get(tr98Jobj, paramList->name);
-			if(paramValue != NULL){
-				tr181ParamValue = json_object_object_get(GRETunnelObj, "X_ZYXEL_Key");
-				if(tr181ParamValue != NULL){
-					json_object_object_add(GRETunnelObj, "X_ZYXEL_Key", JSON_OBJ_COPY(paramValue));
-					paramList++;
-					continue;
-				}
-			}
-		}
-
-		if(!strcmp(paramList->name, "ShapingRate")) {
-			paramValue = json_object_object_get(tr98Jobj, paramList->name);
-			if(paramValue != NULL){
-				tr181ParamValue = json_object_object_get(GRETunnelObj, "X_ZYXEL_ShapingRate");
-				if(tr181ParamValue != NULL){
-					json_object_object_add(GRETunnelObj, "X_ZYXEL_ShapingRate", JSON_OBJ_COPY(paramValue));
-					paramList++;
-					continue;
-				}
-			}
-		}
-
-		if(!strcmp(paramList->name, "DownstreamShapingRate")) {
-			paramValue = json_object_object_get(tr98Jobj, paramList->name);
-			if(paramValue != NULL){
-				tr181ParamValue = json_object_object_get(GRETunnelObj, "X_ZYXEL_DownstreamShapingRate");
-				if(tr181ParamValue != NULL){
-					json_object_object_add(GRETunnelObj, "X_ZYXEL_DownstreamShapingRate", JSON_OBJ_COPY(paramValue));
-					paramList++;
-					continue;
-				}
-			}
-		}
-
-		if(!strcmp(paramList->name, "DSCP")) {
-			paramValue = json_object_object_get(tr98Jobj, paramList->name);
-			if(paramValue != NULL){
-				tr181ParamValue = json_object_object_get(GRETunnelObj, "X_ZYXEL_DSCP");
-				if(tr181ParamValue != NULL){
-					json_object_object_add(GRETunnelObj, "X_ZYXEL_DSCP", JSON_OBJ_COPY(paramValue));
-					paramList++;
-					continue;
-				}
-			}
-		}
-
-		/*Write new parameter value from tr98 object to tr181 objects*/	
-		paramValue = json_object_object_get(tr98Jobj, paramList->name);
-		if(paramValue != NULL){
-			tr181ParamValue = json_object_object_get(GRETunnelObj, paramList->name);
-			if(tr181ParamValue != NULL){
-				json_object_object_add(GRETunnelObj, paramList->name, JSON_OBJ_COPY(paramValue));
-				paramList++;
-				continue;
-			}
-		}
-		printf("Can't find parameter %s in TR181\n", paramList->name);
-		paramList++;	
-	}
-
-	if(multiJobj){
-		json_object_put(tmpObj);
-	}
-	else{
-		if((ret = zcfgFeObjJsonSet(RDM_OID_GRE_TUNNEL, &objIid, GRETunnelObj, NULL)) != ZCFG_SUCCESS ){
-			json_object_put(GRETunnelObj);
-			return ret;
-		}
-		json_object_put(GRETunnelObj);
-	}
+    zcfgRet_t ret = ZCFG_SUCCESS;
+    objIndex_t greTunnelIid = {0};
+    objIndex_t greIfaceIid = {0};
+    objIndex_t brPortIid = {0};
+    struct json_object *greTunnelObj = NULL;
+    struct json_object *greIfaceObj = NULL;
+    struct json_object *brPortObj = NULL;
+    struct json_object *tmpObj = NULL;
+    struct json_object *paramValue = NULL;
+    struct json_object *tr181ParamValue = NULL;
+    tr98Parameter_t *paramList = NULL;
+    char mapping181ObjName[128] = {0};
+    char tmpResult[1024] = {0};
+    char result[1024] = {0};
+    const char *strPtr = NULL;
+    char *strBuf = NULL;
+    char *strToken = NULL;
+    char *tmp = NULL;
+    bool found = false;
+
+    printf("%s : Enter\n", __FUNCTION__);
+
+    IID_INIT(greTunnelIid);
+    greTunnelIid.level = 1;
+    sscanf(tr98FullPathName, "InternetGatewayDevice.X_GRE.Tunnel.%hhu", &greTunnelIid.idx[0]);
+
+    /*Get related tr181 objects*/
+    if((ret = zcfgFeObjJsonGet(RDM_OID_GRE_TUNNEL, &greTunnelIid, &greTunnelObj)) != ZCFG_SUCCESS) {
+        printf("%s: fail to get GRE tunnel obj codec object ret=%d\n", __FUNCTION__, ret);
+        return ret;
+    }
+
+    if(multiJobj) {
+        tmpObj = greTunnelObj;
+        greTunnelObj = NULL;
+        greTunnelObj = zcfgFeJsonMultiObjAppend(RDM_OID_GRE_TUNNEL, &greTunnelIid, multiJobj, tmpObj);
+    }
+
+    paramList = tr98Obj[handler].parameter;
+    while(paramList->name != NULL) {
+        if(!strcmp(paramList->name, "BoundWanInterfaces")) {
+            /* Convert to TR-181 parameter name and validate it */
+            paramValue = json_object_object_get(tr98Jobj, paramList->name);
+            tr181ParamValue = json_object_object_get(greTunnelObj, "X_ZYXEL_BoundIfList");
+            if(paramValue != NULL && tr181ParamValue != NULL) {
+                strPtr = json_object_get_string(paramValue);
+                memset(result, 0, sizeof(result));
+                if(strlen(strPtr) > 0) {
+                    strBuf = strdup(strPtr);
+                    strToken = strtok_r(strBuf, ",", &tmp);
+                    while(strToken != NULL) {
+                        memset(mapping181ObjName, 0, sizeof(mapping181ObjName));
+                        if(zcfgFe98To181MappingNameGet(strToken, mapping181ObjName) == ZCFG_SUCCESS
+                            && (strstr(mapping181ObjName, "IP.Interface.") != NULL
+                            || (strstr(mapping181ObjName, "PPP.Interface.") != NULL
+                            && zcfgFeTr181IfaceStackHigherLayerGet(mapping181ObjName, mapping181ObjName) == ZCFG_SUCCESS))) {
+                            sprintf(result + strlen(result), "%s,", mapping181ObjName);
+                        }
+                        else {
+                            printf("%s : zcfgFe98To181MappingNameGet fail or invalid parameter value for %s\n", __FUNCTION__, paramList->name);
+                            zcfgFeJsonObjFree(greTunnelObj);
+                            free(strBuf);
+                            return ZCFG_INVALID_PARAM_VALUE;
+                        }
+                        strToken = strtok_r(NULL, ",", &tmp);
+                    }
+                    if(strlen(result) > 0)
+                        result[strlen(result)-1] = '\0';
+                    free(strBuf);
+                }
+
+                json_object_object_add(greTunnelObj, "X_ZYXEL_BoundIfList", json_object_new_string(result));
+                paramList++;
+                continue;
+            }
+        }
+
+        if(!strcmp(paramList->name, "BoundLanInterfaces")) {
+            /* Convert to TR-181 parameter name and validate it */
+            paramValue = json_object_object_get(tr98Jobj, paramList->name);
+            if(paramValue != NULL) {
+                strPtr = json_object_get_string(paramValue);
+                memset(tmpResult, 0, sizeof(tmpResult));
+                memset(result, 0, sizeof(result));
+                if(strlen(strPtr) > 0) {
+                    strBuf = strdup(strPtr);
+                    strToken = strtok_r(strBuf, ",", &tmp);
+                    while(strToken != NULL) {
+                        memset(mapping181ObjName, 0, sizeof(mapping181ObjName));
+                        if(zcfgFe98To181MappingNameGet(strToken, mapping181ObjName) == ZCFG_SUCCESS
+                            && strstr(mapping181ObjName, "WiFi.SSID.") != NULL) {
+                            sprintf(tmpResult + strlen(tmpResult), "%s,", mapping181ObjName);
+                        }
+                        else {
+                            printf("%s : zcfgFe98To181MappingNameGet fail or invalid parameter value for %s\n", __FUNCTION__, paramList->name);
+                            zcfgFeJsonObjFree(greTunnelObj);
+                            free(strBuf);
+                            return ZCFG_INVALID_PARAM_VALUE;
+                        }
+                        strToken = strtok_r(NULL, ",", &tmp);
+                    }
+                    if(strlen(tmpResult) > 0)
+                        tmpResult[strlen(tmpResult)-1] = '\0';
+                    free(strBuf);
+
+                    /* Convert WiFi.SSID.i to Bridging.Bridge.i.Port.i */
+                    IID_INIT(brPortIid);
+                    while(zcfgFeObjJsonGetNextWithoutUpdate(RDM_OID_BRIDGING_BR_PORT, &brPortIid, &brPortObj) == ZCFG_SUCCESS) {
+                        strPtr = json_object_get_string(json_object_object_get(brPortObj, "LowerLayers"));
+                        if(!json_object_get_boolean(json_object_object_get(brPortObj, "ManagementPort"))
+                            && strPtr != NULL && strlen(strPtr) > 0 && strstr(tmpResult, strPtr) != NULL) {
+                            sprintf(result + strlen(result), "Bridging.Bridge.%hhu.Port.%hhu,", brPortIid.idx[0], brPortIid.idx[1]);
+                        }
+                        zcfgFeJsonObjFree(brPortObj);
+                    }
+                    if(strlen(result) > 0)
+                        result[strlen(result)-1] = '\0';
+
+                    /* Delete the interfaces NOT in new BoundLanInterfaces */
+                    IID_INIT(greIfaceIid);
+                    while(zcfgFeSubInObjJsonGetNextWithoutUpdate(RDM_OID_GRE_TUNNEL_IFACE, &greTunnelIid, &greIfaceIid, &greIfaceObj) == ZCFG_SUCCESS) {
+                        strPtr = json_object_get_string(json_object_object_get(greIfaceObj, "LowerLayers"));
+                        if(strPtr == NULL || strlen(strPtr) == 0 || strstr(result, strPtr) == NULL) {
+                            zcfgFeObjJsonDel(RDM_OID_GRE_TUNNEL_IFACE, &greIfaceIid, NULL);
+                        }
+                        zcfgFeJsonObjFree(greIfaceObj);
+                    }
+
+                    /* Add new interfaces */
+                    strToken = strtok_r(result, ",", &tmp);
+                    while(strToken != NULL) {
+                        found = false;
+                        IID_INIT(greIfaceIid);
+                        while(zcfgFeSubInObjJsonGetNextWithoutUpdate(RDM_OID_GRE_TUNNEL_IFACE, &greTunnelIid, &greIfaceIid, &greIfaceObj) == ZCFG_SUCCESS) {
+                            strPtr = json_object_get_string(json_object_object_get(greIfaceObj, "LowerLayers"));
+                            if(strPtr != NULL && !strcmp(strToken, strPtr)) {
+                                found = true;
+                                zcfgFeJsonObjFree(greIfaceObj);
+                                break;
+                            }
+                            zcfgFeJsonObjFree(greIfaceObj);
+                        }
+
+                        if(!found) {
+                            IID_INIT(greIfaceIid);
+                            greIfaceIid.level = 1;
+                            greIfaceIid.idx[0] = greTunnelIid.idx[0];
+                            if(zcfgFeObjJsonAdd(RDM_OID_GRE_TUNNEL_IFACE, &greIfaceIid, NULL) != ZCFG_SUCCESS)
+                                break;
+
+                            if(zcfgFeObjJsonGetWithoutUpdate(RDM_OID_GRE_TUNNEL_IFACE, &greIfaceIid, &greIfaceObj) != ZCFG_SUCCESS)
+                                break;
+
+                            json_object_object_add(greIfaceObj, "Enable", json_object_new_boolean(true));
+                            json_object_object_add(greIfaceObj, "LowerLayers", json_object_new_string(strToken));
+
+                            zcfgFeObjJsonSet(RDM_OID_GRE_TUNNEL_IFACE, &greIfaceIid, greIfaceObj, NULL);
+                            zcfgFeJsonObjFree(greIfaceObj);
+                        }
+                        strToken = strtok_r(NULL, ",", &tmp);
+                    }
+                }
+
+                paramList++;
+                continue;
+            }
+        }
+
+        if(!strcmp(paramList->name, "VlanId")) {
+            paramValue = json_object_object_get(tr98Jobj, paramList->name);
+            if(paramValue != NULL) {
+                tr181ParamValue = json_object_object_get(greTunnelObj, "X_ZYXEL_VLANID");
+                if(tr181ParamValue != NULL) {
+                    json_object_object_add(greTunnelObj, "X_ZYXEL_VLANID", JSON_OBJ_COPY(paramValue));
+                    paramList++;
+                    continue;
+                }
+            }
+        }
+
+        if(!strcmp(paramList->name, "UpRate")) {
+            paramValue = json_object_object_get(tr98Jobj, paramList->name);
+            if(paramValue != NULL) {
+                tr181ParamValue = json_object_object_get(greTunnelObj, "X_ZYXEL_UpRate");
+                if(tr181ParamValue != NULL) {
+                    json_object_object_add(greTunnelObj, "X_ZYXEL_UpRate", JSON_OBJ_COPY(paramValue));
+                    paramList++;
+                    continue;
+                }
+            }
+        }
+
+        if(!strcmp(paramList->name, "DownRate")) {
+            paramValue = json_object_object_get(tr98Jobj, paramList->name);
+            if(paramValue != NULL) {
+                tr181ParamValue = json_object_object_get(greTunnelObj, "X_ZYXEL_DownRate");
+                if(tr181ParamValue != NULL) {
+                    json_object_object_add(greTunnelObj, "X_ZYXEL_DownRate", JSON_OBJ_COPY(paramValue));
+                    paramList++;
+                    continue;
+                }
+            }
+        }
+
+        if(!strcmp(paramList->name, "DSCP")) {
+            paramValue = json_object_object_get(tr98Jobj, paramList->name);
+            if(paramValue != NULL) {
+                tr181ParamValue = json_object_object_get(greTunnelObj, "X_ZYXEL_DSCP");
+                if(tr181ParamValue != NULL) {
+                    json_object_object_add(greTunnelObj, "X_ZYXEL_DSCP", JSON_OBJ_COPY(paramValue));
+                    paramList++;
+                    continue;
+                }
+            }
+        }
+
+        /*Write new parameter value from tr98 object to tr181 objects*/
+        paramValue = json_object_object_get(tr98Jobj, paramList->name);
+        if(paramValue != NULL) {
+            tr181ParamValue = json_object_object_get(greTunnelObj, paramList->name);
+            if(tr181ParamValue != NULL) {
+                json_object_object_add(greTunnelObj, paramList->name, JSON_OBJ_COPY(paramValue));
+                paramList++;
+                continue;
+            }
+        }
+        printf("Can't find parameter %s in TR181\n", paramList->name);
+        paramList++;
+    }
+
+    if(multiJobj) {
+        zcfgFeJsonObjFree(tmpObj);
+    }
+    else {
+        if((ret = zcfgFeObjJsonSet(RDM_OID_GRE_TUNNEL, &greTunnelIid, greTunnelObj, NULL)) != ZCFG_SUCCESS ) {
+            zcfgFeJsonObjFree(greTunnelObj);
+            return ret;
+        }
+        zcfgFeJsonObjFree(greTunnelObj);
+    }
 
-	return ZCFG_SUCCESS;
+    return ZCFG_SUCCESS;
 }
 
 zcfgRet_t zyXGRETunnelObjAdd(char *tr98FullPathName, int *idx)
 {
-	zcfgRet_t ret;
-	objIndex_t objIid;
+    zcfgRet_t ret;
+    objIndex_t objIid;
 
-	printf("%s : Enter\n", __FUNCTION__);
+    printf("%s : Enter\n", __FUNCTION__);
 
-	IID_INIT(objIid);
-	ret = zcfgFeObjStructAdd(RDM_OID_GRE_TUNNEL, &objIid, NULL);
-	*idx = objIid.idx[0];
+    IID_INIT(objIid);
+    ret = zcfgFeObjStructAdd(RDM_OID_GRE_TUNNEL, &objIid, NULL);
+    *idx = objIid.idx[0];
 
-	return ret;
+    return ret;
 }
 
 zcfgRet_t zyXGRETunnelObjDel(char *tr98FullPathName)
 {
-	objIndex_t objIid;
+    objIndex_t objIid;
 
-	printf("%s : Enter\n", __FUNCTION__);
+    printf("%s : Enter\n", __FUNCTION__);
 
-	IID_INIT(objIid);
-	objIid.level = 1;
-	sscanf(tr98FullPathName, "InternetGatewayDevice.X_GRE.Tunnel.%hhu", &objIid.idx[0]);
+    IID_INIT(objIid);
+    objIid.level = 1;
+    sscanf(tr98FullPathName, "InternetGatewayDevice.X_GRE.Tunnel.%hhu", &objIid.idx[0]);
 
-	return zcfgFeObjStructDel(RDM_OID_GRE_TUNNEL, &objIid, NULL);
+    return zcfgFeObjStructDel(RDM_OID_GRE_TUNNEL, &objIid, NULL);
 }
 
 zcfgRet_t zyXGRETunnelStatsObjGet(char *tr98FullPathName, int handler, struct json_object **tr98Jobj, bool updateFlag)
 {
-	zcfgRet_t ret;
-	objIndex_t objIid;
-	struct json_object *GRETunnelObj = NULL;
-	struct json_object *tr181ParamValue = NULL;
-	struct json_object *paramValue = NULL;
-	tr98Parameter_t *paramList = NULL;
-	//printf("%s enter\n",__FUNCTION__);
-
-	IID_INIT(objIid);
-	objIid.level = 1;
-	sscanf(tr98FullPathName, "InternetGatewayDevice.X_GRE.Tunnel.%hhu.Stats", &objIid.idx[0]);
-
-	if((ret = zcfgFeObjJsonGet(RDM_OID_GRE_TUNNEL_STAT, &objIid, &GRETunnelObj)) != ZCFG_SUCCESS){
-		printf("%s: fail to get GRE tunnel stat obj codec object ret=%d\n", __FUNCTION__, ret);
-		return ret;
-	}
-	
-	/*fill up tr98 object from related tr181 objects*/
-	*tr98Jobj = json_object_new_object();
-	paramList = tr98Obj[handler].parameter;
-	while(paramList->name != NULL){
-		if(!strcmp(paramList->name, "DiscardPacketsSent")) {
-			paramValue = json_object_object_get(GRETunnelObj, "X_ZYXEL_DiscardPacketsSent");
-			if(paramValue != NULL){
-				json_object_object_add(*tr98Jobj, "DiscardPacketsSent", JSON_OBJ_COPY(paramValue));
-				paramList++;
-				continue;
-			}
-		}
-
-		if(!strcmp(paramList->name, "DiscardPacketsReceived")) {
-			paramValue = json_object_object_get(GRETunnelObj, "X_ZYXEL_DiscardPacketsReceived");
-			if(paramValue != NULL){
-				json_object_object_add(*tr98Jobj, "DiscardPacketsReceived", JSON_OBJ_COPY(paramValue));
-				paramList++;
-				continue;
-			}
-		}
-
-		/*Write parameter value from tr181 objects to tr98 object*/		
-		paramValue = json_object_object_get(GRETunnelObj, paramList->name);
-		if(paramValue != NULL){
-			json_object_object_add(*tr98Jobj, paramList->name, JSON_OBJ_COPY(paramValue));
-			paramList++;
-			continue;
-		}
-
-		/*Not defined in tr181, give it a default value*/
-		printf("Can't find parameter %s in TR181\n", paramList->name);
-		paramList++;	
-	}
-	
-	json_object_put(GRETunnelObj);
+    zcfgRet_t ret;
+    objIndex_t objIid;
+    struct json_object *greTunnelObj = NULL;
+    struct json_object *paramValue = NULL;
+    tr98Parameter_t *paramList = NULL;
+    //printf("%s enter\n",__FUNCTION__);
+
+    IID_INIT(objIid);
+    objIid.level = 1;
+    sscanf(tr98FullPathName, "InternetGatewayDevice.X_GRE.Tunnel.%hhu.Stats", &objIid.idx[0]);
+
+    if((ret = zcfgFeObjJsonGet(RDM_OID_GRE_TUNNEL_STAT, &objIid, &greTunnelObj)) != ZCFG_SUCCESS) {
+        printf("%s: fail to get GRE tunnel stat obj codec object ret=%d\n", __FUNCTION__, ret);
+        return ret;
+    }
+
+    /*fill up tr98 object from related tr181 objects*/
+    *tr98Jobj = json_object_new_object();
+    paramList = tr98Obj[handler].parameter;
+    while(paramList->name != NULL) {
+        if(!strcmp(paramList->name, "DiscardPacketsSent")) {
+            paramValue = json_object_object_get(greTunnelObj, "X_ZYXEL_DiscardPacketsSent");
+            if(paramValue != NULL) {
+                json_object_object_add(*tr98Jobj, "DiscardPacketsSent", JSON_OBJ_COPY(paramValue));
+                paramList++;
+                continue;
+            }
+        }
+
+        if(!strcmp(paramList->name, "DiscardPacketsReceived")) {
+            paramValue = json_object_object_get(greTunnelObj, "X_ZYXEL_DiscardPacketsReceived");
+            if(paramValue != NULL) {
+                json_object_object_add(*tr98Jobj, "DiscardPacketsReceived", JSON_OBJ_COPY(paramValue));
+                paramList++;
+                continue;
+            }
+        }
+
+        /*Write parameter value from tr181 objects to tr98 object*/
+        paramValue = json_object_object_get(greTunnelObj, paramList->name);
+        if(paramValue != NULL) {
+            json_object_object_add(*tr98Jobj, paramList->name, JSON_OBJ_COPY(paramValue));
+            paramList++;
+            continue;
+        }
+
+        /*Not defined in tr181, give it a default value*/
+        printf("Can't find parameter %s in TR181\n", paramList->name);
+        paramList++;
+    }
+
+    zcfgFeJsonObjFree(greTunnelObj);
 
-	return ZCFG_SUCCESS;
+    return ZCFG_SUCCESS;
 }
 
Index: libzcfg_fe_tr98-1.0/xgre_parameter.h
===================================================================
--- libzcfg_fe_tr98-1.0.orig/xgre_parameter.h	2019-05-02 14:12:06.543086345 +0800
+++ libzcfg_fe_tr98-1.0/xgre_parameter.h	2019-05-02 14:12:07.211086372 +0800
@@ -1,36 +1,34 @@
 
 tr98Parameter_t para_XGRE[] = {
-	{ "TunnelNumberOfEntries", PARAMETER_ATTR_READONLY, 0, json_type_uint32},
-	{ NULL, 0, 0, 0}
+    { "TunnelNumberOfEntries", PARAMETER_ATTR_READONLY, 0, json_type_uint32},
+    { NULL, 0, 0, 0}
 };
 
 tr98Parameter_t para_XGRETunnel[] = {
-	{ "Enable", PARAMETER_ATTR_WRITE, 0, json_type_boolean},
-	{ "LowerLayers", PARAMETER_ATTR_WRITE, 1025, json_type_string},
-	{ "RemoteEndpoint", PARAMETER_ATTR_WRITE, 257, json_type_string},
-	{ "RemoteEndpoint2", PARAMETER_ATTR_WRITE, 257, json_type_string},
-	{ "ConnRemoteEndpoint", PARAMETER_ATTR_WRITE, 257, json_type_string},
-	{ "InterfaceGroup", PARAMETER_ATTR_READONLY, 257, json_type_string},
-	{ "Checksum", PARAMETER_ATTR_WRITE, 0, json_type_boolean},
-	{ "Seq", PARAMETER_ATTR_WRITE, 0, json_type_boolean},
-	{ "Key", PARAMETER_ATTR_WRITE, 0, json_type_uint32},
-	{ "ShapingRate", PARAMETER_ATTR_WRITE, 0, json_type_int},
-	{ "DownstreamShapingRate", PARAMETER_ATTR_WRITE, 0, json_type_int},
-	{ "DSCP", PARAMETER_ATTR_WRITE, 0, json_type_uint32},
-	{ "VlanGroupNumberOfEntriesxsi", PARAMETER_ATTR_READONLY, 0, json_type_uint32},
-	{ "MaxAssociatedDevices", PARAMETER_ATTR_READONLY, 0, json_type_uint32},
-	{ NULL, 0, 0, 0}
+    { "Enable", PARAMETER_ATTR_WRITE, 0, json_type_boolean},
+    { "VlanId", PARAMETER_ATTR_WRITE, 0, json_type_uint32},
+    { "RemoteEndpoints", PARAMETER_ATTR_WRITE, 1025, json_type_string},
+    { "ConnectedRemoteEndpoint", PARAMETER_ATTR_READONLY, 257, json_type_string},
+    { "BoundWanInterfaces", PARAMETER_ATTR_WRITE, 129, json_type_string},
+    { "BoundLanInterfaces", PARAMETER_ATTR_WRITE, 1025, json_type_string},
+    //{ "Checksum", PARAMETER_ATTR_WRITE, 0, json_type_boolean},
+    //{ "Seq", PARAMETER_ATTR_WRITE, 0, json_type_boolean},
+    //{ "Key", PARAMETER_ATTR_WRITE, 0, json_type_uint32},
+    { "UpRate", PARAMETER_ATTR_WRITE, 0, json_type_uint32},
+    { "DownRate", PARAMETER_ATTR_WRITE, 0, json_type_uint32},
+    { "DSCP", PARAMETER_ATTR_WRITE, 0, json_type_uint32},
+    { NULL, 0, 0, 0}
 };
 
 tr98Parameter_t para_XGRETunnelStats[] = {
-	{ "BytesSent", PARAMETER_ATTR_READONLY, 0, json_type_uint32},
-	{ "BytesReceived", PARAMETER_ATTR_READONLY, 0, json_type_uint32},
-	{ "PacketsSent", PARAMETER_ATTR_READONLY, 0, json_type_uint32},
-	{ "PacketsReceived", PARAMETER_ATTR_READONLY, 0, json_type_uint32},
-	{ "ErrorsSent", PARAMETER_ATTR_READONLY, 0, json_type_uint32},
-	{ "ErrorsReceived", PARAMETER_ATTR_READONLY, 0, json_type_uint32},
-	{ "DiscardPacketsSent", PARAMETER_ATTR_READONLY, 0, json_type_uint32},
-	{ "DiscardPacketsReceived", PARAMETER_ATTR_READONLY, 0, json_type_uint32},
-	{ NULL, 0, 0, 0}
+    { "BytesSent", PARAMETER_ATTR_READONLY, 0, json_type_uint32},
+    { "BytesReceived", PARAMETER_ATTR_READONLY, 0, json_type_uint32},
+    { "PacketsSent", PARAMETER_ATTR_READONLY, 0, json_type_uint32},
+    { "PacketsReceived", PARAMETER_ATTR_READONLY, 0, json_type_uint32},
+    { "ErrorsSent", PARAMETER_ATTR_READONLY, 0, json_type_uint32},
+    { "ErrorsReceived", PARAMETER_ATTR_READONLY, 0, json_type_uint32},
+    { "DiscardPacketsSent", PARAMETER_ATTR_READONLY, 0, json_type_uint32},
+    { "DiscardPacketsReceived", PARAMETER_ATTR_READONLY, 0, json_type_uint32},
+    { NULL, 0, 0, 0}
 };
 
