Index: libzcfg_fe_tr98-1.0/diag.c
===================================================================
--- libzcfg_fe_tr98-1.0.orig/diag.c	2018-05-24 20:05:28.255933461 +0800
+++ libzcfg_fe_tr98-1.0/diag.c	2018-05-24 20:19:09.857144700 +0800
@@ -872,14 +872,26 @@
 	printf("%s : Enter\n", __FUNCTION__);
 
 	IID_INIT(objIid);
-	if((ret = zcfgFeObjJsonGet(RDM_OID_IP_DIAG_UL_DIAG, &objIid, &ulDiagObj)) != ZCFG_SUCCESS)
-		return ret;
+	//if((ret = zcfgFeObjJsonGet(RDM_OID_IP_DIAG_UL_DIAG, &objIid, &ulDiagObj)) != ZCFG_SUCCESS)
+	//	return ret;
+	ulDiagObj = json_object_new_object();
 
 	if(multiJobj){
 		tmpObj = ulDiagObj;
 		ulDiagObj = NULL;
 		ulDiagObj = zcfgFeJsonMultiObjAppend(RDM_OID_IP_DIAG_UL_DIAG, &objIid, multiJobj, tmpObj);
 		json_object_put(tmpObj);
+
+		zcfgFeJsonMultiObjAddParam(multiJobj, RDM_OID_IP_DIAG_UL_DIAG, &objIid, "partialset", json_object_new_boolean(true));
+	}
+
+	tr98Jobj = zcfgFeRetrieveSpv(tr98FullPathName);
+
+	const char *parmDiagStr = json_object_get_string(json_object_object_get(tr98Jobj, "DiagnosticsState"));
+	if(parmDiagStr && strcmp(parmDiagStr, "") && !strstr(parmDiagStr, "Requested")) {
+		if(!multiJobj)
+			json_object_put(ulDiagObj);
+		return ZCFG_INVALID_PARAM_VALUE;
 	}
 
 	paramList = tr98Obj[handler].parameter;
@@ -894,12 +906,6 @@
 		}
 
 		if(strstr(paramList->name, "Diagnost")) {
-			const char *paramStr = json_object_get_string(paramValue);
-			//set empty to comply with std 'not configured'
-		/*	if(strcmp(paramStr, "") && !strstr(paramStr, "Requested")) {
-				json_object_put(ulDiagObj);
-				return ZCFG_INVALID_PARAM_VALUE;
-			}*/
 			json_object_object_add(ulDiagObj, paramList->name, JSON_OBJ_COPY(paramValue));
 		}else if(!strcmp(paramList->name, "Interface")) {
 			sprintf(paramfault, "%s.%s", tr98FullPathName, paramList->name);
