Index: libzcfg_fe_tr98-1.0/zcfg_fe_msg.c
===================================================================
--- libzcfg_fe_tr98-1.0.orig/zcfg_fe_msg.c	2018-03-27 16:55:45.269918355 +0800
+++ libzcfg_fe_tr98-1.0/zcfg_fe_msg.c	2018-03-27 17:10:41.393783600 +0800
@@ -113,6 +113,41 @@
 	return ret; //ZCFG_SUCCESS
 }
 
+zcfgRet_t zcfgFeTr98ObjValueQry(zcfg_name_t seqnum, objIndex_t *tr98ObjIid, const char *parmName, struct json_object **valueObj, int attr)
+{
+	zcfgParmQryValue_t *queryDataSt;
+	zcfgMsg_t *sendMsgHdr = NULL, *recvMsgHdr = NULL;
+	char *recvData = NULL;
+
+	int dataLength = sizeof(zcfgMsg_t)+sizeof(zcfgParmQryValue_t)+strlen(parmName)+1;
+	sendMsgHdr = (zcfgMsg_t *)malloc(dataLength);
+	memset((void *)sendMsgHdr, 0, dataLength);
+
+	sendMsgHdr->dstEid = ZCFG_EID_ZCMD;
+	sendMsgHdr->length = dataLength-sizeof(zcfgMsg_t);
+	sendMsgHdr->type = REQUEST_QUERY_OBJ_PARAM_VALUE;
+
+	queryDataSt = (zcfgParmQryValue_t *)(sendMsgHdr+1);
+	queryDataSt->objnum = seqnum;
+	queryDataSt->attr |= attr;
+	memcpy(&queryDataSt->objIid, tr98ObjIid, sizeof(objIndex_t));
+	if(parmName){
+		char *queryParmName = (char *)(queryDataSt+1);
+		strcpy(queryParmName, parmName);
+		queryDataSt->parmNameLen = strlen(parmName);
+	}
+
+	zcfgRet_t rst = zcfgMsgSendAndGetReply(sendMsgHdr, (zcfgMsg_t **)&recvMsgHdr, 0);
+
+	if(rst == ZCFG_SUCCESS){
+		const char *recvData = (recvMsgHdr->length) ? (const char *)(recvMsgHdr+1) : NULL;
+		*valueObj = json_tokener_parse(recvData);
+		free(recvMsgHdr);
+	}
+
+	return rst;
+}
+
 zcfgRet_t zcfgFeParmAttrQry(zcfg_name_t seqnum, objIndex_t *tr98ObjIid, const char *parmName, zcfg_offset_t *oid, objIndex_t *objIid, char *queriedParmName, uint32_t *attr)
 {
 	zcfgRet_t ret = ZCFG_SUCCESS;
Index: libzcfg_fe_tr98-1.0/zcfg_fe_msg.h
===================================================================
--- libzcfg_fe_tr98-1.0.orig/zcfg_fe_msg.h	2018-03-27 16:55:45.009918362 +0800
+++ libzcfg_fe_tr98-1.0/zcfg_fe_msg.h	2018-03-27 17:10:48.506783600 +0800
@@ -46,6 +46,7 @@
 zcfgRet_t zcfg98To181ObjMappingAdd(zcfg_name_t seqnum, objIndex_t *tr98ObjIid, zcfg_offset_t oid, objIndex_t *objIid);
 zcfgRet_t zcfgObjMappingGet(uint32_t msgType, uint32_t num_1, objIndex_t *objIdxData_1, uint32_t *num_2, objIndex_t *objIdxData_2);
 zcfgRet_t zcfgFeMultiParmAttrSet(zcfgFeSetParmAttrLst_t *setParmAttrLst);
+zcfgRet_t zcfgFeTr98ObjValueQry(zcfg_name_t seqnum, objIndex_t *tr98ObjIid, const char *parmName, struct json_object **valueObj, int);
 zcfgRet_t zcfgFeParmAttrQry(zcfg_name_t seqnum, objIndex_t *tr98ObjIid, const char *parmName, zcfg_offset_t *oid, objIndex_t *objIid, char *queriedParmName, uint32_t *attr);
 zcfgRet_t zcfgFeMsgObjQryInstances(uint32_t type, zcfg_name_t nameSeqNum, objIndex_t *queryObjIid, char **instances);
 zcfgRet_t zcfgFeTr181ParmAttrQry(zcfg_offset_t , objIndex_t *, char *, zcfg_name_t *, objIndex_t *, const char *, uint32_t *);
