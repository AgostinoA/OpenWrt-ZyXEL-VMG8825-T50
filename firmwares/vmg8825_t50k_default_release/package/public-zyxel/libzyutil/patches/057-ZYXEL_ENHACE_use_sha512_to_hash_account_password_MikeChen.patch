Index: libzyutil-1.0/Makefile
===================================================================
--- libzyutil-1.0.orig/Makefile	2017-08-08 20:28:00.269194667 +0800
+++ libzyutil-1.0/Makefile	2017-08-09 09:45:27.921270196 +0800
@@ -97,3 +97,7 @@
 ifeq ($(strip $(CONFIG_ELISA_CUSTOMIZATION)), y)
 	CFLAGS += -DELISA_CUSTOMIZATION
 endif
+
+ifeq ($(strip $(CONFIG_ZYXEL_HASH_ACCOUNT_PASSWORD_BY_SHA512)), y)
+	CFLAGS += -DSHA512_PASSWD
+endif
Index: libzyutil-1.0/common.c
===================================================================
--- libzyutil-1.0.orig/common.c	2017-08-08 20:28:00.281194667 +0800
+++ libzyutil-1.0/common.c	2017-08-09 09:45:48.330931198 +0800
@@ -909,3 +909,101 @@
 	free(ipt->buf_f6);
 	free(ipt);
 }
+
+		// return:
+		// -3: auth file does not exist
+		// -2: user account does not exist
+		// -1: auth fail
+		//  0: auth success
+		//  1: not support sha512 hash account password
+int zyUtilAuthUserAccount(const char *username, const char *password)
+{
+	static unsigned int fileSerialNumber = 19475;
+	char accInfo[512] = {0};
+	char accFile[32] = {0};
+	char syscmd[512];
+	int fd, r, ret=-1;
+
+#ifndef SHA512_PASSWD
+	return 1;
+#endif
+
+	if (username == NULL || password == NULL) return -3;
+	fileSerialNumber += 91;
+	sprintf(accFile, "/var/tmp%d", fileSerialNumber);
+	fd = open(accFile, O_RDWR|O_CREAT, 0600);
+	if (fd < 0) {
+		printf("%s.%d: cant not open file! \n", __func__, __LINE__);
+		return -3;
+	}
+	sprintf(syscmd, "%s\r\n%s\r\n", username, password);
+	write(fd, syscmd, strlen(syscmd));
+	close(fd);
+
+	sprintf(syscmd, "login -z %s", accFile);
+	system(syscmd);
+
+	fd = open(accFile, O_RDONLY);
+	if (fd < 0) {
+		sprintf(syscmd, "rm %s", accFile);
+		system(syscmd);
+		printf("%s.%d: cant not open file! \n", __func__, __LINE__);
+		return -3;
+	}
+	r = read(fd, &accInfo[0], 512);
+	close(fd);
+
+	sscanf(&accInfo[0], "result:%d", &ret);
+
+	sprintf(syscmd, "rm %s", accFile);
+	system(syscmd);
+
+	return ret;
+}
+
+#define TEMPFILE "/var/tmps"
+char *zyUtilGetUserShadow(const char *username)
+{
+	static char shadow[512];
+	char cmd[512] = {0};
+	int fd;
+
+	if (username == NULL) return NULL;
+	sprintf(cmd, "grep -wr '%s' /etc/shadow > %s", username, TEMPFILE);
+	system(cmd);
+	memset(&shadow[0], 0, sizeof(shadow));
+	fd = open(TEMPFILE, O_RDONLY);
+	if (fd < 0) {
+		printf("%s.%d: cant not open file! \n", __func__, __LINE__);
+		return NULL;
+	}
+	read(fd, shadow, 512);
+	close(fd);
+	sprintf(cmd, "rm %s", TEMPFILE);
+	system(cmd);
+	return &shadow[0];
+}
+
+#define TEMPFILE1 "/var/samtmps"
+char *zyUtilGetUserSambaPwd(const char *username)
+{
+	static char passwd[512];
+	char cmd[512] = {0};
+	int fd;
+
+	if (username == NULL) return NULL;
+	sprintf(cmd, "grep -wr '%s' /var/samba/smbpasswd > %s", username, TEMPFILE1);
+	system(cmd);
+	memset(&passwd[0], 0, sizeof(passwd));
+	fd = open(TEMPFILE1, O_RDONLY);
+	if (fd < 0) {
+		printf("%s.%d: cant not open file! \n", __func__, __LINE__);
+		return NULL;
+	}
+	read(fd, passwd, 512);
+	close(fd);
+	sprintf(cmd, "rm %s", TEMPFILE1);
+	system(cmd);
+	return &passwd[0];
+}
+
Index: libzyutil-1.0/zyutil.h
===================================================================
--- libzyutil-1.0.orig/zyutil.h	2017-08-08 20:28:00.281194667 +0800
+++ libzyutil-1.0/zyutil.h	2017-08-09 09:46:05.095970157 +0800
@@ -94,4 +94,8 @@
 //void zyUtilIptablesLockInit(void);
 //void zyUtilIptablesLock(void);
 //void zyUtilIptablesUnLock(void);
+
+int zyUtilAuthUserAccount(const char *username, const char *password);
+char *zyUtilGetUserShadow(const char *username);
+char *zyUtilGetUserSambaPwd(const char *username);
 #endif
