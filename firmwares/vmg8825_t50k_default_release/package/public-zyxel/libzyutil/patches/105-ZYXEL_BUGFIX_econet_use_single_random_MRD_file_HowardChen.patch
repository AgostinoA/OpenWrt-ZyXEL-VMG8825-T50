Index: libzyutil-1.0/ECONET/libzyutil_econet_wrapper.h
===================================================================
--- libzyutil-1.0.orig/ECONET/libzyutil_econet_wrapper.h	2019-04-23 16:34:35.689873146 +0800
+++ libzyutil-1.0/ECONET/libzyutil_econet_wrapper.h	2019-04-23 16:49:47.053909857 +0800
@@ -15,6 +15,7 @@
 #define MRDINFO_PARTITON_NAME         "bootloader"
 #define MRDINFO_OFFSET                MRD_OFFSET
 #define MRDINFO_SIZE                  MRD_SIZE
+#define MRDINFO_FILE_X                "/tmp/MRD_info-XXXXXX"
 #define MRDINFO_FILE                  "/tmp/MRD_info"
 #define MAIN_ROOTFS_PARTITION_NAME    "tclinux"
 #define SLAVE_ROOTFS_PARTITION_NAME   "tclinux_slave"
Index: libzyutil-1.0/ECONET/libzyutil_wrapper.c
===================================================================
--- libzyutil-1.0.orig/ECONET/libzyutil_wrapper.c	2019-04-23 16:34:36.141873165 +0800
+++ libzyutil-1.0/ECONET/libzyutil_wrapper.c	2019-04-23 16:54:46.501921919 +0800
@@ -165,14 +165,22 @@
 	FILE *fptr = NULL;
     char username[16];
 	void *sysCmd_reply=NULL;
+	char filename[32] = {0};	
 
 	// clean the MRD info
 	memset(mrd, 0x0, sizeof(MRD_DATA));
 #if 1
 	// Get MRD info from bootloader partition with offset 0xff00
 	int uid = getuid();
-    cuserid(username);  
-	sprintf(sysCmd,FLASH_READ_CMD,MRDINFO_FILE,(long unsigned int)MRDINFO_SIZE,(long unsigned int)MRDINFO_OFFSET,MRDINFO_PARTITON_NAME);
+	cuserid(username); 
+
+	strcpy(filename, MRDINFO_FILE_X);
+	if (mkstemp(filename) < 0 ){
+		printf("%s: Can't create MRD file!\n",__FUNCTION__);
+		return ZCFG_INTERNAL_ERROR;
+	} 
+
+	sprintf(sysCmd,FLASH_READ_CMD,filename,(long unsigned int)MRDINFO_SIZE,(long unsigned int)MRDINFO_OFFSET,MRDINFO_PARTITON_NAME);
 
     if(uid == 0){
 	    system(sysCmd);
@@ -182,7 +190,7 @@
         if((sysCmd_reply == NULL) && strcmp(sysCmd_reply, "1") != 0){
             printf("%s: Update Fail!!! \n", __FUNCTION__);        
         }
-	    sprintf(sysCmd,"chmod 666 %s | chown %s %s",MRDINFO_FILE, username, MRDINFO_FILE);
+	    sprintf(sysCmd,"chmod 666 %s | chown %s %s",filename, username, filename);
         zyUtilReqSendWithResponse(ZCFG_MSG_FAKEROOT_COMMAND_REPLY, ZCFG_EID_SYS_CMD, ZCFG_EID_ESMD, strlen(sysCmd), sysCmd, (char**)&sysCmd_reply);
 
         if((sysCmd_reply == NULL) && strcmp(sysCmd_reply, "1") != 0){
@@ -191,9 +199,9 @@
     }
 
     /*Read MRD info to buffer*/
-    if((fptr = fopen(MRDINFO_FILE, "rb")) == NULL) {
-        printf("Can't fopen %s\n", MRDINFO_FILE);
-		unlink(MRDINFO_FILE);
+    if((fptr = fopen(filename, "rb")) == NULL) {
+        printf("%s: Can't fopen %s\n", __FUNCTION__,filename);
+		unlink(filename);
         return ZCFG_INTERNAL_ERROR;
     }
 #else
@@ -211,7 +219,7 @@
 	fread(mrd, 1, (uint32_t)MRDINFO_SIZE, fptr);
 	dumpMRDinfo(mrd);
 	fclose(fptr);
-	unlink(MRDINFO_FILE);
+	unlink(filename);
 	return ZCFG_SUCCESS;
 }
 
