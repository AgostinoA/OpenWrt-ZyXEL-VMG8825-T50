Index: libzyutil-1.0/libzyutil_encrypt/libzyutil_encrypt.c
===================================================================
--- libzyutil-1.0.orig/libzyutil_encrypt/libzyutil_encrypt.c	2018-03-23 13:20:21.352857372 +0800
+++ libzyutil-1.0/libzyutil_encrypt/libzyutil_encrypt.c	2018-03-23 13:42:36.945212571 +0800
@@ -8,24 +8,26 @@
  *  get a encrypted string
  *
  *  @param [in] encrypt          encryption algorithm
- *  @param [in] Input            encryption input
- *  @param [out] Output          encryption output
+ *  @param [in] input            encryption input
+ *  @param [out] output          encryption output
  *
  *  @return      0               successfully
  *               -1              fail
  */
-int getExpectedContext(EncryptAlgo_t encrypt, char* Input, uint8* Output)
+int getExpectedContext(EncryptAlgo_t encrypt, char *input, unsigned char *output)
 {
     int ret = 0;
 
-    switch(encrypt)
+    switch( encrypt )
     {
         case Encrypt_SHA256:
-            getExpectedContext_SHA256(Input, (char*)Output);
+            getExpectedContext_SHA256(input, output);
             break;
+
         case Encrypt_OPENSSL_MD5:
-            getExpectedContext_Openssl_MD5(Input, (char*)Output);
+            getExpectedContext_Openssl_MD5(input, output);
             break;
+
         default:
             printf("invalid encrypt = %d\n", encrypt);
             ret = -1;
Index: libzyutil-1.0/libzyutil_encrypt/libzyutil_encrypt.h
===================================================================
--- libzyutil-1.0.orig/libzyutil_encrypt/libzyutil_encrypt.h	2018-03-23 13:20:21.352857372 +0800
+++ libzyutil-1.0/libzyutil_encrypt/libzyutil_encrypt.h	2018-03-23 13:41:43.571955348 +0800
@@ -1,13 +1,6 @@
 #ifndef _ZCFG_BE_ENCRYPT_H
 #define _ZCFG_BE_ENCRYPT_H
 
-//POINTER defines a generic pointer type
-typedef unsigned char           *POINTER;
-typedef unsigned long int       uint32;         //32-bit unsigned integer
-typedef unsigned char           uint8;          //8-bit unsigned integer
-typedef unsigned short          uint16;         //16-bit unsigned integer
-typedef signed char             int8;
-
 typedef enum {
     Encrypt_SHA256 = 1,
     Encrypt_MD5,
@@ -24,6 +17,6 @@
  *  @return     0               successfully
  *              -1              fail
  */
-int getExpectedContext(EncryptAlgo_t encrypt, char* Input, uint8* Output);
+int getExpectedContext(EncryptAlgo_t encrypt, char *Input, unsigned char *Output);
 
 #endif
Index: libzyutil-1.0/libzyutil_encrypt/libzyutil_encrypt_MD5.c
===================================================================
--- libzyutil-1.0.orig/libzyutil_encrypt/libzyutil_encrypt_MD5.c	2018-03-23 13:20:21.352857372 +0800
+++ libzyutil-1.0/libzyutil_encrypt/libzyutil_encrypt_MD5.c	2018-03-23 13:42:55.931127740 +0800
@@ -10,13 +10,13 @@
  *  @param [out] expected           output of MD5 encryption
  *
  */
-void getExpectedContext_Openssl_MD5(char *input, char *expected)
+void getExpectedContext_Openssl_MD5(char *input, unsigned char *expected)
 {
     if(expected == NULL || input == NULL)
     {
         return;
     }
 
-    MD5((unsigned char*)input, strlen(input), (unsigned char*)expected);
+    MD5((unsigned char*)input, strlen(input), expected);
 }
 
Index: libzyutil-1.0/libzyutil_encrypt/libzyutil_encrypt_MD5.h
===================================================================
--- libzyutil-1.0.orig/libzyutil_encrypt/libzyutil_encrypt_MD5.h	2018-03-23 13:20:21.352857372 +0800
+++ libzyutil-1.0/libzyutil_encrypt/libzyutil_encrypt_MD5.h	2018-03-23 13:43:53.012144794 +0800
@@ -8,7 +8,7 @@
  *  @param [out] expected           output of MD5 encryption
  *
  */
-void getExpectedContext_Openssl_MD5(char *input, char *expected);
+void getExpectedContext_Openssl_MD5(char *input, unsigned char *expected);
 
 #endif //_ZCFG_BE_ENCRYPT_MD5_H
 
Index: libzyutil-1.0/libzyutil_encrypt/libzyutil_encrypt_SHA256.c
===================================================================
--- libzyutil-1.0.orig/libzyutil_encrypt/libzyutil_encrypt_SHA256.c	2018-03-23 13:20:21.352857372 +0800
+++ libzyutil-1.0/libzyutil_encrypt/libzyutil_encrypt_SHA256.c	2018-03-23 13:43:07.432391431 +0800
@@ -206,7 +206,7 @@
  *  @param [out] expected           output of SHA256 encryption
  *
  */
-void getExpectedContext_SHA256(char *input, char *expected)
+void getExpectedContext_SHA256(char *input, unsigned char *expected)
 {
     SHA256_CTX context;
 
@@ -219,6 +219,6 @@
 
     //The input message is secret
     sha256_update(&context, (unsigned char*)input, strlen(input));
-    sha256_final(&context, (unsigned char*)expected);
+    sha256_final(&context, expected);
 }
 
Index: libzyutil-1.0/libzyutil_encrypt/libzyutil_encrypt_SHA256.h
===================================================================
--- libzyutil-1.0.orig/libzyutil_encrypt/libzyutil_encrypt_SHA256.h	2018-03-23 13:20:21.352857372 +0800
+++ libzyutil-1.0/libzyutil_encrypt/libzyutil_encrypt_SHA256.h	2018-03-23 13:43:56.850479532 +0800
@@ -8,7 +8,7 @@
  *  @param [out] expected       output of SHA256 encryption
  *
  */
-void getExpectedContext_SHA256(char *input, char *expected);
+void getExpectedContext_SHA256(char *input, unsigned char *expected);
 
 #endif //_ZCFG_BE_ENCRYPT_SHA256_H
 
