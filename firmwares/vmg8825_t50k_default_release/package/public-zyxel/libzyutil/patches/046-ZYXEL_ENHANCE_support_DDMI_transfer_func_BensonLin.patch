Index: libzyutil-1.0/ECONET/libzyutil_wrapper.c
===================================================================
--- libzyutil-1.0.orig/ECONET/libzyutil_wrapper.c	2016-10-12 16:52:49.473003000 +0800
+++ libzyutil-1.0/ECONET/libzyutil_wrapper.c	2016-10-12 16:55:57.203988625 +0800
@@ -422,6 +422,82 @@
 	return 0;
 }
 
+float transferOpticalTemperature(int input_value)
+{
+	int i;
+	int lsb = 0;
+	int msb = 0;
+	float MSByte = 0.0;
+	float LSByte = 0.0;
+	float resultValue = 0.0;
+
+	lsb = (0xff & input_value);
+	msb = (0xff & (input_value >> 8));
+
+	/* LSB */
+	for ( i = 0 ; i < 8 ; i++ )
+	{
+		LSByte += ((1.0/256)*(lsb&(1<<i)));
+	}
+
+	if ( 0x80 & msb ) {
+		MSByte = ((msb^0xff) + 1)*(-1);
+	} else {
+		MSByte = msb;
+	}
+
+	resultValue = MSByte + LSByte;
+
+	return resultValue;
+}
+
+
+float logFunction(float x, int base, int decimalplaces)
+{
+	int integer = 0;
+	float return_value = 0.0;
+	float decimalplaces_count = 0.1;
+	if (x <= 0.0)
+		return -40;  //assume it is x = 1 when x is 0.
+
+	while(x < 1)
+	{
+		integer = integer -1;
+		x = x*base;
+	}
+	while(x >= base)
+	{
+		integer = integer + 1;
+		x = x/base;
+	}
+	return_value = integer;
+	while(decimalplaces > 0)
+	{
+		x = x*x*x*x*x*x*x*x*x*x;
+		int digit = 0;
+		while (x >= base)
+		{
+			digit = digit + 1;
+			x = x/base;
+		}
+
+		return_value = return_value + (digit * decimalplaces_count);
+		decimalplaces = decimalplaces - 1;
+		decimalplaces_count = decimalplaces_count * 0.1;
+	}
+
+	return return_value;
+}
+
+float transferOpticalPower(float input_value)
+{
+	float return_value = 0.0;
+
+	return_value = 10*logFunction(input_value, 10, 4);
+
+	return return_value;
+}
+
 zcfgRet_t zyUtilGetWlanReserveAreaOffset(unsigned int *offset)
 {
 	*offset = EEPROM_RA_OFFSET;
Index: libzyutil-1.0/libzyutil_wrapper.h
===================================================================
--- libzyutil-1.0.orig/libzyutil_wrapper.h	2016-10-12 16:52:49.405003000 +0800
+++ libzyutil-1.0/libzyutil_wrapper.h	2016-10-12 16:55:40.163452110 +0800
@@ -21,3 +21,5 @@
 zcfgRet_t zyUtilGetWlanReserveAreaOffset(unsigned int*);
 #endif
 int zyUtilGetGPIO(int gpioNum);
+float transferOpticalTemperature(int input_value);
+float transferOpticalPower(float input_value);
