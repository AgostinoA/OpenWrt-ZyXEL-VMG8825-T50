Index: libzyutil-1.0/Makefile
===================================================================
--- libzyutil-1.0.orig/Makefile	2018-07-16 14:08:32.619096222 +0800
+++ libzyutil-1.0/Makefile	2018-07-16 14:14:22.784456985 +0800
@@ -125,3 +125,7 @@
 ifeq ($(strip $(CONFIG_ZYXEL_HASH_ACCOUNT_PASSWORD_BY_SHA512)), y)
 	CFLAGS += -DSHA512_PASSWD
 endif
+
+ifeq ($(strip $(CONFIG_WIND_ITALY_CUSTOMIZATION)), y)
+	CFLAGS += -DWIND_ITALY_CUSTOMIZATION
+endif
\ No newline at end of file
Index: libzyutil-1.0/zyutil_sfp.c
===================================================================
--- libzyutil-1.0.orig/zyutil_sfp.c	2018-07-16 14:08:32.607096221 +0800
+++ libzyutil-1.0/zyutil_sfp.c	2018-07-16 14:14:17.187337242 +0800
@@ -64,6 +64,10 @@
 #define DDMI2_RX_POWER_LENGTH			2
 #define DDMI2_STATUS_CONTROL_OFFSET		110
 #define DDMI2_STATUS_CONTROL_LENGTH		1
+//GPON SN
+#define DDMI2_GPON_SN_OFFSET		    233
+#define DDMI2_GPON_SN_LENGTH		    8
+
     #define DDMI_DATA_READY_BAR_OFFSET	0
     #define DDMI_DATA_READY_BAR_MASK	(0x1 << DDMI_DATA_READY_BAR_OFFSET)	// low is ready.
 
@@ -202,6 +206,21 @@
     return 0;
 }
 
+void getString(unsigned char *_string2, int length ,unsigned char *sn_buf)
+{
+	int i=0;
+	
+	char ss[DDMI_STRING_MAX_LENGTH] = {0};
+	unsigned char temp[2] = {0};
+	
+	for(i=0;i<length;i++){
+		sprintf(temp, "%02X" ,_string2[i]);
+		strcat(ss, temp);
+	}
+	memcpy(sn_buf , ss, DDMI_STRING_MAX_LENGTH);
+
+}
+
 int dump_DDMI_state(sfp_ddmi_state_t *ddmi_state)
 {
     printf("DDMI state:\n");
@@ -256,6 +275,9 @@
     int busfd;
     unsigned char ddmi1_data[DDMI_MAX_LENGTH];
     unsigned char ddmi2_data[DDMI_MAX_LENGTH];
+#ifdef WIND_ITALY_CUSTOMIZATION
+    unsigned char gpon_sn_string[DDMI_STRING_MAX_LENGTH];
+#endif //WIND_ITALY_CUSTOMIZATION
     int isIntCalibrated=0, isExtCalibrated=0;
     unsigned short _rx_power=0, _tx_power=0;
     short int _temp=0;
@@ -263,6 +285,9 @@
     memset(ddmi1_data, 0x0, sizeof(unsigned char)*DDMI_MAX_LENGTH);
     memset(ddmi2_data, 0x0, sizeof(unsigned char)*DDMI_MAX_LENGTH);
 
+#ifdef WIND_ITALY_CUSTOMIZATION
+    memset(gpon_sn_string, '\0', sizeof(gpon_sn_string) );
+#endif  //WIND_ITALY_CUSTOMIZATION
     // Read out DDMI value from SFP through I2C
     busfd = zyUtil_i2c_open();
     if( busfd < 0 )
@@ -302,9 +327,17 @@
     // Copy part number
     memcpy(ddmi_state->sfp_pn, ddmi1_data+DDMI1_VENDOR_PN_OFFSET, DDMI1_VENDOR_PN_LENGTH);
     DEBUG_PRINT("\npart number: ");_printString(ddmi1_data+DDMI1_VENDOR_PN_OFFSET, DDMI1_VENDOR_PN_LENGTH);
+	
+#ifdef WIND_ITALY_CUSTOMIZATION
+    // Copy GPON serial
+    getString(ddmi2_data+DDMI2_GPON_SN_OFFSET, DDMI2_GPON_SN_LENGTH, gpon_sn_string);
+    memcpy(ddmi_state->sfp_sn, gpon_sn_string, DDMI_STRING_MAX_LENGTH);
+    DEBUG_PRINT("\nSerial number: ");_printString(ddmi2_data+DDMI2_GPON_SN_OFFSET,  DDMI2_GPON_SN_LENGTH);
+#else
     // Copy serial name
     memcpy(ddmi_state->sfp_sn, ddmi1_data+DDMI1_VENDOR_SN_OFFSET, DDMI1_VENDOR_SN_LENGTH);
     DEBUG_PRINT("\nSerial number: ");_printString(ddmi1_data+DDMI1_VENDOR_SN_OFFSET, DDMI1_VENDOR_SN_LENGTH);
+#endif //WIND_ITALY_CUSTOMIZATION
 
     // Check internal/external calibration state
     DEBUG_PRINT("\nddmi1_data[%d]=0x%02x\n", DDMI1_DM_TYPE_OFFSET, ddmi1_data[DDMI1_DM_TYPE_OFFSET]);
