Index: libzcfg_msg-1.0/zcfg_msg.c
===================================================================
--- libzcfg_msg-1.0.orig/zcfg_msg.c
+++ libzcfg_msg-1.0/zcfg_msg.c
@@ -96,13 +96,13 @@ zcfgRet_t zcfgMsgReqRecv(zcfgMsg_t **rec
 	struct sockaddr_un clientaddr;
 	zcfgMsg_t rcvMsg;
 	fd_set fdR;
-	
+#if 0	
 	sigset_t mask;
 	sigemptyset(&mask);
 	sigaddset(&mask, SIGUSR1);
 	sigaddset(&mask, SIGUSR2);
 	sigaddset(&mask, SIGALRM);
-
+#endif
 	if( myEid == -1 ){
 		zcfgLog(ZCFG_LOG_ERR, "Invalid eid. In %s\n", __FUNCTION__);
 		return ZCFG_INVALID_EID;
@@ -125,7 +125,11 @@ zcfgRet_t zcfgMsgReqRecv(zcfgMsg_t **rec
 	zcfgLog(ZCFG_LOG_DEBUG, "%s : Wait connection...\n", __FUNCTION__);
 #endif
 _retry:
+#if 0
 	result = pselect(myMsgfd+1, &fdR, NULL, NULL, tv, &mask);
+#else
+	result = select(myMsgfd+1, &fdR, NULL, NULL, tv);
+#endif
 	/* check the select result */
 	if (result < 0 ){
 		perror("select:");
@@ -259,12 +263,12 @@ zcfgRet_t zcfgMsgSendAndGetReply(zcfgMsg
 	int flags;
 	sigset_t mask;
 	int32_t seqid;
-	
+#if 0
 	sigemptyset(&mask);
 	sigaddset(&mask, SIGUSR1);
 	sigaddset(&mask, SIGUSR2);
 	sigaddset(&mask, SIGALRM);
-
+#endif
 	if( myEid == -1 ){
 		free(sendMsg);
 		zcfgLog(ZCFG_LOG_ERR, "Invalid eid\n");
@@ -350,7 +354,11 @@ zcfgRet_t zcfgMsgSendAndGetReply(zcfgMsg
 	}
 	
 	/* starting timer and wait data available */
+#if 0
 	rc = pselect(fd+1, &readFds, NULL, NULL, tv, &mask);
+#else
+	rc = select(fd+1, &readFds, NULL, NULL, tv);
+#endif
 	if (rc < 0){
 		perror("select:");
 //		if(EINTR == errno) goto _retry;
