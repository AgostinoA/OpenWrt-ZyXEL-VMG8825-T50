Index: libzcfg_fe_rdm_struct-1.0/zcfg_fe_rdm_struct.c
===================================================================
--- libzcfg_fe_rdm_struct-1.0.orig/zcfg_fe_rdm_struct.c	2014-07-10 20:19:27.123353129 +0800
+++ libzcfg_fe_rdm_struct-1.0/zcfg_fe_rdm_struct.c	2014-07-10 18:52:54.031710600 +0800
@@ -190,6 +190,15 @@
 
 	return ret;
 }
+
+zcfgRet_t zcfgFeObjStructBlockedDel(zcfg_offset_t oid, objIndex_t *objIid, char *feedbackMsg)
+{
+	zcfgRet_t ret;
+
+	ret = zcfgFeObjWrite(oid, objIid, NULL, REQUEST_DEL_INSTANCE  | ZCFG_BLOCK_MODE_CONFIG_APPLY, feedbackMsg);
+
+	return ret;
+}
 #endif
 zcfgRet_t zcfgFeObjStructDel(zcfg_offset_t oid, objIndex_t *objIid, char *feedbackMsg)
 {
Index: libzcfg_fe_rdm_struct-1.0/zcfg_fe_rdm_struct.h
===================================================================
--- libzcfg_fe_rdm_struct-1.0.orig/zcfg_fe_rdm_struct.h	2014-07-10 20:19:27.123353129 +0800
+++ libzcfg_fe_rdm_struct-1.0/zcfg_fe_rdm_struct.h	2014-07-10 18:51:43.055408000 +0800
@@ -14,6 +14,7 @@
 #if 1 /* non-blocking config apply, ZyXEL, John */
 zcfgRet_t zcfgFeObjStructBlockedSet(zcfg_offset_t oid, objIndex_t *objIid, void *requestStruct, char *feedbackMsg);
 zcfgRet_t zcfgFeObjStructBlockedAdd(zcfg_offset_t oid, objIndex_t *objIid, char *feedbackMsg);
+zcfgRet_t zcfgFeObjStructBlockedDel(zcfg_offset_t oid, objIndex_t *objIid, char *feedbackMsg);
 #endif
 
 #define zcfgFeObjStructFree(obj) free(obj); obj = NULL
