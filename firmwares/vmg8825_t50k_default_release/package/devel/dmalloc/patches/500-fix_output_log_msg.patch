Index: dmalloc-5.5.2/dmalloc_tab.c
===================================================================
--- dmalloc-5.5.2.orig/dmalloc_tab.c	2007-05-15 01:26:14.000000000 +0800
+++ dmalloc-5.5.2/dmalloc_tab.c	2014-08-27 12:50:23.779551546 +0800
@@ -759,7 +759,7 @@
 {
   mem_table_t	*tab_p, *tab_other_p, *tab_bounds_p, total;
   int		entry_c;
-  char		source[64];
+  char		source[256];
   
   /* is the table empty */
   if (current_n == 0) {
Index: dmalloc-5.5.2/settings.dist
===================================================================
--- dmalloc-5.5.2.orig/settings.dist	2014-08-27 12:50:23.743551999 +0800
+++ dmalloc-5.5.2/settings.dist	2014-08-27 12:50:23.779551546 +0800
@@ -78,7 +78,11 @@
  * generate an exception when it sees a free(0L).
  */
 #define ALLOW_FREE_NULL 1
+#ifdef DONT_PRINT_FREE_NULL_MESSAGE
+#define ALLOW_FREE_NULL_MESSAGE 0
+#else
 #define ALLOW_FREE_NULL_MESSAGE 1
+#endif
 
 /*
  * Should we use the ra-address macros in return.h.  These are system
Index: dmalloc-5.5.2/configure.ac
===================================================================
--- dmalloc-5.5.2.orig/configure.ac	2014-08-27 12:50:23.691552649 +0800
+++ dmalloc-5.5.2/configure.ac	2014-08-27 12:50:46.542317046 +0800
@@ -623,7 +623,7 @@
 ],
 [ AC_DEFINE(RETURN_MACROS_WORK, 1) AC_MSG_RESULT([yes]) ],
 [ AC_DEFINE(RETURN_MACROS_WORK, 0) AC_MSG_RESULT([no]) ],
-[ AC_DEFINE(RETURN_MACROS_WORK, 0) AC_MSG_RESULT([no]) ]
+[ AC_DEFINE(RETURN_MACROS_WORK, 1) AC_MSG_RESULT([yes]) ]
 )
 
 ##############################################################################
